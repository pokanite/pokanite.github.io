// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles

(function (
  modules,
  entry,
  mainEntry,
  parcelRequireName,
  externals,
  distDir,
  publicUrl,
  devServer
) {
  /* eslint-disable no-undef */
  var globalObject =
    typeof globalThis !== 'undefined'
      ? globalThis
      : typeof self !== 'undefined'
      ? self
      : typeof window !== 'undefined'
      ? window
      : typeof global !== 'undefined'
      ? global
      : {};
  /* eslint-enable no-undef */

  // Save the require from previous bundle to this closure if any
  var previousRequire =
    typeof globalObject[parcelRequireName] === 'function' &&
    globalObject[parcelRequireName];

  var importMap = previousRequire.i || {};
  var cache = previousRequire.cache || {};
  // Do not use `require` to prevent Webpack from trying to bundle this call
  var nodeRequire =
    typeof module !== 'undefined' &&
    typeof module.require === 'function' &&
    module.require.bind(module);

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        if (externals[name]) {
          return externals[name];
        }
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire =
          typeof globalObject[parcelRequireName] === 'function' &&
          globalObject[parcelRequireName];
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error("Cannot find module '" + name + "'");
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = (cache[name] = new newRequire.Module(name));

      modules[name][0].call(
        module.exports,
        localRequire,
        module,
        module.exports,
        globalObject
      );
    }

    return cache[name].exports;

    function localRequire(x) {
      var res = localRequire.resolve(x);
      return res === false ? {} : newRequire(res);
    }

    function resolve(x) {
      var id = modules[name][1][x];
      return id != null ? id : x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.require = nodeRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.distDir = distDir;
  newRequire.publicUrl = publicUrl;
  newRequire.devServer = devServer;
  newRequire.i = importMap;
  newRequire.register = function (id, exports) {
    modules[id] = [
      function (require, module) {
        module.exports = exports;
      },
      {},
    ];
  };

  // Only insert newRequire.load when it is actually used.
  // The code in this file is linted against ES5, so dynamic import is not allowed.
  // INSERT_LOAD_HERE

  Object.defineProperty(newRequire, 'root', {
    get: function () {
      return globalObject[parcelRequireName];
    },
  });

  globalObject[parcelRequireName] = newRequire;

  for (var i = 0; i < entry.length; i++) {
    newRequire(entry[i]);
  }

  if (mainEntry) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(mainEntry);

    // CommonJS
    if (typeof exports === 'object' && typeof module !== 'undefined') {
      module.exports = mainExports;

      // RequireJS
    } else if (typeof define === 'function' && define.amd) {
      define(function () {
        return mainExports;
      });
    }
  }
})({"7KwkS":[function(require,module,exports,__globalThis) {
var global = arguments[3];
var HMR_HOST = null;
var HMR_PORT = null;
var HMR_SERVER_PORT = 1234;
var HMR_SECURE = false;
var HMR_ENV_HASH = "439701173a9199ea";
var HMR_USE_SSE = false;
module.bundle.HMR_BUNDLE_ID = "390a7dc96efbc4f8";
"use strict";
/* global HMR_HOST, HMR_PORT, HMR_SERVER_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */ /*::
import type {
  HMRAsset,
  HMRMessage,
} from '@parcel/reporter-dev-server/src/HMRServer.js';
interface ParcelRequire {
  (string): mixed;
  cache: {|[string]: ParcelModule|};
  hotData: {|[string]: mixed|};
  Module: any;
  parent: ?ParcelRequire;
  isParcelRequire: true;
  modules: {|[string]: [Function, {|[string]: string|}]|};
  HMR_BUNDLE_ID: string;
  root: ParcelRequire;
}
interface ParcelModule {
  hot: {|
    data: mixed,
    accept(cb: (Function) => void): void,
    dispose(cb: (mixed) => void): void,
    // accept(deps: Array<string> | string, cb: (Function) => void): void,
    // decline(): void,
    _acceptCallbacks: Array<(Function) => void>,
    _disposeCallbacks: Array<(mixed) => void>,
  |};
}
interface ExtensionContext {
  runtime: {|
    reload(): void,
    getURL(url: string): string;
    getManifest(): {manifest_version: number, ...};
  |};
}
declare var module: {bundle: ParcelRequire, ...};
declare var HMR_HOST: string;
declare var HMR_PORT: string;
declare var HMR_SERVER_PORT: string;
declare var HMR_ENV_HASH: string;
declare var HMR_SECURE: boolean;
declare var HMR_USE_SSE: boolean;
declare var chrome: ExtensionContext;
declare var browser: ExtensionContext;
declare var __parcel__import__: (string) => Promise<void>;
declare var __parcel__importScripts__: (string) => Promise<void>;
declare var globalThis: typeof self;
declare var ServiceWorkerGlobalScope: Object;
*/ var OVERLAY_ID = '__parcel__error__overlay__';
var OldModule = module.bundle.Module;
function Module(moduleName) {
    OldModule.call(this, moduleName);
    this.hot = {
        data: module.bundle.hotData[moduleName],
        _acceptCallbacks: [],
        _disposeCallbacks: [],
        accept: function(fn) {
            this._acceptCallbacks.push(fn || function() {});
        },
        dispose: function(fn) {
            this._disposeCallbacks.push(fn);
        }
    };
    module.bundle.hotData[moduleName] = undefined;
}
module.bundle.Module = Module;
module.bundle.hotData = {};
var checkedAssets /*: {|[string]: boolean|} */ , disposedAssets /*: {|[string]: boolean|} */ , assetsToDispose /*: Array<[ParcelRequire, string]> */ , assetsToAccept /*: Array<[ParcelRequire, string]> */ , bundleNotFound = false;
function getHostname() {
    return HMR_HOST || (typeof location !== 'undefined' && location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');
}
function getPort() {
    return HMR_PORT || (typeof location !== 'undefined' ? location.port : HMR_SERVER_PORT);
}
// eslint-disable-next-line no-redeclare
let WebSocket = globalThis.WebSocket;
if (!WebSocket && typeof module.bundle.root === 'function') try {
    // eslint-disable-next-line no-global-assign
    WebSocket = module.bundle.root('ws');
} catch  {
// ignore.
}
var hostname = getHostname();
var port = getPort();
var protocol = HMR_SECURE || typeof location !== 'undefined' && location.protocol === 'https:' && ![
    'localhost',
    '127.0.0.1',
    '0.0.0.0'
].includes(hostname) ? 'wss' : 'ws';
// eslint-disable-next-line no-redeclare
var parent = module.bundle.parent;
if (!parent || !parent.isParcelRequire) {
    // Web extension context
    var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;
    // Safari doesn't support sourceURL in error stacks.
    // eval may also be disabled via CSP, so do a quick check.
    var supportsSourceURL = false;
    try {
        (0, eval)('throw new Error("test"); //# sourceURL=test.js');
    } catch (err) {
        supportsSourceURL = err.stack.includes('test.js');
    }
    var ws;
    if (HMR_USE_SSE) ws = new EventSource('/__parcel_hmr');
    else try {
        // If we're running in the dev server's node runner, listen for messages on the parent port.
        let { workerData, parentPort } = module.bundle.root('node:worker_threads') /*: any*/ ;
        if (workerData !== null && workerData !== void 0 && workerData.__parcel) {
            parentPort.on('message', async (message)=>{
                try {
                    await handleMessage(message);
                    parentPort.postMessage('updated');
                } catch  {
                    parentPort.postMessage('restart');
                }
            });
            // After the bundle has finished running, notify the dev server that the HMR update is complete.
            queueMicrotask(()=>parentPort.postMessage('ready'));
        }
    } catch  {
        if (typeof WebSocket !== 'undefined') try {
            ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');
        } catch (err) {
            // Ignore cloudflare workers error.
            if (err.message && !err.message.includes('Disallowed operation called within global scope')) console.error(err.message);
        }
    }
    if (ws) {
        // $FlowFixMe
        ws.onmessage = async function(event /*: {data: string, ...} */ ) {
            var data /*: HMRMessage */  = JSON.parse(event.data);
            await handleMessage(data);
        };
        if (ws instanceof WebSocket) {
            ws.onerror = function(e) {
                if (e.message) console.error(e.message);
            };
            ws.onclose = function() {
                console.warn("[parcel] \uD83D\uDEA8 Connection to the HMR server was lost");
            };
        }
    }
}
async function handleMessage(data /*: HMRMessage */ ) {
    checkedAssets = {} /*: {|[string]: boolean|} */ ;
    disposedAssets = {} /*: {|[string]: boolean|} */ ;
    assetsToAccept = [];
    assetsToDispose = [];
    bundleNotFound = false;
    if (data.type === 'reload') fullReload();
    else if (data.type === 'update') {
        // Remove error overlay if there is one
        if (typeof document !== 'undefined') removeErrorOverlay();
        let assets = data.assets;
        // Handle HMR Update
        let handled = assets.every((asset)=>{
            return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);
        });
        // Dispatch a custom event in case a bundle was not found. This might mean
        // an asset on the server changed and we should reload the page. This event
        // gives the client an opportunity to refresh without losing state
        // (e.g. via React Server Components). If e.preventDefault() is not called,
        // we will trigger a full page reload.
        if (handled && bundleNotFound && assets.some((a)=>a.envHash !== HMR_ENV_HASH) && typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') handled = !window.dispatchEvent(new CustomEvent('parcelhmrreload', {
            cancelable: true
        }));
        if (handled) {
            console.clear();
            // Dispatch custom event so other runtimes (e.g React Refresh) are aware.
            if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') window.dispatchEvent(new CustomEvent('parcelhmraccept'));
            await hmrApplyUpdates(assets);
            hmrDisposeQueue();
            // Run accept callbacks. This will also re-execute other disposed assets in topological order.
            let processedAssets = {};
            for(let i = 0; i < assetsToAccept.length; i++){
                let id = assetsToAccept[i][1];
                if (!processedAssets[id]) {
                    hmrAccept(assetsToAccept[i][0], id);
                    processedAssets[id] = true;
                }
            }
        } else fullReload();
    }
    if (data.type === 'error') {
        // Log parcel errors to console
        for (let ansiDiagnostic of data.diagnostics.ansi){
            let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;
            console.error("\uD83D\uDEA8 [parcel]: " + ansiDiagnostic.message + '\n' + stack + '\n\n' + ansiDiagnostic.hints.join('\n'));
        }
        if (typeof document !== 'undefined') {
            // Render the fancy html overlay
            removeErrorOverlay();
            var overlay = createErrorOverlay(data.diagnostics.html);
            // $FlowFixMe
            document.body.appendChild(overlay);
        }
    }
}
function removeErrorOverlay() {
    var overlay = document.getElementById(OVERLAY_ID);
    if (overlay) {
        overlay.remove();
        console.log("[parcel] \u2728 Error resolved");
    }
}
function createErrorOverlay(diagnostics) {
    var overlay = document.createElement('div');
    overlay.id = OVERLAY_ID;
    let errorHTML = '<div style="background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;">';
    for (let diagnostic of diagnostics){
        let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame)=>{
            return `${p}
<a href="${protocol === 'wss' ? 'https' : 'http'}://${hostname}:${port}/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}" style="text-decoration: underline; color: #888" onclick="fetch(this.href); return false">${frame.location}</a>
${frame.code}`;
        }, '') : diagnostic.stack;
        errorHTML += `
      <div>
        <div style="font-size: 18px; font-weight: bold; margin-top: 20px;">
          \u{1F6A8} ${diagnostic.message}
        </div>
        <pre>${stack}</pre>
        <div>
          ${diagnostic.hints.map((hint)=>"<div>\uD83D\uDCA1 " + hint + '</div>').join('')}
        </div>
        ${diagnostic.documentation ? `<div>\u{1F4DD} <a style="color: violet" href="${diagnostic.documentation}" target="_blank">Learn more</a></div>` : ''}
      </div>
    `;
    }
    errorHTML += '</div>';
    overlay.innerHTML = errorHTML;
    return overlay;
}
function fullReload() {
    if (typeof location !== 'undefined' && 'reload' in location) location.reload();
    else if (typeof extCtx !== 'undefined' && extCtx && extCtx.runtime && extCtx.runtime.reload) extCtx.runtime.reload();
    else try {
        let { workerData, parentPort } = module.bundle.root('node:worker_threads') /*: any*/ ;
        if (workerData !== null && workerData !== void 0 && workerData.__parcel) parentPort.postMessage('restart');
    } catch (err) {
        console.error("[parcel] \u26A0\uFE0F An HMR update was not accepted. Please restart the process.");
    }
}
function getParents(bundle, id) /*: Array<[ParcelRequire, string]> */ {
    var modules = bundle.modules;
    if (!modules) return [];
    var parents = [];
    var k, d, dep;
    for(k in modules)for(d in modules[k][1]){
        dep = modules[k][1][d];
        if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) parents.push([
            bundle,
            k
        ]);
    }
    if (bundle.parent) parents = parents.concat(getParents(bundle.parent, id));
    return parents;
}
function updateLink(link) {
    var href = link.getAttribute('href');
    if (!href) return;
    var newLink = link.cloneNode();
    newLink.onload = function() {
        if (link.parentNode !== null) // $FlowFixMe
        link.parentNode.removeChild(link);
    };
    newLink.setAttribute('href', // $FlowFixMe
    href.split('?')[0] + '?' + Date.now());
    // $FlowFixMe
    link.parentNode.insertBefore(newLink, link.nextSibling);
}
var cssTimeout = null;
function reloadCSS() {
    if (cssTimeout || typeof document === 'undefined') return;
    cssTimeout = setTimeout(function() {
        var links = document.querySelectorAll('link[rel="stylesheet"]');
        for(var i = 0; i < links.length; i++){
            // $FlowFixMe[incompatible-type]
            var href /*: string */  = links[i].getAttribute('href');
            var hostname = getHostname();
            var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\/\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());
            var absolute = /^https?:\/\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;
            if (!absolute) updateLink(links[i]);
        }
        cssTimeout = null;
    }, 50);
}
function hmrDownload(asset) {
    if (asset.type === 'js') {
        if (typeof document !== 'undefined') {
            let script = document.createElement('script');
            script.src = asset.url + '?t=' + Date.now();
            if (asset.outputFormat === 'esmodule') script.type = 'module';
            return new Promise((resolve, reject)=>{
                var _document$head;
                script.onload = ()=>resolve(script);
                script.onerror = reject;
                (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);
            });
        } else if (typeof importScripts === 'function') {
            // Worker scripts
            if (asset.outputFormat === 'esmodule') return import(asset.url + '?t=' + Date.now());
            else return new Promise((resolve, reject)=>{
                try {
                    importScripts(asset.url + '?t=' + Date.now());
                    resolve();
                } catch (err) {
                    reject(err);
                }
            });
        }
    }
}
async function hmrApplyUpdates(assets) {
    global.parcelHotUpdate = Object.create(null);
    let scriptsToRemove;
    try {
        // If sourceURL comments aren't supported in eval, we need to load
        // the update from the dev server over HTTP so that stack traces
        // are correct in errors/logs. This is much slower than eval, so
        // we only do it if needed (currently just Safari).
        // https://bugs.webkit.org/show_bug.cgi?id=137297
        // This path is also taken if a CSP disallows eval.
        if (!supportsSourceURL) {
            let promises = assets.map((asset)=>{
                var _hmrDownload;
                return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch((err)=>{
                    // Web extension fix
                    if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {
                        extCtx.runtime.reload();
                        return;
                    }
                    throw err;
                });
            });
            scriptsToRemove = await Promise.all(promises);
        }
        assets.forEach(function(asset) {
            hmrApply(module.bundle.root, asset);
        });
    } finally{
        delete global.parcelHotUpdate;
        if (scriptsToRemove) scriptsToRemove.forEach((script)=>{
            if (script) {
                var _document$head2;
                (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);
            }
        });
    }
}
function hmrApply(bundle /*: ParcelRequire */ , asset /*:  HMRAsset */ ) {
    var modules = bundle.modules;
    if (!modules) return;
    if (asset.type === 'css') reloadCSS();
    else if (asset.type === 'js') {
        let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];
        if (deps) {
            if (modules[asset.id]) {
                // Remove dependencies that are removed and will become orphaned.
                // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.
                let oldDeps = modules[asset.id][1];
                for(let dep in oldDeps)if (!deps[dep] || deps[dep] !== oldDeps[dep]) {
                    let id = oldDeps[dep];
                    let parents = getParents(module.bundle.root, id);
                    if (parents.length === 1) hmrDelete(module.bundle.root, id);
                }
            }
            if (supportsSourceURL) // Global eval. We would use `new Function` here but browser
            // support for source maps is better with eval.
            (0, eval)(asset.output);
            // $FlowFixMe
            let fn = global.parcelHotUpdate[asset.id];
            modules[asset.id] = [
                fn,
                deps
            ];
        }
        // Always traverse to the parent bundle, even if we already replaced the asset in this bundle.
        // This is required in case modules are duplicated. We need to ensure all instances have the updated code.
        if (bundle.parent) hmrApply(bundle.parent, asset);
    }
}
function hmrDelete(bundle, id) {
    let modules = bundle.modules;
    if (!modules) return;
    if (modules[id]) {
        // Collect dependencies that will become orphaned when this module is deleted.
        let deps = modules[id][1];
        let orphans = [];
        for(let dep in deps){
            let parents = getParents(module.bundle.root, deps[dep]);
            if (parents.length === 1) orphans.push(deps[dep]);
        }
        // Delete the module. This must be done before deleting dependencies in case of circular dependencies.
        delete modules[id];
        delete bundle.cache[id];
        // Now delete the orphans.
        orphans.forEach((id)=>{
            hmrDelete(module.bundle.root, id);
        });
    } else if (bundle.parent) hmrDelete(bundle.parent, id);
}
function hmrAcceptCheck(bundle /*: ParcelRequire */ , id /*: string */ , depsByBundle /*: ?{ [string]: { [string]: string } }*/ ) {
    checkedAssets = {};
    if (hmrAcceptCheckOne(bundle, id, depsByBundle)) return true;
    // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.
    let parents = getParents(module.bundle.root, id);
    let accepted = false;
    while(parents.length > 0){
        let v = parents.shift();
        let a = hmrAcceptCheckOne(v[0], v[1], null);
        if (a) // If this parent accepts, stop traversing upward, but still consider siblings.
        accepted = true;
        else if (a !== null) {
            // Otherwise, queue the parents in the next level upward.
            let p = getParents(module.bundle.root, v[1]);
            if (p.length === 0) {
                // If there are no parents, then we've reached an entry without accepting. Reload.
                accepted = false;
                break;
            }
            parents.push(...p);
        }
    }
    return accepted;
}
function hmrAcceptCheckOne(bundle /*: ParcelRequire */ , id /*: string */ , depsByBundle /*: ?{ [string]: { [string]: string } }*/ ) {
    var modules = bundle.modules;
    if (!modules) return;
    if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {
        // If we reached the root bundle without finding where the asset should go,
        // there's nothing to do. Mark as "accepted" so we don't reload the page.
        if (!bundle.parent) {
            bundleNotFound = true;
            return true;
        }
        return hmrAcceptCheckOne(bundle.parent, id, depsByBundle);
    }
    if (checkedAssets[id]) return null;
    checkedAssets[id] = true;
    var cached = bundle.cache[id];
    if (!cached) return true;
    assetsToDispose.push([
        bundle,
        id
    ]);
    if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
        assetsToAccept.push([
            bundle,
            id
        ]);
        return true;
    }
    return false;
}
function hmrDisposeQueue() {
    // Dispose all old assets.
    for(let i = 0; i < assetsToDispose.length; i++){
        let id = assetsToDispose[i][1];
        if (!disposedAssets[id]) {
            hmrDispose(assetsToDispose[i][0], id);
            disposedAssets[id] = true;
        }
    }
    assetsToDispose = [];
}
function hmrDispose(bundle /*: ParcelRequire */ , id /*: string */ ) {
    var cached = bundle.cache[id];
    bundle.hotData[id] = {};
    if (cached && cached.hot) cached.hot.data = bundle.hotData[id];
    if (cached && cached.hot && cached.hot._disposeCallbacks.length) cached.hot._disposeCallbacks.forEach(function(cb) {
        cb(bundle.hotData[id]);
    });
    delete bundle.cache[id];
}
function hmrAccept(bundle /*: ParcelRequire */ , id /*: string */ ) {
    // Execute the module.
    bundle(id);
    // Run the accept callbacks in the new version of the module.
    var cached = bundle.cache[id];
    if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
        let assetsToAlsoAccept = [];
        cached.hot._acceptCallbacks.forEach(function(cb) {
            let additionalAssets = cb(function() {
                return getParents(module.bundle.root, id);
            });
            if (Array.isArray(additionalAssets) && additionalAssets.length) assetsToAlsoAccept.push(...additionalAssets);
        });
        if (assetsToAlsoAccept.length) {
            let handled = assetsToAlsoAccept.every(function(a) {
                return hmrAcceptCheck(a[0], a[1]);
            });
            if (!handled) return fullReload();
            hmrDisposeQueue();
        }
    }
}

},{}],"4dmnR":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$1d45 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$1d45.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$1d45.prelude(module);

try {
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _client = require("react-dom/client");
var _react = require("react");
var _app = require("./App");
let container = document.getElementById("app");
let root = (0, _client.createRoot)(container);
root.render(/*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _react.StrictMode), {
    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _app.App), {}, void 0, false, {
        fileName: "src/index.tsx",
        lineNumber: 9,
        columnNumber: 5
    }, undefined)
}, void 0, false, {
    fileName: "src/index.tsx",
    lineNumber: 8,
    columnNumber: 3
}, undefined));

  $parcel$ReactRefreshHelpers$1d45.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react-dom/client":"hrvwu","react":"jMk1U","./App":"3VLq5","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"dVPUn":[function(require,module,exports,__globalThis) {
'use strict';
module.exports = require("ee51401569654d91");

},{"ee51401569654d91":"gnlQf"}],"gnlQf":[function(require,module,exports,__globalThis) {
/**
 * @license React
 * react-jsx-dev-runtime.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
(function() {
    function getComponentNameFromType(type) {
        if (null == type) return null;
        if ("function" === typeof type) return type.$$typeof === REACT_CLIENT_REFERENCE ? null : type.displayName || type.name || null;
        if ("string" === typeof type) return type;
        switch(type){
            case REACT_FRAGMENT_TYPE:
                return "Fragment";
            case REACT_PROFILER_TYPE:
                return "Profiler";
            case REACT_STRICT_MODE_TYPE:
                return "StrictMode";
            case REACT_SUSPENSE_TYPE:
                return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
                return "SuspenseList";
            case REACT_ACTIVITY_TYPE:
                return "Activity";
        }
        if ("object" === typeof type) switch("number" === typeof type.tag && console.error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), type.$$typeof){
            case REACT_PORTAL_TYPE:
                return "Portal";
            case REACT_CONTEXT_TYPE:
                return (type.displayName || "Context") + ".Provider";
            case REACT_CONSUMER_TYPE:
                return (type._context.displayName || "Context") + ".Consumer";
            case REACT_FORWARD_REF_TYPE:
                var innerType = type.render;
                type = type.displayName;
                type || (type = innerType.displayName || innerType.name || "", type = "" !== type ? "ForwardRef(" + type + ")" : "ForwardRef");
                return type;
            case REACT_MEMO_TYPE:
                return innerType = type.displayName || null, null !== innerType ? innerType : getComponentNameFromType(type.type) || "Memo";
            case REACT_LAZY_TYPE:
                innerType = type._payload;
                type = type._init;
                try {
                    return getComponentNameFromType(type(innerType));
                } catch (x) {}
        }
        return null;
    }
    function testStringCoercion(value) {
        return "" + value;
    }
    function checkKeyStringCoercion(value) {
        try {
            testStringCoercion(value);
            var JSCompiler_inline_result = !1;
        } catch (e) {
            JSCompiler_inline_result = !0;
        }
        if (JSCompiler_inline_result) {
            JSCompiler_inline_result = console;
            var JSCompiler_temp_const = JSCompiler_inline_result.error;
            var JSCompiler_inline_result$jscomp$0 = "function" === typeof Symbol && Symbol.toStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
            JSCompiler_temp_const.call(JSCompiler_inline_result, "The provided key is an unsupported type %s. This value must be coerced to a string before using it here.", JSCompiler_inline_result$jscomp$0);
            return testStringCoercion(value);
        }
    }
    function getTaskName(type) {
        if (type === REACT_FRAGMENT_TYPE) return "<>";
        if ("object" === typeof type && null !== type && type.$$typeof === REACT_LAZY_TYPE) return "<...>";
        try {
            var name = getComponentNameFromType(type);
            return name ? "<" + name + ">" : "<...>";
        } catch (x) {
            return "<...>";
        }
    }
    function getOwner() {
        var dispatcher = ReactSharedInternals.A;
        return null === dispatcher ? null : dispatcher.getOwner();
    }
    function UnknownOwner() {
        return Error("react-stack-top-frame");
    }
    function hasValidKey(config) {
        if (hasOwnProperty.call(config, "key")) {
            var getter = Object.getOwnPropertyDescriptor(config, "key").get;
            if (getter && getter.isReactWarning) return !1;
        }
        return void 0 !== config.key;
    }
    function defineKeyPropWarningGetter(props, displayName) {
        function warnAboutAccessingKey() {
            specialPropKeyWarningShown || (specialPropKeyWarningShown = !0, console.error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)", displayName));
        }
        warnAboutAccessingKey.isReactWarning = !0;
        Object.defineProperty(props, "key", {
            get: warnAboutAccessingKey,
            configurable: !0
        });
    }
    function elementRefGetterWithDeprecationWarning() {
        var componentName = getComponentNameFromType(this.type);
        didWarnAboutElementRef[componentName] || (didWarnAboutElementRef[componentName] = !0, console.error("Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release."));
        componentName = this.props.ref;
        return void 0 !== componentName ? componentName : null;
    }
    function ReactElement(type, key, self, source, owner, props, debugStack, debugTask) {
        self = props.ref;
        type = {
            $$typeof: REACT_ELEMENT_TYPE,
            type: type,
            key: key,
            props: props,
            _owner: owner
        };
        null !== (void 0 !== self ? self : null) ? Object.defineProperty(type, "ref", {
            enumerable: !1,
            get: elementRefGetterWithDeprecationWarning
        }) : Object.defineProperty(type, "ref", {
            enumerable: !1,
            value: null
        });
        type._store = {};
        Object.defineProperty(type._store, "validated", {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: 0
        });
        Object.defineProperty(type, "_debugInfo", {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: null
        });
        Object.defineProperty(type, "_debugStack", {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: debugStack
        });
        Object.defineProperty(type, "_debugTask", {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: debugTask
        });
        Object.freeze && (Object.freeze(type.props), Object.freeze(type));
        return type;
    }
    function jsxDEVImpl(type, config, maybeKey, isStaticChildren, source, self, debugStack, debugTask) {
        var children = config.children;
        if (void 0 !== children) {
            if (isStaticChildren) {
                if (isArrayImpl(children)) {
                    for(isStaticChildren = 0; isStaticChildren < children.length; isStaticChildren++)validateChildKeys(children[isStaticChildren]);
                    Object.freeze && Object.freeze(children);
                } else console.error("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
            } else validateChildKeys(children);
        }
        if (hasOwnProperty.call(config, "key")) {
            children = getComponentNameFromType(type);
            var keys = Object.keys(config).filter(function(k) {
                return "key" !== k;
            });
            isStaticChildren = 0 < keys.length ? "{key: someKey, " + keys.join(": ..., ") + ": ...}" : "{key: someKey}";
            didWarnAboutKeySpread[children + isStaticChildren] || (keys = 0 < keys.length ? "{" + keys.join(": ..., ") + ": ...}" : "{}", console.error('A props object containing a "key" prop is being spread into JSX:\n  let props = %s;\n  <%s {...props} />\nReact keys must be passed directly to JSX without using spread:\n  let props = %s;\n  <%s key={someKey} {...props} />', isStaticChildren, children, keys, children), didWarnAboutKeySpread[children + isStaticChildren] = !0);
        }
        children = null;
        void 0 !== maybeKey && (checkKeyStringCoercion(maybeKey), children = "" + maybeKey);
        hasValidKey(config) && (checkKeyStringCoercion(config.key), children = "" + config.key);
        if ("key" in config) {
            maybeKey = {};
            for(var propName in config)"key" !== propName && (maybeKey[propName] = config[propName]);
        } else maybeKey = config;
        children && defineKeyPropWarningGetter(maybeKey, "function" === typeof type ? type.displayName || type.name || "Unknown" : type);
        return ReactElement(type, children, self, source, getOwner(), maybeKey, debugStack, debugTask);
    }
    function validateChildKeys(node) {
        "object" === typeof node && null !== node && node.$$typeof === REACT_ELEMENT_TYPE && node._store && (node._store.validated = 1);
    }
    var React = require("58362d9d82be395f"), REACT_ELEMENT_TYPE = Symbol.for("react.transitional.element"), REACT_PORTAL_TYPE = Symbol.for("react.portal"), REACT_FRAGMENT_TYPE = Symbol.for("react.fragment"), REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode"), REACT_PROFILER_TYPE = Symbol.for("react.profiler");
    Symbol.for("react.provider");
    var REACT_CONSUMER_TYPE = Symbol.for("react.consumer"), REACT_CONTEXT_TYPE = Symbol.for("react.context"), REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"), REACT_SUSPENSE_TYPE = Symbol.for("react.suspense"), REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list"), REACT_MEMO_TYPE = Symbol.for("react.memo"), REACT_LAZY_TYPE = Symbol.for("react.lazy"), REACT_ACTIVITY_TYPE = Symbol.for("react.activity"), REACT_CLIENT_REFERENCE = Symbol.for("react.client.reference"), ReactSharedInternals = React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE, hasOwnProperty = Object.prototype.hasOwnProperty, isArrayImpl = Array.isArray, createTask = console.createTask ? console.createTask : function() {
        return null;
    };
    React = {
        react_stack_bottom_frame: function(callStackForError) {
            return callStackForError();
        }
    };
    var specialPropKeyWarningShown;
    var didWarnAboutElementRef = {};
    var unknownOwnerDebugStack = React.react_stack_bottom_frame.bind(React, UnknownOwner)();
    var unknownOwnerDebugTask = createTask(getTaskName(UnknownOwner));
    var didWarnAboutKeySpread = {};
    exports.Fragment = REACT_FRAGMENT_TYPE;
    exports.jsxDEV = function(type, config, maybeKey, isStaticChildren, source, self) {
        var trackActualOwner = 1e4 > ReactSharedInternals.recentlyCreatedOwnerStacks++;
        return jsxDEVImpl(type, config, maybeKey, isStaticChildren, source, self, trackActualOwner ? Error("react-stack-top-frame") : unknownOwnerDebugStack, trackActualOwner ? createTask(getTaskName(type)) : unknownOwnerDebugTask);
    };
})();

},{"58362d9d82be395f":"jMk1U"}],"jMk1U":[function(require,module,exports,__globalThis) {
'use strict';
module.exports = require("a569817e6ea559f6");

},{"a569817e6ea559f6":"ghslp"}],"ghslp":[function(require,module,exports,__globalThis) {
/**
 * @license React
 * react.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
(function() {
    function defineDeprecationWarning(methodName, info) {
        Object.defineProperty(Component.prototype, methodName, {
            get: function() {
                console.warn("%s(...) is deprecated in plain JavaScript React classes. %s", info[0], info[1]);
            }
        });
    }
    function getIteratorFn(maybeIterable) {
        if (null === maybeIterable || "object" !== typeof maybeIterable) return null;
        maybeIterable = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable["@@iterator"];
        return "function" === typeof maybeIterable ? maybeIterable : null;
    }
    function warnNoop(publicInstance, callerName) {
        publicInstance = (publicInstance = publicInstance.constructor) && (publicInstance.displayName || publicInstance.name) || "ReactClass";
        var warningKey = publicInstance + "." + callerName;
        didWarnStateUpdateForUnmountedComponent[warningKey] || (console.error("Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.", callerName, publicInstance), didWarnStateUpdateForUnmountedComponent[warningKey] = !0);
    }
    function Component(props, context, updater) {
        this.props = props;
        this.context = context;
        this.refs = emptyObject;
        this.updater = updater || ReactNoopUpdateQueue;
    }
    function ComponentDummy() {}
    function PureComponent(props, context, updater) {
        this.props = props;
        this.context = context;
        this.refs = emptyObject;
        this.updater = updater || ReactNoopUpdateQueue;
    }
    function testStringCoercion(value) {
        return "" + value;
    }
    function checkKeyStringCoercion(value) {
        try {
            testStringCoercion(value);
            var JSCompiler_inline_result = !1;
        } catch (e) {
            JSCompiler_inline_result = !0;
        }
        if (JSCompiler_inline_result) {
            JSCompiler_inline_result = console;
            var JSCompiler_temp_const = JSCompiler_inline_result.error;
            var JSCompiler_inline_result$jscomp$0 = "function" === typeof Symbol && Symbol.toStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
            JSCompiler_temp_const.call(JSCompiler_inline_result, "The provided key is an unsupported type %s. This value must be coerced to a string before using it here.", JSCompiler_inline_result$jscomp$0);
            return testStringCoercion(value);
        }
    }
    function getComponentNameFromType(type) {
        if (null == type) return null;
        if ("function" === typeof type) return type.$$typeof === REACT_CLIENT_REFERENCE ? null : type.displayName || type.name || null;
        if ("string" === typeof type) return type;
        switch(type){
            case REACT_FRAGMENT_TYPE:
                return "Fragment";
            case REACT_PROFILER_TYPE:
                return "Profiler";
            case REACT_STRICT_MODE_TYPE:
                return "StrictMode";
            case REACT_SUSPENSE_TYPE:
                return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
                return "SuspenseList";
            case REACT_ACTIVITY_TYPE:
                return "Activity";
        }
        if ("object" === typeof type) switch("number" === typeof type.tag && console.error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), type.$$typeof){
            case REACT_PORTAL_TYPE:
                return "Portal";
            case REACT_CONTEXT_TYPE:
                return (type.displayName || "Context") + ".Provider";
            case REACT_CONSUMER_TYPE:
                return (type._context.displayName || "Context") + ".Consumer";
            case REACT_FORWARD_REF_TYPE:
                var innerType = type.render;
                type = type.displayName;
                type || (type = innerType.displayName || innerType.name || "", type = "" !== type ? "ForwardRef(" + type + ")" : "ForwardRef");
                return type;
            case REACT_MEMO_TYPE:
                return innerType = type.displayName || null, null !== innerType ? innerType : getComponentNameFromType(type.type) || "Memo";
            case REACT_LAZY_TYPE:
                innerType = type._payload;
                type = type._init;
                try {
                    return getComponentNameFromType(type(innerType));
                } catch (x) {}
        }
        return null;
    }
    function getTaskName(type) {
        if (type === REACT_FRAGMENT_TYPE) return "<>";
        if ("object" === typeof type && null !== type && type.$$typeof === REACT_LAZY_TYPE) return "<...>";
        try {
            var name = getComponentNameFromType(type);
            return name ? "<" + name + ">" : "<...>";
        } catch (x) {
            return "<...>";
        }
    }
    function getOwner() {
        var dispatcher = ReactSharedInternals.A;
        return null === dispatcher ? null : dispatcher.getOwner();
    }
    function UnknownOwner() {
        return Error("react-stack-top-frame");
    }
    function hasValidKey(config) {
        if (hasOwnProperty.call(config, "key")) {
            var getter = Object.getOwnPropertyDescriptor(config, "key").get;
            if (getter && getter.isReactWarning) return !1;
        }
        return void 0 !== config.key;
    }
    function defineKeyPropWarningGetter(props, displayName) {
        function warnAboutAccessingKey() {
            specialPropKeyWarningShown || (specialPropKeyWarningShown = !0, console.error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)", displayName));
        }
        warnAboutAccessingKey.isReactWarning = !0;
        Object.defineProperty(props, "key", {
            get: warnAboutAccessingKey,
            configurable: !0
        });
    }
    function elementRefGetterWithDeprecationWarning() {
        var componentName = getComponentNameFromType(this.type);
        didWarnAboutElementRef[componentName] || (didWarnAboutElementRef[componentName] = !0, console.error("Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release."));
        componentName = this.props.ref;
        return void 0 !== componentName ? componentName : null;
    }
    function ReactElement(type, key, self, source, owner, props, debugStack, debugTask) {
        self = props.ref;
        type = {
            $$typeof: REACT_ELEMENT_TYPE,
            type: type,
            key: key,
            props: props,
            _owner: owner
        };
        null !== (void 0 !== self ? self : null) ? Object.defineProperty(type, "ref", {
            enumerable: !1,
            get: elementRefGetterWithDeprecationWarning
        }) : Object.defineProperty(type, "ref", {
            enumerable: !1,
            value: null
        });
        type._store = {};
        Object.defineProperty(type._store, "validated", {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: 0
        });
        Object.defineProperty(type, "_debugInfo", {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: null
        });
        Object.defineProperty(type, "_debugStack", {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: debugStack
        });
        Object.defineProperty(type, "_debugTask", {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: debugTask
        });
        Object.freeze && (Object.freeze(type.props), Object.freeze(type));
        return type;
    }
    function cloneAndReplaceKey(oldElement, newKey) {
        newKey = ReactElement(oldElement.type, newKey, void 0, void 0, oldElement._owner, oldElement.props, oldElement._debugStack, oldElement._debugTask);
        oldElement._store && (newKey._store.validated = oldElement._store.validated);
        return newKey;
    }
    function isValidElement(object) {
        return "object" === typeof object && null !== object && object.$$typeof === REACT_ELEMENT_TYPE;
    }
    function escape(key) {
        var escaperLookup = {
            "=": "=0",
            ":": "=2"
        };
        return "$" + key.replace(/[=:]/g, function(match) {
            return escaperLookup[match];
        });
    }
    function getElementKey(element, index) {
        return "object" === typeof element && null !== element && null != element.key ? (checkKeyStringCoercion(element.key), escape("" + element.key)) : index.toString(36);
    }
    function noop$1() {}
    function resolveThenable(thenable) {
        switch(thenable.status){
            case "fulfilled":
                return thenable.value;
            case "rejected":
                throw thenable.reason;
            default:
                switch("string" === typeof thenable.status ? thenable.then(noop$1, noop$1) : (thenable.status = "pending", thenable.then(function(fulfilledValue) {
                    "pending" === thenable.status && (thenable.status = "fulfilled", thenable.value = fulfilledValue);
                }, function(error) {
                    "pending" === thenable.status && (thenable.status = "rejected", thenable.reason = error);
                })), thenable.status){
                    case "fulfilled":
                        return thenable.value;
                    case "rejected":
                        throw thenable.reason;
                }
        }
        throw thenable;
    }
    function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {
        var type = typeof children;
        if ("undefined" === type || "boolean" === type) children = null;
        var invokeCallback = !1;
        if (null === children) invokeCallback = !0;
        else switch(type){
            case "bigint":
            case "string":
            case "number":
                invokeCallback = !0;
                break;
            case "object":
                switch(children.$$typeof){
                    case REACT_ELEMENT_TYPE:
                    case REACT_PORTAL_TYPE:
                        invokeCallback = !0;
                        break;
                    case REACT_LAZY_TYPE:
                        return invokeCallback = children._init, mapIntoArray(invokeCallback(children._payload), array, escapedPrefix, nameSoFar, callback);
                }
        }
        if (invokeCallback) {
            invokeCallback = children;
            callback = callback(invokeCallback);
            var childKey = "" === nameSoFar ? "." + getElementKey(invokeCallback, 0) : nameSoFar;
            isArrayImpl(callback) ? (escapedPrefix = "", null != childKey && (escapedPrefix = childKey.replace(userProvidedKeyEscapeRegex, "$&/") + "/"), mapIntoArray(callback, array, escapedPrefix, "", function(c) {
                return c;
            })) : null != callback && (isValidElement(callback) && (null != callback.key && (invokeCallback && invokeCallback.key === callback.key || checkKeyStringCoercion(callback.key)), escapedPrefix = cloneAndReplaceKey(callback, escapedPrefix + (null == callback.key || invokeCallback && invokeCallback.key === callback.key ? "" : ("" + callback.key).replace(userProvidedKeyEscapeRegex, "$&/") + "/") + childKey), "" !== nameSoFar && null != invokeCallback && isValidElement(invokeCallback) && null == invokeCallback.key && invokeCallback._store && !invokeCallback._store.validated && (escapedPrefix._store.validated = 2), callback = escapedPrefix), array.push(callback));
            return 1;
        }
        invokeCallback = 0;
        childKey = "" === nameSoFar ? "." : nameSoFar + ":";
        if (isArrayImpl(children)) for(var i = 0; i < children.length; i++)nameSoFar = children[i], type = childKey + getElementKey(nameSoFar, i), invokeCallback += mapIntoArray(nameSoFar, array, escapedPrefix, type, callback);
        else if (i = getIteratorFn(children), "function" === typeof i) for(i === children.entries && (didWarnAboutMaps || console.warn("Using Maps as children is not supported. Use an array of keyed ReactElements instead."), didWarnAboutMaps = !0), children = i.call(children), i = 0; !(nameSoFar = children.next()).done;)nameSoFar = nameSoFar.value, type = childKey + getElementKey(nameSoFar, i++), invokeCallback += mapIntoArray(nameSoFar, array, escapedPrefix, type, callback);
        else if ("object" === type) {
            if ("function" === typeof children.then) return mapIntoArray(resolveThenable(children), array, escapedPrefix, nameSoFar, callback);
            array = String(children);
            throw Error("Objects are not valid as a React child (found: " + ("[object Object]" === array ? "object with keys {" + Object.keys(children).join(", ") + "}" : array) + "). If you meant to render a collection of children, use an array instead.");
        }
        return invokeCallback;
    }
    function mapChildren(children, func, context) {
        if (null == children) return children;
        var result = [], count = 0;
        mapIntoArray(children, result, "", "", function(child) {
            return func.call(context, child, count++);
        });
        return result;
    }
    function lazyInitializer(payload) {
        if (-1 === payload._status) {
            var ctor = payload._result;
            ctor = ctor();
            ctor.then(function(moduleObject) {
                if (0 === payload._status || -1 === payload._status) payload._status = 1, payload._result = moduleObject;
            }, function(error) {
                if (0 === payload._status || -1 === payload._status) payload._status = 2, payload._result = error;
            });
            -1 === payload._status && (payload._status = 0, payload._result = ctor);
        }
        if (1 === payload._status) return ctor = payload._result, void 0 === ctor && console.error("lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))\n\nDid you accidentally put curly braces around the import?", ctor), "default" in ctor || console.error("lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))", ctor), ctor.default;
        throw payload._result;
    }
    function resolveDispatcher() {
        var dispatcher = ReactSharedInternals.H;
        null === dispatcher && console.error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://react.dev/link/invalid-hook-call for tips about how to debug and fix this problem.");
        return dispatcher;
    }
    function noop() {}
    function enqueueTask(task) {
        if (null === enqueueTaskImpl) try {
            var requireString = ("require" + Math.random()).slice(0, 7);
            enqueueTaskImpl = (module && module[requireString]).call(module, "timers").setImmediate;
        } catch (_err) {
            enqueueTaskImpl = function(callback) {
                !1 === didWarnAboutMessageChannel && (didWarnAboutMessageChannel = !0, "undefined" === typeof MessageChannel && console.error("This browser does not have a MessageChannel implementation, so enqueuing tasks via await act(async () => ...) will fail. Please file an issue at https://github.com/facebook/react/issues if you encounter this warning."));
                var channel = new MessageChannel();
                channel.port1.onmessage = callback;
                channel.port2.postMessage(void 0);
            };
        }
        return enqueueTaskImpl(task);
    }
    function aggregateErrors(errors) {
        return 1 < errors.length && "function" === typeof AggregateError ? new AggregateError(errors) : errors[0];
    }
    function popActScope(prevActQueue, prevActScopeDepth) {
        prevActScopeDepth !== actScopeDepth - 1 && console.error("You seem to have overlapping act() calls, this is not supported. Be sure to await previous act() calls before making a new one. ");
        actScopeDepth = prevActScopeDepth;
    }
    function recursivelyFlushAsyncActWork(returnValue, resolve, reject) {
        var queue = ReactSharedInternals.actQueue;
        if (null !== queue) {
            if (0 !== queue.length) try {
                flushActQueue(queue);
                enqueueTask(function() {
                    return recursivelyFlushAsyncActWork(returnValue, resolve, reject);
                });
                return;
            } catch (error) {
                ReactSharedInternals.thrownErrors.push(error);
            }
            else ReactSharedInternals.actQueue = null;
        }
        0 < ReactSharedInternals.thrownErrors.length ? (queue = aggregateErrors(ReactSharedInternals.thrownErrors), ReactSharedInternals.thrownErrors.length = 0, reject(queue)) : resolve(returnValue);
    }
    function flushActQueue(queue) {
        if (!isFlushing) {
            isFlushing = !0;
            var i = 0;
            try {
                for(; i < queue.length; i++){
                    var callback = queue[i];
                    do {
                        ReactSharedInternals.didUsePromise = !1;
                        var continuation = callback(!1);
                        if (null !== continuation) {
                            if (ReactSharedInternals.didUsePromise) {
                                queue[i] = callback;
                                queue.splice(0, i);
                                return;
                            }
                            callback = continuation;
                        } else break;
                    }while (1);
                }
                queue.length = 0;
            } catch (error) {
                queue.splice(0, i + 1), ReactSharedInternals.thrownErrors.push(error);
            } finally{
                isFlushing = !1;
            }
        }
    }
    "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());
    var REACT_ELEMENT_TYPE = Symbol.for("react.transitional.element"), REACT_PORTAL_TYPE = Symbol.for("react.portal"), REACT_FRAGMENT_TYPE = Symbol.for("react.fragment"), REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode"), REACT_PROFILER_TYPE = Symbol.for("react.profiler");
    Symbol.for("react.provider");
    var REACT_CONSUMER_TYPE = Symbol.for("react.consumer"), REACT_CONTEXT_TYPE = Symbol.for("react.context"), REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"), REACT_SUSPENSE_TYPE = Symbol.for("react.suspense"), REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list"), REACT_MEMO_TYPE = Symbol.for("react.memo"), REACT_LAZY_TYPE = Symbol.for("react.lazy"), REACT_ACTIVITY_TYPE = Symbol.for("react.activity"), MAYBE_ITERATOR_SYMBOL = Symbol.iterator, didWarnStateUpdateForUnmountedComponent = {}, ReactNoopUpdateQueue = {
        isMounted: function() {
            return !1;
        },
        enqueueForceUpdate: function(publicInstance) {
            warnNoop(publicInstance, "forceUpdate");
        },
        enqueueReplaceState: function(publicInstance) {
            warnNoop(publicInstance, "replaceState");
        },
        enqueueSetState: function(publicInstance) {
            warnNoop(publicInstance, "setState");
        }
    }, assign = Object.assign, emptyObject = {};
    Object.freeze(emptyObject);
    Component.prototype.isReactComponent = {};
    Component.prototype.setState = function(partialState, callback) {
        if ("object" !== typeof partialState && "function" !== typeof partialState && null != partialState) throw Error("takes an object of state variables to update or a function which returns an object of state variables.");
        this.updater.enqueueSetState(this, partialState, callback, "setState");
    };
    Component.prototype.forceUpdate = function(callback) {
        this.updater.enqueueForceUpdate(this, callback, "forceUpdate");
    };
    var deprecatedAPIs = {
        isMounted: [
            "isMounted",
            "Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks."
        ],
        replaceState: [
            "replaceState",
            "Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236)."
        ]
    }, fnName;
    for(fnName in deprecatedAPIs)deprecatedAPIs.hasOwnProperty(fnName) && defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    ComponentDummy.prototype = Component.prototype;
    deprecatedAPIs = PureComponent.prototype = new ComponentDummy();
    deprecatedAPIs.constructor = PureComponent;
    assign(deprecatedAPIs, Component.prototype);
    deprecatedAPIs.isPureReactComponent = !0;
    var isArrayImpl = Array.isArray, REACT_CLIENT_REFERENCE = Symbol.for("react.client.reference"), ReactSharedInternals = {
        H: null,
        A: null,
        T: null,
        S: null,
        V: null,
        actQueue: null,
        isBatchingLegacy: !1,
        didScheduleLegacyUpdate: !1,
        didUsePromise: !1,
        thrownErrors: [],
        getCurrentStack: null,
        recentlyCreatedOwnerStacks: 0
    }, hasOwnProperty = Object.prototype.hasOwnProperty, createTask = console.createTask ? console.createTask : function() {
        return null;
    };
    deprecatedAPIs = {
        react_stack_bottom_frame: function(callStackForError) {
            return callStackForError();
        }
    };
    var specialPropKeyWarningShown, didWarnAboutOldJSXRuntime;
    var didWarnAboutElementRef = {};
    var unknownOwnerDebugStack = deprecatedAPIs.react_stack_bottom_frame.bind(deprecatedAPIs, UnknownOwner)();
    var unknownOwnerDebugTask = createTask(getTaskName(UnknownOwner));
    var didWarnAboutMaps = !1, userProvidedKeyEscapeRegex = /\/+/g, reportGlobalError = "function" === typeof reportError ? reportError : function(error) {
        if ("object" === typeof window && "function" === typeof window.ErrorEvent) {
            var event = new window.ErrorEvent("error", {
                bubbles: !0,
                cancelable: !0,
                message: "object" === typeof error && null !== error && "string" === typeof error.message ? String(error.message) : String(error),
                error: error
            });
            if (!window.dispatchEvent(event)) return;
        }
        console.error(error);
    }, didWarnAboutMessageChannel = !1, enqueueTaskImpl = null, actScopeDepth = 0, didWarnNoAwaitAct = !1, isFlushing = !1, queueSeveralMicrotasks = "function" === typeof queueMicrotask ? function(callback) {
        queueMicrotask(function() {
            return queueMicrotask(callback);
        });
    } : enqueueTask;
    deprecatedAPIs = Object.freeze({
        __proto__: null,
        c: function(size) {
            return resolveDispatcher().useMemoCache(size);
        }
    });
    exports.Children = {
        map: mapChildren,
        forEach: function(children, forEachFunc, forEachContext) {
            mapChildren(children, function() {
                forEachFunc.apply(this, arguments);
            }, forEachContext);
        },
        count: function(children) {
            var n = 0;
            mapChildren(children, function() {
                n++;
            });
            return n;
        },
        toArray: function(children) {
            return mapChildren(children, function(child) {
                return child;
            }) || [];
        },
        only: function(children) {
            if (!isValidElement(children)) throw Error("React.Children.only expected to receive a single React element child.");
            return children;
        }
    };
    exports.Component = Component;
    exports.Fragment = REACT_FRAGMENT_TYPE;
    exports.Profiler = REACT_PROFILER_TYPE;
    exports.PureComponent = PureComponent;
    exports.StrictMode = REACT_STRICT_MODE_TYPE;
    exports.Suspense = REACT_SUSPENSE_TYPE;
    exports.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE = ReactSharedInternals;
    exports.__COMPILER_RUNTIME = deprecatedAPIs;
    exports.act = function(callback) {
        var prevActQueue = ReactSharedInternals.actQueue, prevActScopeDepth = actScopeDepth;
        actScopeDepth++;
        var queue = ReactSharedInternals.actQueue = null !== prevActQueue ? prevActQueue : [], didAwaitActCall = !1;
        try {
            var result = callback();
        } catch (error) {
            ReactSharedInternals.thrownErrors.push(error);
        }
        if (0 < ReactSharedInternals.thrownErrors.length) throw popActScope(prevActQueue, prevActScopeDepth), callback = aggregateErrors(ReactSharedInternals.thrownErrors), ReactSharedInternals.thrownErrors.length = 0, callback;
        if (null !== result && "object" === typeof result && "function" === typeof result.then) {
            var thenable = result;
            queueSeveralMicrotasks(function() {
                didAwaitActCall || didWarnNoAwaitAct || (didWarnNoAwaitAct = !0, console.error("You called act(async () => ...) without await. This could lead to unexpected testing behaviour, interleaving multiple act calls and mixing their scopes. You should - await act(async () => ...);"));
            });
            return {
                then: function(resolve, reject) {
                    didAwaitActCall = !0;
                    thenable.then(function(returnValue) {
                        popActScope(prevActQueue, prevActScopeDepth);
                        if (0 === prevActScopeDepth) {
                            try {
                                flushActQueue(queue), enqueueTask(function() {
                                    return recursivelyFlushAsyncActWork(returnValue, resolve, reject);
                                });
                            } catch (error$0) {
                                ReactSharedInternals.thrownErrors.push(error$0);
                            }
                            if (0 < ReactSharedInternals.thrownErrors.length) {
                                var _thrownError = aggregateErrors(ReactSharedInternals.thrownErrors);
                                ReactSharedInternals.thrownErrors.length = 0;
                                reject(_thrownError);
                            }
                        } else resolve(returnValue);
                    }, function(error) {
                        popActScope(prevActQueue, prevActScopeDepth);
                        0 < ReactSharedInternals.thrownErrors.length ? (error = aggregateErrors(ReactSharedInternals.thrownErrors), ReactSharedInternals.thrownErrors.length = 0, reject(error)) : reject(error);
                    });
                }
            };
        }
        var returnValue$jscomp$0 = result;
        popActScope(prevActQueue, prevActScopeDepth);
        0 === prevActScopeDepth && (flushActQueue(queue), 0 !== queue.length && queueSeveralMicrotasks(function() {
            didAwaitActCall || didWarnNoAwaitAct || (didWarnNoAwaitAct = !0, console.error("A component suspended inside an `act` scope, but the `act` call was not awaited. When testing React components that depend on asynchronous data, you must await the result:\n\nawait act(() => ...)"));
        }), ReactSharedInternals.actQueue = null);
        if (0 < ReactSharedInternals.thrownErrors.length) throw callback = aggregateErrors(ReactSharedInternals.thrownErrors), ReactSharedInternals.thrownErrors.length = 0, callback;
        return {
            then: function(resolve, reject) {
                didAwaitActCall = !0;
                0 === prevActScopeDepth ? (ReactSharedInternals.actQueue = queue, enqueueTask(function() {
                    return recursivelyFlushAsyncActWork(returnValue$jscomp$0, resolve, reject);
                })) : resolve(returnValue$jscomp$0);
            }
        };
    };
    exports.cache = function(fn) {
        return function() {
            return fn.apply(null, arguments);
        };
    };
    exports.captureOwnerStack = function() {
        var getCurrentStack = ReactSharedInternals.getCurrentStack;
        return null === getCurrentStack ? null : getCurrentStack();
    };
    exports.cloneElement = function(element, config, children) {
        if (null === element || void 0 === element) throw Error("The argument must be a React element, but you passed " + element + ".");
        var props = assign({}, element.props), key = element.key, owner = element._owner;
        if (null != config) {
            var JSCompiler_inline_result;
            a: {
                if (hasOwnProperty.call(config, "ref") && (JSCompiler_inline_result = Object.getOwnPropertyDescriptor(config, "ref").get) && JSCompiler_inline_result.isReactWarning) {
                    JSCompiler_inline_result = !1;
                    break a;
                }
                JSCompiler_inline_result = void 0 !== config.ref;
            }
            JSCompiler_inline_result && (owner = getOwner());
            hasValidKey(config) && (checkKeyStringCoercion(config.key), key = "" + config.key);
            for(propName in config)!hasOwnProperty.call(config, propName) || "key" === propName || "__self" === propName || "__source" === propName || "ref" === propName && void 0 === config.ref || (props[propName] = config[propName]);
        }
        var propName = arguments.length - 2;
        if (1 === propName) props.children = children;
        else if (1 < propName) {
            JSCompiler_inline_result = Array(propName);
            for(var i = 0; i < propName; i++)JSCompiler_inline_result[i] = arguments[i + 2];
            props.children = JSCompiler_inline_result;
        }
        props = ReactElement(element.type, key, void 0, void 0, owner, props, element._debugStack, element._debugTask);
        for(key = 2; key < arguments.length; key++)owner = arguments[key], isValidElement(owner) && owner._store && (owner._store.validated = 1);
        return props;
    };
    exports.createContext = function(defaultValue) {
        defaultValue = {
            $$typeof: REACT_CONTEXT_TYPE,
            _currentValue: defaultValue,
            _currentValue2: defaultValue,
            _threadCount: 0,
            Provider: null,
            Consumer: null
        };
        defaultValue.Provider = defaultValue;
        defaultValue.Consumer = {
            $$typeof: REACT_CONSUMER_TYPE,
            _context: defaultValue
        };
        defaultValue._currentRenderer = null;
        defaultValue._currentRenderer2 = null;
        return defaultValue;
    };
    exports.createElement = function(type, config, children) {
        for(var i = 2; i < arguments.length; i++){
            var node = arguments[i];
            isValidElement(node) && node._store && (node._store.validated = 1);
        }
        i = {};
        node = null;
        if (null != config) for(propName in didWarnAboutOldJSXRuntime || !("__self" in config) || "key" in config || (didWarnAboutOldJSXRuntime = !0, console.warn("Your app (or one of its dependencies) is using an outdated JSX transform. Update to the modern JSX transform for faster performance: https://react.dev/link/new-jsx-transform")), hasValidKey(config) && (checkKeyStringCoercion(config.key), node = "" + config.key), config)hasOwnProperty.call(config, propName) && "key" !== propName && "__self" !== propName && "__source" !== propName && (i[propName] = config[propName]);
        var childrenLength = arguments.length - 2;
        if (1 === childrenLength) i.children = children;
        else if (1 < childrenLength) {
            for(var childArray = Array(childrenLength), _i = 0; _i < childrenLength; _i++)childArray[_i] = arguments[_i + 2];
            Object.freeze && Object.freeze(childArray);
            i.children = childArray;
        }
        if (type && type.defaultProps) for(propName in childrenLength = type.defaultProps, childrenLength)void 0 === i[propName] && (i[propName] = childrenLength[propName]);
        node && defineKeyPropWarningGetter(i, "function" === typeof type ? type.displayName || type.name || "Unknown" : type);
        var propName = 1e4 > ReactSharedInternals.recentlyCreatedOwnerStacks++;
        return ReactElement(type, node, void 0, void 0, getOwner(), i, propName ? Error("react-stack-top-frame") : unknownOwnerDebugStack, propName ? createTask(getTaskName(type)) : unknownOwnerDebugTask);
    };
    exports.createRef = function() {
        var refObject = {
            current: null
        };
        Object.seal(refObject);
        return refObject;
    };
    exports.forwardRef = function(render) {
        null != render && render.$$typeof === REACT_MEMO_TYPE ? console.error("forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...)).") : "function" !== typeof render ? console.error("forwardRef requires a render function but was given %s.", null === render ? "null" : typeof render) : 0 !== render.length && 2 !== render.length && console.error("forwardRef render functions accept exactly two parameters: props and ref. %s", 1 === render.length ? "Did you forget to use the ref parameter?" : "Any additional parameter will be undefined.");
        null != render && null != render.defaultProps && console.error("forwardRef render functions do not support defaultProps. Did you accidentally pass a React component?");
        var elementType = {
            $$typeof: REACT_FORWARD_REF_TYPE,
            render: render
        }, ownName;
        Object.defineProperty(elementType, "displayName", {
            enumerable: !1,
            configurable: !0,
            get: function() {
                return ownName;
            },
            set: function(name) {
                ownName = name;
                render.name || render.displayName || (Object.defineProperty(render, "name", {
                    value: name
                }), render.displayName = name);
            }
        });
        return elementType;
    };
    exports.isValidElement = isValidElement;
    exports.lazy = function(ctor) {
        return {
            $$typeof: REACT_LAZY_TYPE,
            _payload: {
                _status: -1,
                _result: ctor
            },
            _init: lazyInitializer
        };
    };
    exports.memo = function(type, compare) {
        null == type && console.error("memo: The first argument must be a component. Instead received: %s", null === type ? "null" : typeof type);
        compare = {
            $$typeof: REACT_MEMO_TYPE,
            type: type,
            compare: void 0 === compare ? null : compare
        };
        var ownName;
        Object.defineProperty(compare, "displayName", {
            enumerable: !1,
            configurable: !0,
            get: function() {
                return ownName;
            },
            set: function(name) {
                ownName = name;
                type.name || type.displayName || (Object.defineProperty(type, "name", {
                    value: name
                }), type.displayName = name);
            }
        });
        return compare;
    };
    exports.startTransition = function(scope) {
        var prevTransition = ReactSharedInternals.T, currentTransition = {};
        ReactSharedInternals.T = currentTransition;
        currentTransition._updatedFibers = new Set();
        try {
            var returnValue = scope(), onStartTransitionFinish = ReactSharedInternals.S;
            null !== onStartTransitionFinish && onStartTransitionFinish(currentTransition, returnValue);
            "object" === typeof returnValue && null !== returnValue && "function" === typeof returnValue.then && returnValue.then(noop, reportGlobalError);
        } catch (error) {
            reportGlobalError(error);
        } finally{
            null === prevTransition && currentTransition._updatedFibers && (scope = currentTransition._updatedFibers.size, currentTransition._updatedFibers.clear(), 10 < scope && console.warn("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table.")), ReactSharedInternals.T = prevTransition;
        }
    };
    exports.unstable_useCacheRefresh = function() {
        return resolveDispatcher().useCacheRefresh();
    };
    exports.use = function(usable) {
        return resolveDispatcher().use(usable);
    };
    exports.useActionState = function(action, initialState, permalink) {
        return resolveDispatcher().useActionState(action, initialState, permalink);
    };
    exports.useCallback = function(callback, deps) {
        return resolveDispatcher().useCallback(callback, deps);
    };
    exports.useContext = function(Context) {
        var dispatcher = resolveDispatcher();
        Context.$$typeof === REACT_CONSUMER_TYPE && console.error("Calling useContext(Context.Consumer) is not supported and will cause bugs. Did you mean to call useContext(Context) instead?");
        return dispatcher.useContext(Context);
    };
    exports.useDebugValue = function(value, formatterFn) {
        return resolveDispatcher().useDebugValue(value, formatterFn);
    };
    exports.useDeferredValue = function(value, initialValue) {
        return resolveDispatcher().useDeferredValue(value, initialValue);
    };
    exports.useEffect = function(create, createDeps, update) {
        null == create && console.warn("React Hook useEffect requires an effect callback. Did you forget to pass a callback to the hook?");
        var dispatcher = resolveDispatcher();
        if ("function" === typeof update) throw Error("useEffect CRUD overload is not enabled in this build of React.");
        return dispatcher.useEffect(create, createDeps);
    };
    exports.useId = function() {
        return resolveDispatcher().useId();
    };
    exports.useImperativeHandle = function(ref, create, deps) {
        return resolveDispatcher().useImperativeHandle(ref, create, deps);
    };
    exports.useInsertionEffect = function(create, deps) {
        null == create && console.warn("React Hook useInsertionEffect requires an effect callback. Did you forget to pass a callback to the hook?");
        return resolveDispatcher().useInsertionEffect(create, deps);
    };
    exports.useLayoutEffect = function(create, deps) {
        null == create && console.warn("React Hook useLayoutEffect requires an effect callback. Did you forget to pass a callback to the hook?");
        return resolveDispatcher().useLayoutEffect(create, deps);
    };
    exports.useMemo = function(create, deps) {
        return resolveDispatcher().useMemo(create, deps);
    };
    exports.useOptimistic = function(passthrough, reducer) {
        return resolveDispatcher().useOptimistic(passthrough, reducer);
    };
    exports.useReducer = function(reducer, initialArg, init) {
        return resolveDispatcher().useReducer(reducer, initialArg, init);
    };
    exports.useRef = function(initialValue) {
        return resolveDispatcher().useRef(initialValue);
    };
    exports.useState = function(initialState) {
        return resolveDispatcher().useState(initialState);
    };
    exports.useSyncExternalStore = function(subscribe, getSnapshot, getServerSnapshot) {
        return resolveDispatcher().useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
    };
    exports.useTransition = function() {
        return resolveDispatcher().useTransition();
    };
    exports.version = "19.1.1";
    "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());
})();

},{}],"hrvwu":[function(require,module,exports,__globalThis) {
'use strict';
function checkDCE() {
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') return;
    var err;
    // This branch is unreachable because this function is only called
    // in production, but the condition is true only in development.
    // Therefore if the branch is still here, dead code elimination wasn't
    // properly applied.
    // Don't change the message. React DevTools relies on it. Also make sure
    // this message doesn't occur elsewhere in this function, or it will cause
    // a false positive.
    throw new Error('^_^');
}
module.exports = require("2b53550ce04dc092");

},{"2b53550ce04dc092":"lu7uO"}],"lu7uO":[function(require,module,exports,__globalThis) {
/**
 * @license React
 * react-dom-client.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /*
 Modernizr 3.0.0pre (Custom Build) | MIT
*/ "use strict";
(function() {
    function findHook(fiber, id) {
        for(fiber = fiber.memoizedState; null !== fiber && 0 < id;)fiber = fiber.next, id--;
        return fiber;
    }
    function copyWithSetImpl(obj, path, index, value) {
        if (index >= path.length) return value;
        var key = path[index], updated = isArrayImpl(obj) ? obj.slice() : assign({}, obj);
        updated[key] = copyWithSetImpl(obj[key], path, index + 1, value);
        return updated;
    }
    function copyWithRename(obj, oldPath, newPath) {
        if (oldPath.length !== newPath.length) console.warn("copyWithRename() expects paths of the same length");
        else {
            for(var i = 0; i < newPath.length - 1; i++)if (oldPath[i] !== newPath[i]) {
                console.warn("copyWithRename() expects paths to be the same except for the deepest key");
                return;
            }
            return copyWithRenameImpl(obj, oldPath, newPath, 0);
        }
    }
    function copyWithRenameImpl(obj, oldPath, newPath, index) {
        var oldKey = oldPath[index], updated = isArrayImpl(obj) ? obj.slice() : assign({}, obj);
        index + 1 === oldPath.length ? (updated[newPath[index]] = updated[oldKey], isArrayImpl(updated) ? updated.splice(oldKey, 1) : delete updated[oldKey]) : updated[oldKey] = copyWithRenameImpl(obj[oldKey], oldPath, newPath, index + 1);
        return updated;
    }
    function copyWithDeleteImpl(obj, path, index) {
        var key = path[index], updated = isArrayImpl(obj) ? obj.slice() : assign({}, obj);
        if (index + 1 === path.length) return isArrayImpl(updated) ? updated.splice(key, 1) : delete updated[key], updated;
        updated[key] = copyWithDeleteImpl(obj[key], path, index + 1);
        return updated;
    }
    function shouldSuspendImpl() {
        return !1;
    }
    function shouldErrorImpl() {
        return null;
    }
    function warnForMissingKey() {}
    function warnInvalidHookAccess() {
        console.error("Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://react.dev/link/rules-of-hooks");
    }
    function warnInvalidContextAccess() {
        console.error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
    }
    function noop$2() {}
    function setToSortedString(set) {
        var array = [];
        set.forEach(function(value) {
            array.push(value);
        });
        return array.sort().join(", ");
    }
    function createFiber(tag, pendingProps, key, mode) {
        return new FiberNode(tag, pendingProps, key, mode);
    }
    function scheduleRoot(root, element) {
        root.context === emptyContextObject && (updateContainerImpl(root.current, 2, element, root, null, null), flushSyncWork$1());
    }
    function scheduleRefresh(root, update) {
        if (null !== resolveFamily) {
            var staleFamilies = update.staleFamilies;
            update = update.updatedFamilies;
            flushPendingEffects();
            scheduleFibersWithFamiliesRecursively(root.current, update, staleFamilies);
            flushSyncWork$1();
        }
    }
    function setRefreshHandler(handler) {
        resolveFamily = handler;
    }
    function isValidContainer(node) {
        return !(!node || 1 !== node.nodeType && 9 !== node.nodeType && 11 !== node.nodeType);
    }
    function getNearestMountedFiber(fiber) {
        var node = fiber, nearestMounted = fiber;
        if (fiber.alternate) for(; node.return;)node = node.return;
        else {
            fiber = node;
            do node = fiber, 0 !== (node.flags & 4098) && (nearestMounted = node.return), fiber = node.return;
            while (fiber);
        }
        return 3 === node.tag ? nearestMounted : null;
    }
    function getSuspenseInstanceFromFiber(fiber) {
        if (13 === fiber.tag) {
            var suspenseState = fiber.memoizedState;
            null === suspenseState && (fiber = fiber.alternate, null !== fiber && (suspenseState = fiber.memoizedState));
            if (null !== suspenseState) return suspenseState.dehydrated;
        }
        return null;
    }
    function assertIsMounted(fiber) {
        if (getNearestMountedFiber(fiber) !== fiber) throw Error("Unable to find node on an unmounted component.");
    }
    function findCurrentFiberUsingSlowPath(fiber) {
        var alternate = fiber.alternate;
        if (!alternate) {
            alternate = getNearestMountedFiber(fiber);
            if (null === alternate) throw Error("Unable to find node on an unmounted component.");
            return alternate !== fiber ? null : fiber;
        }
        for(var a = fiber, b = alternate;;){
            var parentA = a.return;
            if (null === parentA) break;
            var parentB = parentA.alternate;
            if (null === parentB) {
                b = parentA.return;
                if (null !== b) {
                    a = b;
                    continue;
                }
                break;
            }
            if (parentA.child === parentB.child) {
                for(parentB = parentA.child; parentB;){
                    if (parentB === a) return assertIsMounted(parentA), fiber;
                    if (parentB === b) return assertIsMounted(parentA), alternate;
                    parentB = parentB.sibling;
                }
                throw Error("Unable to find node on an unmounted component.");
            }
            if (a.return !== b.return) a = parentA, b = parentB;
            else {
                for(var didFindChild = !1, _child = parentA.child; _child;){
                    if (_child === a) {
                        didFindChild = !0;
                        a = parentA;
                        b = parentB;
                        break;
                    }
                    if (_child === b) {
                        didFindChild = !0;
                        b = parentA;
                        a = parentB;
                        break;
                    }
                    _child = _child.sibling;
                }
                if (!didFindChild) {
                    for(_child = parentB.child; _child;){
                        if (_child === a) {
                            didFindChild = !0;
                            a = parentB;
                            b = parentA;
                            break;
                        }
                        if (_child === b) {
                            didFindChild = !0;
                            b = parentB;
                            a = parentA;
                            break;
                        }
                        _child = _child.sibling;
                    }
                    if (!didFindChild) throw Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.");
                }
            }
            if (a.alternate !== b) throw Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue.");
        }
        if (3 !== a.tag) throw Error("Unable to find node on an unmounted component.");
        return a.stateNode.current === a ? fiber : alternate;
    }
    function findCurrentHostFiberImpl(node) {
        var tag = node.tag;
        if (5 === tag || 26 === tag || 27 === tag || 6 === tag) return node;
        for(node = node.child; null !== node;){
            tag = findCurrentHostFiberImpl(node);
            if (null !== tag) return tag;
            node = node.sibling;
        }
        return null;
    }
    function getIteratorFn(maybeIterable) {
        if (null === maybeIterable || "object" !== typeof maybeIterable) return null;
        maybeIterable = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable["@@iterator"];
        return "function" === typeof maybeIterable ? maybeIterable : null;
    }
    function getComponentNameFromType(type) {
        if (null == type) return null;
        if ("function" === typeof type) return type.$$typeof === REACT_CLIENT_REFERENCE ? null : type.displayName || type.name || null;
        if ("string" === typeof type) return type;
        switch(type){
            case REACT_FRAGMENT_TYPE:
                return "Fragment";
            case REACT_PROFILER_TYPE:
                return "Profiler";
            case REACT_STRICT_MODE_TYPE:
                return "StrictMode";
            case REACT_SUSPENSE_TYPE:
                return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
                return "SuspenseList";
            case REACT_ACTIVITY_TYPE:
                return "Activity";
        }
        if ("object" === typeof type) switch("number" === typeof type.tag && console.error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), type.$$typeof){
            case REACT_PORTAL_TYPE:
                return "Portal";
            case REACT_CONTEXT_TYPE:
                return (type.displayName || "Context") + ".Provider";
            case REACT_CONSUMER_TYPE:
                return (type._context.displayName || "Context") + ".Consumer";
            case REACT_FORWARD_REF_TYPE:
                var innerType = type.render;
                type = type.displayName;
                type || (type = innerType.displayName || innerType.name || "", type = "" !== type ? "ForwardRef(" + type + ")" : "ForwardRef");
                return type;
            case REACT_MEMO_TYPE:
                return innerType = type.displayName || null, null !== innerType ? innerType : getComponentNameFromType(type.type) || "Memo";
            case REACT_LAZY_TYPE:
                innerType = type._payload;
                type = type._init;
                try {
                    return getComponentNameFromType(type(innerType));
                } catch (x) {}
        }
        return null;
    }
    function getComponentNameFromOwner(owner) {
        return "number" === typeof owner.tag ? getComponentNameFromFiber(owner) : "string" === typeof owner.name ? owner.name : null;
    }
    function getComponentNameFromFiber(fiber) {
        var type = fiber.type;
        switch(fiber.tag){
            case 31:
                return "Activity";
            case 24:
                return "Cache";
            case 9:
                return (type._context.displayName || "Context") + ".Consumer";
            case 10:
                return (type.displayName || "Context") + ".Provider";
            case 18:
                return "DehydratedFragment";
            case 11:
                return fiber = type.render, fiber = fiber.displayName || fiber.name || "", type.displayName || ("" !== fiber ? "ForwardRef(" + fiber + ")" : "ForwardRef");
            case 7:
                return "Fragment";
            case 26:
            case 27:
            case 5:
                return type;
            case 4:
                return "Portal";
            case 3:
                return "Root";
            case 6:
                return "Text";
            case 16:
                return getComponentNameFromType(type);
            case 8:
                return type === REACT_STRICT_MODE_TYPE ? "StrictMode" : "Mode";
            case 22:
                return "Offscreen";
            case 12:
                return "Profiler";
            case 21:
                return "Scope";
            case 13:
                return "Suspense";
            case 19:
                return "SuspenseList";
            case 25:
                return "TracingMarker";
            case 1:
            case 0:
            case 14:
            case 15:
                if ("function" === typeof type) return type.displayName || type.name || null;
                if ("string" === typeof type) return type;
                break;
            case 29:
                type = fiber._debugInfo;
                if (null != type) {
                    for(var i = type.length - 1; 0 <= i; i--)if ("string" === typeof type[i].name) return type[i].name;
                }
                if (null !== fiber.return) return getComponentNameFromFiber(fiber.return);
        }
        return null;
    }
    function createCursor(defaultValue) {
        return {
            current: defaultValue
        };
    }
    function pop(cursor, fiber) {
        0 > index$jscomp$0 ? console.error("Unexpected pop.") : (fiber !== fiberStack[index$jscomp$0] && console.error("Unexpected Fiber popped."), cursor.current = valueStack[index$jscomp$0], valueStack[index$jscomp$0] = null, fiberStack[index$jscomp$0] = null, index$jscomp$0--);
    }
    function push(cursor, value, fiber) {
        index$jscomp$0++;
        valueStack[index$jscomp$0] = cursor.current;
        fiberStack[index$jscomp$0] = fiber;
        cursor.current = value;
    }
    function requiredContext(c) {
        null === c && console.error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.");
        return c;
    }
    function pushHostContainer(fiber, nextRootInstance) {
        push(rootInstanceStackCursor, nextRootInstance, fiber);
        push(contextFiberStackCursor, fiber, fiber);
        push(contextStackCursor, null, fiber);
        var nextRootContext = nextRootInstance.nodeType;
        switch(nextRootContext){
            case 9:
            case 11:
                nextRootContext = 9 === nextRootContext ? "#document" : "#fragment";
                nextRootInstance = (nextRootInstance = nextRootInstance.documentElement) ? (nextRootInstance = nextRootInstance.namespaceURI) ? getOwnHostContext(nextRootInstance) : HostContextNamespaceNone : HostContextNamespaceNone;
                break;
            default:
                if (nextRootContext = nextRootInstance.tagName, nextRootInstance = nextRootInstance.namespaceURI) nextRootInstance = getOwnHostContext(nextRootInstance), nextRootInstance = getChildHostContextProd(nextRootInstance, nextRootContext);
                else switch(nextRootContext){
                    case "svg":
                        nextRootInstance = HostContextNamespaceSvg;
                        break;
                    case "math":
                        nextRootInstance = HostContextNamespaceMath;
                        break;
                    default:
                        nextRootInstance = HostContextNamespaceNone;
                }
        }
        nextRootContext = nextRootContext.toLowerCase();
        nextRootContext = updatedAncestorInfoDev(null, nextRootContext);
        nextRootContext = {
            context: nextRootInstance,
            ancestorInfo: nextRootContext
        };
        pop(contextStackCursor, fiber);
        push(contextStackCursor, nextRootContext, fiber);
    }
    function popHostContainer(fiber) {
        pop(contextStackCursor, fiber);
        pop(contextFiberStackCursor, fiber);
        pop(rootInstanceStackCursor, fiber);
    }
    function getHostContext() {
        return requiredContext(contextStackCursor.current);
    }
    function pushHostContext(fiber) {
        null !== fiber.memoizedState && push(hostTransitionProviderCursor, fiber, fiber);
        var context = requiredContext(contextStackCursor.current);
        var type = fiber.type;
        var nextContext = getChildHostContextProd(context.context, type);
        type = updatedAncestorInfoDev(context.ancestorInfo, type);
        nextContext = {
            context: nextContext,
            ancestorInfo: type
        };
        context !== nextContext && (push(contextFiberStackCursor, fiber, fiber), push(contextStackCursor, nextContext, fiber));
    }
    function popHostContext(fiber) {
        contextFiberStackCursor.current === fiber && (pop(contextStackCursor, fiber), pop(contextFiberStackCursor, fiber));
        hostTransitionProviderCursor.current === fiber && (pop(hostTransitionProviderCursor, fiber), HostTransitionContext._currentValue = NotPendingTransition);
    }
    function typeName(value) {
        return "function" === typeof Symbol && Symbol.toStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
    }
    function willCoercionThrow(value) {
        try {
            return testStringCoercion(value), !1;
        } catch (e) {
            return !0;
        }
    }
    function testStringCoercion(value) {
        return "" + value;
    }
    function checkAttributeStringCoercion(value, attributeName) {
        if (willCoercionThrow(value)) return console.error("The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before using it here.", attributeName, typeName(value)), testStringCoercion(value);
    }
    function checkCSSPropertyStringCoercion(value, propName) {
        if (willCoercionThrow(value)) return console.error("The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before using it here.", propName, typeName(value)), testStringCoercion(value);
    }
    function checkFormFieldValueStringCoercion(value) {
        if (willCoercionThrow(value)) return console.error("Form field values (value, checked, defaultValue, or defaultChecked props) must be strings, not %s. This value must be coerced to a string before using it here.", typeName(value)), testStringCoercion(value);
    }
    function injectInternals(internals) {
        if ("undefined" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return !1;
        var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
        if (hook.isDisabled) return !0;
        if (!hook.supportsFiber) return console.error("The installed version of React DevTools is too old and will not work with the current version of React. Please update React DevTools. https://react.dev/link/react-devtools"), !0;
        try {
            rendererID = hook.inject(internals), injectedHook = hook;
        } catch (err) {
            console.error("React instrumentation encountered an error: %s.", err);
        }
        return hook.checkDCE ? !0 : !1;
    }
    function setIsStrictModeForDevtools(newIsStrictMode) {
        "function" === typeof log$1 && unstable_setDisableYieldValue(newIsStrictMode);
        if (injectedHook && "function" === typeof injectedHook.setStrictMode) try {
            injectedHook.setStrictMode(rendererID, newIsStrictMode);
        } catch (err) {
            hasLoggedError || (hasLoggedError = !0, console.error("React instrumentation encountered an error: %s", err));
        }
    }
    function injectProfilingHooks(profilingHooks) {
        injectedProfilingHooks = profilingHooks;
    }
    function markCommitStopped() {
        null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markCommitStopped && injectedProfilingHooks.markCommitStopped();
    }
    function markComponentRenderStarted(fiber) {
        null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentRenderStarted && injectedProfilingHooks.markComponentRenderStarted(fiber);
    }
    function markComponentRenderStopped() {
        null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentRenderStopped && injectedProfilingHooks.markComponentRenderStopped();
    }
    function markRenderStarted(lanes) {
        null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markRenderStarted && injectedProfilingHooks.markRenderStarted(lanes);
    }
    function markRenderStopped() {
        null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markRenderStopped && injectedProfilingHooks.markRenderStopped();
    }
    function markStateUpdateScheduled(fiber, lane) {
        null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markStateUpdateScheduled && injectedProfilingHooks.markStateUpdateScheduled(fiber, lane);
    }
    function clz32Fallback(x) {
        x >>>= 0;
        return 0 === x ? 32 : 31 - (log(x) / LN2 | 0) | 0;
    }
    function getLabelForLane(lane) {
        if (lane & 1) return "SyncHydrationLane";
        if (lane & 2) return "Sync";
        if (lane & 4) return "InputContinuousHydration";
        if (lane & 8) return "InputContinuous";
        if (lane & 16) return "DefaultHydration";
        if (lane & 32) return "Default";
        if (lane & 128) return "TransitionHydration";
        if (lane & 4194048) return "Transition";
        if (lane & 62914560) return "Retry";
        if (lane & 67108864) return "SelectiveHydration";
        if (lane & 134217728) return "IdleHydration";
        if (lane & 268435456) return "Idle";
        if (lane & 536870912) return "Offscreen";
        if (lane & 1073741824) return "Deferred";
    }
    function getHighestPriorityLanes(lanes) {
        var pendingSyncLanes = lanes & 42;
        if (0 !== pendingSyncLanes) return pendingSyncLanes;
        switch(lanes & -lanes){
            case 1:
                return 1;
            case 2:
                return 2;
            case 4:
                return 4;
            case 8:
                return 8;
            case 16:
                return 16;
            case 32:
                return 32;
            case 64:
                return 64;
            case 128:
                return 128;
            case 256:
            case 512:
            case 1024:
            case 2048:
            case 4096:
            case 8192:
            case 16384:
            case 32768:
            case 65536:
            case 131072:
            case 262144:
            case 524288:
            case 1048576:
            case 2097152:
                return lanes & 4194048;
            case 4194304:
            case 8388608:
            case 16777216:
            case 33554432:
                return lanes & 62914560;
            case 67108864:
                return 67108864;
            case 134217728:
                return 134217728;
            case 268435456:
                return 268435456;
            case 536870912:
                return 536870912;
            case 1073741824:
                return 0;
            default:
                return console.error("Should have found matching lanes. This is a bug in React."), lanes;
        }
    }
    function getNextLanes(root, wipLanes, rootHasPendingCommit) {
        var pendingLanes = root.pendingLanes;
        if (0 === pendingLanes) return 0;
        var nextLanes = 0, suspendedLanes = root.suspendedLanes, pingedLanes = root.pingedLanes;
        root = root.warmLanes;
        var nonIdlePendingLanes = pendingLanes & 134217727;
        0 !== nonIdlePendingLanes ? (pendingLanes = nonIdlePendingLanes & ~suspendedLanes, 0 !== pendingLanes ? nextLanes = getHighestPriorityLanes(pendingLanes) : (pingedLanes &= nonIdlePendingLanes, 0 !== pingedLanes ? nextLanes = getHighestPriorityLanes(pingedLanes) : rootHasPendingCommit || (rootHasPendingCommit = nonIdlePendingLanes & ~root, 0 !== rootHasPendingCommit && (nextLanes = getHighestPriorityLanes(rootHasPendingCommit))))) : (nonIdlePendingLanes = pendingLanes & ~suspendedLanes, 0 !== nonIdlePendingLanes ? nextLanes = getHighestPriorityLanes(nonIdlePendingLanes) : 0 !== pingedLanes ? nextLanes = getHighestPriorityLanes(pingedLanes) : rootHasPendingCommit || (rootHasPendingCommit = pendingLanes & ~root, 0 !== rootHasPendingCommit && (nextLanes = getHighestPriorityLanes(rootHasPendingCommit))));
        return 0 === nextLanes ? 0 : 0 !== wipLanes && wipLanes !== nextLanes && 0 === (wipLanes & suspendedLanes) && (suspendedLanes = nextLanes & -nextLanes, rootHasPendingCommit = wipLanes & -wipLanes, suspendedLanes >= rootHasPendingCommit || 32 === suspendedLanes && 0 !== (rootHasPendingCommit & 4194048)) ? wipLanes : nextLanes;
    }
    function checkIfRootIsPrerendering(root, renderLanes) {
        return 0 === (root.pendingLanes & ~(root.suspendedLanes & ~root.pingedLanes) & renderLanes);
    }
    function computeExpirationTime(lane, currentTime) {
        switch(lane){
            case 1:
            case 2:
            case 4:
            case 8:
            case 64:
                return currentTime + 250;
            case 16:
            case 32:
            case 128:
            case 256:
            case 512:
            case 1024:
            case 2048:
            case 4096:
            case 8192:
            case 16384:
            case 32768:
            case 65536:
            case 131072:
            case 262144:
            case 524288:
            case 1048576:
            case 2097152:
                return currentTime + 5e3;
            case 4194304:
            case 8388608:
            case 16777216:
            case 33554432:
                return -1;
            case 67108864:
            case 134217728:
            case 268435456:
            case 536870912:
            case 1073741824:
                return -1;
            default:
                return console.error("Should have found matching lanes. This is a bug in React."), -1;
        }
    }
    function claimNextTransitionLane() {
        var lane = nextTransitionLane;
        nextTransitionLane <<= 1;
        0 === (nextTransitionLane & 4194048) && (nextTransitionLane = 256);
        return lane;
    }
    function claimNextRetryLane() {
        var lane = nextRetryLane;
        nextRetryLane <<= 1;
        0 === (nextRetryLane & 62914560) && (nextRetryLane = 4194304);
        return lane;
    }
    function createLaneMap(initial) {
        for(var laneMap = [], i = 0; 31 > i; i++)laneMap.push(initial);
        return laneMap;
    }
    function markRootUpdated$1(root, updateLane) {
        root.pendingLanes |= updateLane;
        268435456 !== updateLane && (root.suspendedLanes = 0, root.pingedLanes = 0, root.warmLanes = 0);
    }
    function markRootFinished(root, finishedLanes, remainingLanes, spawnedLane, updatedLanes, suspendedRetryLanes) {
        var previouslyPendingLanes = root.pendingLanes;
        root.pendingLanes = remainingLanes;
        root.suspendedLanes = 0;
        root.pingedLanes = 0;
        root.warmLanes = 0;
        root.expiredLanes &= remainingLanes;
        root.entangledLanes &= remainingLanes;
        root.errorRecoveryDisabledLanes &= remainingLanes;
        root.shellSuspendCounter = 0;
        var entanglements = root.entanglements, expirationTimes = root.expirationTimes, hiddenUpdates = root.hiddenUpdates;
        for(remainingLanes = previouslyPendingLanes & ~remainingLanes; 0 < remainingLanes;){
            var index = 31 - clz32(remainingLanes), lane = 1 << index;
            entanglements[index] = 0;
            expirationTimes[index] = -1;
            var hiddenUpdatesForLane = hiddenUpdates[index];
            if (null !== hiddenUpdatesForLane) for(hiddenUpdates[index] = null, index = 0; index < hiddenUpdatesForLane.length; index++){
                var update = hiddenUpdatesForLane[index];
                null !== update && (update.lane &= -536870913);
            }
            remainingLanes &= ~lane;
        }
        0 !== spawnedLane && markSpawnedDeferredLane(root, spawnedLane, 0);
        0 !== suspendedRetryLanes && 0 === updatedLanes && 0 !== root.tag && (root.suspendedLanes |= suspendedRetryLanes & ~(previouslyPendingLanes & ~finishedLanes));
    }
    function markSpawnedDeferredLane(root, spawnedLane, entangledLanes) {
        root.pendingLanes |= spawnedLane;
        root.suspendedLanes &= ~spawnedLane;
        var spawnedLaneIndex = 31 - clz32(spawnedLane);
        root.entangledLanes |= spawnedLane;
        root.entanglements[spawnedLaneIndex] = root.entanglements[spawnedLaneIndex] | 1073741824 | entangledLanes & 4194090;
    }
    function markRootEntangled(root, entangledLanes) {
        var rootEntangledLanes = root.entangledLanes |= entangledLanes;
        for(root = root.entanglements; rootEntangledLanes;){
            var index = 31 - clz32(rootEntangledLanes), lane = 1 << index;
            lane & entangledLanes | root[index] & entangledLanes && (root[index] |= entangledLanes);
            rootEntangledLanes &= ~lane;
        }
    }
    function getBumpedLaneForHydrationByLane(lane) {
        switch(lane){
            case 2:
                lane = 1;
                break;
            case 8:
                lane = 4;
                break;
            case 32:
                lane = 16;
                break;
            case 256:
            case 512:
            case 1024:
            case 2048:
            case 4096:
            case 8192:
            case 16384:
            case 32768:
            case 65536:
            case 131072:
            case 262144:
            case 524288:
            case 1048576:
            case 2097152:
            case 4194304:
            case 8388608:
            case 16777216:
            case 33554432:
                lane = 128;
                break;
            case 268435456:
                lane = 134217728;
                break;
            default:
                lane = 0;
        }
        return lane;
    }
    function addFiberToLanesMap(root, fiber, lanes) {
        if (isDevToolsPresent) for(root = root.pendingUpdatersLaneMap; 0 < lanes;){
            var index = 31 - clz32(lanes), lane = 1 << index;
            root[index].add(fiber);
            lanes &= ~lane;
        }
    }
    function movePendingFibersToMemoized(root, lanes) {
        if (isDevToolsPresent) for(var pendingUpdatersLaneMap = root.pendingUpdatersLaneMap, memoizedUpdaters = root.memoizedUpdaters; 0 < lanes;){
            var index = 31 - clz32(lanes);
            root = 1 << index;
            index = pendingUpdatersLaneMap[index];
            0 < index.size && (index.forEach(function(fiber) {
                var alternate = fiber.alternate;
                null !== alternate && memoizedUpdaters.has(alternate) || memoizedUpdaters.add(fiber);
            }), index.clear());
            lanes &= ~root;
        }
    }
    function lanesToEventPriority(lanes) {
        lanes &= -lanes;
        return 0 !== DiscreteEventPriority && DiscreteEventPriority < lanes ? 0 !== ContinuousEventPriority && ContinuousEventPriority < lanes ? 0 !== (lanes & 134217727) ? DefaultEventPriority : IdleEventPriority : ContinuousEventPriority : DiscreteEventPriority;
    }
    function resolveUpdatePriority() {
        var updatePriority = ReactDOMSharedInternals.p;
        if (0 !== updatePriority) return updatePriority;
        updatePriority = window.event;
        return void 0 === updatePriority ? DefaultEventPriority : getEventPriority(updatePriority.type);
    }
    function runWithPriority(priority, fn) {
        var previousPriority = ReactDOMSharedInternals.p;
        try {
            return ReactDOMSharedInternals.p = priority, fn();
        } finally{
            ReactDOMSharedInternals.p = previousPriority;
        }
    }
    function detachDeletedInstance(node) {
        delete node[internalInstanceKey];
        delete node[internalPropsKey];
        delete node[internalEventHandlersKey];
        delete node[internalEventHandlerListenersKey];
        delete node[internalEventHandlesSetKey];
    }
    function getClosestInstanceFromNode(targetNode) {
        var targetInst = targetNode[internalInstanceKey];
        if (targetInst) return targetInst;
        for(var parentNode = targetNode.parentNode; parentNode;){
            if (targetInst = parentNode[internalContainerInstanceKey] || parentNode[internalInstanceKey]) {
                parentNode = targetInst.alternate;
                if (null !== targetInst.child || null !== parentNode && null !== parentNode.child) for(targetNode = getParentSuspenseInstance(targetNode); null !== targetNode;){
                    if (parentNode = targetNode[internalInstanceKey]) return parentNode;
                    targetNode = getParentSuspenseInstance(targetNode);
                }
                return targetInst;
            }
            targetNode = parentNode;
            parentNode = targetNode.parentNode;
        }
        return null;
    }
    function getInstanceFromNode(node) {
        if (node = node[internalInstanceKey] || node[internalContainerInstanceKey]) {
            var tag = node.tag;
            if (5 === tag || 6 === tag || 13 === tag || 26 === tag || 27 === tag || 3 === tag) return node;
        }
        return null;
    }
    function getNodeFromInstance(inst) {
        var tag = inst.tag;
        if (5 === tag || 26 === tag || 27 === tag || 6 === tag) return inst.stateNode;
        throw Error("getNodeFromInstance: Invalid argument.");
    }
    function getResourcesFromRoot(root) {
        var resources = root[internalRootNodeResourcesKey];
        resources || (resources = root[internalRootNodeResourcesKey] = {
            hoistableStyles: new Map(),
            hoistableScripts: new Map()
        });
        return resources;
    }
    function markNodeAsHoistable(node) {
        node[internalHoistableMarker] = !0;
    }
    function registerTwoPhaseEvent(registrationName, dependencies) {
        registerDirectEvent(registrationName, dependencies);
        registerDirectEvent(registrationName + "Capture", dependencies);
    }
    function registerDirectEvent(registrationName, dependencies) {
        registrationNameDependencies[registrationName] && console.error("EventRegistry: More than one plugin attempted to publish the same registration name, `%s`.", registrationName);
        registrationNameDependencies[registrationName] = dependencies;
        var lowerCasedName = registrationName.toLowerCase();
        possibleRegistrationNames[lowerCasedName] = registrationName;
        "onDoubleClick" === registrationName && (possibleRegistrationNames.ondblclick = registrationName);
        for(registrationName = 0; registrationName < dependencies.length; registrationName++)allNativeEvents.add(dependencies[registrationName]);
    }
    function checkControlledValueProps(tagName, props) {
        hasReadOnlyValue[props.type] || props.onChange || props.onInput || props.readOnly || props.disabled || null == props.value || ("select" === tagName ? console.error("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set `onChange`.") : console.error("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`."));
        props.onChange || props.readOnly || props.disabled || null == props.checked || console.error("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.");
    }
    function isAttributeNameSafe(attributeName) {
        if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) return !0;
        if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) return !1;
        if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) return validatedAttributeNameCache[attributeName] = !0;
        illegalAttributeNameCache[attributeName] = !0;
        console.error("Invalid attribute name: `%s`", attributeName);
        return !1;
    }
    function getValueForAttributeOnCustomComponent(node, name, expected) {
        if (isAttributeNameSafe(name)) {
            if (!node.hasAttribute(name)) {
                switch(typeof expected){
                    case "symbol":
                    case "object":
                        return expected;
                    case "function":
                        return expected;
                    case "boolean":
                        if (!1 === expected) return expected;
                }
                return void 0 === expected ? void 0 : null;
            }
            node = node.getAttribute(name);
            if ("" === node && !0 === expected) return !0;
            checkAttributeStringCoercion(expected, name);
            return node === "" + expected ? expected : node;
        }
    }
    function setValueForAttribute(node, name, value) {
        if (isAttributeNameSafe(name)) {
            if (null === value) node.removeAttribute(name);
            else {
                switch(typeof value){
                    case "undefined":
                    case "function":
                    case "symbol":
                        node.removeAttribute(name);
                        return;
                    case "boolean":
                        var prefix = name.toLowerCase().slice(0, 5);
                        if ("data-" !== prefix && "aria-" !== prefix) {
                            node.removeAttribute(name);
                            return;
                        }
                }
                checkAttributeStringCoercion(value, name);
                node.setAttribute(name, "" + value);
            }
        }
    }
    function setValueForKnownAttribute(node, name, value) {
        if (null === value) node.removeAttribute(name);
        else {
            switch(typeof value){
                case "undefined":
                case "function":
                case "symbol":
                case "boolean":
                    node.removeAttribute(name);
                    return;
            }
            checkAttributeStringCoercion(value, name);
            node.setAttribute(name, "" + value);
        }
    }
    function setValueForNamespacedAttribute(node, namespace, name, value) {
        if (null === value) node.removeAttribute(name);
        else {
            switch(typeof value){
                case "undefined":
                case "function":
                case "symbol":
                case "boolean":
                    node.removeAttribute(name);
                    return;
            }
            checkAttributeStringCoercion(value, name);
            node.setAttributeNS(namespace, name, "" + value);
        }
    }
    function disabledLog() {}
    function disableLogs() {
        if (0 === disabledDepth) {
            prevLog = console.log;
            prevInfo = console.info;
            prevWarn = console.warn;
            prevError = console.error;
            prevGroup = console.group;
            prevGroupCollapsed = console.groupCollapsed;
            prevGroupEnd = console.groupEnd;
            var props = {
                configurable: !0,
                enumerable: !0,
                value: disabledLog,
                writable: !0
            };
            Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
            });
        }
        disabledDepth++;
    }
    function reenableLogs() {
        disabledDepth--;
        if (0 === disabledDepth) {
            var props = {
                configurable: !0,
                enumerable: !0,
                writable: !0
            };
            Object.defineProperties(console, {
                log: assign({}, props, {
                    value: prevLog
                }),
                info: assign({}, props, {
                    value: prevInfo
                }),
                warn: assign({}, props, {
                    value: prevWarn
                }),
                error: assign({}, props, {
                    value: prevError
                }),
                group: assign({}, props, {
                    value: prevGroup
                }),
                groupCollapsed: assign({}, props, {
                    value: prevGroupCollapsed
                }),
                groupEnd: assign({}, props, {
                    value: prevGroupEnd
                })
            });
        }
        0 > disabledDepth && console.error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
    }
    function describeBuiltInComponentFrame(name) {
        if (void 0 === prefix) try {
            throw Error();
        } catch (x) {
            var match = x.stack.trim().match(/\n( *(at )?)/);
            prefix = match && match[1] || "";
            suffix = -1 < x.stack.indexOf("\n    at") ? " (<anonymous>)" : -1 < x.stack.indexOf("@") ? "@unknown:0:0" : "";
        }
        return "\n" + prefix + name + suffix;
    }
    function describeNativeComponentFrame(fn, construct) {
        if (!fn || reentry) return "";
        var frame = componentFrameCache.get(fn);
        if (void 0 !== frame) return frame;
        reentry = !0;
        frame = Error.prepareStackTrace;
        Error.prepareStackTrace = void 0;
        var previousDispatcher = null;
        previousDispatcher = ReactSharedInternals.H;
        ReactSharedInternals.H = null;
        disableLogs();
        try {
            var RunInRootFrame = {
                DetermineComponentFrameRoot: function() {
                    try {
                        if (construct) {
                            var Fake = function() {
                                throw Error();
                            };
                            Object.defineProperty(Fake.prototype, "props", {
                                set: function() {
                                    throw Error();
                                }
                            });
                            if ("object" === typeof Reflect && Reflect.construct) {
                                try {
                                    Reflect.construct(Fake, []);
                                } catch (x) {
                                    var control = x;
                                }
                                Reflect.construct(fn, [], Fake);
                            } else {
                                try {
                                    Fake.call();
                                } catch (x$0) {
                                    control = x$0;
                                }
                                fn.call(Fake.prototype);
                            }
                        } else {
                            try {
                                throw Error();
                            } catch (x$1) {
                                control = x$1;
                            }
                            (Fake = fn()) && "function" === typeof Fake.catch && Fake.catch(function() {});
                        }
                    } catch (sample) {
                        if (sample && control && "string" === typeof sample.stack) return [
                            sample.stack,
                            control.stack
                        ];
                    }
                    return [
                        null,
                        null
                    ];
                }
            };
            RunInRootFrame.DetermineComponentFrameRoot.displayName = "DetermineComponentFrameRoot";
            var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, "name");
            namePropDescriptor && namePropDescriptor.configurable && Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, "name", {
                value: "DetermineComponentFrameRoot"
            });
            var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(), sampleStack = _RunInRootFrame$Deter[0], controlStack = _RunInRootFrame$Deter[1];
            if (sampleStack && controlStack) {
                var sampleLines = sampleStack.split("\n"), controlLines = controlStack.split("\n");
                for(_RunInRootFrame$Deter = namePropDescriptor = 0; namePropDescriptor < sampleLines.length && !sampleLines[namePropDescriptor].includes("DetermineComponentFrameRoot");)namePropDescriptor++;
                for(; _RunInRootFrame$Deter < controlLines.length && !controlLines[_RunInRootFrame$Deter].includes("DetermineComponentFrameRoot");)_RunInRootFrame$Deter++;
                if (namePropDescriptor === sampleLines.length || _RunInRootFrame$Deter === controlLines.length) for(namePropDescriptor = sampleLines.length - 1, _RunInRootFrame$Deter = controlLines.length - 1; 1 <= namePropDescriptor && 0 <= _RunInRootFrame$Deter && sampleLines[namePropDescriptor] !== controlLines[_RunInRootFrame$Deter];)_RunInRootFrame$Deter--;
                for(; 1 <= namePropDescriptor && 0 <= _RunInRootFrame$Deter; namePropDescriptor--, _RunInRootFrame$Deter--)if (sampleLines[namePropDescriptor] !== controlLines[_RunInRootFrame$Deter]) {
                    if (1 !== namePropDescriptor || 1 !== _RunInRootFrame$Deter) {
                        do if (namePropDescriptor--, _RunInRootFrame$Deter--, 0 > _RunInRootFrame$Deter || sampleLines[namePropDescriptor] !== controlLines[_RunInRootFrame$Deter]) {
                            var _frame = "\n" + sampleLines[namePropDescriptor].replace(" at new ", " at ");
                            fn.displayName && _frame.includes("<anonymous>") && (_frame = _frame.replace("<anonymous>", fn.displayName));
                            "function" === typeof fn && componentFrameCache.set(fn, _frame);
                            return _frame;
                        }
                        while (1 <= namePropDescriptor && 0 <= _RunInRootFrame$Deter);
                    }
                    break;
                }
            }
        } finally{
            reentry = !1, ReactSharedInternals.H = previousDispatcher, reenableLogs(), Error.prepareStackTrace = frame;
        }
        sampleLines = (sampleLines = fn ? fn.displayName || fn.name : "") ? describeBuiltInComponentFrame(sampleLines) : "";
        "function" === typeof fn && componentFrameCache.set(fn, sampleLines);
        return sampleLines;
    }
    function formatOwnerStack(error) {
        var prevPrepareStackTrace = Error.prepareStackTrace;
        Error.prepareStackTrace = void 0;
        error = error.stack;
        Error.prepareStackTrace = prevPrepareStackTrace;
        error.startsWith("Error: react-stack-top-frame\n") && (error = error.slice(29));
        prevPrepareStackTrace = error.indexOf("\n");
        -1 !== prevPrepareStackTrace && (error = error.slice(prevPrepareStackTrace + 1));
        prevPrepareStackTrace = error.indexOf("react_stack_bottom_frame");
        -1 !== prevPrepareStackTrace && (prevPrepareStackTrace = error.lastIndexOf("\n", prevPrepareStackTrace));
        if (-1 !== prevPrepareStackTrace) error = error.slice(0, prevPrepareStackTrace);
        else return "";
        return error;
    }
    function describeFiber(fiber) {
        switch(fiber.tag){
            case 26:
            case 27:
            case 5:
                return describeBuiltInComponentFrame(fiber.type);
            case 16:
                return describeBuiltInComponentFrame("Lazy");
            case 13:
                return describeBuiltInComponentFrame("Suspense");
            case 19:
                return describeBuiltInComponentFrame("SuspenseList");
            case 0:
            case 15:
                return describeNativeComponentFrame(fiber.type, !1);
            case 11:
                return describeNativeComponentFrame(fiber.type.render, !1);
            case 1:
                return describeNativeComponentFrame(fiber.type, !0);
            case 31:
                return describeBuiltInComponentFrame("Activity");
            default:
                return "";
        }
    }
    function getStackByFiberInDevAndProd(workInProgress) {
        try {
            var info = "";
            do {
                info += describeFiber(workInProgress);
                var debugInfo = workInProgress._debugInfo;
                if (debugInfo) for(var i = debugInfo.length - 1; 0 <= i; i--){
                    var entry = debugInfo[i];
                    if ("string" === typeof entry.name) {
                        var JSCompiler_temp_const = info, env = entry.env;
                        var JSCompiler_inline_result = describeBuiltInComponentFrame(entry.name + (env ? " [" + env + "]" : ""));
                        info = JSCompiler_temp_const + JSCompiler_inline_result;
                    }
                }
                workInProgress = workInProgress.return;
            }while (workInProgress);
            return info;
        } catch (x) {
            return "\nError generating stack: " + x.message + "\n" + x.stack;
        }
    }
    function describeFunctionComponentFrameWithoutLineNumber(fn) {
        return (fn = fn ? fn.displayName || fn.name : "") ? describeBuiltInComponentFrame(fn) : "";
    }
    function getCurrentFiberOwnerNameInDevOrNull() {
        if (null === current) return null;
        var owner = current._debugOwner;
        return null != owner ? getComponentNameFromOwner(owner) : null;
    }
    function getCurrentFiberStackInDev() {
        if (null === current) return "";
        var workInProgress = current;
        try {
            var info = "";
            6 === workInProgress.tag && (workInProgress = workInProgress.return);
            switch(workInProgress.tag){
                case 26:
                case 27:
                case 5:
                    info += describeBuiltInComponentFrame(workInProgress.type);
                    break;
                case 13:
                    info += describeBuiltInComponentFrame("Suspense");
                    break;
                case 19:
                    info += describeBuiltInComponentFrame("SuspenseList");
                    break;
                case 31:
                    info += describeBuiltInComponentFrame("Activity");
                    break;
                case 30:
                case 0:
                case 15:
                case 1:
                    workInProgress._debugOwner || "" !== info || (info += describeFunctionComponentFrameWithoutLineNumber(workInProgress.type));
                    break;
                case 11:
                    workInProgress._debugOwner || "" !== info || (info += describeFunctionComponentFrameWithoutLineNumber(workInProgress.type.render));
            }
            for(; workInProgress;)if ("number" === typeof workInProgress.tag) {
                var fiber = workInProgress;
                workInProgress = fiber._debugOwner;
                var debugStack = fiber._debugStack;
                workInProgress && debugStack && ("string" !== typeof debugStack && (fiber._debugStack = debugStack = formatOwnerStack(debugStack)), "" !== debugStack && (info += "\n" + debugStack));
            } else if (null != workInProgress.debugStack) {
                var ownerStack = workInProgress.debugStack;
                (workInProgress = workInProgress.owner) && ownerStack && (info += "\n" + formatOwnerStack(ownerStack));
            } else break;
            var JSCompiler_inline_result = info;
        } catch (x) {
            JSCompiler_inline_result = "\nError generating stack: " + x.message + "\n" + x.stack;
        }
        return JSCompiler_inline_result;
    }
    function runWithFiberInDEV(fiber, callback, arg0, arg1, arg2, arg3, arg4) {
        var previousFiber = current;
        setCurrentFiber(fiber);
        try {
            return null !== fiber && fiber._debugTask ? fiber._debugTask.run(callback.bind(null, arg0, arg1, arg2, arg3, arg4)) : callback(arg0, arg1, arg2, arg3, arg4);
        } finally{
            setCurrentFiber(previousFiber);
        }
        throw Error("runWithFiberInDEV should never be called in production. This is a bug in React.");
    }
    function setCurrentFiber(fiber) {
        ReactSharedInternals.getCurrentStack = null === fiber ? null : getCurrentFiberStackInDev;
        isRendering = !1;
        current = fiber;
    }
    function getToStringValue(value) {
        switch(typeof value){
            case "bigint":
            case "boolean":
            case "number":
            case "string":
            case "undefined":
                return value;
            case "object":
                return checkFormFieldValueStringCoercion(value), value;
            default:
                return "";
        }
    }
    function isCheckable(elem) {
        var type = elem.type;
        return (elem = elem.nodeName) && "input" === elem.toLowerCase() && ("checkbox" === type || "radio" === type);
    }
    function trackValueOnNode(node) {
        var valueField = isCheckable(node) ? "checked" : "value", descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);
        checkFormFieldValueStringCoercion(node[valueField]);
        var currentValue = "" + node[valueField];
        if (!node.hasOwnProperty(valueField) && "undefined" !== typeof descriptor && "function" === typeof descriptor.get && "function" === typeof descriptor.set) {
            var get = descriptor.get, set = descriptor.set;
            Object.defineProperty(node, valueField, {
                configurable: !0,
                get: function() {
                    return get.call(this);
                },
                set: function(value) {
                    checkFormFieldValueStringCoercion(value);
                    currentValue = "" + value;
                    set.call(this, value);
                }
            });
            Object.defineProperty(node, valueField, {
                enumerable: descriptor.enumerable
            });
            return {
                getValue: function() {
                    return currentValue;
                },
                setValue: function(value) {
                    checkFormFieldValueStringCoercion(value);
                    currentValue = "" + value;
                },
                stopTracking: function() {
                    node._valueTracker = null;
                    delete node[valueField];
                }
            };
        }
    }
    function track(node) {
        node._valueTracker || (node._valueTracker = trackValueOnNode(node));
    }
    function updateValueIfChanged(node) {
        if (!node) return !1;
        var tracker = node._valueTracker;
        if (!tracker) return !0;
        var lastValue = tracker.getValue();
        var value = "";
        node && (value = isCheckable(node) ? node.checked ? "true" : "false" : node.value);
        node = value;
        return node !== lastValue ? (tracker.setValue(node), !0) : !1;
    }
    function getActiveElement(doc) {
        doc = doc || ("undefined" !== typeof document ? document : void 0);
        if ("undefined" === typeof doc) return null;
        try {
            return doc.activeElement || doc.body;
        } catch (e) {
            return doc.body;
        }
    }
    function escapeSelectorAttributeValueInsideDoubleQuotes(value) {
        return value.replace(escapeSelectorAttributeValueInsideDoubleQuotesRegex, function(ch) {
            return "\\" + ch.charCodeAt(0).toString(16) + " ";
        });
    }
    function validateInputProps(element, props) {
        void 0 === props.checked || void 0 === props.defaultChecked || didWarnCheckedDefaultChecked || (console.error("%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://react.dev/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component", props.type), didWarnCheckedDefaultChecked = !0);
        void 0 === props.value || void 0 === props.defaultValue || didWarnValueDefaultValue$1 || (console.error("%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://react.dev/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component", props.type), didWarnValueDefaultValue$1 = !0);
    }
    function updateInput(element, value, defaultValue, lastDefaultValue, checked, defaultChecked, type, name) {
        element.name = "";
        null != type && "function" !== typeof type && "symbol" !== typeof type && "boolean" !== typeof type ? (checkAttributeStringCoercion(type, "type"), element.type = type) : element.removeAttribute("type");
        if (null != value) {
            if ("number" === type) {
                if (0 === value && "" === element.value || element.value != value) element.value = "" + getToStringValue(value);
            } else element.value !== "" + getToStringValue(value) && (element.value = "" + getToStringValue(value));
        } else "submit" !== type && "reset" !== type || element.removeAttribute("value");
        null != value ? setDefaultValue(element, type, getToStringValue(value)) : null != defaultValue ? setDefaultValue(element, type, getToStringValue(defaultValue)) : null != lastDefaultValue && element.removeAttribute("value");
        null == checked && null != defaultChecked && (element.defaultChecked = !!defaultChecked);
        null != checked && (element.checked = checked && "function" !== typeof checked && "symbol" !== typeof checked);
        null != name && "function" !== typeof name && "symbol" !== typeof name && "boolean" !== typeof name ? (checkAttributeStringCoercion(name, "name"), element.name = "" + getToStringValue(name)) : element.removeAttribute("name");
    }
    function initInput(element, value, defaultValue, checked, defaultChecked, type, name, isHydrating) {
        null != type && "function" !== typeof type && "symbol" !== typeof type && "boolean" !== typeof type && (checkAttributeStringCoercion(type, "type"), element.type = type);
        if (null != value || null != defaultValue) {
            if (!("submit" !== type && "reset" !== type || void 0 !== value && null !== value)) return;
            defaultValue = null != defaultValue ? "" + getToStringValue(defaultValue) : "";
            value = null != value ? "" + getToStringValue(value) : defaultValue;
            isHydrating || value === element.value || (element.value = value);
            element.defaultValue = value;
        }
        checked = null != checked ? checked : defaultChecked;
        checked = "function" !== typeof checked && "symbol" !== typeof checked && !!checked;
        element.checked = isHydrating ? element.checked : !!checked;
        element.defaultChecked = !!checked;
        null != name && "function" !== typeof name && "symbol" !== typeof name && "boolean" !== typeof name && (checkAttributeStringCoercion(name, "name"), element.name = name);
    }
    function setDefaultValue(node, type, value) {
        "number" === type && getActiveElement(node.ownerDocument) === node || node.defaultValue === "" + value || (node.defaultValue = "" + value);
    }
    function validateOptionProps(element, props) {
        null == props.value && ("object" === typeof props.children && null !== props.children ? React.Children.forEach(props.children, function(child) {
            null == child || "string" === typeof child || "number" === typeof child || "bigint" === typeof child || didWarnInvalidChild || (didWarnInvalidChild = !0, console.error("Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>."));
        }) : null == props.dangerouslySetInnerHTML || didWarnInvalidInnerHTML || (didWarnInvalidInnerHTML = !0, console.error("Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected.")));
        null == props.selected || didWarnSelectedSetOnOption || (console.error("Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>."), didWarnSelectedSetOnOption = !0);
    }
    function getDeclarationErrorAddendum() {
        var ownerName = getCurrentFiberOwnerNameInDevOrNull();
        return ownerName ? "\n\nCheck the render method of `" + ownerName + "`." : "";
    }
    function updateOptions(node, multiple, propValue, setDefaultSelected) {
        node = node.options;
        if (multiple) {
            multiple = {};
            for(var i = 0; i < propValue.length; i++)multiple["$" + propValue[i]] = !0;
            for(propValue = 0; propValue < node.length; propValue++)i = multiple.hasOwnProperty("$" + node[propValue].value), node[propValue].selected !== i && (node[propValue].selected = i), i && setDefaultSelected && (node[propValue].defaultSelected = !0);
        } else {
            propValue = "" + getToStringValue(propValue);
            multiple = null;
            for(i = 0; i < node.length; i++){
                if (node[i].value === propValue) {
                    node[i].selected = !0;
                    setDefaultSelected && (node[i].defaultSelected = !0);
                    return;
                }
                null !== multiple || node[i].disabled || (multiple = node[i]);
            }
            null !== multiple && (multiple.selected = !0);
        }
    }
    function validateSelectProps(element, props) {
        for(element = 0; element < valuePropNames.length; element++){
            var propName = valuePropNames[element];
            if (null != props[propName]) {
                var propNameIsArray = isArrayImpl(props[propName]);
                props.multiple && !propNameIsArray ? console.error("The `%s` prop supplied to <select> must be an array if `multiple` is true.%s", propName, getDeclarationErrorAddendum()) : !props.multiple && propNameIsArray && console.error("The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.%s", propName, getDeclarationErrorAddendum());
            }
        }
        void 0 === props.value || void 0 === props.defaultValue || didWarnValueDefaultValue || (console.error("Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://react.dev/link/controlled-components"), didWarnValueDefaultValue = !0);
    }
    function validateTextareaProps(element, props) {
        void 0 === props.value || void 0 === props.defaultValue || didWarnValDefaultVal || (console.error("%s contains a textarea with both value and defaultValue props. Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://react.dev/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component"), didWarnValDefaultVal = !0);
        null != props.children && null == props.value && console.error("Use the `defaultValue` or `value` props instead of setting children on <textarea>.");
    }
    function updateTextarea(element, value, defaultValue) {
        if (null != value && (value = "" + getToStringValue(value), value !== element.value && (element.value = value), null == defaultValue)) {
            element.defaultValue !== value && (element.defaultValue = value);
            return;
        }
        element.defaultValue = null != defaultValue ? "" + getToStringValue(defaultValue) : "";
    }
    function initTextarea(element, value, defaultValue, children) {
        if (null == value) {
            if (null != children) {
                if (null != defaultValue) throw Error("If you supply `defaultValue` on a <textarea>, do not pass children.");
                if (isArrayImpl(children)) {
                    if (1 < children.length) throw Error("<textarea> can only have at most one child.");
                    children = children[0];
                }
                defaultValue = children;
            }
            null == defaultValue && (defaultValue = "");
            value = defaultValue;
        }
        defaultValue = getToStringValue(value);
        element.defaultValue = defaultValue;
        children = element.textContent;
        children === defaultValue && "" !== children && null !== children && (element.value = children);
    }
    function findNotableNode(node, indent) {
        return void 0 === node.serverProps && 0 === node.serverTail.length && 1 === node.children.length && 3 < node.distanceFromLeaf && node.distanceFromLeaf > 15 - indent ? findNotableNode(node.children[0], indent) : node;
    }
    function indentation(indent) {
        return "  " + "  ".repeat(indent);
    }
    function added(indent) {
        return "+ " + "  ".repeat(indent);
    }
    function removed(indent) {
        return "- " + "  ".repeat(indent);
    }
    function describeFiberType(fiber) {
        switch(fiber.tag){
            case 26:
            case 27:
            case 5:
                return fiber.type;
            case 16:
                return "Lazy";
            case 13:
                return "Suspense";
            case 19:
                return "SuspenseList";
            case 0:
            case 15:
                return fiber = fiber.type, fiber.displayName || fiber.name || null;
            case 11:
                return fiber = fiber.type.render, fiber.displayName || fiber.name || null;
            case 1:
                return fiber = fiber.type, fiber.displayName || fiber.name || null;
            default:
                return null;
        }
    }
    function describeTextNode(content, maxLength) {
        return needsEscaping.test(content) ? (content = JSON.stringify(content), content.length > maxLength - 2 ? 8 > maxLength ? '{"..."}' : "{" + content.slice(0, maxLength - 7) + '..."}' : "{" + content + "}") : content.length > maxLength ? 5 > maxLength ? '{"..."}' : content.slice(0, maxLength - 3) + "..." : content;
    }
    function describeTextDiff(clientText, serverProps, indent) {
        var maxLength = 120 - 2 * indent;
        if (null === serverProps) return added(indent) + describeTextNode(clientText, maxLength) + "\n";
        if ("string" === typeof serverProps) {
            for(var firstDiff = 0; firstDiff < serverProps.length && firstDiff < clientText.length && serverProps.charCodeAt(firstDiff) === clientText.charCodeAt(firstDiff); firstDiff++);
            firstDiff > maxLength - 8 && 10 < firstDiff && (clientText = "..." + clientText.slice(firstDiff - 8), serverProps = "..." + serverProps.slice(firstDiff - 8));
            return added(indent) + describeTextNode(clientText, maxLength) + "\n" + removed(indent) + describeTextNode(serverProps, maxLength) + "\n";
        }
        return indentation(indent) + describeTextNode(clientText, maxLength) + "\n";
    }
    function objectName(object) {
        return Object.prototype.toString.call(object).replace(/^\[object (.*)\]$/, function(m, p0) {
            return p0;
        });
    }
    function describeValue(value, maxLength) {
        switch(typeof value){
            case "string":
                return value = JSON.stringify(value), value.length > maxLength ? 5 > maxLength ? '"..."' : value.slice(0, maxLength - 4) + '..."' : value;
            case "object":
                if (null === value) return "null";
                if (isArrayImpl(value)) return "[...]";
                if (value.$$typeof === REACT_ELEMENT_TYPE) return (maxLength = getComponentNameFromType(value.type)) ? "<" + maxLength + ">" : "<...>";
                var name = objectName(value);
                if ("Object" === name) {
                    name = "";
                    maxLength -= 2;
                    for(var propName in value)if (value.hasOwnProperty(propName)) {
                        var jsonPropName = JSON.stringify(propName);
                        jsonPropName !== '"' + propName + '"' && (propName = jsonPropName);
                        maxLength -= propName.length - 2;
                        jsonPropName = describeValue(value[propName], 15 > maxLength ? maxLength : 15);
                        maxLength -= jsonPropName.length;
                        if (0 > maxLength) {
                            name += "" === name ? "..." : ", ...";
                            break;
                        }
                        name += ("" === name ? "" : ",") + propName + ":" + jsonPropName;
                    }
                    return "{" + name + "}";
                }
                return name;
            case "function":
                return (maxLength = value.displayName || value.name) ? "function " + maxLength : "function";
            default:
                return String(value);
        }
    }
    function describePropValue(value, maxLength) {
        return "string" !== typeof value || needsEscaping.test(value) ? "{" + describeValue(value, maxLength - 2) + "}" : value.length > maxLength - 2 ? 5 > maxLength ? '"..."' : '"' + value.slice(0, maxLength - 5) + '..."' : '"' + value + '"';
    }
    function describeExpandedElement(type, props, rowPrefix) {
        var remainingRowLength = 120 - rowPrefix.length - type.length, properties = [], propName;
        for(propName in props)if (props.hasOwnProperty(propName) && "children" !== propName) {
            var propValue = describePropValue(props[propName], 120 - rowPrefix.length - propName.length - 1);
            remainingRowLength -= propName.length + propValue.length + 2;
            properties.push(propName + "=" + propValue);
        }
        return 0 === properties.length ? rowPrefix + "<" + type + ">\n" : 0 < remainingRowLength ? rowPrefix + "<" + type + " " + properties.join(" ") + ">\n" : rowPrefix + "<" + type + "\n" + rowPrefix + "  " + properties.join("\n" + rowPrefix + "  ") + "\n" + rowPrefix + ">\n";
    }
    function describePropertiesDiff(clientObject, serverObject, indent) {
        var properties = "", remainingServerProperties = assign({}, serverObject), propName;
        for(propName in clientObject)if (clientObject.hasOwnProperty(propName)) {
            delete remainingServerProperties[propName];
            var maxLength = 120 - 2 * indent - propName.length - 2, clientPropValue = describeValue(clientObject[propName], maxLength);
            serverObject.hasOwnProperty(propName) ? (maxLength = describeValue(serverObject[propName], maxLength), properties += added(indent) + propName + ": " + clientPropValue + "\n", properties += removed(indent) + propName + ": " + maxLength + "\n") : properties += added(indent) + propName + ": " + clientPropValue + "\n";
        }
        for(var _propName in remainingServerProperties)remainingServerProperties.hasOwnProperty(_propName) && (clientObject = describeValue(remainingServerProperties[_propName], 120 - 2 * indent - _propName.length - 2), properties += removed(indent) + _propName + ": " + clientObject + "\n");
        return properties;
    }
    function describeElementDiff(type, clientProps, serverProps, indent) {
        var content = "", serverPropNames = new Map();
        for(propName$jscomp$0 in serverProps)serverProps.hasOwnProperty(propName$jscomp$0) && serverPropNames.set(propName$jscomp$0.toLowerCase(), propName$jscomp$0);
        if (1 === serverPropNames.size && serverPropNames.has("children")) content += describeExpandedElement(type, clientProps, indentation(indent));
        else {
            for(var _propName2 in clientProps)if (clientProps.hasOwnProperty(_propName2) && "children" !== _propName2) {
                var maxLength$jscomp$0 = 120 - 2 * (indent + 1) - _propName2.length - 1, serverPropName = serverPropNames.get(_propName2.toLowerCase());
                if (void 0 !== serverPropName) {
                    serverPropNames.delete(_propName2.toLowerCase());
                    var propName$jscomp$0 = clientProps[_propName2];
                    serverPropName = serverProps[serverPropName];
                    var clientPropValue = describePropValue(propName$jscomp$0, maxLength$jscomp$0);
                    maxLength$jscomp$0 = describePropValue(serverPropName, maxLength$jscomp$0);
                    "object" === typeof propName$jscomp$0 && null !== propName$jscomp$0 && "object" === typeof serverPropName && null !== serverPropName && "Object" === objectName(propName$jscomp$0) && "Object" === objectName(serverPropName) && (2 < Object.keys(propName$jscomp$0).length || 2 < Object.keys(serverPropName).length || -1 < clientPropValue.indexOf("...") || -1 < maxLength$jscomp$0.indexOf("...")) ? content += indentation(indent + 1) + _propName2 + "={{\n" + describePropertiesDiff(propName$jscomp$0, serverPropName, indent + 2) + indentation(indent + 1) + "}}\n" : (content += added(indent + 1) + _propName2 + "=" + clientPropValue + "\n", content += removed(indent + 1) + _propName2 + "=" + maxLength$jscomp$0 + "\n");
                } else content += indentation(indent + 1) + _propName2 + "=" + describePropValue(clientProps[_propName2], maxLength$jscomp$0) + "\n";
            }
            serverPropNames.forEach(function(propName) {
                if ("children" !== propName) {
                    var maxLength = 120 - 2 * (indent + 1) - propName.length - 1;
                    content += removed(indent + 1) + propName + "=" + describePropValue(serverProps[propName], maxLength) + "\n";
                }
            });
            content = "" === content ? indentation(indent) + "<" + type + ">\n" : indentation(indent) + "<" + type + "\n" + content + indentation(indent) + ">\n";
        }
        type = serverProps.children;
        clientProps = clientProps.children;
        if ("string" === typeof type || "number" === typeof type || "bigint" === typeof type) {
            serverPropNames = "";
            if ("string" === typeof clientProps || "number" === typeof clientProps || "bigint" === typeof clientProps) serverPropNames = "" + clientProps;
            content += describeTextDiff(serverPropNames, "" + type, indent + 1);
        } else if ("string" === typeof clientProps || "number" === typeof clientProps || "bigint" === typeof clientProps) content = null == type ? content + describeTextDiff("" + clientProps, null, indent + 1) : content + describeTextDiff("" + clientProps, void 0, indent + 1);
        return content;
    }
    function describeSiblingFiber(fiber, indent) {
        var type = describeFiberType(fiber);
        if (null === type) {
            type = "";
            for(fiber = fiber.child; fiber;)type += describeSiblingFiber(fiber, indent), fiber = fiber.sibling;
            return type;
        }
        return indentation(indent) + "<" + type + ">\n";
    }
    function describeNode(node, indent) {
        var skipToNode = findNotableNode(node, indent);
        if (skipToNode !== node && (1 !== node.children.length || node.children[0] !== skipToNode)) return indentation(indent) + "...\n" + describeNode(skipToNode, indent + 1);
        skipToNode = "";
        var debugInfo = node.fiber._debugInfo;
        if (debugInfo) for(var i = 0; i < debugInfo.length; i++){
            var serverComponentName = debugInfo[i].name;
            "string" === typeof serverComponentName && (skipToNode += indentation(indent) + "<" + serverComponentName + ">\n", indent++);
        }
        debugInfo = "";
        i = node.fiber.pendingProps;
        if (6 === node.fiber.tag) debugInfo = describeTextDiff(i, node.serverProps, indent), indent++;
        else if (serverComponentName = describeFiberType(node.fiber), null !== serverComponentName) {
            if (void 0 === node.serverProps) {
                debugInfo = indent;
                var maxLength = 120 - 2 * debugInfo - serverComponentName.length - 2, content = "";
                for(propName in i)if (i.hasOwnProperty(propName) && "children" !== propName) {
                    var propValue = describePropValue(i[propName], 15);
                    maxLength -= propName.length + propValue.length + 2;
                    if (0 > maxLength) {
                        content += " ...";
                        break;
                    }
                    content += " " + propName + "=" + propValue;
                }
                debugInfo = indentation(debugInfo) + "<" + serverComponentName + content + ">\n";
                indent++;
            } else null === node.serverProps ? (debugInfo = describeExpandedElement(serverComponentName, i, added(indent)), indent++) : "string" === typeof node.serverProps ? console.error("Should not have matched a non HostText fiber to a Text node. This is a bug in React.") : (debugInfo = describeElementDiff(serverComponentName, i, node.serverProps, indent), indent++);
        }
        var propName = "";
        i = node.fiber.child;
        for(serverComponentName = 0; i && serverComponentName < node.children.length;)maxLength = node.children[serverComponentName], maxLength.fiber === i ? (propName += describeNode(maxLength, indent), serverComponentName++) : propName += describeSiblingFiber(i, indent), i = i.sibling;
        i && 0 < node.children.length && (propName += indentation(indent) + "...\n");
        i = node.serverTail;
        null === node.serverProps && indent--;
        for(node = 0; node < i.length; node++)serverComponentName = i[node], propName = "string" === typeof serverComponentName ? propName + (removed(indent) + describeTextNode(serverComponentName, 120 - 2 * indent) + "\n") : propName + describeExpandedElement(serverComponentName.type, serverComponentName.props, removed(indent));
        return skipToNode + debugInfo + propName;
    }
    function describeDiff(rootNode) {
        try {
            return "\n\n" + describeNode(rootNode, 0);
        } catch (x) {
            return "";
        }
    }
    function describeAncestors(ancestor, child, props) {
        for(var fiber = child, node = null, distanceFromLeaf = 0; fiber;)fiber === ancestor && (distanceFromLeaf = 0), node = {
            fiber: fiber,
            children: null !== node ? [
                node
            ] : [],
            serverProps: fiber === child ? props : fiber === ancestor ? null : void 0,
            serverTail: [],
            distanceFromLeaf: distanceFromLeaf
        }, distanceFromLeaf++, fiber = fiber.return;
        return null !== node ? describeDiff(node).replaceAll(/^[+-]/gm, ">") : "";
    }
    function updatedAncestorInfoDev(oldInfo, tag) {
        var ancestorInfo = assign({}, oldInfo || emptyAncestorInfoDev), info = {
            tag: tag
        };
        -1 !== inScopeTags.indexOf(tag) && (ancestorInfo.aTagInScope = null, ancestorInfo.buttonTagInScope = null, ancestorInfo.nobrTagInScope = null);
        -1 !== buttonScopeTags.indexOf(tag) && (ancestorInfo.pTagInButtonScope = null);
        -1 !== specialTags.indexOf(tag) && "address" !== tag && "div" !== tag && "p" !== tag && (ancestorInfo.listItemTagAutoclosing = null, ancestorInfo.dlItemTagAutoclosing = null);
        ancestorInfo.current = info;
        "form" === tag && (ancestorInfo.formTag = info);
        "a" === tag && (ancestorInfo.aTagInScope = info);
        "button" === tag && (ancestorInfo.buttonTagInScope = info);
        "nobr" === tag && (ancestorInfo.nobrTagInScope = info);
        "p" === tag && (ancestorInfo.pTagInButtonScope = info);
        "li" === tag && (ancestorInfo.listItemTagAutoclosing = info);
        if ("dd" === tag || "dt" === tag) ancestorInfo.dlItemTagAutoclosing = info;
        "#document" === tag || "html" === tag ? ancestorInfo.containerTagInScope = null : ancestorInfo.containerTagInScope || (ancestorInfo.containerTagInScope = info);
        null !== oldInfo || "#document" !== tag && "html" !== tag && "body" !== tag ? !0 === ancestorInfo.implicitRootScope && (ancestorInfo.implicitRootScope = !1) : ancestorInfo.implicitRootScope = !0;
        return ancestorInfo;
    }
    function isTagValidWithParent(tag, parentTag, implicitRootScope) {
        switch(parentTag){
            case "select":
                return "hr" === tag || "option" === tag || "optgroup" === tag || "script" === tag || "template" === tag || "#text" === tag;
            case "optgroup":
                return "option" === tag || "#text" === tag;
            case "option":
                return "#text" === tag;
            case "tr":
                return "th" === tag || "td" === tag || "style" === tag || "script" === tag || "template" === tag;
            case "tbody":
            case "thead":
            case "tfoot":
                return "tr" === tag || "style" === tag || "script" === tag || "template" === tag;
            case "colgroup":
                return "col" === tag || "template" === tag;
            case "table":
                return "caption" === tag || "colgroup" === tag || "tbody" === tag || "tfoot" === tag || "thead" === tag || "style" === tag || "script" === tag || "template" === tag;
            case "head":
                return "base" === tag || "basefont" === tag || "bgsound" === tag || "link" === tag || "meta" === tag || "title" === tag || "noscript" === tag || "noframes" === tag || "style" === tag || "script" === tag || "template" === tag;
            case "html":
                if (implicitRootScope) break;
                return "head" === tag || "body" === tag || "frameset" === tag;
            case "frameset":
                return "frame" === tag;
            case "#document":
                if (!implicitRootScope) return "html" === tag;
        }
        switch(tag){
            case "h1":
            case "h2":
            case "h3":
            case "h4":
            case "h5":
            case "h6":
                return "h1" !== parentTag && "h2" !== parentTag && "h3" !== parentTag && "h4" !== parentTag && "h5" !== parentTag && "h6" !== parentTag;
            case "rp":
            case "rt":
                return -1 === impliedEndTags.indexOf(parentTag);
            case "caption":
            case "col":
            case "colgroup":
            case "frameset":
            case "frame":
            case "tbody":
            case "td":
            case "tfoot":
            case "th":
            case "thead":
            case "tr":
                return null == parentTag;
            case "head":
                return implicitRootScope || null === parentTag;
            case "html":
                return implicitRootScope && "#document" === parentTag || null === parentTag;
            case "body":
                return implicitRootScope && ("#document" === parentTag || "html" === parentTag) || null === parentTag;
        }
        return !0;
    }
    function findInvalidAncestorForTag(tag, ancestorInfo) {
        switch(tag){
            case "address":
            case "article":
            case "aside":
            case "blockquote":
            case "center":
            case "details":
            case "dialog":
            case "dir":
            case "div":
            case "dl":
            case "fieldset":
            case "figcaption":
            case "figure":
            case "footer":
            case "header":
            case "hgroup":
            case "main":
            case "menu":
            case "nav":
            case "ol":
            case "p":
            case "section":
            case "summary":
            case "ul":
            case "pre":
            case "listing":
            case "table":
            case "hr":
            case "xmp":
            case "h1":
            case "h2":
            case "h3":
            case "h4":
            case "h5":
            case "h6":
                return ancestorInfo.pTagInButtonScope;
            case "form":
                return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;
            case "li":
                return ancestorInfo.listItemTagAutoclosing;
            case "dd":
            case "dt":
                return ancestorInfo.dlItemTagAutoclosing;
            case "button":
                return ancestorInfo.buttonTagInScope;
            case "a":
                return ancestorInfo.aTagInScope;
            case "nobr":
                return ancestorInfo.nobrTagInScope;
        }
        return null;
    }
    function findAncestor(parent, tagName) {
        for(; parent;){
            switch(parent.tag){
                case 5:
                case 26:
                case 27:
                    if (parent.type === tagName) return parent;
            }
            parent = parent.return;
        }
        return null;
    }
    function validateDOMNesting(childTag, ancestorInfo) {
        ancestorInfo = ancestorInfo || emptyAncestorInfoDev;
        var parentInfo = ancestorInfo.current;
        ancestorInfo = (parentInfo = isTagValidWithParent(childTag, parentInfo && parentInfo.tag, ancestorInfo.implicitRootScope) ? null : parentInfo) ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
        ancestorInfo = parentInfo || ancestorInfo;
        if (!ancestorInfo) return !0;
        var ancestorTag = ancestorInfo.tag;
        ancestorInfo = String(!!parentInfo) + "|" + childTag + "|" + ancestorTag;
        if (didWarn[ancestorInfo]) return !1;
        didWarn[ancestorInfo] = !0;
        var ancestor = (ancestorInfo = current) ? findAncestor(ancestorInfo.return, ancestorTag) : null, ancestorDescription = null !== ancestorInfo && null !== ancestor ? describeAncestors(ancestor, ancestorInfo, null) : "", tagDisplayName = "<" + childTag + ">";
        parentInfo ? (parentInfo = "", "table" === ancestorTag && "tr" === childTag && (parentInfo += " Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by the browser."), console.error("In HTML, %s cannot be a child of <%s>.%s\nThis will cause a hydration error.%s", tagDisplayName, ancestorTag, parentInfo, ancestorDescription)) : console.error("In HTML, %s cannot be a descendant of <%s>.\nThis will cause a hydration error.%s", tagDisplayName, ancestorTag, ancestorDescription);
        ancestorInfo && (childTag = ancestorInfo.return, null === ancestor || null === childTag || ancestor === childTag && childTag._debugOwner === ancestorInfo._debugOwner || runWithFiberInDEV(ancestor, function() {
            console.error("<%s> cannot contain a nested %s.\nSee this log for the ancestor stack trace.", ancestorTag, tagDisplayName);
        }));
        return !1;
    }
    function validateTextNesting(childText, parentTag, implicitRootScope) {
        if (implicitRootScope || isTagValidWithParent("#text", parentTag, !1)) return !0;
        implicitRootScope = "#text|" + parentTag;
        if (didWarn[implicitRootScope]) return !1;
        didWarn[implicitRootScope] = !0;
        var ancestor = (implicitRootScope = current) ? findAncestor(implicitRootScope, parentTag) : null;
        implicitRootScope = null !== implicitRootScope && null !== ancestor ? describeAncestors(ancestor, implicitRootScope, 6 !== implicitRootScope.tag ? {
            children: null
        } : null) : "";
        /\S/.test(childText) ? console.error("In HTML, text nodes cannot be a child of <%s>.\nThis will cause a hydration error.%s", parentTag, implicitRootScope) : console.error("In HTML, whitespace text nodes cannot be a child of <%s>. Make sure you don't have any extra whitespace between tags on each line of your source code.\nThis will cause a hydration error.%s", parentTag, implicitRootScope);
        return !1;
    }
    function setTextContent(node, text) {
        if (text) {
            var firstChild = node.firstChild;
            if (firstChild && firstChild === node.lastChild && 3 === firstChild.nodeType) {
                firstChild.nodeValue = text;
                return;
            }
        }
        node.textContent = text;
    }
    function camelize(string) {
        return string.replace(hyphenPattern, function(_, character) {
            return character.toUpperCase();
        });
    }
    function setValueForStyle(style, styleName, value) {
        var isCustomProperty = 0 === styleName.indexOf("--");
        isCustomProperty || (-1 < styleName.indexOf("-") ? warnedStyleNames.hasOwnProperty(styleName) && warnedStyleNames[styleName] || (warnedStyleNames[styleName] = !0, console.error("Unsupported style property %s. Did you mean %s?", styleName, camelize(styleName.replace(msPattern, "ms-")))) : badVendoredStyleNamePattern.test(styleName) ? warnedStyleNames.hasOwnProperty(styleName) && warnedStyleNames[styleName] || (warnedStyleNames[styleName] = !0, console.error("Unsupported vendor-prefixed style property %s. Did you mean %s?", styleName, styleName.charAt(0).toUpperCase() + styleName.slice(1))) : !badStyleValueWithSemicolonPattern.test(value) || warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value] || (warnedStyleValues[value] = !0, console.error('Style property values shouldn\'t contain a semicolon. Try "%s: %s" instead.', styleName, value.replace(badStyleValueWithSemicolonPattern, ""))), "number" === typeof value && (isNaN(value) ? warnedForNaNValue || (warnedForNaNValue = !0, console.error("`NaN` is an invalid value for the `%s` css style property.", styleName)) : isFinite(value) || warnedForInfinityValue || (warnedForInfinityValue = !0, console.error("`Infinity` is an invalid value for the `%s` css style property.", styleName))));
        null == value || "boolean" === typeof value || "" === value ? isCustomProperty ? style.setProperty(styleName, "") : "float" === styleName ? style.cssFloat = "" : style[styleName] = "" : isCustomProperty ? style.setProperty(styleName, value) : "number" !== typeof value || 0 === value || unitlessNumbers.has(styleName) ? "float" === styleName ? style.cssFloat = value : (checkCSSPropertyStringCoercion(value, styleName), style[styleName] = ("" + value).trim()) : style[styleName] = value + "px";
    }
    function setValueForStyles(node, styles, prevStyles) {
        if (null != styles && "object" !== typeof styles) throw Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
        styles && Object.freeze(styles);
        node = node.style;
        if (null != prevStyles) {
            if (styles) {
                var expandedUpdates = {};
                if (prevStyles) {
                    for(var key in prevStyles)if (prevStyles.hasOwnProperty(key) && !styles.hasOwnProperty(key)) for(var longhands = shorthandToLonghand[key] || [
                        key
                    ], i = 0; i < longhands.length; i++)expandedUpdates[longhands[i]] = key;
                }
                for(var _key in styles)if (styles.hasOwnProperty(_key) && (!prevStyles || prevStyles[_key] !== styles[_key])) for(key = shorthandToLonghand[_key] || [
                    _key
                ], longhands = 0; longhands < key.length; longhands++)expandedUpdates[key[longhands]] = _key;
                _key = {};
                for(var key$jscomp$0 in styles)for(key = shorthandToLonghand[key$jscomp$0] || [
                    key$jscomp$0
                ], longhands = 0; longhands < key.length; longhands++)_key[key[longhands]] = key$jscomp$0;
                key$jscomp$0 = {};
                for(var _key2 in expandedUpdates)if (key = expandedUpdates[_key2], (longhands = _key[_key2]) && key !== longhands && (i = key + "," + longhands, !key$jscomp$0[i])) {
                    key$jscomp$0[i] = !0;
                    i = console;
                    var value = styles[key];
                    i.error.call(i, "%s a style property during rerender (%s) when a conflicting property is set (%s) can lead to styling bugs. To avoid this, don't mix shorthand and non-shorthand properties for the same value; instead, replace the shorthand with separate values.", null == value || "boolean" === typeof value || "" === value ? "Removing" : "Updating", key, longhands);
                }
            }
            for(var styleName in prevStyles)!prevStyles.hasOwnProperty(styleName) || null != styles && styles.hasOwnProperty(styleName) || (0 === styleName.indexOf("--") ? node.setProperty(styleName, "") : "float" === styleName ? node.cssFloat = "" : node[styleName] = "");
            for(var _styleName in styles)_key2 = styles[_styleName], styles.hasOwnProperty(_styleName) && prevStyles[_styleName] !== _key2 && setValueForStyle(node, _styleName, _key2);
        } else for(expandedUpdates in styles)styles.hasOwnProperty(expandedUpdates) && setValueForStyle(node, expandedUpdates, styles[expandedUpdates]);
    }
    function isCustomElement(tagName) {
        if (-1 === tagName.indexOf("-")) return !1;
        switch(tagName){
            case "annotation-xml":
            case "color-profile":
            case "font-face":
            case "font-face-src":
            case "font-face-uri":
            case "font-face-format":
            case "font-face-name":
            case "missing-glyph":
                return !1;
            default:
                return !0;
        }
    }
    function getAttributeAlias(name) {
        return aliases.get(name) || name;
    }
    function validateProperty$1(tagName, name) {
        if (hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) return !0;
        if (rARIACamel$1.test(name)) {
            tagName = "aria-" + name.slice(4).toLowerCase();
            tagName = ariaProperties.hasOwnProperty(tagName) ? tagName : null;
            if (null == tagName) return console.error("Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.", name), warnedProperties$1[name] = !0;
            if (name !== tagName) return console.error("Invalid ARIA attribute `%s`. Did you mean `%s`?", name, tagName), warnedProperties$1[name] = !0;
        }
        if (rARIA$1.test(name)) {
            tagName = name.toLowerCase();
            tagName = ariaProperties.hasOwnProperty(tagName) ? tagName : null;
            if (null == tagName) return warnedProperties$1[name] = !0, !1;
            name !== tagName && (console.error("Unknown ARIA attribute `%s`. Did you mean `%s`?", name, tagName), warnedProperties$1[name] = !0);
        }
        return !0;
    }
    function validateProperties$2(type, props) {
        var invalidProps = [], key;
        for(key in props)validateProperty$1(type, key) || invalidProps.push(key);
        props = invalidProps.map(function(prop) {
            return "`" + prop + "`";
        }).join(", ");
        1 === invalidProps.length ? console.error("Invalid aria prop %s on <%s> tag. For details, see https://react.dev/link/invalid-aria-props", props, type) : 1 < invalidProps.length && console.error("Invalid aria props %s on <%s> tag. For details, see https://react.dev/link/invalid-aria-props", props, type);
    }
    function validateProperty(tagName, name, value, eventRegistry) {
        if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name]) return !0;
        var lowerCasedName = name.toLowerCase();
        if ("onfocusin" === lowerCasedName || "onfocusout" === lowerCasedName) return console.error("React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React."), warnedProperties[name] = !0;
        if ("function" === typeof value && ("form" === tagName && "action" === name || "input" === tagName && "formAction" === name || "button" === tagName && "formAction" === name)) return !0;
        if (null != eventRegistry) {
            tagName = eventRegistry.possibleRegistrationNames;
            if (eventRegistry.registrationNameDependencies.hasOwnProperty(name)) return !0;
            eventRegistry = tagName.hasOwnProperty(lowerCasedName) ? tagName[lowerCasedName] : null;
            if (null != eventRegistry) return console.error("Invalid event handler property `%s`. Did you mean `%s`?", name, eventRegistry), warnedProperties[name] = !0;
            if (EVENT_NAME_REGEX.test(name)) return console.error("Unknown event handler property `%s`. It will be ignored.", name), warnedProperties[name] = !0;
        } else if (EVENT_NAME_REGEX.test(name)) return INVALID_EVENT_NAME_REGEX.test(name) && console.error("Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.", name), warnedProperties[name] = !0;
        if (rARIA.test(name) || rARIACamel.test(name)) return !0;
        if ("innerhtml" === lowerCasedName) return console.error("Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`."), warnedProperties[name] = !0;
        if ("aria" === lowerCasedName) return console.error("The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead."), warnedProperties[name] = !0;
        if ("is" === lowerCasedName && null !== value && void 0 !== value && "string" !== typeof value) return console.error("Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.", typeof value), warnedProperties[name] = !0;
        if ("number" === typeof value && isNaN(value)) return console.error("Received NaN for the `%s` attribute. If this is expected, cast the value to a string.", name), warnedProperties[name] = !0;
        if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
            if (lowerCasedName = possibleStandardNames[lowerCasedName], lowerCasedName !== name) return console.error("Invalid DOM property `%s`. Did you mean `%s`?", name, lowerCasedName), warnedProperties[name] = !0;
        } else if (name !== lowerCasedName) return console.error("React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.", name, lowerCasedName), warnedProperties[name] = !0;
        switch(name){
            case "dangerouslySetInnerHTML":
            case "children":
            case "style":
            case "suppressContentEditableWarning":
            case "suppressHydrationWarning":
            case "defaultValue":
            case "defaultChecked":
            case "innerHTML":
            case "ref":
                return !0;
            case "innerText":
            case "textContent":
                return !0;
        }
        switch(typeof value){
            case "boolean":
                switch(name){
                    case "autoFocus":
                    case "checked":
                    case "multiple":
                    case "muted":
                    case "selected":
                    case "contentEditable":
                    case "spellCheck":
                    case "draggable":
                    case "value":
                    case "autoReverse":
                    case "externalResourcesRequired":
                    case "focusable":
                    case "preserveAlpha":
                    case "allowFullScreen":
                    case "async":
                    case "autoPlay":
                    case "controls":
                    case "default":
                    case "defer":
                    case "disabled":
                    case "disablePictureInPicture":
                    case "disableRemotePlayback":
                    case "formNoValidate":
                    case "hidden":
                    case "loop":
                    case "noModule":
                    case "noValidate":
                    case "open":
                    case "playsInline":
                    case "readOnly":
                    case "required":
                    case "reversed":
                    case "scoped":
                    case "seamless":
                    case "itemScope":
                    case "capture":
                    case "download":
                    case "inert":
                        return !0;
                    default:
                        lowerCasedName = name.toLowerCase().slice(0, 5);
                        if ("data-" === lowerCasedName || "aria-" === lowerCasedName) return !0;
                        value ? console.error('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.', value, name, name, value, name) : console.error('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name);
                        return warnedProperties[name] = !0;
                }
            case "function":
            case "symbol":
                return warnedProperties[name] = !0, !1;
            case "string":
                if ("false" === value || "true" === value) {
                    switch(name){
                        case "checked":
                        case "selected":
                        case "multiple":
                        case "muted":
                        case "allowFullScreen":
                        case "async":
                        case "autoPlay":
                        case "controls":
                        case "default":
                        case "defer":
                        case "disabled":
                        case "disablePictureInPicture":
                        case "disableRemotePlayback":
                        case "formNoValidate":
                        case "hidden":
                        case "loop":
                        case "noModule":
                        case "noValidate":
                        case "open":
                        case "playsInline":
                        case "readOnly":
                        case "required":
                        case "reversed":
                        case "scoped":
                        case "seamless":
                        case "itemScope":
                        case "inert":
                            break;
                        default:
                            return !0;
                    }
                    console.error("Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?", value, name, "false" === value ? "The browser will interpret it as a truthy value." : 'Although this works, it will not work as expected if you pass the string "false".', name, value);
                    warnedProperties[name] = !0;
                }
        }
        return !0;
    }
    function warnUnknownProperties(type, props, eventRegistry) {
        var unknownProps = [], key;
        for(key in props)validateProperty(type, key, props[key], eventRegistry) || unknownProps.push(key);
        props = unknownProps.map(function(prop) {
            return "`" + prop + "`";
        }).join(", ");
        1 === unknownProps.length ? console.error("Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://react.dev/link/attribute-behavior ", props, type) : 1 < unknownProps.length && console.error("Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://react.dev/link/attribute-behavior ", props, type);
    }
    function sanitizeURL(url) {
        return isJavaScriptProtocol.test("" + url) ? "javascript:throw new Error('React has blocked a javascript: URL as a security precaution.')" : url;
    }
    function getEventTarget(nativeEvent) {
        nativeEvent = nativeEvent.target || nativeEvent.srcElement || window;
        nativeEvent.correspondingUseElement && (nativeEvent = nativeEvent.correspondingUseElement);
        return 3 === nativeEvent.nodeType ? nativeEvent.parentNode : nativeEvent;
    }
    function restoreStateOfTarget(target) {
        var internalInstance = getInstanceFromNode(target);
        if (internalInstance && (target = internalInstance.stateNode)) {
            var props = target[internalPropsKey] || null;
            a: switch(target = internalInstance.stateNode, internalInstance.type){
                case "input":
                    updateInput(target, props.value, props.defaultValue, props.defaultValue, props.checked, props.defaultChecked, props.type, props.name);
                    internalInstance = props.name;
                    if ("radio" === props.type && null != internalInstance) {
                        for(props = target; props.parentNode;)props = props.parentNode;
                        checkAttributeStringCoercion(internalInstance, "name");
                        props = props.querySelectorAll('input[name="' + escapeSelectorAttributeValueInsideDoubleQuotes("" + internalInstance) + '"][type="radio"]');
                        for(internalInstance = 0; internalInstance < props.length; internalInstance++){
                            var otherNode = props[internalInstance];
                            if (otherNode !== target && otherNode.form === target.form) {
                                var otherProps = otherNode[internalPropsKey] || null;
                                if (!otherProps) throw Error("ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.");
                                updateInput(otherNode, otherProps.value, otherProps.defaultValue, otherProps.defaultValue, otherProps.checked, otherProps.defaultChecked, otherProps.type, otherProps.name);
                            }
                        }
                        for(internalInstance = 0; internalInstance < props.length; internalInstance++)otherNode = props[internalInstance], otherNode.form === target.form && updateValueIfChanged(otherNode);
                    }
                    break a;
                case "textarea":
                    updateTextarea(target, props.value, props.defaultValue);
                    break a;
                case "select":
                    internalInstance = props.value, null != internalInstance && updateOptions(target, !!props.multiple, internalInstance, !1);
            }
        }
    }
    function batchedUpdates$1(fn, a, b) {
        if (isInsideEventHandler) return fn(a, b);
        isInsideEventHandler = !0;
        try {
            var JSCompiler_inline_result = fn(a);
            return JSCompiler_inline_result;
        } finally{
            if (isInsideEventHandler = !1, null !== restoreTarget || null !== restoreQueue) {
                if (flushSyncWork$1(), restoreTarget && (a = restoreTarget, fn = restoreQueue, restoreQueue = restoreTarget = null, restoreStateOfTarget(a), fn)) for(a = 0; a < fn.length; a++)restoreStateOfTarget(fn[a]);
            }
        }
    }
    function getListener(inst, registrationName) {
        var stateNode = inst.stateNode;
        if (null === stateNode) return null;
        var props = stateNode[internalPropsKey] || null;
        if (null === props) return null;
        stateNode = props[registrationName];
        a: switch(registrationName){
            case "onClick":
            case "onClickCapture":
            case "onDoubleClick":
            case "onDoubleClickCapture":
            case "onMouseDown":
            case "onMouseDownCapture":
            case "onMouseMove":
            case "onMouseMoveCapture":
            case "onMouseUp":
            case "onMouseUpCapture":
            case "onMouseEnter":
                (props = !props.disabled) || (inst = inst.type, props = !("button" === inst || "input" === inst || "select" === inst || "textarea" === inst));
                inst = !props;
                break a;
            default:
                inst = !1;
        }
        if (inst) return null;
        if (stateNode && "function" !== typeof stateNode) throw Error("Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof stateNode + "` type.");
        return stateNode;
    }
    function getData() {
        if (fallbackText) return fallbackText;
        var start, startValue = startText, startLength = startValue.length, end, endValue = "value" in root ? root.value : root.textContent, endLength = endValue.length;
        for(start = 0; start < startLength && startValue[start] === endValue[start]; start++);
        var minEnd = startLength - start;
        for(end = 1; end <= minEnd && startValue[startLength - end] === endValue[endLength - end]; end++);
        return fallbackText = endValue.slice(start, 1 < end ? 1 - end : void 0);
    }
    function getEventCharCode(nativeEvent) {
        var keyCode = nativeEvent.keyCode;
        "charCode" in nativeEvent ? (nativeEvent = nativeEvent.charCode, 0 === nativeEvent && 13 === keyCode && (nativeEvent = 13)) : nativeEvent = keyCode;
        10 === nativeEvent && (nativeEvent = 13);
        return 32 <= nativeEvent || 13 === nativeEvent ? nativeEvent : 0;
    }
    function functionThatReturnsTrue() {
        return !0;
    }
    function functionThatReturnsFalse() {
        return !1;
    }
    function createSyntheticEvent(Interface) {
        function SyntheticBaseEvent(reactName, reactEventType, targetInst, nativeEvent, nativeEventTarget) {
            this._reactName = reactName;
            this._targetInst = targetInst;
            this.type = reactEventType;
            this.nativeEvent = nativeEvent;
            this.target = nativeEventTarget;
            this.currentTarget = null;
            for(var propName in Interface)Interface.hasOwnProperty(propName) && (reactName = Interface[propName], this[propName] = reactName ? reactName(nativeEvent) : nativeEvent[propName]);
            this.isDefaultPrevented = (null != nativeEvent.defaultPrevented ? nativeEvent.defaultPrevented : !1 === nativeEvent.returnValue) ? functionThatReturnsTrue : functionThatReturnsFalse;
            this.isPropagationStopped = functionThatReturnsFalse;
            return this;
        }
        assign(SyntheticBaseEvent.prototype, {
            preventDefault: function() {
                this.defaultPrevented = !0;
                var event = this.nativeEvent;
                event && (event.preventDefault ? event.preventDefault() : "unknown" !== typeof event.returnValue && (event.returnValue = !1), this.isDefaultPrevented = functionThatReturnsTrue);
            },
            stopPropagation: function() {
                var event = this.nativeEvent;
                event && (event.stopPropagation ? event.stopPropagation() : "unknown" !== typeof event.cancelBubble && (event.cancelBubble = !0), this.isPropagationStopped = functionThatReturnsTrue);
            },
            persist: function() {},
            isPersistent: functionThatReturnsTrue
        });
        return SyntheticBaseEvent;
    }
    function modifierStateGetter(keyArg) {
        var nativeEvent = this.nativeEvent;
        return nativeEvent.getModifierState ? nativeEvent.getModifierState(keyArg) : (keyArg = modifierKeyToProp[keyArg]) ? !!nativeEvent[keyArg] : !1;
    }
    function getEventModifierState() {
        return modifierStateGetter;
    }
    function isFallbackCompositionEnd(domEventName, nativeEvent) {
        switch(domEventName){
            case "keyup":
                return -1 !== END_KEYCODES.indexOf(nativeEvent.keyCode);
            case "keydown":
                return nativeEvent.keyCode !== START_KEYCODE;
            case "keypress":
            case "mousedown":
            case "focusout":
                return !0;
            default:
                return !1;
        }
    }
    function getDataFromCustomEvent(nativeEvent) {
        nativeEvent = nativeEvent.detail;
        return "object" === typeof nativeEvent && "data" in nativeEvent ? nativeEvent.data : null;
    }
    function getNativeBeforeInputChars(domEventName, nativeEvent) {
        switch(domEventName){
            case "compositionend":
                return getDataFromCustomEvent(nativeEvent);
            case "keypress":
                if (nativeEvent.which !== SPACEBAR_CODE) return null;
                hasSpaceKeypress = !0;
                return SPACEBAR_CHAR;
            case "textInput":
                return domEventName = nativeEvent.data, domEventName === SPACEBAR_CHAR && hasSpaceKeypress ? null : domEventName;
            default:
                return null;
        }
    }
    function getFallbackBeforeInputChars(domEventName, nativeEvent) {
        if (isComposing) return "compositionend" === domEventName || !canUseCompositionEvent && isFallbackCompositionEnd(domEventName, nativeEvent) ? (domEventName = getData(), fallbackText = startText = root = null, isComposing = !1, domEventName) : null;
        switch(domEventName){
            case "paste":
                return null;
            case "keypress":
                if (!(nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) || nativeEvent.ctrlKey && nativeEvent.altKey) {
                    if (nativeEvent.char && 1 < nativeEvent.char.length) return nativeEvent.char;
                    if (nativeEvent.which) return String.fromCharCode(nativeEvent.which);
                }
                return null;
            case "compositionend":
                return useFallbackCompositionData && "ko" !== nativeEvent.locale ? null : nativeEvent.data;
            default:
                return null;
        }
    }
    function isTextInputElement(elem) {
        var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
        return "input" === nodeName ? !!supportedInputTypes[elem.type] : "textarea" === nodeName ? !0 : !1;
    }
    function isEventSupported(eventNameSuffix) {
        if (!canUseDOM) return !1;
        eventNameSuffix = "on" + eventNameSuffix;
        var isSupported = eventNameSuffix in document;
        isSupported || (isSupported = document.createElement("div"), isSupported.setAttribute(eventNameSuffix, "return;"), isSupported = "function" === typeof isSupported[eventNameSuffix]);
        return isSupported;
    }
    function createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, target) {
        restoreTarget ? restoreQueue ? restoreQueue.push(target) : restoreQueue = [
            target
        ] : restoreTarget = target;
        inst = accumulateTwoPhaseListeners(inst, "onChange");
        0 < inst.length && (nativeEvent = new SyntheticEvent("onChange", "change", null, nativeEvent, target), dispatchQueue.push({
            event: nativeEvent,
            listeners: inst
        }));
    }
    function runEventInBatch(dispatchQueue) {
        processDispatchQueue(dispatchQueue, 0);
    }
    function getInstIfValueChanged(targetInst) {
        var targetNode = getNodeFromInstance(targetInst);
        if (updateValueIfChanged(targetNode)) return targetInst;
    }
    function getTargetInstForChangeEvent(domEventName, targetInst) {
        if ("change" === domEventName) return targetInst;
    }
    function stopWatchingForValueChange() {
        activeElement$1 && (activeElement$1.detachEvent("onpropertychange", handlePropertyChange), activeElementInst$1 = activeElement$1 = null);
    }
    function handlePropertyChange(nativeEvent) {
        if ("value" === nativeEvent.propertyName && getInstIfValueChanged(activeElementInst$1)) {
            var dispatchQueue = [];
            createAndAccumulateChangeEvent(dispatchQueue, activeElementInst$1, nativeEvent, getEventTarget(nativeEvent));
            batchedUpdates$1(runEventInBatch, dispatchQueue);
        }
    }
    function handleEventsForInputEventPolyfill(domEventName, target, targetInst) {
        "focusin" === domEventName ? (stopWatchingForValueChange(), activeElement$1 = target, activeElementInst$1 = targetInst, activeElement$1.attachEvent("onpropertychange", handlePropertyChange)) : "focusout" === domEventName && stopWatchingForValueChange();
    }
    function getTargetInstForInputEventPolyfill(domEventName) {
        if ("selectionchange" === domEventName || "keyup" === domEventName || "keydown" === domEventName) return getInstIfValueChanged(activeElementInst$1);
    }
    function getTargetInstForClickEvent(domEventName, targetInst) {
        if ("click" === domEventName) return getInstIfValueChanged(targetInst);
    }
    function getTargetInstForInputOrChangeEvent(domEventName, targetInst) {
        if ("input" === domEventName || "change" === domEventName) return getInstIfValueChanged(targetInst);
    }
    function is(x, y) {
        return x === y && (0 !== x || 1 / x === 1 / y) || x !== x && y !== y;
    }
    function shallowEqual(objA, objB) {
        if (objectIs(objA, objB)) return !0;
        if ("object" !== typeof objA || null === objA || "object" !== typeof objB || null === objB) return !1;
        var keysA = Object.keys(objA), keysB = Object.keys(objB);
        if (keysA.length !== keysB.length) return !1;
        for(keysB = 0; keysB < keysA.length; keysB++){
            var currentKey = keysA[keysB];
            if (!hasOwnProperty.call(objB, currentKey) || !objectIs(objA[currentKey], objB[currentKey])) return !1;
        }
        return !0;
    }
    function getLeafNode(node) {
        for(; node && node.firstChild;)node = node.firstChild;
        return node;
    }
    function getNodeForCharacterOffset(root, offset) {
        var node = getLeafNode(root);
        root = 0;
        for(var nodeEnd; node;){
            if (3 === node.nodeType) {
                nodeEnd = root + node.textContent.length;
                if (root <= offset && nodeEnd >= offset) return {
                    node: node,
                    offset: offset - root
                };
                root = nodeEnd;
            }
            a: {
                for(; node;){
                    if (node.nextSibling) {
                        node = node.nextSibling;
                        break a;
                    }
                    node = node.parentNode;
                }
                node = void 0;
            }
            node = getLeafNode(node);
        }
    }
    function containsNode(outerNode, innerNode) {
        return outerNode && innerNode ? outerNode === innerNode ? !0 : outerNode && 3 === outerNode.nodeType ? !1 : innerNode && 3 === innerNode.nodeType ? containsNode(outerNode, innerNode.parentNode) : "contains" in outerNode ? outerNode.contains(innerNode) : outerNode.compareDocumentPosition ? !!(outerNode.compareDocumentPosition(innerNode) & 16) : !1 : !1;
    }
    function getActiveElementDeep(containerInfo) {
        containerInfo = null != containerInfo && null != containerInfo.ownerDocument && null != containerInfo.ownerDocument.defaultView ? containerInfo.ownerDocument.defaultView : window;
        for(var element = getActiveElement(containerInfo.document); element instanceof containerInfo.HTMLIFrameElement;){
            try {
                var JSCompiler_inline_result = "string" === typeof element.contentWindow.location.href;
            } catch (err) {
                JSCompiler_inline_result = !1;
            }
            if (JSCompiler_inline_result) containerInfo = element.contentWindow;
            else break;
            element = getActiveElement(containerInfo.document);
        }
        return element;
    }
    function hasSelectionCapabilities(elem) {
        var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
        return nodeName && ("input" === nodeName && ("text" === elem.type || "search" === elem.type || "tel" === elem.type || "url" === elem.type || "password" === elem.type) || "textarea" === nodeName || "true" === elem.contentEditable);
    }
    function constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget) {
        var doc = nativeEventTarget.window === nativeEventTarget ? nativeEventTarget.document : 9 === nativeEventTarget.nodeType ? nativeEventTarget : nativeEventTarget.ownerDocument;
        mouseDown || null == activeElement || activeElement !== getActiveElement(doc) || (doc = activeElement, "selectionStart" in doc && hasSelectionCapabilities(doc) ? doc = {
            start: doc.selectionStart,
            end: doc.selectionEnd
        } : (doc = (doc.ownerDocument && doc.ownerDocument.defaultView || window).getSelection(), doc = {
            anchorNode: doc.anchorNode,
            anchorOffset: doc.anchorOffset,
            focusNode: doc.focusNode,
            focusOffset: doc.focusOffset
        }), lastSelection && shallowEqual(lastSelection, doc) || (lastSelection = doc, doc = accumulateTwoPhaseListeners(activeElementInst, "onSelect"), 0 < doc.length && (nativeEvent = new SyntheticEvent("onSelect", "select", null, nativeEvent, nativeEventTarget), dispatchQueue.push({
            event: nativeEvent,
            listeners: doc
        }), nativeEvent.target = activeElement)));
    }
    function makePrefixMap(styleProp, eventName) {
        var prefixes = {};
        prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
        prefixes["Webkit" + styleProp] = "webkit" + eventName;
        prefixes["Moz" + styleProp] = "moz" + eventName;
        return prefixes;
    }
    function getVendorPrefixedEventName(eventName) {
        if (prefixedEventNames[eventName]) return prefixedEventNames[eventName];
        if (!vendorPrefixes[eventName]) return eventName;
        var prefixMap = vendorPrefixes[eventName], styleProp;
        for(styleProp in prefixMap)if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) return prefixedEventNames[eventName] = prefixMap[styleProp];
        return eventName;
    }
    function registerSimpleEvent(domEventName, reactName) {
        topLevelEventsToReactNames.set(domEventName, reactName);
        registerTwoPhaseEvent(reactName, [
            domEventName
        ]);
    }
    function createCapturedValueAtFiber(value, source) {
        if ("object" === typeof value && null !== value) {
            var existing = CapturedStacks.get(value);
            if (void 0 !== existing) return existing;
            source = {
                value: value,
                source: source,
                stack: getStackByFiberInDevAndProd(source)
            };
            CapturedStacks.set(value, source);
            return source;
        }
        return {
            value: value,
            source: source,
            stack: getStackByFiberInDevAndProd(source)
        };
    }
    function finishQueueingConcurrentUpdates() {
        for(var endIndex = concurrentQueuesIndex, i = concurrentlyUpdatedLanes = concurrentQueuesIndex = 0; i < endIndex;){
            var fiber = concurrentQueues[i];
            concurrentQueues[i++] = null;
            var queue = concurrentQueues[i];
            concurrentQueues[i++] = null;
            var update = concurrentQueues[i];
            concurrentQueues[i++] = null;
            var lane = concurrentQueues[i];
            concurrentQueues[i++] = null;
            if (null !== queue && null !== update) {
                var pending = queue.pending;
                null === pending ? update.next = update : (update.next = pending.next, pending.next = update);
                queue.pending = update;
            }
            0 !== lane && markUpdateLaneFromFiberToRoot(fiber, update, lane);
        }
    }
    function enqueueUpdate$1(fiber, queue, update, lane) {
        concurrentQueues[concurrentQueuesIndex++] = fiber;
        concurrentQueues[concurrentQueuesIndex++] = queue;
        concurrentQueues[concurrentQueuesIndex++] = update;
        concurrentQueues[concurrentQueuesIndex++] = lane;
        concurrentlyUpdatedLanes |= lane;
        fiber.lanes |= lane;
        fiber = fiber.alternate;
        null !== fiber && (fiber.lanes |= lane);
    }
    function enqueueConcurrentHookUpdate(fiber, queue, update, lane) {
        enqueueUpdate$1(fiber, queue, update, lane);
        return getRootForUpdatedFiber(fiber);
    }
    function enqueueConcurrentRenderForLane(fiber, lane) {
        enqueueUpdate$1(fiber, null, null, lane);
        return getRootForUpdatedFiber(fiber);
    }
    function markUpdateLaneFromFiberToRoot(sourceFiber, update, lane) {
        sourceFiber.lanes |= lane;
        var alternate = sourceFiber.alternate;
        null !== alternate && (alternate.lanes |= lane);
        for(var isHidden = !1, parent = sourceFiber.return; null !== parent;)parent.childLanes |= lane, alternate = parent.alternate, null !== alternate && (alternate.childLanes |= lane), 22 === parent.tag && (sourceFiber = parent.stateNode, null === sourceFiber || sourceFiber._visibility & OffscreenVisible || (isHidden = !0)), sourceFiber = parent, parent = parent.return;
        return 3 === sourceFiber.tag ? (parent = sourceFiber.stateNode, isHidden && null !== update && (isHidden = 31 - clz32(lane), sourceFiber = parent.hiddenUpdates, alternate = sourceFiber[isHidden], null === alternate ? sourceFiber[isHidden] = [
            update
        ] : alternate.push(update), update.lane = lane | 536870912), parent) : null;
    }
    function getRootForUpdatedFiber(sourceFiber) {
        if (nestedUpdateCount > NESTED_UPDATE_LIMIT) throw nestedPassiveUpdateCount = nestedUpdateCount = 0, rootWithPassiveNestedUpdates = rootWithNestedUpdates = null, Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.");
        nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT && (nestedPassiveUpdateCount = 0, rootWithPassiveNestedUpdates = null, console.error("Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render."));
        null === sourceFiber.alternate && 0 !== (sourceFiber.flags & 4098) && warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
        for(var node = sourceFiber, parent = node.return; null !== parent;)null === node.alternate && 0 !== (node.flags & 4098) && warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber), node = parent, parent = node.return;
        return 3 === node.tag ? node.stateNode : null;
    }
    function resolveFunctionForHotReloading(type) {
        if (null === resolveFamily) return type;
        var family = resolveFamily(type);
        return void 0 === family ? type : family.current;
    }
    function resolveForwardRefForHotReloading(type) {
        if (null === resolveFamily) return type;
        var family = resolveFamily(type);
        return void 0 === family ? null !== type && void 0 !== type && "function" === typeof type.render && (family = resolveFunctionForHotReloading(type.render), type.render !== family) ? (family = {
            $$typeof: REACT_FORWARD_REF_TYPE,
            render: family
        }, void 0 !== type.displayName && (family.displayName = type.displayName), family) : type : family.current;
    }
    function isCompatibleFamilyForHotReloading(fiber, element) {
        if (null === resolveFamily) return !1;
        var prevType = fiber.elementType;
        element = element.type;
        var needsCompareFamilies = !1, $$typeofNextType = "object" === typeof element && null !== element ? element.$$typeof : null;
        switch(fiber.tag){
            case 1:
                "function" === typeof element && (needsCompareFamilies = !0);
                break;
            case 0:
                "function" === typeof element ? needsCompareFamilies = !0 : $$typeofNextType === REACT_LAZY_TYPE && (needsCompareFamilies = !0);
                break;
            case 11:
                $$typeofNextType === REACT_FORWARD_REF_TYPE ? needsCompareFamilies = !0 : $$typeofNextType === REACT_LAZY_TYPE && (needsCompareFamilies = !0);
                break;
            case 14:
            case 15:
                $$typeofNextType === REACT_MEMO_TYPE ? needsCompareFamilies = !0 : $$typeofNextType === REACT_LAZY_TYPE && (needsCompareFamilies = !0);
                break;
            default:
                return !1;
        }
        return needsCompareFamilies && (fiber = resolveFamily(prevType), void 0 !== fiber && fiber === resolveFamily(element)) ? !0 : !1;
    }
    function markFailedErrorBoundaryForHotReloading(fiber) {
        null !== resolveFamily && "function" === typeof WeakSet && (null === failedBoundaries && (failedBoundaries = new WeakSet()), failedBoundaries.add(fiber));
    }
    function scheduleFibersWithFamiliesRecursively(fiber, updatedFamilies, staleFamilies) {
        var alternate = fiber.alternate, child = fiber.child, sibling = fiber.sibling, tag = fiber.tag, type = fiber.type, candidateType = null;
        switch(tag){
            case 0:
            case 15:
            case 1:
                candidateType = type;
                break;
            case 11:
                candidateType = type.render;
        }
        if (null === resolveFamily) throw Error("Expected resolveFamily to be set during hot reload.");
        var needsRender = !1;
        type = !1;
        null !== candidateType && (candidateType = resolveFamily(candidateType), void 0 !== candidateType && (staleFamilies.has(candidateType) ? type = !0 : updatedFamilies.has(candidateType) && (1 === tag ? type = !0 : needsRender = !0)));
        null !== failedBoundaries && (failedBoundaries.has(fiber) || null !== alternate && failedBoundaries.has(alternate)) && (type = !0);
        type && (fiber._debugNeedsRemount = !0);
        if (type || needsRender) alternate = enqueueConcurrentRenderForLane(fiber, 2), null !== alternate && scheduleUpdateOnFiber(alternate, fiber, 2);
        null === child || type || scheduleFibersWithFamiliesRecursively(child, updatedFamilies, staleFamilies);
        null !== sibling && scheduleFibersWithFamiliesRecursively(sibling, updatedFamilies, staleFamilies);
    }
    function FiberNode(tag, pendingProps, key, mode) {
        this.tag = tag;
        this.key = key;
        this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
        this.index = 0;
        this.refCleanup = this.ref = null;
        this.pendingProps = pendingProps;
        this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
        this.mode = mode;
        this.subtreeFlags = this.flags = 0;
        this.deletions = null;
        this.childLanes = this.lanes = 0;
        this.alternate = null;
        this.actualDuration = -0;
        this.actualStartTime = -1.1;
        this.treeBaseDuration = this.selfBaseDuration = -0;
        this._debugTask = this._debugStack = this._debugOwner = this._debugInfo = null;
        this._debugNeedsRemount = !1;
        this._debugHookTypes = null;
        hasBadMapPolyfill || "function" !== typeof Object.preventExtensions || Object.preventExtensions(this);
    }
    function shouldConstruct(Component) {
        Component = Component.prototype;
        return !(!Component || !Component.isReactComponent);
    }
    function createWorkInProgress(current, pendingProps) {
        var workInProgress = current.alternate;
        null === workInProgress ? (workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode), workInProgress.elementType = current.elementType, workInProgress.type = current.type, workInProgress.stateNode = current.stateNode, workInProgress._debugOwner = current._debugOwner, workInProgress._debugStack = current._debugStack, workInProgress._debugTask = current._debugTask, workInProgress._debugHookTypes = current._debugHookTypes, workInProgress.alternate = current, current.alternate = workInProgress) : (workInProgress.pendingProps = pendingProps, workInProgress.type = current.type, workInProgress.flags = 0, workInProgress.subtreeFlags = 0, workInProgress.deletions = null, workInProgress.actualDuration = -0, workInProgress.actualStartTime = -1.1);
        workInProgress.flags = current.flags & 65011712;
        workInProgress.childLanes = current.childLanes;
        workInProgress.lanes = current.lanes;
        workInProgress.child = current.child;
        workInProgress.memoizedProps = current.memoizedProps;
        workInProgress.memoizedState = current.memoizedState;
        workInProgress.updateQueue = current.updateQueue;
        pendingProps = current.dependencies;
        workInProgress.dependencies = null === pendingProps ? null : {
            lanes: pendingProps.lanes,
            firstContext: pendingProps.firstContext,
            _debugThenableState: pendingProps._debugThenableState
        };
        workInProgress.sibling = current.sibling;
        workInProgress.index = current.index;
        workInProgress.ref = current.ref;
        workInProgress.refCleanup = current.refCleanup;
        workInProgress.selfBaseDuration = current.selfBaseDuration;
        workInProgress.treeBaseDuration = current.treeBaseDuration;
        workInProgress._debugInfo = current._debugInfo;
        workInProgress._debugNeedsRemount = current._debugNeedsRemount;
        switch(workInProgress.tag){
            case 0:
            case 15:
                workInProgress.type = resolveFunctionForHotReloading(current.type);
                break;
            case 1:
                workInProgress.type = resolveFunctionForHotReloading(current.type);
                break;
            case 11:
                workInProgress.type = resolveForwardRefForHotReloading(current.type);
        }
        return workInProgress;
    }
    function resetWorkInProgress(workInProgress, renderLanes) {
        workInProgress.flags &= 65011714;
        var current = workInProgress.alternate;
        null === current ? (workInProgress.childLanes = 0, workInProgress.lanes = renderLanes, workInProgress.child = null, workInProgress.subtreeFlags = 0, workInProgress.memoizedProps = null, workInProgress.memoizedState = null, workInProgress.updateQueue = null, workInProgress.dependencies = null, workInProgress.stateNode = null, workInProgress.selfBaseDuration = 0, workInProgress.treeBaseDuration = 0) : (workInProgress.childLanes = current.childLanes, workInProgress.lanes = current.lanes, workInProgress.child = current.child, workInProgress.subtreeFlags = 0, workInProgress.deletions = null, workInProgress.memoizedProps = current.memoizedProps, workInProgress.memoizedState = current.memoizedState, workInProgress.updateQueue = current.updateQueue, workInProgress.type = current.type, renderLanes = current.dependencies, workInProgress.dependencies = null === renderLanes ? null : {
            lanes: renderLanes.lanes,
            firstContext: renderLanes.firstContext,
            _debugThenableState: renderLanes._debugThenableState
        }, workInProgress.selfBaseDuration = current.selfBaseDuration, workInProgress.treeBaseDuration = current.treeBaseDuration);
        return workInProgress;
    }
    function createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes) {
        var fiberTag = 0, resolvedType = type;
        if ("function" === typeof type) shouldConstruct(type) && (fiberTag = 1), resolvedType = resolveFunctionForHotReloading(resolvedType);
        else if ("string" === typeof type) fiberTag = getHostContext(), fiberTag = isHostHoistableType(type, pendingProps, fiberTag) ? 26 : "html" === type || "head" === type || "body" === type ? 27 : 5;
        else a: switch(type){
            case REACT_ACTIVITY_TYPE:
                return key = createFiber(31, pendingProps, key, mode), key.elementType = REACT_ACTIVITY_TYPE, key.lanes = lanes, key;
            case REACT_FRAGMENT_TYPE:
                return createFiberFromFragment(pendingProps.children, mode, lanes, key);
            case REACT_STRICT_MODE_TYPE:
                fiberTag = 8;
                mode |= StrictLegacyMode;
                mode |= StrictEffectsMode;
                break;
            case REACT_PROFILER_TYPE:
                return type = pendingProps, owner = mode, "string" !== typeof type.id && console.error('Profiler must specify an "id" of type `string` as a prop. Received the type `%s` instead.', typeof type.id), key = createFiber(12, type, key, owner | ProfileMode), key.elementType = REACT_PROFILER_TYPE, key.lanes = lanes, key.stateNode = {
                    effectDuration: 0,
                    passiveEffectDuration: 0
                }, key;
            case REACT_SUSPENSE_TYPE:
                return key = createFiber(13, pendingProps, key, mode), key.elementType = REACT_SUSPENSE_TYPE, key.lanes = lanes, key;
            case REACT_SUSPENSE_LIST_TYPE:
                return key = createFiber(19, pendingProps, key, mode), key.elementType = REACT_SUSPENSE_LIST_TYPE, key.lanes = lanes, key;
            default:
                if ("object" === typeof type && null !== type) switch(type.$$typeof){
                    case REACT_PROVIDER_TYPE:
                    case REACT_CONTEXT_TYPE:
                        fiberTag = 10;
                        break a;
                    case REACT_CONSUMER_TYPE:
                        fiberTag = 9;
                        break a;
                    case REACT_FORWARD_REF_TYPE:
                        fiberTag = 11;
                        resolvedType = resolveForwardRefForHotReloading(resolvedType);
                        break a;
                    case REACT_MEMO_TYPE:
                        fiberTag = 14;
                        break a;
                    case REACT_LAZY_TYPE:
                        fiberTag = 16;
                        resolvedType = null;
                        break a;
                }
                resolvedType = "";
                if (void 0 === type || "object" === typeof type && null !== type && 0 === Object.keys(type).length) resolvedType += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
                null === type ? pendingProps = "null" : isArrayImpl(type) ? pendingProps = "array" : void 0 !== type && type.$$typeof === REACT_ELEMENT_TYPE ? (pendingProps = "<" + (getComponentNameFromType(type.type) || "Unknown") + " />", resolvedType = " Did you accidentally export a JSX literal instead of a component?") : pendingProps = typeof type;
                (fiberTag = owner ? getComponentNameFromOwner(owner) : null) && (resolvedType += "\n\nCheck the render method of `" + fiberTag + "`.");
                fiberTag = 29;
                pendingProps = Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " + (pendingProps + "." + resolvedType));
                resolvedType = null;
        }
        key = createFiber(fiberTag, pendingProps, key, mode);
        key.elementType = type;
        key.type = resolvedType;
        key.lanes = lanes;
        key._debugOwner = owner;
        return key;
    }
    function createFiberFromElement(element, mode, lanes) {
        mode = createFiberFromTypeAndProps(element.type, element.key, element.props, element._owner, mode, lanes);
        mode._debugOwner = element._owner;
        mode._debugStack = element._debugStack;
        mode._debugTask = element._debugTask;
        return mode;
    }
    function createFiberFromFragment(elements, mode, lanes, key) {
        elements = createFiber(7, elements, key, mode);
        elements.lanes = lanes;
        return elements;
    }
    function createFiberFromText(content, mode, lanes) {
        content = createFiber(6, content, null, mode);
        content.lanes = lanes;
        return content;
    }
    function createFiberFromPortal(portal, mode, lanes) {
        mode = createFiber(4, null !== portal.children ? portal.children : [], portal.key, mode);
        mode.lanes = lanes;
        mode.stateNode = {
            containerInfo: portal.containerInfo,
            pendingChildren: null,
            implementation: portal.implementation
        };
        return mode;
    }
    function pushTreeFork(workInProgress, totalChildren) {
        warnIfNotHydrating();
        forkStack[forkStackIndex++] = treeForkCount;
        forkStack[forkStackIndex++] = treeForkProvider;
        treeForkProvider = workInProgress;
        treeForkCount = totalChildren;
    }
    function pushTreeId(workInProgress, totalChildren, index) {
        warnIfNotHydrating();
        idStack[idStackIndex++] = treeContextId;
        idStack[idStackIndex++] = treeContextOverflow;
        idStack[idStackIndex++] = treeContextProvider;
        treeContextProvider = workInProgress;
        var baseIdWithLeadingBit = treeContextId;
        workInProgress = treeContextOverflow;
        var baseLength = 32 - clz32(baseIdWithLeadingBit) - 1;
        baseIdWithLeadingBit &= ~(1 << baseLength);
        index += 1;
        var length = 32 - clz32(totalChildren) + baseLength;
        if (30 < length) {
            var numberOfOverflowBits = baseLength - baseLength % 5;
            length = (baseIdWithLeadingBit & (1 << numberOfOverflowBits) - 1).toString(32);
            baseIdWithLeadingBit >>= numberOfOverflowBits;
            baseLength -= numberOfOverflowBits;
            treeContextId = 1 << 32 - clz32(totalChildren) + baseLength | index << baseLength | baseIdWithLeadingBit;
            treeContextOverflow = length + workInProgress;
        } else treeContextId = 1 << length | index << baseLength | baseIdWithLeadingBit, treeContextOverflow = workInProgress;
    }
    function pushMaterializedTreeId(workInProgress) {
        warnIfNotHydrating();
        null !== workInProgress.return && (pushTreeFork(workInProgress, 1), pushTreeId(workInProgress, 1, 0));
    }
    function popTreeContext(workInProgress) {
        for(; workInProgress === treeForkProvider;)treeForkProvider = forkStack[--forkStackIndex], forkStack[forkStackIndex] = null, treeForkCount = forkStack[--forkStackIndex], forkStack[forkStackIndex] = null;
        for(; workInProgress === treeContextProvider;)treeContextProvider = idStack[--idStackIndex], idStack[idStackIndex] = null, treeContextOverflow = idStack[--idStackIndex], idStack[idStackIndex] = null, treeContextId = idStack[--idStackIndex], idStack[idStackIndex] = null;
    }
    function warnIfNotHydrating() {
        isHydrating || console.error("Expected to be hydrating. This is a bug in React. Please file an issue.");
    }
    function buildHydrationDiffNode(fiber, distanceFromLeaf) {
        if (null === fiber.return) {
            if (null === hydrationDiffRootDEV) hydrationDiffRootDEV = {
                fiber: fiber,
                children: [],
                serverProps: void 0,
                serverTail: [],
                distanceFromLeaf: distanceFromLeaf
            };
            else {
                if (hydrationDiffRootDEV.fiber !== fiber) throw Error("Saw multiple hydration diff roots in a pass. This is a bug in React.");
                hydrationDiffRootDEV.distanceFromLeaf > distanceFromLeaf && (hydrationDiffRootDEV.distanceFromLeaf = distanceFromLeaf);
            }
            return hydrationDiffRootDEV;
        }
        var siblings = buildHydrationDiffNode(fiber.return, distanceFromLeaf + 1).children;
        if (0 < siblings.length && siblings[siblings.length - 1].fiber === fiber) return siblings = siblings[siblings.length - 1], siblings.distanceFromLeaf > distanceFromLeaf && (siblings.distanceFromLeaf = distanceFromLeaf), siblings;
        distanceFromLeaf = {
            fiber: fiber,
            children: [],
            serverProps: void 0,
            serverTail: [],
            distanceFromLeaf: distanceFromLeaf
        };
        siblings.push(distanceFromLeaf);
        return distanceFromLeaf;
    }
    function warnNonHydratedInstance(fiber, rejectedCandidate) {
        didSuspendOrErrorDEV || (fiber = buildHydrationDiffNode(fiber, 0), fiber.serverProps = null, null !== rejectedCandidate && (rejectedCandidate = describeHydratableInstanceForDevWarnings(rejectedCandidate), fiber.serverTail.push(rejectedCandidate)));
    }
    function throwOnHydrationMismatch(fiber) {
        var diff = "", diffRoot = hydrationDiffRootDEV;
        null !== diffRoot && (hydrationDiffRootDEV = null, diff = describeDiff(diffRoot));
        queueHydrationError(createCapturedValueAtFiber(Error("Hydration failed because the server rendered HTML didn't match the client. As a result this tree will be regenerated on the client. This can happen if a SSR-ed Client Component used:\n\n- A server/client branch `if (typeof window !== 'undefined')`.\n- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.\n- Date formatting in a user's locale which doesn't match the server.\n- External changing data without sending a snapshot of it along with the HTML.\n- Invalid HTML tag nesting.\n\nIt can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\n\nhttps://react.dev/link/hydration-mismatch" + diff), fiber));
        throw HydrationMismatchException;
    }
    function prepareToHydrateHostInstance(fiber) {
        var didHydrate = fiber.stateNode;
        var type = fiber.type, props = fiber.memoizedProps;
        didHydrate[internalInstanceKey] = fiber;
        didHydrate[internalPropsKey] = props;
        validatePropertiesInDevelopment(type, props);
        switch(type){
            case "dialog":
                listenToNonDelegatedEvent("cancel", didHydrate);
                listenToNonDelegatedEvent("close", didHydrate);
                break;
            case "iframe":
            case "object":
            case "embed":
                listenToNonDelegatedEvent("load", didHydrate);
                break;
            case "video":
            case "audio":
                for(type = 0; type < mediaEventTypes.length; type++)listenToNonDelegatedEvent(mediaEventTypes[type], didHydrate);
                break;
            case "source":
                listenToNonDelegatedEvent("error", didHydrate);
                break;
            case "img":
            case "image":
            case "link":
                listenToNonDelegatedEvent("error", didHydrate);
                listenToNonDelegatedEvent("load", didHydrate);
                break;
            case "details":
                listenToNonDelegatedEvent("toggle", didHydrate);
                break;
            case "input":
                checkControlledValueProps("input", props);
                listenToNonDelegatedEvent("invalid", didHydrate);
                validateInputProps(didHydrate, props);
                initInput(didHydrate, props.value, props.defaultValue, props.checked, props.defaultChecked, props.type, props.name, !0);
                track(didHydrate);
                break;
            case "option":
                validateOptionProps(didHydrate, props);
                break;
            case "select":
                checkControlledValueProps("select", props);
                listenToNonDelegatedEvent("invalid", didHydrate);
                validateSelectProps(didHydrate, props);
                break;
            case "textarea":
                checkControlledValueProps("textarea", props), listenToNonDelegatedEvent("invalid", didHydrate), validateTextareaProps(didHydrate, props), initTextarea(didHydrate, props.value, props.defaultValue, props.children), track(didHydrate);
        }
        type = props.children;
        "string" !== typeof type && "number" !== typeof type && "bigint" !== typeof type || didHydrate.textContent === "" + type || !0 === props.suppressHydrationWarning || checkForUnmatchedText(didHydrate.textContent, type) ? (null != props.popover && (listenToNonDelegatedEvent("beforetoggle", didHydrate), listenToNonDelegatedEvent("toggle", didHydrate)), null != props.onScroll && listenToNonDelegatedEvent("scroll", didHydrate), null != props.onScrollEnd && listenToNonDelegatedEvent("scrollend", didHydrate), null != props.onClick && (didHydrate.onclick = noop$1), didHydrate = !0) : didHydrate = !1;
        didHydrate || throwOnHydrationMismatch(fiber);
    }
    function popToNextHostParent(fiber) {
        for(hydrationParentFiber = fiber.return; hydrationParentFiber;)switch(hydrationParentFiber.tag){
            case 5:
            case 13:
                rootOrSingletonContext = !1;
                return;
            case 27:
            case 3:
                rootOrSingletonContext = !0;
                return;
            default:
                hydrationParentFiber = hydrationParentFiber.return;
        }
    }
    function popHydrationState(fiber) {
        if (fiber !== hydrationParentFiber) return !1;
        if (!isHydrating) return popToNextHostParent(fiber), isHydrating = !0, !1;
        var tag = fiber.tag, JSCompiler_temp;
        if (JSCompiler_temp = 3 !== tag && 27 !== tag) {
            if (JSCompiler_temp = 5 === tag) JSCompiler_temp = fiber.type, JSCompiler_temp = !("form" !== JSCompiler_temp && "button" !== JSCompiler_temp) || shouldSetTextContent(fiber.type, fiber.memoizedProps);
            JSCompiler_temp = !JSCompiler_temp;
        }
        if (JSCompiler_temp && nextHydratableInstance) {
            for(JSCompiler_temp = nextHydratableInstance; JSCompiler_temp;){
                var diffNode = buildHydrationDiffNode(fiber, 0), description = describeHydratableInstanceForDevWarnings(JSCompiler_temp);
                diffNode.serverTail.push(description);
                JSCompiler_temp = "Suspense" === description.type ? getNextHydratableInstanceAfterSuspenseInstance(JSCompiler_temp) : getNextHydratable(JSCompiler_temp.nextSibling);
            }
            throwOnHydrationMismatch(fiber);
        }
        popToNextHostParent(fiber);
        if (13 === tag) {
            fiber = fiber.memoizedState;
            fiber = null !== fiber ? fiber.dehydrated : null;
            if (!fiber) throw Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
            nextHydratableInstance = getNextHydratableInstanceAfterSuspenseInstance(fiber);
        } else 27 === tag ? (tag = nextHydratableInstance, isSingletonScope(fiber.type) ? (fiber = previousHydratableOnEnteringScopedSingleton, previousHydratableOnEnteringScopedSingleton = null, nextHydratableInstance = fiber) : nextHydratableInstance = tag) : nextHydratableInstance = hydrationParentFiber ? getNextHydratable(fiber.stateNode.nextSibling) : null;
        return !0;
    }
    function resetHydrationState() {
        nextHydratableInstance = hydrationParentFiber = null;
        didSuspendOrErrorDEV = isHydrating = !1;
    }
    function upgradeHydrationErrorsToRecoverable() {
        var queuedErrors = hydrationErrors;
        null !== queuedErrors && (null === workInProgressRootRecoverableErrors ? workInProgressRootRecoverableErrors = queuedErrors : workInProgressRootRecoverableErrors.push.apply(workInProgressRootRecoverableErrors, queuedErrors), hydrationErrors = null);
        return queuedErrors;
    }
    function queueHydrationError(error) {
        null === hydrationErrors ? hydrationErrors = [
            error
        ] : hydrationErrors.push(error);
    }
    function emitPendingHydrationWarnings() {
        var diffRoot = hydrationDiffRootDEV;
        if (null !== diffRoot) {
            hydrationDiffRootDEV = null;
            for(var diff = describeDiff(diffRoot); 0 < diffRoot.children.length;)diffRoot = diffRoot.children[0];
            runWithFiberInDEV(diffRoot.fiber, function() {
                console.error("A tree hydrated but some attributes of the server rendered HTML didn't match the client properties. This won't be patched up. This can happen if a SSR-ed Client Component used:\n\n- A server/client branch `if (typeof window !== 'undefined')`.\n- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.\n- Date formatting in a user's locale which doesn't match the server.\n- External changing data without sending a snapshot of it along with the HTML.\n- Invalid HTML tag nesting.\n\nIt can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\n\n%s%s", "https://react.dev/link/hydration-mismatch", diff);
            });
        }
    }
    function resetContextDependencies() {
        lastContextDependency = currentlyRenderingFiber$1 = null;
        isDisallowedContextReadInDEV = !1;
    }
    function pushProvider(providerFiber, context, nextValue) {
        push(valueCursor, context._currentValue, providerFiber);
        context._currentValue = nextValue;
        push(rendererCursorDEV, context._currentRenderer, providerFiber);
        void 0 !== context._currentRenderer && null !== context._currentRenderer && context._currentRenderer !== rendererSigil && console.error("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.");
        context._currentRenderer = rendererSigil;
    }
    function popProvider(context, providerFiber) {
        context._currentValue = valueCursor.current;
        var currentRenderer = rendererCursorDEV.current;
        pop(rendererCursorDEV, providerFiber);
        context._currentRenderer = currentRenderer;
        pop(valueCursor, providerFiber);
    }
    function scheduleContextWorkOnParentPath(parent, renderLanes, propagationRoot) {
        for(; null !== parent;){
            var alternate = parent.alternate;
            (parent.childLanes & renderLanes) !== renderLanes ? (parent.childLanes |= renderLanes, null !== alternate && (alternate.childLanes |= renderLanes)) : null !== alternate && (alternate.childLanes & renderLanes) !== renderLanes && (alternate.childLanes |= renderLanes);
            if (parent === propagationRoot) break;
            parent = parent.return;
        }
        parent !== propagationRoot && console.error("Expected to find the propagation root when scheduling context work. This error is likely caused by a bug in React. Please file an issue.");
    }
    function propagateContextChanges(workInProgress, contexts, renderLanes, forcePropagateEntireTree) {
        var fiber = workInProgress.child;
        null !== fiber && (fiber.return = workInProgress);
        for(; null !== fiber;){
            var list = fiber.dependencies;
            if (null !== list) {
                var nextFiber = fiber.child;
                list = list.firstContext;
                a: for(; null !== list;){
                    var dependency = list;
                    list = fiber;
                    for(var i = 0; i < contexts.length; i++)if (dependency.context === contexts[i]) {
                        list.lanes |= renderLanes;
                        dependency = list.alternate;
                        null !== dependency && (dependency.lanes |= renderLanes);
                        scheduleContextWorkOnParentPath(list.return, renderLanes, workInProgress);
                        forcePropagateEntireTree || (nextFiber = null);
                        break a;
                    }
                    list = dependency.next;
                }
            } else if (18 === fiber.tag) {
                nextFiber = fiber.return;
                if (null === nextFiber) throw Error("We just came from a parent so we must have had a parent. This is a bug in React.");
                nextFiber.lanes |= renderLanes;
                list = nextFiber.alternate;
                null !== list && (list.lanes |= renderLanes);
                scheduleContextWorkOnParentPath(nextFiber, renderLanes, workInProgress);
                nextFiber = null;
            } else nextFiber = fiber.child;
            if (null !== nextFiber) nextFiber.return = fiber;
            else for(nextFiber = fiber; null !== nextFiber;){
                if (nextFiber === workInProgress) {
                    nextFiber = null;
                    break;
                }
                fiber = nextFiber.sibling;
                if (null !== fiber) {
                    fiber.return = nextFiber.return;
                    nextFiber = fiber;
                    break;
                }
                nextFiber = nextFiber.return;
            }
            fiber = nextFiber;
        }
    }
    function propagateParentContextChanges(current, workInProgress, renderLanes, forcePropagateEntireTree) {
        current = null;
        for(var parent = workInProgress, isInsidePropagationBailout = !1; null !== parent;){
            if (!isInsidePropagationBailout) {
                if (0 !== (parent.flags & 524288)) isInsidePropagationBailout = !0;
                else if (0 !== (parent.flags & 262144)) break;
            }
            if (10 === parent.tag) {
                var currentParent = parent.alternate;
                if (null === currentParent) throw Error("Should have a current fiber. This is a bug in React.");
                currentParent = currentParent.memoizedProps;
                if (null !== currentParent) {
                    var context = parent.type;
                    objectIs(parent.pendingProps.value, currentParent.value) || (null !== current ? current.push(context) : current = [
                        context
                    ]);
                }
            } else if (parent === hostTransitionProviderCursor.current) {
                currentParent = parent.alternate;
                if (null === currentParent) throw Error("Should have a current fiber. This is a bug in React.");
                currentParent.memoizedState.memoizedState !== parent.memoizedState.memoizedState && (null !== current ? current.push(HostTransitionContext) : current = [
                    HostTransitionContext
                ]);
            }
            parent = parent.return;
        }
        null !== current && propagateContextChanges(workInProgress, current, renderLanes, forcePropagateEntireTree);
        workInProgress.flags |= 262144;
    }
    function checkIfContextChanged(currentDependencies) {
        for(currentDependencies = currentDependencies.firstContext; null !== currentDependencies;){
            if (!objectIs(currentDependencies.context._currentValue, currentDependencies.memoizedValue)) return !0;
            currentDependencies = currentDependencies.next;
        }
        return !1;
    }
    function prepareToReadContext(workInProgress) {
        currentlyRenderingFiber$1 = workInProgress;
        lastContextDependency = null;
        workInProgress = workInProgress.dependencies;
        null !== workInProgress && (workInProgress.firstContext = null);
    }
    function readContext(context) {
        isDisallowedContextReadInDEV && console.error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
        return readContextForConsumer(currentlyRenderingFiber$1, context);
    }
    function readContextDuringReconciliation(consumer, context) {
        null === currentlyRenderingFiber$1 && prepareToReadContext(consumer);
        return readContextForConsumer(consumer, context);
    }
    function readContextForConsumer(consumer, context) {
        var value = context._currentValue;
        context = {
            context: context,
            memoizedValue: value,
            next: null
        };
        if (null === lastContextDependency) {
            if (null === consumer) throw Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
            lastContextDependency = context;
            consumer.dependencies = {
                lanes: 0,
                firstContext: context,
                _debugThenableState: null
            };
            consumer.flags |= 524288;
        } else lastContextDependency = lastContextDependency.next = context;
        return value;
    }
    function createCache() {
        return {
            controller: new AbortControllerLocal(),
            data: new Map(),
            refCount: 0
        };
    }
    function retainCache(cache) {
        cache.controller.signal.aborted && console.warn("A cache instance was retained after it was already freed. This likely indicates a bug in React.");
        cache.refCount++;
    }
    function releaseCache(cache) {
        cache.refCount--;
        0 > cache.refCount && console.warn("A cache instance was released after it was already freed. This likely indicates a bug in React.");
        0 === cache.refCount && scheduleCallback$2(NormalPriority, function() {
            cache.controller.abort();
        });
    }
    function pushNestedEffectDurations() {
        var prevEffectDuration = profilerEffectDuration;
        profilerEffectDuration = 0;
        return prevEffectDuration;
    }
    function popNestedEffectDurations(prevEffectDuration) {
        var elapsedTime = profilerEffectDuration;
        profilerEffectDuration = prevEffectDuration;
        return elapsedTime;
    }
    function bubbleNestedEffectDurations(prevEffectDuration) {
        var elapsedTime = profilerEffectDuration;
        profilerEffectDuration += prevEffectDuration;
        return elapsedTime;
    }
    function startProfilerTimer(fiber) {
        profilerStartTime = now();
        0 > fiber.actualStartTime && (fiber.actualStartTime = profilerStartTime);
    }
    function stopProfilerTimerIfRunningAndRecordDuration(fiber) {
        if (0 <= profilerStartTime) {
            var elapsedTime = now() - profilerStartTime;
            fiber.actualDuration += elapsedTime;
            fiber.selfBaseDuration = elapsedTime;
            profilerStartTime = -1;
        }
    }
    function stopProfilerTimerIfRunningAndRecordIncompleteDuration(fiber) {
        if (0 <= profilerStartTime) {
            var elapsedTime = now() - profilerStartTime;
            fiber.actualDuration += elapsedTime;
            profilerStartTime = -1;
        }
    }
    function recordEffectDuration() {
        if (0 <= profilerStartTime) {
            var elapsedTime = now() - profilerStartTime;
            profilerStartTime = -1;
            profilerEffectDuration += elapsedTime;
        }
    }
    function startEffectTimer() {
        profilerStartTime = now();
    }
    function transferActualDuration(fiber) {
        for(var child = fiber.child; child;)fiber.actualDuration += child.actualDuration, child = child.sibling;
    }
    function entangleAsyncAction(transition, thenable) {
        if (null === currentEntangledListeners) {
            var entangledListeners = currentEntangledListeners = [];
            currentEntangledPendingCount = 0;
            currentEntangledLane = requestTransitionLane();
            currentEntangledActionThenable = {
                status: "pending",
                value: void 0,
                then: function(resolve) {
                    entangledListeners.push(resolve);
                }
            };
        }
        currentEntangledPendingCount++;
        thenable.then(pingEngtangledActionScope, pingEngtangledActionScope);
        return thenable;
    }
    function pingEngtangledActionScope() {
        if (0 === --currentEntangledPendingCount && null !== currentEntangledListeners) {
            null !== currentEntangledActionThenable && (currentEntangledActionThenable.status = "fulfilled");
            var listeners = currentEntangledListeners;
            currentEntangledListeners = null;
            currentEntangledLane = 0;
            currentEntangledActionThenable = null;
            for(var i = 0; i < listeners.length; i++)(0, listeners[i])();
        }
    }
    function chainThenableValue(thenable, result) {
        var listeners = [], thenableWithOverride = {
            status: "pending",
            value: null,
            reason: null,
            then: function(resolve) {
                listeners.push(resolve);
            }
        };
        thenable.then(function() {
            thenableWithOverride.status = "fulfilled";
            thenableWithOverride.value = result;
            for(var i = 0; i < listeners.length; i++)(0, listeners[i])(result);
        }, function(error) {
            thenableWithOverride.status = "rejected";
            thenableWithOverride.reason = error;
            for(error = 0; error < listeners.length; error++)(0, listeners[error])(void 0);
        });
        return thenableWithOverride;
    }
    function peekCacheFromPool() {
        var cacheResumedFromPreviousRender = resumedCache.current;
        return null !== cacheResumedFromPreviousRender ? cacheResumedFromPreviousRender : workInProgressRoot.pooledCache;
    }
    function pushTransition(offscreenWorkInProgress, prevCachePool) {
        null === prevCachePool ? push(resumedCache, resumedCache.current, offscreenWorkInProgress) : push(resumedCache, prevCachePool.pool, offscreenWorkInProgress);
    }
    function getSuspendedCache() {
        var cacheFromPool = peekCacheFromPool();
        return null === cacheFromPool ? null : {
            parent: CacheContext._currentValue,
            pool: cacheFromPool
        };
    }
    function createThenableState() {
        return {
            didWarnAboutUncachedPromise: !1,
            thenables: []
        };
    }
    function isThenableResolved(thenable) {
        thenable = thenable.status;
        return "fulfilled" === thenable || "rejected" === thenable;
    }
    function noop$3() {}
    function trackUsedThenable(thenableState, thenable, index) {
        null !== ReactSharedInternals.actQueue && (ReactSharedInternals.didUsePromise = !0);
        var trackedThenables = thenableState.thenables;
        index = trackedThenables[index];
        void 0 === index ? trackedThenables.push(thenable) : index !== thenable && (thenableState.didWarnAboutUncachedPromise || (thenableState.didWarnAboutUncachedPromise = !0, console.error("A component was suspended by an uncached promise. Creating promises inside a Client Component or hook is not yet supported, except via a Suspense-compatible library or framework.")), thenable.then(noop$3, noop$3), thenable = index);
        switch(thenable.status){
            case "fulfilled":
                return thenable.value;
            case "rejected":
                throw thenableState = thenable.reason, checkIfUseWrappedInAsyncCatch(thenableState), thenableState;
            default:
                if ("string" === typeof thenable.status) thenable.then(noop$3, noop$3);
                else {
                    thenableState = workInProgressRoot;
                    if (null !== thenableState && 100 < thenableState.shellSuspendCounter) throw Error("An unknown Component is an async Client Component. Only Server Components can be async at the moment. This error is often caused by accidentally adding `'use client'` to a module that was originally written for the server.");
                    thenableState = thenable;
                    thenableState.status = "pending";
                    thenableState.then(function(fulfilledValue) {
                        if ("pending" === thenable.status) {
                            var fulfilledThenable = thenable;
                            fulfilledThenable.status = "fulfilled";
                            fulfilledThenable.value = fulfilledValue;
                        }
                    }, function(error) {
                        if ("pending" === thenable.status) {
                            var rejectedThenable = thenable;
                            rejectedThenable.status = "rejected";
                            rejectedThenable.reason = error;
                        }
                    });
                }
                switch(thenable.status){
                    case "fulfilled":
                        return thenable.value;
                    case "rejected":
                        throw thenableState = thenable.reason, checkIfUseWrappedInAsyncCatch(thenableState), thenableState;
                }
                suspendedThenable = thenable;
                needsToResetSuspendedThenableDEV = !0;
                throw SuspenseException;
        }
    }
    function getSuspendedThenable() {
        if (null === suspendedThenable) throw Error("Expected a suspended thenable. This is a bug in React. Please file an issue.");
        var thenable = suspendedThenable;
        suspendedThenable = null;
        needsToResetSuspendedThenableDEV = !1;
        return thenable;
    }
    function checkIfUseWrappedInAsyncCatch(rejectedReason) {
        if (rejectedReason === SuspenseException || rejectedReason === SuspenseActionException) throw Error("Hooks are not supported inside an async component. This error is often caused by accidentally adding `'use client'` to a module that was originally written for the server.");
    }
    function initializeUpdateQueue(fiber) {
        fiber.updateQueue = {
            baseState: fiber.memoizedState,
            firstBaseUpdate: null,
            lastBaseUpdate: null,
            shared: {
                pending: null,
                lanes: 0,
                hiddenCallbacks: null
            },
            callbacks: null
        };
    }
    function cloneUpdateQueue(current, workInProgress) {
        current = current.updateQueue;
        workInProgress.updateQueue === current && (workInProgress.updateQueue = {
            baseState: current.baseState,
            firstBaseUpdate: current.firstBaseUpdate,
            lastBaseUpdate: current.lastBaseUpdate,
            shared: current.shared,
            callbacks: null
        });
    }
    function createUpdate(lane) {
        return {
            lane: lane,
            tag: UpdateState,
            payload: null,
            callback: null,
            next: null
        };
    }
    function enqueueUpdate(fiber, update, lane) {
        var updateQueue = fiber.updateQueue;
        if (null === updateQueue) return null;
        updateQueue = updateQueue.shared;
        if (currentlyProcessingQueue === updateQueue && !didWarnUpdateInsideUpdate) {
            var componentName = getComponentNameFromFiber(fiber);
            console.error("An update (setState, replaceState, or forceUpdate) was scheduled from inside an update function. Update functions should be pure, with zero side-effects. Consider using componentDidUpdate or a callback.\n\nPlease update the following component: %s", componentName);
            didWarnUpdateInsideUpdate = !0;
        }
        if ((executionContext & RenderContext) !== NoContext) return componentName = updateQueue.pending, null === componentName ? update.next = update : (update.next = componentName.next, componentName.next = update), updateQueue.pending = update, update = getRootForUpdatedFiber(fiber), markUpdateLaneFromFiberToRoot(fiber, null, lane), update;
        enqueueUpdate$1(fiber, updateQueue, update, lane);
        return getRootForUpdatedFiber(fiber);
    }
    function entangleTransitions(root, fiber, lane) {
        fiber = fiber.updateQueue;
        if (null !== fiber && (fiber = fiber.shared, 0 !== (lane & 4194048))) {
            var queueLanes = fiber.lanes;
            queueLanes &= root.pendingLanes;
            lane |= queueLanes;
            fiber.lanes = lane;
            markRootEntangled(root, lane);
        }
    }
    function enqueueCapturedUpdate(workInProgress, capturedUpdate) {
        var queue = workInProgress.updateQueue, current = workInProgress.alternate;
        if (null !== current && (current = current.updateQueue, queue === current)) {
            var newFirst = null, newLast = null;
            queue = queue.firstBaseUpdate;
            if (null !== queue) {
                do {
                    var clone = {
                        lane: queue.lane,
                        tag: queue.tag,
                        payload: queue.payload,
                        callback: null,
                        next: null
                    };
                    null === newLast ? newFirst = newLast = clone : newLast = newLast.next = clone;
                    queue = queue.next;
                }while (null !== queue);
                null === newLast ? newFirst = newLast = capturedUpdate : newLast = newLast.next = capturedUpdate;
            } else newFirst = newLast = capturedUpdate;
            queue = {
                baseState: current.baseState,
                firstBaseUpdate: newFirst,
                lastBaseUpdate: newLast,
                shared: current.shared,
                callbacks: current.callbacks
            };
            workInProgress.updateQueue = queue;
            return;
        }
        workInProgress = queue.lastBaseUpdate;
        null === workInProgress ? queue.firstBaseUpdate = capturedUpdate : workInProgress.next = capturedUpdate;
        queue.lastBaseUpdate = capturedUpdate;
    }
    function suspendIfUpdateReadFromEntangledAsyncAction() {
        if (didReadFromEntangledAsyncAction) {
            var entangledActionThenable = currentEntangledActionThenable;
            if (null !== entangledActionThenable) throw entangledActionThenable;
        }
    }
    function processUpdateQueue(workInProgress, props, instance$jscomp$0, renderLanes) {
        didReadFromEntangledAsyncAction = !1;
        var queue = workInProgress.updateQueue;
        hasForceUpdate = !1;
        currentlyProcessingQueue = queue.shared;
        var firstBaseUpdate = queue.firstBaseUpdate, lastBaseUpdate = queue.lastBaseUpdate, pendingQueue = queue.shared.pending;
        if (null !== pendingQueue) {
            queue.shared.pending = null;
            var lastPendingUpdate = pendingQueue, firstPendingUpdate = lastPendingUpdate.next;
            lastPendingUpdate.next = null;
            null === lastBaseUpdate ? firstBaseUpdate = firstPendingUpdate : lastBaseUpdate.next = firstPendingUpdate;
            lastBaseUpdate = lastPendingUpdate;
            var current = workInProgress.alternate;
            null !== current && (current = current.updateQueue, pendingQueue = current.lastBaseUpdate, pendingQueue !== lastBaseUpdate && (null === pendingQueue ? current.firstBaseUpdate = firstPendingUpdate : pendingQueue.next = firstPendingUpdate, current.lastBaseUpdate = lastPendingUpdate));
        }
        if (null !== firstBaseUpdate) {
            var newState = queue.baseState;
            lastBaseUpdate = 0;
            current = firstPendingUpdate = lastPendingUpdate = null;
            pendingQueue = firstBaseUpdate;
            do {
                var updateLane = pendingQueue.lane & -536870913, isHiddenUpdate = updateLane !== pendingQueue.lane;
                if (isHiddenUpdate ? (workInProgressRootRenderLanes & updateLane) === updateLane : (renderLanes & updateLane) === updateLane) {
                    0 !== updateLane && updateLane === currentEntangledLane && (didReadFromEntangledAsyncAction = !0);
                    null !== current && (current = current.next = {
                        lane: 0,
                        tag: pendingQueue.tag,
                        payload: pendingQueue.payload,
                        callback: null,
                        next: null
                    });
                    a: {
                        updateLane = workInProgress;
                        var partialState = pendingQueue;
                        var nextProps = props, instance = instance$jscomp$0;
                        switch(partialState.tag){
                            case ReplaceState:
                                partialState = partialState.payload;
                                if ("function" === typeof partialState) {
                                    isDisallowedContextReadInDEV = !0;
                                    var nextState = partialState.call(instance, newState, nextProps);
                                    if (updateLane.mode & StrictLegacyMode) {
                                        setIsStrictModeForDevtools(!0);
                                        try {
                                            partialState.call(instance, newState, nextProps);
                                        } finally{
                                            setIsStrictModeForDevtools(!1);
                                        }
                                    }
                                    isDisallowedContextReadInDEV = !1;
                                    newState = nextState;
                                    break a;
                                }
                                newState = partialState;
                                break a;
                            case CaptureUpdate:
                                updateLane.flags = updateLane.flags & -65537 | 128;
                            case UpdateState:
                                nextState = partialState.payload;
                                if ("function" === typeof nextState) {
                                    isDisallowedContextReadInDEV = !0;
                                    partialState = nextState.call(instance, newState, nextProps);
                                    if (updateLane.mode & StrictLegacyMode) {
                                        setIsStrictModeForDevtools(!0);
                                        try {
                                            nextState.call(instance, newState, nextProps);
                                        } finally{
                                            setIsStrictModeForDevtools(!1);
                                        }
                                    }
                                    isDisallowedContextReadInDEV = !1;
                                } else partialState = nextState;
                                if (null === partialState || void 0 === partialState) break a;
                                newState = assign({}, newState, partialState);
                                break a;
                            case ForceUpdate:
                                hasForceUpdate = !0;
                        }
                    }
                    updateLane = pendingQueue.callback;
                    null !== updateLane && (workInProgress.flags |= 64, isHiddenUpdate && (workInProgress.flags |= 8192), isHiddenUpdate = queue.callbacks, null === isHiddenUpdate ? queue.callbacks = [
                        updateLane
                    ] : isHiddenUpdate.push(updateLane));
                } else isHiddenUpdate = {
                    lane: updateLane,
                    tag: pendingQueue.tag,
                    payload: pendingQueue.payload,
                    callback: pendingQueue.callback,
                    next: null
                }, null === current ? (firstPendingUpdate = current = isHiddenUpdate, lastPendingUpdate = newState) : current = current.next = isHiddenUpdate, lastBaseUpdate |= updateLane;
                pendingQueue = pendingQueue.next;
                if (null === pendingQueue) {
                    if (pendingQueue = queue.shared.pending, null === pendingQueue) break;
                    else isHiddenUpdate = pendingQueue, pendingQueue = isHiddenUpdate.next, isHiddenUpdate.next = null, queue.lastBaseUpdate = isHiddenUpdate, queue.shared.pending = null;
                }
            }while (1);
            null === current && (lastPendingUpdate = newState);
            queue.baseState = lastPendingUpdate;
            queue.firstBaseUpdate = firstPendingUpdate;
            queue.lastBaseUpdate = current;
            null === firstBaseUpdate && (queue.shared.lanes = 0);
            workInProgressRootSkippedLanes |= lastBaseUpdate;
            workInProgress.lanes = lastBaseUpdate;
            workInProgress.memoizedState = newState;
        }
        currentlyProcessingQueue = null;
    }
    function callCallback(callback, context) {
        if ("function" !== typeof callback) throw Error("Invalid argument passed as callback. Expected a function. Instead received: " + callback);
        callback.call(context);
    }
    function commitHiddenCallbacks(updateQueue, context) {
        var hiddenCallbacks = updateQueue.shared.hiddenCallbacks;
        if (null !== hiddenCallbacks) for(updateQueue.shared.hiddenCallbacks = null, updateQueue = 0; updateQueue < hiddenCallbacks.length; updateQueue++)callCallback(hiddenCallbacks[updateQueue], context);
    }
    function commitCallbacks(updateQueue, context) {
        var callbacks = updateQueue.callbacks;
        if (null !== callbacks) for(updateQueue.callbacks = null, updateQueue = 0; updateQueue < callbacks.length; updateQueue++)callCallback(callbacks[updateQueue], context);
    }
    function pushHiddenContext(fiber, context) {
        var prevEntangledRenderLanes = entangledRenderLanes;
        push(prevEntangledRenderLanesCursor, prevEntangledRenderLanes, fiber);
        push(currentTreeHiddenStackCursor, context, fiber);
        entangledRenderLanes = prevEntangledRenderLanes | context.baseLanes;
    }
    function reuseHiddenContextOnStack(fiber) {
        push(prevEntangledRenderLanesCursor, entangledRenderLanes, fiber);
        push(currentTreeHiddenStackCursor, currentTreeHiddenStackCursor.current, fiber);
    }
    function popHiddenContext(fiber) {
        entangledRenderLanes = prevEntangledRenderLanesCursor.current;
        pop(currentTreeHiddenStackCursor, fiber);
        pop(prevEntangledRenderLanesCursor, fiber);
    }
    function mountHookTypesDev() {
        var hookName = currentHookNameInDev;
        null === hookTypesDev ? hookTypesDev = [
            hookName
        ] : hookTypesDev.push(hookName);
    }
    function updateHookTypesDev() {
        var hookName = currentHookNameInDev;
        if (null !== hookTypesDev && (hookTypesUpdateIndexDev++, hookTypesDev[hookTypesUpdateIndexDev] !== hookName)) {
            var componentName = getComponentNameFromFiber(currentlyRenderingFiber);
            if (!didWarnAboutMismatchedHooksForComponent.has(componentName) && (didWarnAboutMismatchedHooksForComponent.add(componentName), null !== hookTypesDev)) {
                for(var table = "", i = 0; i <= hookTypesUpdateIndexDev; i++){
                    var oldHookName = hookTypesDev[i], newHookName = i === hookTypesUpdateIndexDev ? hookName : oldHookName;
                    for(oldHookName = i + 1 + ". " + oldHookName; 30 > oldHookName.length;)oldHookName += " ";
                    oldHookName += newHookName + "\n";
                    table += oldHookName;
                }
                console.error("React has detected a change in the order of Hooks called by %s. This will lead to bugs and errors if not fixed. For more information, read the Rules of Hooks: https://react.dev/link/rules-of-hooks\n\n   Previous render            Next render\n   ------------------------------------------------------\n%s   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n", componentName, table);
            }
        }
    }
    function checkDepsAreArrayDev(deps) {
        void 0 === deps || null === deps || isArrayImpl(deps) || console.error("%s received a final argument that is not an array (instead, received `%s`). When specified, the final argument must be an array.", currentHookNameInDev, typeof deps);
    }
    function warnOnUseFormStateInDev() {
        var componentName = getComponentNameFromFiber(currentlyRenderingFiber);
        didWarnAboutUseFormState.has(componentName) || (didWarnAboutUseFormState.add(componentName), console.error("ReactDOM.useFormState has been renamed to React.useActionState. Please update %s to use React.useActionState.", componentName));
    }
    function throwInvalidHookError() {
        throw Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://react.dev/link/invalid-hook-call for tips about how to debug and fix this problem.");
    }
    function areHookInputsEqual(nextDeps, prevDeps) {
        if (ignorePreviousDependencies) return !1;
        if (null === prevDeps) return console.error("%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.", currentHookNameInDev), !1;
        nextDeps.length !== prevDeps.length && console.error("The final argument passed to %s changed size between renders. The order and size of this array must remain constant.\n\nPrevious: %s\nIncoming: %s", currentHookNameInDev, "[" + prevDeps.join(", ") + "]", "[" + nextDeps.join(", ") + "]");
        for(var i = 0; i < prevDeps.length && i < nextDeps.length; i++)if (!objectIs(nextDeps[i], prevDeps[i])) return !1;
        return !0;
    }
    function renderWithHooks(current, workInProgress, Component, props, secondArg, nextRenderLanes) {
        renderLanes = nextRenderLanes;
        currentlyRenderingFiber = workInProgress;
        hookTypesDev = null !== current ? current._debugHookTypes : null;
        hookTypesUpdateIndexDev = -1;
        ignorePreviousDependencies = null !== current && current.type !== workInProgress.type;
        if ("[object AsyncFunction]" === Object.prototype.toString.call(Component) || "[object AsyncGeneratorFunction]" === Object.prototype.toString.call(Component)) nextRenderLanes = getComponentNameFromFiber(currentlyRenderingFiber), didWarnAboutAsyncClientComponent.has(nextRenderLanes) || (didWarnAboutAsyncClientComponent.add(nextRenderLanes), console.error("%s is an async Client Component. Only Server Components can be async at the moment. This error is often caused by accidentally adding `'use client'` to a module that was originally written for the server.", null === nextRenderLanes ? "An unknown Component" : "<" + nextRenderLanes + ">"));
        workInProgress.memoizedState = null;
        workInProgress.updateQueue = null;
        workInProgress.lanes = 0;
        ReactSharedInternals.H = null !== current && null !== current.memoizedState ? HooksDispatcherOnUpdateInDEV : null !== hookTypesDev ? HooksDispatcherOnMountWithHookTypesInDEV : HooksDispatcherOnMountInDEV;
        shouldDoubleInvokeUserFnsInHooksDEV = nextRenderLanes = (workInProgress.mode & StrictLegacyMode) !== NoMode;
        var children = callComponentInDEV(Component, props, secondArg);
        shouldDoubleInvokeUserFnsInHooksDEV = !1;
        didScheduleRenderPhaseUpdateDuringThisPass && (children = renderWithHooksAgain(workInProgress, Component, props, secondArg));
        if (nextRenderLanes) {
            setIsStrictModeForDevtools(!0);
            try {
                children = renderWithHooksAgain(workInProgress, Component, props, secondArg);
            } finally{
                setIsStrictModeForDevtools(!1);
            }
        }
        finishRenderingHooks(current, workInProgress);
        return children;
    }
    function finishRenderingHooks(current, workInProgress) {
        workInProgress._debugHookTypes = hookTypesDev;
        null === workInProgress.dependencies ? null !== thenableState$1 && (workInProgress.dependencies = {
            lanes: 0,
            firstContext: null,
            _debugThenableState: thenableState$1
        }) : workInProgress.dependencies._debugThenableState = thenableState$1;
        ReactSharedInternals.H = ContextOnlyDispatcher;
        var didRenderTooFewHooks = null !== currentHook && null !== currentHook.next;
        renderLanes = 0;
        hookTypesDev = currentHookNameInDev = workInProgressHook = currentHook = currentlyRenderingFiber = null;
        hookTypesUpdateIndexDev = -1;
        null !== current && (current.flags & 65011712) !== (workInProgress.flags & 65011712) && console.error("Internal React error: Expected static flag was missing. Please notify the React team.");
        didScheduleRenderPhaseUpdate = !1;
        thenableIndexCounter$1 = 0;
        thenableState$1 = null;
        if (didRenderTooFewHooks) throw Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement.");
        null === current || didReceiveUpdate || (current = current.dependencies, null !== current && checkIfContextChanged(current) && (didReceiveUpdate = !0));
        needsToResetSuspendedThenableDEV ? (needsToResetSuspendedThenableDEV = !1, current = !0) : current = !1;
        current && (workInProgress = getComponentNameFromFiber(workInProgress) || "Unknown", didWarnAboutUseWrappedInTryCatch.has(workInProgress) || didWarnAboutAsyncClientComponent.has(workInProgress) || (didWarnAboutUseWrappedInTryCatch.add(workInProgress), console.error("`use` was called from inside a try/catch block. This is not allowed and can lead to unexpected behavior. To handle errors triggered by `use`, wrap your component in a error boundary.")));
    }
    function renderWithHooksAgain(workInProgress, Component, props, secondArg) {
        currentlyRenderingFiber = workInProgress;
        var numberOfReRenders = 0;
        do {
            didScheduleRenderPhaseUpdateDuringThisPass && (thenableState$1 = null);
            thenableIndexCounter$1 = 0;
            didScheduleRenderPhaseUpdateDuringThisPass = !1;
            if (numberOfReRenders >= RE_RENDER_LIMIT) throw Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
            numberOfReRenders += 1;
            ignorePreviousDependencies = !1;
            workInProgressHook = currentHook = null;
            if (null != workInProgress.updateQueue) {
                var children = workInProgress.updateQueue;
                children.lastEffect = null;
                children.events = null;
                children.stores = null;
                null != children.memoCache && (children.memoCache.index = 0);
            }
            hookTypesUpdateIndexDev = -1;
            ReactSharedInternals.H = HooksDispatcherOnRerenderInDEV;
            children = callComponentInDEV(Component, props, secondArg);
        }while (didScheduleRenderPhaseUpdateDuringThisPass);
        return children;
    }
    function TransitionAwareHostComponent() {
        var dispatcher = ReactSharedInternals.H, maybeThenable = dispatcher.useState()[0];
        maybeThenable = "function" === typeof maybeThenable.then ? useThenable(maybeThenable) : maybeThenable;
        dispatcher = dispatcher.useState()[0];
        (null !== currentHook ? currentHook.memoizedState : null) !== dispatcher && (currentlyRenderingFiber.flags |= 1024);
        return maybeThenable;
    }
    function checkDidRenderIdHook() {
        var didRenderIdHook = 0 !== localIdCounter;
        localIdCounter = 0;
        return didRenderIdHook;
    }
    function bailoutHooks(current, workInProgress, lanes) {
        workInProgress.updateQueue = current.updateQueue;
        workInProgress.flags = (workInProgress.mode & StrictEffectsMode) !== NoMode ? workInProgress.flags & -402655237 : workInProgress.flags & -2053;
        current.lanes &= ~lanes;
    }
    function resetHooksOnUnwind(workInProgress) {
        if (didScheduleRenderPhaseUpdate) {
            for(workInProgress = workInProgress.memoizedState; null !== workInProgress;){
                var queue = workInProgress.queue;
                null !== queue && (queue.pending = null);
                workInProgress = workInProgress.next;
            }
            didScheduleRenderPhaseUpdate = !1;
        }
        renderLanes = 0;
        hookTypesDev = workInProgressHook = currentHook = currentlyRenderingFiber = null;
        hookTypesUpdateIndexDev = -1;
        currentHookNameInDev = null;
        didScheduleRenderPhaseUpdateDuringThisPass = !1;
        thenableIndexCounter$1 = localIdCounter = 0;
        thenableState$1 = null;
    }
    function mountWorkInProgressHook() {
        var hook = {
            memoizedState: null,
            baseState: null,
            baseQueue: null,
            queue: null,
            next: null
        };
        null === workInProgressHook ? currentlyRenderingFiber.memoizedState = workInProgressHook = hook : workInProgressHook = workInProgressHook.next = hook;
        return workInProgressHook;
    }
    function updateWorkInProgressHook() {
        if (null === currentHook) {
            var nextCurrentHook = currentlyRenderingFiber.alternate;
            nextCurrentHook = null !== nextCurrentHook ? nextCurrentHook.memoizedState : null;
        } else nextCurrentHook = currentHook.next;
        var nextWorkInProgressHook = null === workInProgressHook ? currentlyRenderingFiber.memoizedState : workInProgressHook.next;
        if (null !== nextWorkInProgressHook) workInProgressHook = nextWorkInProgressHook, currentHook = nextCurrentHook;
        else {
            if (null === nextCurrentHook) {
                if (null === currentlyRenderingFiber.alternate) throw Error("Update hook called on initial render. This is likely a bug in React. Please file an issue.");
                throw Error("Rendered more hooks than during the previous render.");
            }
            currentHook = nextCurrentHook;
            nextCurrentHook = {
                memoizedState: currentHook.memoizedState,
                baseState: currentHook.baseState,
                baseQueue: currentHook.baseQueue,
                queue: currentHook.queue,
                next: null
            };
            null === workInProgressHook ? currentlyRenderingFiber.memoizedState = workInProgressHook = nextCurrentHook : workInProgressHook = workInProgressHook.next = nextCurrentHook;
        }
        return workInProgressHook;
    }
    function createFunctionComponentUpdateQueue() {
        return {
            lastEffect: null,
            events: null,
            stores: null,
            memoCache: null
        };
    }
    function useThenable(thenable) {
        var index = thenableIndexCounter$1;
        thenableIndexCounter$1 += 1;
        null === thenableState$1 && (thenableState$1 = createThenableState());
        thenable = trackUsedThenable(thenableState$1, thenable, index);
        index = currentlyRenderingFiber;
        null === (null === workInProgressHook ? index.memoizedState : workInProgressHook.next) && (index = index.alternate, ReactSharedInternals.H = null !== index && null !== index.memoizedState ? HooksDispatcherOnUpdateInDEV : HooksDispatcherOnMountInDEV);
        return thenable;
    }
    function use(usable) {
        if (null !== usable && "object" === typeof usable) {
            if ("function" === typeof usable.then) return useThenable(usable);
            if (usable.$$typeof === REACT_CONTEXT_TYPE) return readContext(usable);
        }
        throw Error("An unsupported type was passed to use(): " + String(usable));
    }
    function useMemoCache(size) {
        var memoCache = null, updateQueue = currentlyRenderingFiber.updateQueue;
        null !== updateQueue && (memoCache = updateQueue.memoCache);
        if (null == memoCache) {
            var current = currentlyRenderingFiber.alternate;
            null !== current && (current = current.updateQueue, null !== current && (current = current.memoCache, null != current && (memoCache = {
                data: current.data.map(function(array) {
                    return array.slice();
                }),
                index: 0
            })));
        }
        null == memoCache && (memoCache = {
            data: [],
            index: 0
        });
        null === updateQueue && (updateQueue = createFunctionComponentUpdateQueue(), currentlyRenderingFiber.updateQueue = updateQueue);
        updateQueue.memoCache = memoCache;
        updateQueue = memoCache.data[memoCache.index];
        if (void 0 === updateQueue || ignorePreviousDependencies) for(updateQueue = memoCache.data[memoCache.index] = Array(size), current = 0; current < size; current++)updateQueue[current] = REACT_MEMO_CACHE_SENTINEL;
        else updateQueue.length !== size && console.error("Expected a constant size argument for each invocation of useMemoCache. The previous cache was allocated with size %s but size %s was requested.", updateQueue.length, size);
        memoCache.index++;
        return updateQueue;
    }
    function basicStateReducer(state, action) {
        return "function" === typeof action ? action(state) : action;
    }
    function mountReducer(reducer, initialArg, init) {
        var hook = mountWorkInProgressHook();
        if (void 0 !== init) {
            var initialState = init(initialArg);
            if (shouldDoubleInvokeUserFnsInHooksDEV) {
                setIsStrictModeForDevtools(!0);
                try {
                    init(initialArg);
                } finally{
                    setIsStrictModeForDevtools(!1);
                }
            }
        } else initialState = initialArg;
        hook.memoizedState = hook.baseState = initialState;
        reducer = {
            pending: null,
            lanes: 0,
            dispatch: null,
            lastRenderedReducer: reducer,
            lastRenderedState: initialState
        };
        hook.queue = reducer;
        reducer = reducer.dispatch = dispatchReducerAction.bind(null, currentlyRenderingFiber, reducer);
        return [
            hook.memoizedState,
            reducer
        ];
    }
    function updateReducer(reducer) {
        var hook = updateWorkInProgressHook();
        return updateReducerImpl(hook, currentHook, reducer);
    }
    function updateReducerImpl(hook, current, reducer) {
        var queue = hook.queue;
        if (null === queue) throw Error("Should have a queue. You are likely calling Hooks conditionally, which is not allowed. (https://react.dev/link/invalid-hook-call)");
        queue.lastRenderedReducer = reducer;
        var baseQueue = hook.baseQueue, pendingQueue = queue.pending;
        if (null !== pendingQueue) {
            if (null !== baseQueue) {
                var baseFirst = baseQueue.next;
                baseQueue.next = pendingQueue.next;
                pendingQueue.next = baseFirst;
            }
            current.baseQueue !== baseQueue && console.error("Internal error: Expected work-in-progress queue to be a clone. This is a bug in React.");
            current.baseQueue = baseQueue = pendingQueue;
            queue.pending = null;
        }
        pendingQueue = hook.baseState;
        if (null === baseQueue) hook.memoizedState = pendingQueue;
        else {
            current = baseQueue.next;
            var newBaseQueueFirst = baseFirst = null, newBaseQueueLast = null, update = current, didReadFromEntangledAsyncAction = !1;
            do {
                var updateLane = update.lane & -536870913;
                if (updateLane !== update.lane ? (workInProgressRootRenderLanes & updateLane) === updateLane : (renderLanes & updateLane) === updateLane) {
                    var revertLane = update.revertLane;
                    if (0 === revertLane) null !== newBaseQueueLast && (newBaseQueueLast = newBaseQueueLast.next = {
                        lane: 0,
                        revertLane: 0,
                        action: update.action,
                        hasEagerState: update.hasEagerState,
                        eagerState: update.eagerState,
                        next: null
                    }), updateLane === currentEntangledLane && (didReadFromEntangledAsyncAction = !0);
                    else if ((renderLanes & revertLane) === revertLane) {
                        update = update.next;
                        revertLane === currentEntangledLane && (didReadFromEntangledAsyncAction = !0);
                        continue;
                    } else updateLane = {
                        lane: 0,
                        revertLane: update.revertLane,
                        action: update.action,
                        hasEagerState: update.hasEagerState,
                        eagerState: update.eagerState,
                        next: null
                    }, null === newBaseQueueLast ? (newBaseQueueFirst = newBaseQueueLast = updateLane, baseFirst = pendingQueue) : newBaseQueueLast = newBaseQueueLast.next = updateLane, currentlyRenderingFiber.lanes |= revertLane, workInProgressRootSkippedLanes |= revertLane;
                    updateLane = update.action;
                    shouldDoubleInvokeUserFnsInHooksDEV && reducer(pendingQueue, updateLane);
                    pendingQueue = update.hasEagerState ? update.eagerState : reducer(pendingQueue, updateLane);
                } else revertLane = {
                    lane: updateLane,
                    revertLane: update.revertLane,
                    action: update.action,
                    hasEagerState: update.hasEagerState,
                    eagerState: update.eagerState,
                    next: null
                }, null === newBaseQueueLast ? (newBaseQueueFirst = newBaseQueueLast = revertLane, baseFirst = pendingQueue) : newBaseQueueLast = newBaseQueueLast.next = revertLane, currentlyRenderingFiber.lanes |= updateLane, workInProgressRootSkippedLanes |= updateLane;
                update = update.next;
            }while (null !== update && update !== current);
            null === newBaseQueueLast ? baseFirst = pendingQueue : newBaseQueueLast.next = newBaseQueueFirst;
            if (!objectIs(pendingQueue, hook.memoizedState) && (didReceiveUpdate = !0, didReadFromEntangledAsyncAction && (reducer = currentEntangledActionThenable, null !== reducer))) throw reducer;
            hook.memoizedState = pendingQueue;
            hook.baseState = baseFirst;
            hook.baseQueue = newBaseQueueLast;
            queue.lastRenderedState = pendingQueue;
        }
        null === baseQueue && (queue.lanes = 0);
        return [
            hook.memoizedState,
            queue.dispatch
        ];
    }
    function rerenderReducer(reducer) {
        var hook = updateWorkInProgressHook(), queue = hook.queue;
        if (null === queue) throw Error("Should have a queue. You are likely calling Hooks conditionally, which is not allowed. (https://react.dev/link/invalid-hook-call)");
        queue.lastRenderedReducer = reducer;
        var dispatch = queue.dispatch, lastRenderPhaseUpdate = queue.pending, newState = hook.memoizedState;
        if (null !== lastRenderPhaseUpdate) {
            queue.pending = null;
            var update = lastRenderPhaseUpdate = lastRenderPhaseUpdate.next;
            do newState = reducer(newState, update.action), update = update.next;
            while (update !== lastRenderPhaseUpdate);
            objectIs(newState, hook.memoizedState) || (didReceiveUpdate = !0);
            hook.memoizedState = newState;
            null === hook.baseQueue && (hook.baseState = newState);
            queue.lastRenderedState = newState;
        }
        return [
            newState,
            dispatch
        ];
    }
    function mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
        var fiber = currentlyRenderingFiber, hook = mountWorkInProgressHook();
        if (isHydrating) {
            if (void 0 === getServerSnapshot) throw Error("Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.");
            var nextSnapshot = getServerSnapshot();
            didWarnUncachedGetSnapshot || nextSnapshot === getServerSnapshot() || (console.error("The result of getServerSnapshot should be cached to avoid an infinite loop"), didWarnUncachedGetSnapshot = !0);
        } else {
            nextSnapshot = getSnapshot();
            didWarnUncachedGetSnapshot || (getServerSnapshot = getSnapshot(), objectIs(nextSnapshot, getServerSnapshot) || (console.error("The result of getSnapshot should be cached to avoid an infinite loop"), didWarnUncachedGetSnapshot = !0));
            if (null === workInProgressRoot) throw Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
            0 !== (workInProgressRootRenderLanes & 124) || pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);
        }
        hook.memoizedState = nextSnapshot;
        getServerSnapshot = {
            value: nextSnapshot,
            getSnapshot: getSnapshot
        };
        hook.queue = getServerSnapshot;
        mountEffect(subscribeToStore.bind(null, fiber, getServerSnapshot, subscribe), [
            subscribe
        ]);
        fiber.flags |= 2048;
        pushSimpleEffect(HasEffect | Passive, createEffectInstance(), updateStoreInstance.bind(null, fiber, getServerSnapshot, nextSnapshot, getSnapshot), null);
        return nextSnapshot;
    }
    function updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
        var fiber = currentlyRenderingFiber, hook = updateWorkInProgressHook(), isHydrating$jscomp$0 = isHydrating;
        if (isHydrating$jscomp$0) {
            if (void 0 === getServerSnapshot) throw Error("Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.");
            getServerSnapshot = getServerSnapshot();
        } else if (getServerSnapshot = getSnapshot(), !didWarnUncachedGetSnapshot) {
            var cachedSnapshot = getSnapshot();
            objectIs(getServerSnapshot, cachedSnapshot) || (console.error("The result of getSnapshot should be cached to avoid an infinite loop"), didWarnUncachedGetSnapshot = !0);
        }
        if (cachedSnapshot = !objectIs((currentHook || hook).memoizedState, getServerSnapshot)) hook.memoizedState = getServerSnapshot, didReceiveUpdate = !0;
        hook = hook.queue;
        var create = subscribeToStore.bind(null, fiber, hook, subscribe);
        updateEffectImpl(2048, Passive, create, [
            subscribe
        ]);
        if (hook.getSnapshot !== getSnapshot || cachedSnapshot || null !== workInProgressHook && workInProgressHook.memoizedState.tag & HasEffect) {
            fiber.flags |= 2048;
            pushSimpleEffect(HasEffect | Passive, createEffectInstance(), updateStoreInstance.bind(null, fiber, hook, getServerSnapshot, getSnapshot), null);
            if (null === workInProgressRoot) throw Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
            isHydrating$jscomp$0 || 0 !== (renderLanes & 124) || pushStoreConsistencyCheck(fiber, getSnapshot, getServerSnapshot);
        }
        return getServerSnapshot;
    }
    function pushStoreConsistencyCheck(fiber, getSnapshot, renderedSnapshot) {
        fiber.flags |= 16384;
        fiber = {
            getSnapshot: getSnapshot,
            value: renderedSnapshot
        };
        getSnapshot = currentlyRenderingFiber.updateQueue;
        null === getSnapshot ? (getSnapshot = createFunctionComponentUpdateQueue(), currentlyRenderingFiber.updateQueue = getSnapshot, getSnapshot.stores = [
            fiber
        ]) : (renderedSnapshot = getSnapshot.stores, null === renderedSnapshot ? getSnapshot.stores = [
            fiber
        ] : renderedSnapshot.push(fiber));
    }
    function updateStoreInstance(fiber, inst, nextSnapshot, getSnapshot) {
        inst.value = nextSnapshot;
        inst.getSnapshot = getSnapshot;
        checkIfSnapshotChanged(inst) && forceStoreRerender(fiber);
    }
    function subscribeToStore(fiber, inst, subscribe) {
        return subscribe(function() {
            checkIfSnapshotChanged(inst) && forceStoreRerender(fiber);
        });
    }
    function checkIfSnapshotChanged(inst) {
        var latestGetSnapshot = inst.getSnapshot;
        inst = inst.value;
        try {
            var nextValue = latestGetSnapshot();
            return !objectIs(inst, nextValue);
        } catch (error) {
            return !0;
        }
    }
    function forceStoreRerender(fiber) {
        var root = enqueueConcurrentRenderForLane(fiber, 2);
        null !== root && scheduleUpdateOnFiber(root, fiber, 2);
    }
    function mountStateImpl(initialState) {
        var hook = mountWorkInProgressHook();
        if ("function" === typeof initialState) {
            var initialStateInitializer = initialState;
            initialState = initialStateInitializer();
            if (shouldDoubleInvokeUserFnsInHooksDEV) {
                setIsStrictModeForDevtools(!0);
                try {
                    initialStateInitializer();
                } finally{
                    setIsStrictModeForDevtools(!1);
                }
            }
        }
        hook.memoizedState = hook.baseState = initialState;
        hook.queue = {
            pending: null,
            lanes: 0,
            dispatch: null,
            lastRenderedReducer: basicStateReducer,
            lastRenderedState: initialState
        };
        return hook;
    }
    function mountState(initialState) {
        initialState = mountStateImpl(initialState);
        var queue = initialState.queue, dispatch = dispatchSetState.bind(null, currentlyRenderingFiber, queue);
        queue.dispatch = dispatch;
        return [
            initialState.memoizedState,
            dispatch
        ];
    }
    function mountOptimistic(passthrough) {
        var hook = mountWorkInProgressHook();
        hook.memoizedState = hook.baseState = passthrough;
        var queue = {
            pending: null,
            lanes: 0,
            dispatch: null,
            lastRenderedReducer: null,
            lastRenderedState: null
        };
        hook.queue = queue;
        hook = dispatchOptimisticSetState.bind(null, currentlyRenderingFiber, !0, queue);
        queue.dispatch = hook;
        return [
            passthrough,
            hook
        ];
    }
    function updateOptimistic(passthrough, reducer) {
        var hook = updateWorkInProgressHook();
        return updateOptimisticImpl(hook, currentHook, passthrough, reducer);
    }
    function updateOptimisticImpl(hook, current, passthrough, reducer) {
        hook.baseState = passthrough;
        return updateReducerImpl(hook, currentHook, "function" === typeof reducer ? reducer : basicStateReducer);
    }
    function rerenderOptimistic(passthrough, reducer) {
        var hook = updateWorkInProgressHook();
        if (null !== currentHook) return updateOptimisticImpl(hook, currentHook, passthrough, reducer);
        hook.baseState = passthrough;
        return [
            passthrough,
            hook.queue.dispatch
        ];
    }
    function dispatchActionState(fiber, actionQueue, setPendingState, setState, payload) {
        if (isRenderPhaseUpdate(fiber)) throw Error("Cannot update form state while rendering.");
        fiber = actionQueue.action;
        if (null !== fiber) {
            var actionNode = {
                payload: payload,
                action: fiber,
                next: null,
                isTransition: !0,
                status: "pending",
                value: null,
                reason: null,
                listeners: [],
                then: function(listener) {
                    actionNode.listeners.push(listener);
                }
            };
            null !== ReactSharedInternals.T ? setPendingState(!0) : actionNode.isTransition = !1;
            setState(actionNode);
            setPendingState = actionQueue.pending;
            null === setPendingState ? (actionNode.next = actionQueue.pending = actionNode, runActionStateAction(actionQueue, actionNode)) : (actionNode.next = setPendingState.next, actionQueue.pending = setPendingState.next = actionNode);
        }
    }
    function runActionStateAction(actionQueue, node) {
        var action = node.action, payload = node.payload, prevState = actionQueue.state;
        if (node.isTransition) {
            var prevTransition = ReactSharedInternals.T, currentTransition = {};
            ReactSharedInternals.T = currentTransition;
            ReactSharedInternals.T._updatedFibers = new Set();
            try {
                var returnValue = action(prevState, payload), onStartTransitionFinish = ReactSharedInternals.S;
                null !== onStartTransitionFinish && onStartTransitionFinish(currentTransition, returnValue);
                handleActionReturnValue(actionQueue, node, returnValue);
            } catch (error) {
                onActionError(actionQueue, node, error);
            } finally{
                ReactSharedInternals.T = prevTransition, null === prevTransition && currentTransition._updatedFibers && (actionQueue = currentTransition._updatedFibers.size, currentTransition._updatedFibers.clear(), 10 < actionQueue && console.warn("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table."));
            }
        } else try {
            currentTransition = action(prevState, payload), handleActionReturnValue(actionQueue, node, currentTransition);
        } catch (error$4) {
            onActionError(actionQueue, node, error$4);
        }
    }
    function handleActionReturnValue(actionQueue, node, returnValue) {
        null !== returnValue && "object" === typeof returnValue && "function" === typeof returnValue.then ? (returnValue.then(function(nextState) {
            onActionSuccess(actionQueue, node, nextState);
        }, function(error) {
            return onActionError(actionQueue, node, error);
        }), node.isTransition || console.error("An async function with useActionState was called outside of a transition. This is likely not what you intended (for example, isPending will not update correctly). Either call the returned function inside startTransition, or pass it to an `action` or `formAction` prop.")) : onActionSuccess(actionQueue, node, returnValue);
    }
    function onActionSuccess(actionQueue, actionNode, nextState) {
        actionNode.status = "fulfilled";
        actionNode.value = nextState;
        notifyActionListeners(actionNode);
        actionQueue.state = nextState;
        actionNode = actionQueue.pending;
        null !== actionNode && (nextState = actionNode.next, nextState === actionNode ? actionQueue.pending = null : (nextState = nextState.next, actionNode.next = nextState, runActionStateAction(actionQueue, nextState)));
    }
    function onActionError(actionQueue, actionNode, error) {
        var last = actionQueue.pending;
        actionQueue.pending = null;
        if (null !== last) {
            last = last.next;
            do actionNode.status = "rejected", actionNode.reason = error, notifyActionListeners(actionNode), actionNode = actionNode.next;
            while (actionNode !== last);
        }
        actionQueue.action = null;
    }
    function notifyActionListeners(actionNode) {
        actionNode = actionNode.listeners;
        for(var i = 0; i < actionNode.length; i++)(0, actionNode[i])();
    }
    function actionStateReducer(oldState, newState) {
        return newState;
    }
    function mountActionState(action, initialStateProp) {
        if (isHydrating) {
            var ssrFormState = workInProgressRoot.formState;
            if (null !== ssrFormState) {
                a: {
                    var isMatching = currentlyRenderingFiber;
                    if (isHydrating) {
                        if (nextHydratableInstance) {
                            b: {
                                var markerInstance = nextHydratableInstance;
                                for(var inRootOrSingleton = rootOrSingletonContext; 8 !== markerInstance.nodeType;){
                                    if (!inRootOrSingleton) {
                                        markerInstance = null;
                                        break b;
                                    }
                                    markerInstance = getNextHydratable(markerInstance.nextSibling);
                                    if (null === markerInstance) {
                                        markerInstance = null;
                                        break b;
                                    }
                                }
                                inRootOrSingleton = markerInstance.data;
                                markerInstance = inRootOrSingleton === FORM_STATE_IS_MATCHING || inRootOrSingleton === FORM_STATE_IS_NOT_MATCHING ? markerInstance : null;
                            }
                            if (markerInstance) {
                                nextHydratableInstance = getNextHydratable(markerInstance.nextSibling);
                                isMatching = markerInstance.data === FORM_STATE_IS_MATCHING;
                                break a;
                            }
                        }
                        throwOnHydrationMismatch(isMatching);
                    }
                    isMatching = !1;
                }
                isMatching && (initialStateProp = ssrFormState[0]);
            }
        }
        ssrFormState = mountWorkInProgressHook();
        ssrFormState.memoizedState = ssrFormState.baseState = initialStateProp;
        isMatching = {
            pending: null,
            lanes: 0,
            dispatch: null,
            lastRenderedReducer: actionStateReducer,
            lastRenderedState: initialStateProp
        };
        ssrFormState.queue = isMatching;
        ssrFormState = dispatchSetState.bind(null, currentlyRenderingFiber, isMatching);
        isMatching.dispatch = ssrFormState;
        isMatching = mountStateImpl(!1);
        inRootOrSingleton = dispatchOptimisticSetState.bind(null, currentlyRenderingFiber, !1, isMatching.queue);
        isMatching = mountWorkInProgressHook();
        markerInstance = {
            state: initialStateProp,
            dispatch: null,
            action: action,
            pending: null
        };
        isMatching.queue = markerInstance;
        ssrFormState = dispatchActionState.bind(null, currentlyRenderingFiber, markerInstance, inRootOrSingleton, ssrFormState);
        markerInstance.dispatch = ssrFormState;
        isMatching.memoizedState = action;
        return [
            initialStateProp,
            ssrFormState,
            !1
        ];
    }
    function updateActionState(action) {
        var stateHook = updateWorkInProgressHook();
        return updateActionStateImpl(stateHook, currentHook, action);
    }
    function updateActionStateImpl(stateHook, currentStateHook, action) {
        currentStateHook = updateReducerImpl(stateHook, currentStateHook, actionStateReducer)[0];
        stateHook = updateReducer(basicStateReducer)[0];
        if ("object" === typeof currentStateHook && null !== currentStateHook && "function" === typeof currentStateHook.then) try {
            var state = useThenable(currentStateHook);
        } catch (x) {
            if (x === SuspenseException) throw SuspenseActionException;
            throw x;
        }
        else state = currentStateHook;
        currentStateHook = updateWorkInProgressHook();
        var actionQueue = currentStateHook.queue, dispatch = actionQueue.dispatch;
        action !== currentStateHook.memoizedState && (currentlyRenderingFiber.flags |= 2048, pushSimpleEffect(HasEffect | Passive, createEffectInstance(), actionStateActionEffect.bind(null, actionQueue, action), null));
        return [
            state,
            dispatch,
            stateHook
        ];
    }
    function actionStateActionEffect(actionQueue, action) {
        actionQueue.action = action;
    }
    function rerenderActionState(action) {
        var stateHook = updateWorkInProgressHook(), currentStateHook = currentHook;
        if (null !== currentStateHook) return updateActionStateImpl(stateHook, currentStateHook, action);
        updateWorkInProgressHook();
        stateHook = stateHook.memoizedState;
        currentStateHook = updateWorkInProgressHook();
        var dispatch = currentStateHook.queue.dispatch;
        currentStateHook.memoizedState = action;
        return [
            stateHook,
            dispatch,
            !1
        ];
    }
    function pushSimpleEffect(tag, inst, create, createDeps) {
        tag = {
            tag: tag,
            create: create,
            deps: createDeps,
            inst: inst,
            next: null
        };
        inst = currentlyRenderingFiber.updateQueue;
        null === inst && (inst = createFunctionComponentUpdateQueue(), currentlyRenderingFiber.updateQueue = inst);
        create = inst.lastEffect;
        null === create ? inst.lastEffect = tag.next = tag : (createDeps = create.next, create.next = tag, tag.next = createDeps, inst.lastEffect = tag);
        return tag;
    }
    function createEffectInstance() {
        return {
            destroy: void 0,
            resource: void 0
        };
    }
    function mountRef(initialValue) {
        var hook = mountWorkInProgressHook();
        initialValue = {
            current: initialValue
        };
        return hook.memoizedState = initialValue;
    }
    function mountEffectImpl(fiberFlags, hookFlags, create, createDeps) {
        var hook = mountWorkInProgressHook();
        createDeps = void 0 === createDeps ? null : createDeps;
        currentlyRenderingFiber.flags |= fiberFlags;
        hook.memoizedState = pushSimpleEffect(HasEffect | hookFlags, createEffectInstance(), create, createDeps);
    }
    function updateEffectImpl(fiberFlags, hookFlags, create, deps) {
        var hook = updateWorkInProgressHook();
        deps = void 0 === deps ? null : deps;
        var inst = hook.memoizedState.inst;
        null !== currentHook && null !== deps && areHookInputsEqual(deps, currentHook.memoizedState.deps) ? hook.memoizedState = pushSimpleEffect(hookFlags, inst, create, deps) : (currentlyRenderingFiber.flags |= fiberFlags, hook.memoizedState = pushSimpleEffect(HasEffect | hookFlags, inst, create, deps));
    }
    function mountEffect(create, createDeps) {
        (currentlyRenderingFiber.mode & StrictEffectsMode) !== NoMode && (currentlyRenderingFiber.mode & NoStrictPassiveEffectsMode) === NoMode ? mountEffectImpl(276826112, Passive, create, createDeps) : mountEffectImpl(8390656, Passive, create, createDeps);
    }
    function mountLayoutEffect(create, deps) {
        var fiberFlags = 4194308;
        (currentlyRenderingFiber.mode & StrictEffectsMode) !== NoMode && (fiberFlags |= 134217728);
        return mountEffectImpl(fiberFlags, Layout, create, deps);
    }
    function imperativeHandleEffect(create, ref) {
        if ("function" === typeof ref) {
            create = create();
            var refCleanup = ref(create);
            return function() {
                "function" === typeof refCleanup ? refCleanup() : ref(null);
            };
        }
        if (null !== ref && void 0 !== ref) return ref.hasOwnProperty("current") || console.error("Expected useImperativeHandle() first argument to either be a ref callback or React.createRef() object. Instead received: %s.", "an object with keys {" + Object.keys(ref).join(", ") + "}"), create = create(), ref.current = create, function() {
            ref.current = null;
        };
    }
    function mountImperativeHandle(ref, create, deps) {
        "function" !== typeof create && console.error("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", null !== create ? typeof create : "null");
        deps = null !== deps && void 0 !== deps ? deps.concat([
            ref
        ]) : null;
        var fiberFlags = 4194308;
        (currentlyRenderingFiber.mode & StrictEffectsMode) !== NoMode && (fiberFlags |= 134217728);
        mountEffectImpl(fiberFlags, Layout, imperativeHandleEffect.bind(null, create, ref), deps);
    }
    function updateImperativeHandle(ref, create, deps) {
        "function" !== typeof create && console.error("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", null !== create ? typeof create : "null");
        deps = null !== deps && void 0 !== deps ? deps.concat([
            ref
        ]) : null;
        updateEffectImpl(4, Layout, imperativeHandleEffect.bind(null, create, ref), deps);
    }
    function mountCallback(callback, deps) {
        mountWorkInProgressHook().memoizedState = [
            callback,
            void 0 === deps ? null : deps
        ];
        return callback;
    }
    function updateCallback(callback, deps) {
        var hook = updateWorkInProgressHook();
        deps = void 0 === deps ? null : deps;
        var prevState = hook.memoizedState;
        if (null !== deps && areHookInputsEqual(deps, prevState[1])) return prevState[0];
        hook.memoizedState = [
            callback,
            deps
        ];
        return callback;
    }
    function mountMemo(nextCreate, deps) {
        var hook = mountWorkInProgressHook();
        deps = void 0 === deps ? null : deps;
        var nextValue = nextCreate();
        if (shouldDoubleInvokeUserFnsInHooksDEV) {
            setIsStrictModeForDevtools(!0);
            try {
                nextCreate();
            } finally{
                setIsStrictModeForDevtools(!1);
            }
        }
        hook.memoizedState = [
            nextValue,
            deps
        ];
        return nextValue;
    }
    function updateMemo(nextCreate, deps) {
        var hook = updateWorkInProgressHook();
        deps = void 0 === deps ? null : deps;
        var prevState = hook.memoizedState;
        if (null !== deps && areHookInputsEqual(deps, prevState[1])) return prevState[0];
        prevState = nextCreate();
        if (shouldDoubleInvokeUserFnsInHooksDEV) {
            setIsStrictModeForDevtools(!0);
            try {
                nextCreate();
            } finally{
                setIsStrictModeForDevtools(!1);
            }
        }
        hook.memoizedState = [
            prevState,
            deps
        ];
        return prevState;
    }
    function mountDeferredValue(value, initialValue) {
        var hook = mountWorkInProgressHook();
        return mountDeferredValueImpl(hook, value, initialValue);
    }
    function updateDeferredValue(value, initialValue) {
        var hook = updateWorkInProgressHook();
        return updateDeferredValueImpl(hook, currentHook.memoizedState, value, initialValue);
    }
    function rerenderDeferredValue(value, initialValue) {
        var hook = updateWorkInProgressHook();
        return null === currentHook ? mountDeferredValueImpl(hook, value, initialValue) : updateDeferredValueImpl(hook, currentHook.memoizedState, value, initialValue);
    }
    function mountDeferredValueImpl(hook, value, initialValue) {
        if (void 0 === initialValue || 0 !== (renderLanes & 1073741824)) return hook.memoizedState = value;
        hook.memoizedState = initialValue;
        hook = requestDeferredLane();
        currentlyRenderingFiber.lanes |= hook;
        workInProgressRootSkippedLanes |= hook;
        return initialValue;
    }
    function updateDeferredValueImpl(hook, prevValue, value, initialValue) {
        if (objectIs(value, prevValue)) return value;
        if (null !== currentTreeHiddenStackCursor.current) return hook = mountDeferredValueImpl(hook, value, initialValue), objectIs(hook, prevValue) || (didReceiveUpdate = !0), hook;
        if (0 === (renderLanes & 42)) return didReceiveUpdate = !0, hook.memoizedState = value;
        hook = requestDeferredLane();
        currentlyRenderingFiber.lanes |= hook;
        workInProgressRootSkippedLanes |= hook;
        return prevValue;
    }
    function startTransition(fiber, queue, pendingState, finishedState, callback) {
        var previousPriority = ReactDOMSharedInternals.p;
        ReactDOMSharedInternals.p = 0 !== previousPriority && previousPriority < ContinuousEventPriority ? previousPriority : ContinuousEventPriority;
        var prevTransition = ReactSharedInternals.T, currentTransition = {};
        ReactSharedInternals.T = currentTransition;
        dispatchOptimisticSetState(fiber, !1, queue, pendingState);
        currentTransition._updatedFibers = new Set();
        try {
            var returnValue = callback(), onStartTransitionFinish = ReactSharedInternals.S;
            null !== onStartTransitionFinish && onStartTransitionFinish(currentTransition, returnValue);
            if (null !== returnValue && "object" === typeof returnValue && "function" === typeof returnValue.then) {
                var thenableForFinishedState = chainThenableValue(returnValue, finishedState);
                dispatchSetStateInternal(fiber, queue, thenableForFinishedState, requestUpdateLane(fiber));
            } else dispatchSetStateInternal(fiber, queue, finishedState, requestUpdateLane(fiber));
        } catch (error) {
            dispatchSetStateInternal(fiber, queue, {
                then: function() {},
                status: "rejected",
                reason: error
            }, requestUpdateLane(fiber));
        } finally{
            ReactDOMSharedInternals.p = previousPriority, ReactSharedInternals.T = prevTransition, null === prevTransition && currentTransition._updatedFibers && (fiber = currentTransition._updatedFibers.size, currentTransition._updatedFibers.clear(), 10 < fiber && console.warn("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table."));
        }
    }
    function startHostTransition(formFiber, pendingState, action, formData) {
        if (5 !== formFiber.tag) throw Error("Expected the form instance to be a HostComponent. This is a bug in React.");
        var queue = ensureFormComponentIsStateful(formFiber).queue;
        startTransition(formFiber, queue, pendingState, NotPendingTransition, null === action ? noop$2 : function() {
            requestFormReset$1(formFiber);
            return action(formData);
        });
    }
    function ensureFormComponentIsStateful(formFiber) {
        var existingStateHook = formFiber.memoizedState;
        if (null !== existingStateHook) return existingStateHook;
        existingStateHook = {
            memoizedState: NotPendingTransition,
            baseState: NotPendingTransition,
            baseQueue: null,
            queue: {
                pending: null,
                lanes: 0,
                dispatch: null,
                lastRenderedReducer: basicStateReducer,
                lastRenderedState: NotPendingTransition
            },
            next: null
        };
        var initialResetState = {};
        existingStateHook.next = {
            memoizedState: initialResetState,
            baseState: initialResetState,
            baseQueue: null,
            queue: {
                pending: null,
                lanes: 0,
                dispatch: null,
                lastRenderedReducer: basicStateReducer,
                lastRenderedState: initialResetState
            },
            next: null
        };
        formFiber.memoizedState = existingStateHook;
        formFiber = formFiber.alternate;
        null !== formFiber && (formFiber.memoizedState = existingStateHook);
        return existingStateHook;
    }
    function requestFormReset$1(formFiber) {
        null === ReactSharedInternals.T && console.error("requestFormReset was called outside a transition or action. To fix, move to an action, or wrap with startTransition.");
        var resetStateQueue = ensureFormComponentIsStateful(formFiber).next.queue;
        dispatchSetStateInternal(formFiber, resetStateQueue, {}, requestUpdateLane(formFiber));
    }
    function mountTransition() {
        var stateHook = mountStateImpl(!1);
        stateHook = startTransition.bind(null, currentlyRenderingFiber, stateHook.queue, !0, !1);
        mountWorkInProgressHook().memoizedState = stateHook;
        return [
            !1,
            stateHook
        ];
    }
    function updateTransition() {
        var booleanOrThenable = updateReducer(basicStateReducer)[0], start = updateWorkInProgressHook().memoizedState;
        return [
            "boolean" === typeof booleanOrThenable ? booleanOrThenable : useThenable(booleanOrThenable),
            start
        ];
    }
    function rerenderTransition() {
        var booleanOrThenable = rerenderReducer(basicStateReducer)[0], start = updateWorkInProgressHook().memoizedState;
        return [
            "boolean" === typeof booleanOrThenable ? booleanOrThenable : useThenable(booleanOrThenable),
            start
        ];
    }
    function useHostTransitionStatus() {
        return readContext(HostTransitionContext);
    }
    function mountId() {
        var hook = mountWorkInProgressHook(), identifierPrefix = workInProgressRoot.identifierPrefix;
        if (isHydrating) {
            var treeId = treeContextOverflow;
            var idWithLeadingBit = treeContextId;
            treeId = (idWithLeadingBit & ~(1 << 32 - clz32(idWithLeadingBit) - 1)).toString(32) + treeId;
            identifierPrefix = "\u00ab" + identifierPrefix + "R" + treeId;
            treeId = localIdCounter++;
            0 < treeId && (identifierPrefix += "H" + treeId.toString(32));
            identifierPrefix += "\u00bb";
        } else treeId = globalClientIdCounter++, identifierPrefix = "\u00ab" + identifierPrefix + "r" + treeId.toString(32) + "\u00bb";
        return hook.memoizedState = identifierPrefix;
    }
    function mountRefresh() {
        return mountWorkInProgressHook().memoizedState = refreshCache.bind(null, currentlyRenderingFiber);
    }
    function refreshCache(fiber, seedKey) {
        for(var provider = fiber.return; null !== provider;){
            switch(provider.tag){
                case 24:
                case 3:
                    var lane = requestUpdateLane(provider);
                    fiber = createUpdate(lane);
                    var root = enqueueUpdate(provider, fiber, lane);
                    null !== root && (scheduleUpdateOnFiber(root, provider, lane), entangleTransitions(root, provider, lane));
                    provider = createCache();
                    null !== seedKey && void 0 !== seedKey && null !== root && console.error("The seed argument is not enabled outside experimental channels.");
                    fiber.payload = {
                        cache: provider
                    };
                    return;
            }
            provider = provider.return;
        }
    }
    function dispatchReducerAction(fiber, queue, action) {
        var args = arguments;
        "function" === typeof args[3] && console.error("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
        args = requestUpdateLane(fiber);
        var update = {
            lane: args,
            revertLane: 0,
            action: action,
            hasEagerState: !1,
            eagerState: null,
            next: null
        };
        isRenderPhaseUpdate(fiber) ? enqueueRenderPhaseUpdate(queue, update) : (update = enqueueConcurrentHookUpdate(fiber, queue, update, args), null !== update && (scheduleUpdateOnFiber(update, fiber, args), entangleTransitionUpdate(update, queue, args)));
        markStateUpdateScheduled(fiber, args);
    }
    function dispatchSetState(fiber, queue, action) {
        var args = arguments;
        "function" === typeof args[3] && console.error("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
        args = requestUpdateLane(fiber);
        dispatchSetStateInternal(fiber, queue, action, args);
        markStateUpdateScheduled(fiber, args);
    }
    function dispatchSetStateInternal(fiber, queue, action, lane) {
        var update = {
            lane: lane,
            revertLane: 0,
            action: action,
            hasEagerState: !1,
            eagerState: null,
            next: null
        };
        if (isRenderPhaseUpdate(fiber)) enqueueRenderPhaseUpdate(queue, update);
        else {
            var alternate = fiber.alternate;
            if (0 === fiber.lanes && (null === alternate || 0 === alternate.lanes) && (alternate = queue.lastRenderedReducer, null !== alternate)) {
                var prevDispatcher = ReactSharedInternals.H;
                ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
                try {
                    var currentState = queue.lastRenderedState, eagerState = alternate(currentState, action);
                    update.hasEagerState = !0;
                    update.eagerState = eagerState;
                    if (objectIs(eagerState, currentState)) return enqueueUpdate$1(fiber, queue, update, 0), null === workInProgressRoot && finishQueueingConcurrentUpdates(), !1;
                } catch (error) {} finally{
                    ReactSharedInternals.H = prevDispatcher;
                }
            }
            action = enqueueConcurrentHookUpdate(fiber, queue, update, lane);
            if (null !== action) return scheduleUpdateOnFiber(action, fiber, lane), entangleTransitionUpdate(action, queue, lane), !0;
        }
        return !1;
    }
    function dispatchOptimisticSetState(fiber, throwIfDuringRender, queue, action) {
        null === ReactSharedInternals.T && 0 === currentEntangledLane && console.error("An optimistic state update occurred outside a transition or action. To fix, move the update to an action, or wrap with startTransition.");
        action = {
            lane: 2,
            revertLane: requestTransitionLane(),
            action: action,
            hasEagerState: !1,
            eagerState: null,
            next: null
        };
        if (isRenderPhaseUpdate(fiber)) {
            if (throwIfDuringRender) throw Error("Cannot update optimistic state while rendering.");
            console.error("Cannot call startTransition while rendering.");
        } else throwIfDuringRender = enqueueConcurrentHookUpdate(fiber, queue, action, 2), null !== throwIfDuringRender && scheduleUpdateOnFiber(throwIfDuringRender, fiber, 2);
        markStateUpdateScheduled(fiber, 2);
    }
    function isRenderPhaseUpdate(fiber) {
        var alternate = fiber.alternate;
        return fiber === currentlyRenderingFiber || null !== alternate && alternate === currentlyRenderingFiber;
    }
    function enqueueRenderPhaseUpdate(queue, update) {
        didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = !0;
        var pending = queue.pending;
        null === pending ? update.next = update : (update.next = pending.next, pending.next = update);
        queue.pending = update;
    }
    function entangleTransitionUpdate(root, queue, lane) {
        if (0 !== (lane & 4194048)) {
            var queueLanes = queue.lanes;
            queueLanes &= root.pendingLanes;
            lane |= queueLanes;
            queue.lanes = lane;
            markRootEntangled(root, lane);
        }
    }
    function pushDebugInfo(debugInfo) {
        var previousDebugInfo = currentDebugInfo;
        null != debugInfo && (currentDebugInfo = null === previousDebugInfo ? debugInfo : previousDebugInfo.concat(debugInfo));
        return previousDebugInfo;
    }
    function validateFragmentProps(element, fiber, returnFiber) {
        for(var keys = Object.keys(element.props), i = 0; i < keys.length; i++){
            var key = keys[i];
            if ("children" !== key && "key" !== key) {
                null === fiber && (fiber = createFiberFromElement(element, returnFiber.mode, 0), fiber._debugInfo = currentDebugInfo, fiber.return = returnFiber);
                runWithFiberInDEV(fiber, function(erroredKey) {
                    console.error("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", erroredKey);
                }, key);
                break;
            }
        }
    }
    function unwrapThenable(thenable) {
        var index = thenableIndexCounter;
        thenableIndexCounter += 1;
        null === thenableState && (thenableState = createThenableState());
        return trackUsedThenable(thenableState, thenable, index);
    }
    function coerceRef(workInProgress, element) {
        element = element.props.ref;
        workInProgress.ref = void 0 !== element ? element : null;
    }
    function throwOnInvalidObjectType(returnFiber, newChild) {
        if (newChild.$$typeof === REACT_LEGACY_ELEMENT_TYPE) throw Error('A React Element from an older version of React was rendered. This is not supported. It can happen if:\n- Multiple copies of the "react" package is used.\n- A library pre-bundled an old copy of "react" or "react/jsx-runtime".\n- A compiler tries to "inline" JSX instead of using the runtime.');
        returnFiber = Object.prototype.toString.call(newChild);
        throw Error("Objects are not valid as a React child (found: " + ("[object Object]" === returnFiber ? "object with keys {" + Object.keys(newChild).join(", ") + "}" : returnFiber) + "). If you meant to render a collection of children, use an array instead.");
    }
    function warnOnFunctionType(returnFiber, invalidChild) {
        var parentName = getComponentNameFromFiber(returnFiber) || "Component";
        ownerHasFunctionTypeWarning[parentName] || (ownerHasFunctionTypeWarning[parentName] = !0, invalidChild = invalidChild.displayName || invalidChild.name || "Component", 3 === returnFiber.tag ? console.error("Functions are not valid as a React child. This may happen if you return %s instead of <%s /> from render. Or maybe you meant to call this function rather than return it.\n  root.render(%s)", invalidChild, invalidChild, invalidChild) : console.error("Functions are not valid as a React child. This may happen if you return %s instead of <%s /> from render. Or maybe you meant to call this function rather than return it.\n  <%s>{%s}</%s>", invalidChild, invalidChild, parentName, invalidChild, parentName));
    }
    function warnOnSymbolType(returnFiber, invalidChild) {
        var parentName = getComponentNameFromFiber(returnFiber) || "Component";
        ownerHasSymbolTypeWarning[parentName] || (ownerHasSymbolTypeWarning[parentName] = !0, invalidChild = String(invalidChild), 3 === returnFiber.tag ? console.error("Symbols are not valid as a React child.\n  root.render(%s)", invalidChild) : console.error("Symbols are not valid as a React child.\n  <%s>%s</%s>", parentName, invalidChild, parentName));
    }
    function createChildReconciler(shouldTrackSideEffects) {
        function deleteChild(returnFiber, childToDelete) {
            if (shouldTrackSideEffects) {
                var deletions = returnFiber.deletions;
                null === deletions ? (returnFiber.deletions = [
                    childToDelete
                ], returnFiber.flags |= 16) : deletions.push(childToDelete);
            }
        }
        function deleteRemainingChildren(returnFiber, currentFirstChild) {
            if (!shouldTrackSideEffects) return null;
            for(; null !== currentFirstChild;)deleteChild(returnFiber, currentFirstChild), currentFirstChild = currentFirstChild.sibling;
            return null;
        }
        function mapRemainingChildren(currentFirstChild) {
            for(var existingChildren = new Map(); null !== currentFirstChild;)null !== currentFirstChild.key ? existingChildren.set(currentFirstChild.key, currentFirstChild) : existingChildren.set(currentFirstChild.index, currentFirstChild), currentFirstChild = currentFirstChild.sibling;
            return existingChildren;
        }
        function useFiber(fiber, pendingProps) {
            fiber = createWorkInProgress(fiber, pendingProps);
            fiber.index = 0;
            fiber.sibling = null;
            return fiber;
        }
        function placeChild(newFiber, lastPlacedIndex, newIndex) {
            newFiber.index = newIndex;
            if (!shouldTrackSideEffects) return newFiber.flags |= 1048576, lastPlacedIndex;
            newIndex = newFiber.alternate;
            if (null !== newIndex) return newIndex = newIndex.index, newIndex < lastPlacedIndex ? (newFiber.flags |= 67108866, lastPlacedIndex) : newIndex;
            newFiber.flags |= 67108866;
            return lastPlacedIndex;
        }
        function placeSingleChild(newFiber) {
            shouldTrackSideEffects && null === newFiber.alternate && (newFiber.flags |= 67108866);
            return newFiber;
        }
        function updateTextNode(returnFiber, current, textContent, lanes) {
            if (null === current || 6 !== current.tag) return current = createFiberFromText(textContent, returnFiber.mode, lanes), current.return = returnFiber, current._debugOwner = returnFiber, current._debugTask = returnFiber._debugTask, current._debugInfo = currentDebugInfo, current;
            current = useFiber(current, textContent);
            current.return = returnFiber;
            current._debugInfo = currentDebugInfo;
            return current;
        }
        function updateElement(returnFiber, current, element, lanes) {
            var elementType = element.type;
            if (elementType === REACT_FRAGMENT_TYPE) return current = updateFragment(returnFiber, current, element.props.children, lanes, element.key), validateFragmentProps(element, current, returnFiber), current;
            if (null !== current && (current.elementType === elementType || isCompatibleFamilyForHotReloading(current, element) || "object" === typeof elementType && null !== elementType && elementType.$$typeof === REACT_LAZY_TYPE && callLazyInitInDEV(elementType) === current.type)) return current = useFiber(current, element.props), coerceRef(current, element), current.return = returnFiber, current._debugOwner = element._owner, current._debugInfo = currentDebugInfo, current;
            current = createFiberFromElement(element, returnFiber.mode, lanes);
            coerceRef(current, element);
            current.return = returnFiber;
            current._debugInfo = currentDebugInfo;
            return current;
        }
        function updatePortal(returnFiber, current, portal, lanes) {
            if (null === current || 4 !== current.tag || current.stateNode.containerInfo !== portal.containerInfo || current.stateNode.implementation !== portal.implementation) return current = createFiberFromPortal(portal, returnFiber.mode, lanes), current.return = returnFiber, current._debugInfo = currentDebugInfo, current;
            current = useFiber(current, portal.children || []);
            current.return = returnFiber;
            current._debugInfo = currentDebugInfo;
            return current;
        }
        function updateFragment(returnFiber, current, fragment, lanes, key) {
            if (null === current || 7 !== current.tag) return current = createFiberFromFragment(fragment, returnFiber.mode, lanes, key), current.return = returnFiber, current._debugOwner = returnFiber, current._debugTask = returnFiber._debugTask, current._debugInfo = currentDebugInfo, current;
            current = useFiber(current, fragment);
            current.return = returnFiber;
            current._debugInfo = currentDebugInfo;
            return current;
        }
        function createChild(returnFiber, newChild, lanes) {
            if ("string" === typeof newChild && "" !== newChild || "number" === typeof newChild || "bigint" === typeof newChild) return newChild = createFiberFromText("" + newChild, returnFiber.mode, lanes), newChild.return = returnFiber, newChild._debugOwner = returnFiber, newChild._debugTask = returnFiber._debugTask, newChild._debugInfo = currentDebugInfo, newChild;
            if ("object" === typeof newChild && null !== newChild) {
                switch(newChild.$$typeof){
                    case REACT_ELEMENT_TYPE:
                        return lanes = createFiberFromElement(newChild, returnFiber.mode, lanes), coerceRef(lanes, newChild), lanes.return = returnFiber, returnFiber = pushDebugInfo(newChild._debugInfo), lanes._debugInfo = currentDebugInfo, currentDebugInfo = returnFiber, lanes;
                    case REACT_PORTAL_TYPE:
                        return newChild = createFiberFromPortal(newChild, returnFiber.mode, lanes), newChild.return = returnFiber, newChild._debugInfo = currentDebugInfo, newChild;
                    case REACT_LAZY_TYPE:
                        var _prevDebugInfo = pushDebugInfo(newChild._debugInfo);
                        newChild = callLazyInitInDEV(newChild);
                        returnFiber = createChild(returnFiber, newChild, lanes);
                        currentDebugInfo = _prevDebugInfo;
                        return returnFiber;
                }
                if (isArrayImpl(newChild) || getIteratorFn(newChild)) return lanes = createFiberFromFragment(newChild, returnFiber.mode, lanes, null), lanes.return = returnFiber, lanes._debugOwner = returnFiber, lanes._debugTask = returnFiber._debugTask, returnFiber = pushDebugInfo(newChild._debugInfo), lanes._debugInfo = currentDebugInfo, currentDebugInfo = returnFiber, lanes;
                if ("function" === typeof newChild.then) return _prevDebugInfo = pushDebugInfo(newChild._debugInfo), returnFiber = createChild(returnFiber, unwrapThenable(newChild), lanes), currentDebugInfo = _prevDebugInfo, returnFiber;
                if (newChild.$$typeof === REACT_CONTEXT_TYPE) return createChild(returnFiber, readContextDuringReconciliation(returnFiber, newChild), lanes);
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            "function" === typeof newChild && warnOnFunctionType(returnFiber, newChild);
            "symbol" === typeof newChild && warnOnSymbolType(returnFiber, newChild);
            return null;
        }
        function updateSlot(returnFiber, oldFiber, newChild, lanes) {
            var key = null !== oldFiber ? oldFiber.key : null;
            if ("string" === typeof newChild && "" !== newChild || "number" === typeof newChild || "bigint" === typeof newChild) return null !== key ? null : updateTextNode(returnFiber, oldFiber, "" + newChild, lanes);
            if ("object" === typeof newChild && null !== newChild) {
                switch(newChild.$$typeof){
                    case REACT_ELEMENT_TYPE:
                        return newChild.key === key ? (key = pushDebugInfo(newChild._debugInfo), returnFiber = updateElement(returnFiber, oldFiber, newChild, lanes), currentDebugInfo = key, returnFiber) : null;
                    case REACT_PORTAL_TYPE:
                        return newChild.key === key ? updatePortal(returnFiber, oldFiber, newChild, lanes) : null;
                    case REACT_LAZY_TYPE:
                        return key = pushDebugInfo(newChild._debugInfo), newChild = callLazyInitInDEV(newChild), returnFiber = updateSlot(returnFiber, oldFiber, newChild, lanes), currentDebugInfo = key, returnFiber;
                }
                if (isArrayImpl(newChild) || getIteratorFn(newChild)) {
                    if (null !== key) return null;
                    key = pushDebugInfo(newChild._debugInfo);
                    returnFiber = updateFragment(returnFiber, oldFiber, newChild, lanes, null);
                    currentDebugInfo = key;
                    return returnFiber;
                }
                if ("function" === typeof newChild.then) return key = pushDebugInfo(newChild._debugInfo), returnFiber = updateSlot(returnFiber, oldFiber, unwrapThenable(newChild), lanes), currentDebugInfo = key, returnFiber;
                if (newChild.$$typeof === REACT_CONTEXT_TYPE) return updateSlot(returnFiber, oldFiber, readContextDuringReconciliation(returnFiber, newChild), lanes);
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            "function" === typeof newChild && warnOnFunctionType(returnFiber, newChild);
            "symbol" === typeof newChild && warnOnSymbolType(returnFiber, newChild);
            return null;
        }
        function updateFromMap(existingChildren, returnFiber, newIdx, newChild, lanes) {
            if ("string" === typeof newChild && "" !== newChild || "number" === typeof newChild || "bigint" === typeof newChild) return existingChildren = existingChildren.get(newIdx) || null, updateTextNode(returnFiber, existingChildren, "" + newChild, lanes);
            if ("object" === typeof newChild && null !== newChild) {
                switch(newChild.$$typeof){
                    case REACT_ELEMENT_TYPE:
                        return newIdx = existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, existingChildren = pushDebugInfo(newChild._debugInfo), returnFiber = updateElement(returnFiber, newIdx, newChild, lanes), currentDebugInfo = existingChildren, returnFiber;
                    case REACT_PORTAL_TYPE:
                        return existingChildren = existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, updatePortal(returnFiber, existingChildren, newChild, lanes);
                    case REACT_LAZY_TYPE:
                        var _prevDebugInfo7 = pushDebugInfo(newChild._debugInfo);
                        newChild = callLazyInitInDEV(newChild);
                        returnFiber = updateFromMap(existingChildren, returnFiber, newIdx, newChild, lanes);
                        currentDebugInfo = _prevDebugInfo7;
                        return returnFiber;
                }
                if (isArrayImpl(newChild) || getIteratorFn(newChild)) return newIdx = existingChildren.get(newIdx) || null, existingChildren = pushDebugInfo(newChild._debugInfo), returnFiber = updateFragment(returnFiber, newIdx, newChild, lanes, null), currentDebugInfo = existingChildren, returnFiber;
                if ("function" === typeof newChild.then) return _prevDebugInfo7 = pushDebugInfo(newChild._debugInfo), returnFiber = updateFromMap(existingChildren, returnFiber, newIdx, unwrapThenable(newChild), lanes), currentDebugInfo = _prevDebugInfo7, returnFiber;
                if (newChild.$$typeof === REACT_CONTEXT_TYPE) return updateFromMap(existingChildren, returnFiber, newIdx, readContextDuringReconciliation(returnFiber, newChild), lanes);
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            "function" === typeof newChild && warnOnFunctionType(returnFiber, newChild);
            "symbol" === typeof newChild && warnOnSymbolType(returnFiber, newChild);
            return null;
        }
        function warnOnInvalidKey(returnFiber, workInProgress, child, knownKeys) {
            if ("object" !== typeof child || null === child) return knownKeys;
            switch(child.$$typeof){
                case REACT_ELEMENT_TYPE:
                case REACT_PORTAL_TYPE:
                    warnForMissingKey(returnFiber, workInProgress, child);
                    var key = child.key;
                    if ("string" !== typeof key) break;
                    if (null === knownKeys) {
                        knownKeys = new Set();
                        knownKeys.add(key);
                        break;
                    }
                    if (!knownKeys.has(key)) {
                        knownKeys.add(key);
                        break;
                    }
                    runWithFiberInDEV(workInProgress, function() {
                        console.error("Encountered two children with the same key, `%s`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted \u2014 the behavior is unsupported and could change in a future version.", key);
                    });
                    break;
                case REACT_LAZY_TYPE:
                    child = callLazyInitInDEV(child), warnOnInvalidKey(returnFiber, workInProgress, child, knownKeys);
            }
            return knownKeys;
        }
        function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, lanes) {
            for(var knownKeys = null, resultingFirstChild = null, previousNewFiber = null, oldFiber = currentFirstChild, newIdx = currentFirstChild = 0, nextOldFiber = null; null !== oldFiber && newIdx < newChildren.length; newIdx++){
                oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
                var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], lanes);
                if (null === newFiber) {
                    null === oldFiber && (oldFiber = nextOldFiber);
                    break;
                }
                knownKeys = warnOnInvalidKey(returnFiber, newFiber, newChildren[newIdx], knownKeys);
                shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber);
                currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
                null === previousNewFiber ? resultingFirstChild = newFiber : previousNewFiber.sibling = newFiber;
                previousNewFiber = newFiber;
                oldFiber = nextOldFiber;
            }
            if (newIdx === newChildren.length) return deleteRemainingChildren(returnFiber, oldFiber), isHydrating && pushTreeFork(returnFiber, newIdx), resultingFirstChild;
            if (null === oldFiber) {
                for(; newIdx < newChildren.length; newIdx++)oldFiber = createChild(returnFiber, newChildren[newIdx], lanes), null !== oldFiber && (knownKeys = warnOnInvalidKey(returnFiber, oldFiber, newChildren[newIdx], knownKeys), currentFirstChild = placeChild(oldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = oldFiber : previousNewFiber.sibling = oldFiber, previousNewFiber = oldFiber);
                isHydrating && pushTreeFork(returnFiber, newIdx);
                return resultingFirstChild;
            }
            for(oldFiber = mapRemainingChildren(oldFiber); newIdx < newChildren.length; newIdx++)nextOldFiber = updateFromMap(oldFiber, returnFiber, newIdx, newChildren[newIdx], lanes), null !== nextOldFiber && (knownKeys = warnOnInvalidKey(returnFiber, nextOldFiber, newChildren[newIdx], knownKeys), shouldTrackSideEffects && null !== nextOldFiber.alternate && oldFiber.delete(null === nextOldFiber.key ? newIdx : nextOldFiber.key), currentFirstChild = placeChild(nextOldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = nextOldFiber : previousNewFiber.sibling = nextOldFiber, previousNewFiber = nextOldFiber);
            shouldTrackSideEffects && oldFiber.forEach(function(child) {
                return deleteChild(returnFiber, child);
            });
            isHydrating && pushTreeFork(returnFiber, newIdx);
            return resultingFirstChild;
        }
        function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildren, lanes) {
            if (null == newChildren) throw Error("An iterable object provided no iterator.");
            for(var resultingFirstChild = null, previousNewFiber = null, oldFiber = currentFirstChild, newIdx = currentFirstChild = 0, nextOldFiber = null, knownKeys = null, step = newChildren.next(); null !== oldFiber && !step.done; newIdx++, step = newChildren.next()){
                oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
                var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);
                if (null === newFiber) {
                    null === oldFiber && (oldFiber = nextOldFiber);
                    break;
                }
                knownKeys = warnOnInvalidKey(returnFiber, newFiber, step.value, knownKeys);
                shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber);
                currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
                null === previousNewFiber ? resultingFirstChild = newFiber : previousNewFiber.sibling = newFiber;
                previousNewFiber = newFiber;
                oldFiber = nextOldFiber;
            }
            if (step.done) return deleteRemainingChildren(returnFiber, oldFiber), isHydrating && pushTreeFork(returnFiber, newIdx), resultingFirstChild;
            if (null === oldFiber) {
                for(; !step.done; newIdx++, step = newChildren.next())oldFiber = createChild(returnFiber, step.value, lanes), null !== oldFiber && (knownKeys = warnOnInvalidKey(returnFiber, oldFiber, step.value, knownKeys), currentFirstChild = placeChild(oldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = oldFiber : previousNewFiber.sibling = oldFiber, previousNewFiber = oldFiber);
                isHydrating && pushTreeFork(returnFiber, newIdx);
                return resultingFirstChild;
            }
            for(oldFiber = mapRemainingChildren(oldFiber); !step.done; newIdx++, step = newChildren.next())nextOldFiber = updateFromMap(oldFiber, returnFiber, newIdx, step.value, lanes), null !== nextOldFiber && (knownKeys = warnOnInvalidKey(returnFiber, nextOldFiber, step.value, knownKeys), shouldTrackSideEffects && null !== nextOldFiber.alternate && oldFiber.delete(null === nextOldFiber.key ? newIdx : nextOldFiber.key), currentFirstChild = placeChild(nextOldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = nextOldFiber : previousNewFiber.sibling = nextOldFiber, previousNewFiber = nextOldFiber);
            shouldTrackSideEffects && oldFiber.forEach(function(child) {
                return deleteChild(returnFiber, child);
            });
            isHydrating && pushTreeFork(returnFiber, newIdx);
            return resultingFirstChild;
        }
        function reconcileChildFibersImpl(returnFiber, currentFirstChild, newChild, lanes) {
            "object" === typeof newChild && null !== newChild && newChild.type === REACT_FRAGMENT_TYPE && null === newChild.key && (validateFragmentProps(newChild, null, returnFiber), newChild = newChild.props.children);
            if ("object" === typeof newChild && null !== newChild) {
                switch(newChild.$$typeof){
                    case REACT_ELEMENT_TYPE:
                        var prevDebugInfo = pushDebugInfo(newChild._debugInfo);
                        a: {
                            for(var key = newChild.key; null !== currentFirstChild;){
                                if (currentFirstChild.key === key) {
                                    key = newChild.type;
                                    if (key === REACT_FRAGMENT_TYPE) {
                                        if (7 === currentFirstChild.tag) {
                                            deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                                            lanes = useFiber(currentFirstChild, newChild.props.children);
                                            lanes.return = returnFiber;
                                            lanes._debugOwner = newChild._owner;
                                            lanes._debugInfo = currentDebugInfo;
                                            validateFragmentProps(newChild, lanes, returnFiber);
                                            returnFiber = lanes;
                                            break a;
                                        }
                                    } else if (currentFirstChild.elementType === key || isCompatibleFamilyForHotReloading(currentFirstChild, newChild) || "object" === typeof key && null !== key && key.$$typeof === REACT_LAZY_TYPE && callLazyInitInDEV(key) === currentFirstChild.type) {
                                        deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                                        lanes = useFiber(currentFirstChild, newChild.props);
                                        coerceRef(lanes, newChild);
                                        lanes.return = returnFiber;
                                        lanes._debugOwner = newChild._owner;
                                        lanes._debugInfo = currentDebugInfo;
                                        returnFiber = lanes;
                                        break a;
                                    }
                                    deleteRemainingChildren(returnFiber, currentFirstChild);
                                    break;
                                } else deleteChild(returnFiber, currentFirstChild);
                                currentFirstChild = currentFirstChild.sibling;
                            }
                            newChild.type === REACT_FRAGMENT_TYPE ? (lanes = createFiberFromFragment(newChild.props.children, returnFiber.mode, lanes, newChild.key), lanes.return = returnFiber, lanes._debugOwner = returnFiber, lanes._debugTask = returnFiber._debugTask, lanes._debugInfo = currentDebugInfo, validateFragmentProps(newChild, lanes, returnFiber), returnFiber = lanes) : (lanes = createFiberFromElement(newChild, returnFiber.mode, lanes), coerceRef(lanes, newChild), lanes.return = returnFiber, lanes._debugInfo = currentDebugInfo, returnFiber = lanes);
                        }
                        returnFiber = placeSingleChild(returnFiber);
                        currentDebugInfo = prevDebugInfo;
                        return returnFiber;
                    case REACT_PORTAL_TYPE:
                        a: {
                            prevDebugInfo = newChild;
                            for(newChild = prevDebugInfo.key; null !== currentFirstChild;){
                                if (currentFirstChild.key === newChild) {
                                    if (4 === currentFirstChild.tag && currentFirstChild.stateNode.containerInfo === prevDebugInfo.containerInfo && currentFirstChild.stateNode.implementation === prevDebugInfo.implementation) {
                                        deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                                        lanes = useFiber(currentFirstChild, prevDebugInfo.children || []);
                                        lanes.return = returnFiber;
                                        returnFiber = lanes;
                                        break a;
                                    } else {
                                        deleteRemainingChildren(returnFiber, currentFirstChild);
                                        break;
                                    }
                                } else deleteChild(returnFiber, currentFirstChild);
                                currentFirstChild = currentFirstChild.sibling;
                            }
                            lanes = createFiberFromPortal(prevDebugInfo, returnFiber.mode, lanes);
                            lanes.return = returnFiber;
                            returnFiber = lanes;
                        }
                        return placeSingleChild(returnFiber);
                    case REACT_LAZY_TYPE:
                        return prevDebugInfo = pushDebugInfo(newChild._debugInfo), newChild = callLazyInitInDEV(newChild), returnFiber = reconcileChildFibersImpl(returnFiber, currentFirstChild, newChild, lanes), currentDebugInfo = prevDebugInfo, returnFiber;
                }
                if (isArrayImpl(newChild)) return prevDebugInfo = pushDebugInfo(newChild._debugInfo), returnFiber = reconcileChildrenArray(returnFiber, currentFirstChild, newChild, lanes), currentDebugInfo = prevDebugInfo, returnFiber;
                if (getIteratorFn(newChild)) {
                    prevDebugInfo = pushDebugInfo(newChild._debugInfo);
                    key = getIteratorFn(newChild);
                    if ("function" !== typeof key) throw Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.");
                    var newChildren = key.call(newChild);
                    if (newChildren === newChild) {
                        if (0 !== returnFiber.tag || "[object GeneratorFunction]" !== Object.prototype.toString.call(returnFiber.type) || "[object Generator]" !== Object.prototype.toString.call(newChildren)) didWarnAboutGenerators || console.error("Using Iterators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. You can also use an Iterable that can iterate multiple times over the same items."), didWarnAboutGenerators = !0;
                    } else newChild.entries !== key || didWarnAboutMaps || (console.error("Using Maps as children is not supported. Use an array of keyed ReactElements instead."), didWarnAboutMaps = !0);
                    returnFiber = reconcileChildrenIterator(returnFiber, currentFirstChild, newChildren, lanes);
                    currentDebugInfo = prevDebugInfo;
                    return returnFiber;
                }
                if ("function" === typeof newChild.then) return prevDebugInfo = pushDebugInfo(newChild._debugInfo), returnFiber = reconcileChildFibersImpl(returnFiber, currentFirstChild, unwrapThenable(newChild), lanes), currentDebugInfo = prevDebugInfo, returnFiber;
                if (newChild.$$typeof === REACT_CONTEXT_TYPE) return reconcileChildFibersImpl(returnFiber, currentFirstChild, readContextDuringReconciliation(returnFiber, newChild), lanes);
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            if ("string" === typeof newChild && "" !== newChild || "number" === typeof newChild || "bigint" === typeof newChild) return prevDebugInfo = "" + newChild, null !== currentFirstChild && 6 === currentFirstChild.tag ? (deleteRemainingChildren(returnFiber, currentFirstChild.sibling), lanes = useFiber(currentFirstChild, prevDebugInfo), lanes.return = returnFiber, returnFiber = lanes) : (deleteRemainingChildren(returnFiber, currentFirstChild), lanes = createFiberFromText(prevDebugInfo, returnFiber.mode, lanes), lanes.return = returnFiber, lanes._debugOwner = returnFiber, lanes._debugTask = returnFiber._debugTask, lanes._debugInfo = currentDebugInfo, returnFiber = lanes), placeSingleChild(returnFiber);
            "function" === typeof newChild && warnOnFunctionType(returnFiber, newChild);
            "symbol" === typeof newChild && warnOnSymbolType(returnFiber, newChild);
            return deleteRemainingChildren(returnFiber, currentFirstChild);
        }
        return function(returnFiber, currentFirstChild, newChild, lanes) {
            var prevDebugInfo = currentDebugInfo;
            currentDebugInfo = null;
            try {
                thenableIndexCounter = 0;
                var firstChildFiber = reconcileChildFibersImpl(returnFiber, currentFirstChild, newChild, lanes);
                thenableState = null;
                return firstChildFiber;
            } catch (x) {
                if (x === SuspenseException || x === SuspenseActionException) throw x;
                var fiber = createFiber(29, x, null, returnFiber.mode);
                fiber.lanes = lanes;
                fiber.return = returnFiber;
                var debugInfo = fiber._debugInfo = currentDebugInfo;
                fiber._debugOwner = returnFiber._debugOwner;
                fiber._debugTask = returnFiber._debugTask;
                if (null != debugInfo) {
                    for(var i = debugInfo.length - 1; 0 <= i; i--)if ("string" === typeof debugInfo[i].stack) {
                        fiber._debugOwner = debugInfo[i];
                        fiber._debugTask = debugInfo[i].debugTask;
                        break;
                    }
                }
                return fiber;
            } finally{
                currentDebugInfo = prevDebugInfo;
            }
        };
    }
    function pushPrimaryTreeSuspenseHandler(handler) {
        var current = handler.alternate;
        push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask, handler);
        push(suspenseHandlerStackCursor, handler, handler);
        null === shellBoundary && (null === current || null !== currentTreeHiddenStackCursor.current ? shellBoundary = handler : null !== current.memoizedState && (shellBoundary = handler));
    }
    function pushOffscreenSuspenseHandler(fiber) {
        if (22 === fiber.tag) {
            if (push(suspenseStackCursor, suspenseStackCursor.current, fiber), push(suspenseHandlerStackCursor, fiber, fiber), null === shellBoundary) {
                var current = fiber.alternate;
                null !== current && null !== current.memoizedState && (shellBoundary = fiber);
            }
        } else reuseSuspenseHandlerOnStack(fiber);
    }
    function reuseSuspenseHandlerOnStack(fiber) {
        push(suspenseStackCursor, suspenseStackCursor.current, fiber);
        push(suspenseHandlerStackCursor, suspenseHandlerStackCursor.current, fiber);
    }
    function popSuspenseHandler(fiber) {
        pop(suspenseHandlerStackCursor, fiber);
        shellBoundary === fiber && (shellBoundary = null);
        pop(suspenseStackCursor, fiber);
    }
    function findFirstSuspended(row) {
        for(var node = row; null !== node;){
            if (13 === node.tag) {
                var state = node.memoizedState;
                if (null !== state && (state = state.dehydrated, null === state || state.data === SUSPENSE_PENDING_START_DATA || isSuspenseInstanceFallback(state))) return node;
            } else if (19 === node.tag && void 0 !== node.memoizedProps.revealOrder) {
                if (0 !== (node.flags & 128)) return node;
            } else if (null !== node.child) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === row) break;
            for(; null === node.sibling;){
                if (null === node.return || node.return === row) return null;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        }
        return null;
    }
    function warnOnInvalidCallback(callback) {
        if (null !== callback && "function" !== typeof callback) {
            var key = String(callback);
            didWarnOnInvalidCallback.has(key) || (didWarnOnInvalidCallback.add(key), console.error("Expected the last optional `callback` argument to be a function. Instead received: %s.", callback));
        }
    }
    function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {
        var prevState = workInProgress.memoizedState, partialState = getDerivedStateFromProps(nextProps, prevState);
        if (workInProgress.mode & StrictLegacyMode) {
            setIsStrictModeForDevtools(!0);
            try {
                partialState = getDerivedStateFromProps(nextProps, prevState);
            } finally{
                setIsStrictModeForDevtools(!1);
            }
        }
        void 0 === partialState && (ctor = getComponentNameFromType(ctor) || "Component", didWarnAboutUndefinedDerivedState.has(ctor) || (didWarnAboutUndefinedDerivedState.add(ctor), console.error("%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.", ctor)));
        prevState = null === partialState || void 0 === partialState ? prevState : assign({}, prevState, partialState);
        workInProgress.memoizedState = prevState;
        0 === workInProgress.lanes && (workInProgress.updateQueue.baseState = prevState);
    }
    function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {
        var instance = workInProgress.stateNode;
        if ("function" === typeof instance.shouldComponentUpdate) {
            oldProps = instance.shouldComponentUpdate(newProps, newState, nextContext);
            if (workInProgress.mode & StrictLegacyMode) {
                setIsStrictModeForDevtools(!0);
                try {
                    oldProps = instance.shouldComponentUpdate(newProps, newState, nextContext);
                } finally{
                    setIsStrictModeForDevtools(!1);
                }
            }
            void 0 === oldProps && console.error("%s.shouldComponentUpdate(): Returned undefined instead of a boolean value. Make sure to return true or false.", getComponentNameFromType(ctor) || "Component");
            return oldProps;
        }
        return ctor.prototype && ctor.prototype.isPureReactComponent ? !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState) : !0;
    }
    function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {
        var oldState = instance.state;
        "function" === typeof instance.componentWillReceiveProps && instance.componentWillReceiveProps(newProps, nextContext);
        "function" === typeof instance.UNSAFE_componentWillReceiveProps && instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
        instance.state !== oldState && (workInProgress = getComponentNameFromFiber(workInProgress) || "Component", didWarnAboutStateAssignmentForComponent.has(workInProgress) || (didWarnAboutStateAssignmentForComponent.add(workInProgress), console.error("%s.componentWillReceiveProps(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", workInProgress)), classComponentUpdater.enqueueReplaceState(instance, instance.state, null));
    }
    function resolveClassComponentProps(Component, baseProps) {
        var newProps = baseProps;
        if ("ref" in baseProps) {
            newProps = {};
            for(var propName in baseProps)"ref" !== propName && (newProps[propName] = baseProps[propName]);
        }
        if (Component = Component.defaultProps) {
            newProps === baseProps && (newProps = assign({}, newProps));
            for(var _propName in Component)void 0 === newProps[_propName] && (newProps[_propName] = Component[_propName]);
        }
        return newProps;
    }
    function defaultOnUncaughtError(error) {
        reportGlobalError(error);
        console.warn("%s\n\n%s\n", componentName ? "An error occurred in the <" + componentName + "> component." : "An error occurred in one of your React components.", "Consider adding an error boundary to your tree to customize error handling behavior.\nVisit https://react.dev/link/error-boundaries to learn more about error boundaries.");
    }
    function defaultOnCaughtError(error) {
        var componentNameMessage = componentName ? "The above error occurred in the <" + componentName + "> component." : "The above error occurred in one of your React components.", recreateMessage = "React will try to recreate this component tree from scratch using the error boundary you provided, " + ((errorBoundaryName || "Anonymous") + ".");
        if ("object" === typeof error && null !== error && "string" === typeof error.environmentName) {
            var JSCompiler_inline_result = error.environmentName;
            error = [
                "%o\n\n%s\n\n%s\n",
                error,
                componentNameMessage,
                recreateMessage
            ].slice(0);
            "string" === typeof error[0] ? error.splice(0, 1, badgeFormat + error[0], badgeStyle, pad + JSCompiler_inline_result + pad, resetStyle) : error.splice(0, 0, badgeFormat, badgeStyle, pad + JSCompiler_inline_result + pad, resetStyle);
            error.unshift(console);
            JSCompiler_inline_result = bind.apply(console.error, error);
            JSCompiler_inline_result();
        } else console.error("%o\n\n%s\n\n%s\n", error, componentNameMessage, recreateMessage);
    }
    function defaultOnRecoverableError(error) {
        reportGlobalError(error);
    }
    function logUncaughtError(root, errorInfo) {
        try {
            componentName = errorInfo.source ? getComponentNameFromFiber(errorInfo.source) : null;
            errorBoundaryName = null;
            var error = errorInfo.value;
            if (null !== ReactSharedInternals.actQueue) ReactSharedInternals.thrownErrors.push(error);
            else {
                var onUncaughtError = root.onUncaughtError;
                onUncaughtError(error, {
                    componentStack: errorInfo.stack
                });
            }
        } catch (e$5) {
            setTimeout(function() {
                throw e$5;
            });
        }
    }
    function logCaughtError(root, boundary, errorInfo) {
        try {
            componentName = errorInfo.source ? getComponentNameFromFiber(errorInfo.source) : null;
            errorBoundaryName = getComponentNameFromFiber(boundary);
            var onCaughtError = root.onCaughtError;
            onCaughtError(errorInfo.value, {
                componentStack: errorInfo.stack,
                errorBoundary: 1 === boundary.tag ? boundary.stateNode : null
            });
        } catch (e$6) {
            setTimeout(function() {
                throw e$6;
            });
        }
    }
    function createRootErrorUpdate(root, errorInfo, lane) {
        lane = createUpdate(lane);
        lane.tag = CaptureUpdate;
        lane.payload = {
            element: null
        };
        lane.callback = function() {
            runWithFiberInDEV(errorInfo.source, logUncaughtError, root, errorInfo);
        };
        return lane;
    }
    function createClassErrorUpdate(lane) {
        lane = createUpdate(lane);
        lane.tag = CaptureUpdate;
        return lane;
    }
    function initializeClassErrorUpdate(update, root, fiber, errorInfo) {
        var getDerivedStateFromError = fiber.type.getDerivedStateFromError;
        if ("function" === typeof getDerivedStateFromError) {
            var error = errorInfo.value;
            update.payload = function() {
                return getDerivedStateFromError(error);
            };
            update.callback = function() {
                markFailedErrorBoundaryForHotReloading(fiber);
                runWithFiberInDEV(errorInfo.source, logCaughtError, root, fiber, errorInfo);
            };
        }
        var inst = fiber.stateNode;
        null !== inst && "function" === typeof inst.componentDidCatch && (update.callback = function() {
            markFailedErrorBoundaryForHotReloading(fiber);
            runWithFiberInDEV(errorInfo.source, logCaughtError, root, fiber, errorInfo);
            "function" !== typeof getDerivedStateFromError && (null === legacyErrorBoundariesThatAlreadyFailed ? legacyErrorBoundariesThatAlreadyFailed = new Set([
                this
            ]) : legacyErrorBoundariesThatAlreadyFailed.add(this));
            callComponentDidCatchInDEV(this, errorInfo);
            "function" === typeof getDerivedStateFromError || 0 === (fiber.lanes & 2) && console.error("%s: Error boundaries should implement getDerivedStateFromError(). In that method, return a state update to display an error message or fallback UI.", getComponentNameFromFiber(fiber) || "Unknown");
        });
    }
    function throwException(root, returnFiber, sourceFiber, value, rootRenderLanes) {
        sourceFiber.flags |= 32768;
        isDevToolsPresent && restorePendingUpdaters(root, rootRenderLanes);
        if (null !== value && "object" === typeof value && "function" === typeof value.then) {
            returnFiber = sourceFiber.alternate;
            null !== returnFiber && propagateParentContextChanges(returnFiber, sourceFiber, rootRenderLanes, !0);
            isHydrating && (didSuspendOrErrorDEV = !0);
            sourceFiber = suspenseHandlerStackCursor.current;
            if (null !== sourceFiber) {
                switch(sourceFiber.tag){
                    case 13:
                        return null === shellBoundary ? renderDidSuspendDelayIfPossible() : null === sourceFiber.alternate && workInProgressRootExitStatus === RootInProgress && (workInProgressRootExitStatus = RootSuspended), sourceFiber.flags &= -257, sourceFiber.flags |= 65536, sourceFiber.lanes = rootRenderLanes, value === noopSuspenseyCommitThenable ? sourceFiber.flags |= 16384 : (returnFiber = sourceFiber.updateQueue, null === returnFiber ? sourceFiber.updateQueue = new Set([
                            value
                        ]) : returnFiber.add(value), attachPingListener(root, value, rootRenderLanes)), !1;
                    case 22:
                        return sourceFiber.flags |= 65536, value === noopSuspenseyCommitThenable ? sourceFiber.flags |= 16384 : (returnFiber = sourceFiber.updateQueue, null === returnFiber ? (returnFiber = {
                            transitions: null,
                            markerInstances: null,
                            retryQueue: new Set([
                                value
                            ])
                        }, sourceFiber.updateQueue = returnFiber) : (sourceFiber = returnFiber.retryQueue, null === sourceFiber ? returnFiber.retryQueue = new Set([
                            value
                        ]) : sourceFiber.add(value)), attachPingListener(root, value, rootRenderLanes)), !1;
                }
                throw Error("Unexpected Suspense handler tag (" + sourceFiber.tag + "). This is a bug in React.");
            }
            attachPingListener(root, value, rootRenderLanes);
            renderDidSuspendDelayIfPossible();
            return !1;
        }
        if (isHydrating) return didSuspendOrErrorDEV = !0, returnFiber = suspenseHandlerStackCursor.current, null !== returnFiber ? (0 === (returnFiber.flags & 65536) && (returnFiber.flags |= 256), returnFiber.flags |= 65536, returnFiber.lanes = rootRenderLanes, value !== HydrationMismatchException && queueHydrationError(createCapturedValueAtFiber(Error("There was an error while hydrating but React was able to recover by instead client rendering from the nearest Suspense boundary.", {
            cause: value
        }), sourceFiber))) : (value !== HydrationMismatchException && queueHydrationError(createCapturedValueAtFiber(Error("There was an error while hydrating but React was able to recover by instead client rendering the entire root.", {
            cause: value
        }), sourceFiber)), root = root.current.alternate, root.flags |= 65536, rootRenderLanes &= -rootRenderLanes, root.lanes |= rootRenderLanes, value = createCapturedValueAtFiber(value, sourceFiber), rootRenderLanes = createRootErrorUpdate(root.stateNode, value, rootRenderLanes), enqueueCapturedUpdate(root, rootRenderLanes), workInProgressRootExitStatus !== RootSuspendedWithDelay && (workInProgressRootExitStatus = RootErrored)), !1;
        var error = createCapturedValueAtFiber(Error("There was an error during concurrent rendering but React was able to recover by instead synchronously rendering the entire root.", {
            cause: value
        }), sourceFiber);
        null === workInProgressRootConcurrentErrors ? workInProgressRootConcurrentErrors = [
            error
        ] : workInProgressRootConcurrentErrors.push(error);
        workInProgressRootExitStatus !== RootSuspendedWithDelay && (workInProgressRootExitStatus = RootErrored);
        if (null === returnFiber) return !0;
        value = createCapturedValueAtFiber(value, sourceFiber);
        sourceFiber = returnFiber;
        do {
            switch(sourceFiber.tag){
                case 3:
                    return sourceFiber.flags |= 65536, root = rootRenderLanes & -rootRenderLanes, sourceFiber.lanes |= root, root = createRootErrorUpdate(sourceFiber.stateNode, value, root), enqueueCapturedUpdate(sourceFiber, root), !1;
                case 1:
                    if (returnFiber = sourceFiber.type, error = sourceFiber.stateNode, 0 === (sourceFiber.flags & 128) && ("function" === typeof returnFiber.getDerivedStateFromError || null !== error && "function" === typeof error.componentDidCatch && (null === legacyErrorBoundariesThatAlreadyFailed || !legacyErrorBoundariesThatAlreadyFailed.has(error)))) return sourceFiber.flags |= 65536, rootRenderLanes &= -rootRenderLanes, sourceFiber.lanes |= rootRenderLanes, rootRenderLanes = createClassErrorUpdate(rootRenderLanes), initializeClassErrorUpdate(rootRenderLanes, root, sourceFiber, value), enqueueCapturedUpdate(sourceFiber, rootRenderLanes), !1;
            }
            sourceFiber = sourceFiber.return;
        }while (null !== sourceFiber);
        return !1;
    }
    function reconcileChildren(current, workInProgress, nextChildren, renderLanes) {
        workInProgress.child = null === current ? mountChildFibers(workInProgress, null, nextChildren, renderLanes) : reconcileChildFibers(workInProgress, current.child, nextChildren, renderLanes);
    }
    function updateForwardRef(current, workInProgress, Component, nextProps, renderLanes) {
        Component = Component.render;
        var ref = workInProgress.ref;
        if ("ref" in nextProps) {
            var propsWithoutRef = {};
            for(var key in nextProps)"ref" !== key && (propsWithoutRef[key] = nextProps[key]);
        } else propsWithoutRef = nextProps;
        prepareToReadContext(workInProgress);
        markComponentRenderStarted(workInProgress);
        nextProps = renderWithHooks(current, workInProgress, Component, propsWithoutRef, ref, renderLanes);
        key = checkDidRenderIdHook();
        markComponentRenderStopped();
        if (null !== current && !didReceiveUpdate) return bailoutHooks(current, workInProgress, renderLanes), bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        isHydrating && key && pushMaterializedTreeId(workInProgress);
        workInProgress.flags |= 1;
        reconcileChildren(current, workInProgress, nextProps, renderLanes);
        return workInProgress.child;
    }
    function updateMemoComponent(current, workInProgress, Component, nextProps, renderLanes) {
        if (null === current) {
            var type = Component.type;
            if ("function" === typeof type && !shouldConstruct(type) && void 0 === type.defaultProps && null === Component.compare) return Component = resolveFunctionForHotReloading(type), workInProgress.tag = 15, workInProgress.type = Component, validateFunctionComponentInDev(workInProgress, type), updateSimpleMemoComponent(current, workInProgress, Component, nextProps, renderLanes);
            current = createFiberFromTypeAndProps(Component.type, null, nextProps, workInProgress, workInProgress.mode, renderLanes);
            current.ref = workInProgress.ref;
            current.return = workInProgress;
            return workInProgress.child = current;
        }
        type = current.child;
        if (!checkScheduledUpdateOrContext(current, renderLanes)) {
            var prevProps = type.memoizedProps;
            Component = Component.compare;
            Component = null !== Component ? Component : shallowEqual;
            if (Component(prevProps, nextProps) && current.ref === workInProgress.ref) return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        }
        workInProgress.flags |= 1;
        current = createWorkInProgress(type, nextProps);
        current.ref = workInProgress.ref;
        current.return = workInProgress;
        return workInProgress.child = current;
    }
    function updateSimpleMemoComponent(current, workInProgress, Component, nextProps, renderLanes) {
        if (null !== current) {
            var prevProps = current.memoizedProps;
            if (shallowEqual(prevProps, nextProps) && current.ref === workInProgress.ref && workInProgress.type === current.type) {
                if (didReceiveUpdate = !1, workInProgress.pendingProps = nextProps = prevProps, checkScheduledUpdateOrContext(current, renderLanes)) 0 !== (current.flags & 131072) && (didReceiveUpdate = !0);
                else return workInProgress.lanes = current.lanes, bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
            }
        }
        return updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes);
    }
    function updateOffscreenComponent(current, workInProgress, renderLanes) {
        var nextProps = workInProgress.pendingProps, nextChildren = nextProps.children, prevState = null !== current ? current.memoizedState : null;
        if ("hidden" === nextProps.mode) {
            if (0 !== (workInProgress.flags & 128)) {
                nextProps = null !== prevState ? prevState.baseLanes | renderLanes : renderLanes;
                if (null !== current) {
                    nextChildren = workInProgress.child = current.child;
                    for(prevState = 0; null !== nextChildren;)prevState = prevState | nextChildren.lanes | nextChildren.childLanes, nextChildren = nextChildren.sibling;
                    workInProgress.childLanes = prevState & ~nextProps;
                } else workInProgress.childLanes = 0, workInProgress.child = null;
                return deferHiddenOffscreenComponent(current, workInProgress, nextProps, renderLanes);
            }
            if (0 !== (renderLanes & 536870912)) workInProgress.memoizedState = {
                baseLanes: 0,
                cachePool: null
            }, null !== current && pushTransition(workInProgress, null !== prevState ? prevState.cachePool : null), null !== prevState ? pushHiddenContext(workInProgress, prevState) : reuseHiddenContextOnStack(workInProgress), pushOffscreenSuspenseHandler(workInProgress);
            else return workInProgress.lanes = workInProgress.childLanes = 536870912, deferHiddenOffscreenComponent(current, workInProgress, null !== prevState ? prevState.baseLanes | renderLanes : renderLanes, renderLanes);
        } else null !== prevState ? (pushTransition(workInProgress, prevState.cachePool), pushHiddenContext(workInProgress, prevState), reuseSuspenseHandlerOnStack(workInProgress), workInProgress.memoizedState = null) : (null !== current && pushTransition(workInProgress, null), reuseHiddenContextOnStack(workInProgress), reuseSuspenseHandlerOnStack(workInProgress));
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function deferHiddenOffscreenComponent(current, workInProgress, nextBaseLanes, renderLanes) {
        var JSCompiler_inline_result = peekCacheFromPool();
        JSCompiler_inline_result = null === JSCompiler_inline_result ? null : {
            parent: CacheContext._currentValue,
            pool: JSCompiler_inline_result
        };
        workInProgress.memoizedState = {
            baseLanes: nextBaseLanes,
            cachePool: JSCompiler_inline_result
        };
        null !== current && pushTransition(workInProgress, null);
        reuseHiddenContextOnStack(workInProgress);
        pushOffscreenSuspenseHandler(workInProgress);
        null !== current && propagateParentContextChanges(current, workInProgress, renderLanes, !0);
        return null;
    }
    function markRef(current, workInProgress) {
        var ref = workInProgress.ref;
        if (null === ref) null !== current && null !== current.ref && (workInProgress.flags |= 4194816);
        else {
            if ("function" !== typeof ref && "object" !== typeof ref) throw Error("Expected ref to be a function, an object returned by React.createRef(), or undefined/null.");
            if (null === current || current.ref !== ref) workInProgress.flags |= 4194816;
        }
    }
    function updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes) {
        if (Component.prototype && "function" === typeof Component.prototype.render) {
            var componentName = getComponentNameFromType(Component) || "Unknown";
            didWarnAboutBadClass[componentName] || (console.error("The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.", componentName, componentName), didWarnAboutBadClass[componentName] = !0);
        }
        workInProgress.mode & StrictLegacyMode && ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);
        null === current && (validateFunctionComponentInDev(workInProgress, workInProgress.type), Component.contextTypes && (componentName = getComponentNameFromType(Component) || "Unknown", didWarnAboutContextTypes[componentName] || (didWarnAboutContextTypes[componentName] = !0, console.error("%s uses the legacy contextTypes API which was removed in React 19. Use React.createContext() with React.useContext() instead. (https://react.dev/link/legacy-context)", componentName))));
        prepareToReadContext(workInProgress);
        markComponentRenderStarted(workInProgress);
        Component = renderWithHooks(current, workInProgress, Component, nextProps, void 0, renderLanes);
        nextProps = checkDidRenderIdHook();
        markComponentRenderStopped();
        if (null !== current && !didReceiveUpdate) return bailoutHooks(current, workInProgress, renderLanes), bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        isHydrating && nextProps && pushMaterializedTreeId(workInProgress);
        workInProgress.flags |= 1;
        reconcileChildren(current, workInProgress, Component, renderLanes);
        return workInProgress.child;
    }
    function replayFunctionComponent(current, workInProgress, nextProps, Component, secondArg, renderLanes) {
        prepareToReadContext(workInProgress);
        markComponentRenderStarted(workInProgress);
        hookTypesUpdateIndexDev = -1;
        ignorePreviousDependencies = null !== current && current.type !== workInProgress.type;
        workInProgress.updateQueue = null;
        nextProps = renderWithHooksAgain(workInProgress, Component, nextProps, secondArg);
        finishRenderingHooks(current, workInProgress);
        Component = checkDidRenderIdHook();
        markComponentRenderStopped();
        if (null !== current && !didReceiveUpdate) return bailoutHooks(current, workInProgress, renderLanes), bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        isHydrating && Component && pushMaterializedTreeId(workInProgress);
        workInProgress.flags |= 1;
        reconcileChildren(current, workInProgress, nextProps, renderLanes);
        return workInProgress.child;
    }
    function updateClassComponent(current, workInProgress, Component, nextProps, renderLanes) {
        switch(shouldErrorImpl(workInProgress)){
            case !1:
                var _instance = workInProgress.stateNode, state = new workInProgress.type(workInProgress.memoizedProps, _instance.context).state;
                _instance.updater.enqueueSetState(_instance, state, null);
                break;
            case !0:
                workInProgress.flags |= 128;
                workInProgress.flags |= 65536;
                _instance = Error("Simulated error coming from DevTools");
                var lane = renderLanes & -renderLanes;
                workInProgress.lanes |= lane;
                state = workInProgressRoot;
                if (null === state) throw Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
                lane = createClassErrorUpdate(lane);
                initializeClassErrorUpdate(lane, state, workInProgress, createCapturedValueAtFiber(_instance, workInProgress));
                enqueueCapturedUpdate(workInProgress, lane);
        }
        prepareToReadContext(workInProgress);
        if (null === workInProgress.stateNode) {
            state = emptyContextObject;
            _instance = Component.contextType;
            "contextType" in Component && null !== _instance && (void 0 === _instance || _instance.$$typeof !== REACT_CONTEXT_TYPE) && !didWarnAboutInvalidateContextType.has(Component) && (didWarnAboutInvalidateContextType.add(Component), lane = void 0 === _instance ? " However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file." : "object" !== typeof _instance ? " However, it is set to a " + typeof _instance + "." : _instance.$$typeof === REACT_CONSUMER_TYPE ? " Did you accidentally pass the Context.Consumer instead?" : " However, it is set to an object with keys {" + Object.keys(_instance).join(", ") + "}.", console.error("%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s", getComponentNameFromType(Component) || "Component", lane));
            "object" === typeof _instance && null !== _instance && (state = readContext(_instance));
            _instance = new Component(nextProps, state);
            if (workInProgress.mode & StrictLegacyMode) {
                setIsStrictModeForDevtools(!0);
                try {
                    _instance = new Component(nextProps, state);
                } finally{
                    setIsStrictModeForDevtools(!1);
                }
            }
            state = workInProgress.memoizedState = null !== _instance.state && void 0 !== _instance.state ? _instance.state : null;
            _instance.updater = classComponentUpdater;
            workInProgress.stateNode = _instance;
            _instance._reactInternals = workInProgress;
            _instance._reactInternalInstance = fakeInternalInstance;
            "function" === typeof Component.getDerivedStateFromProps && null === state && (state = getComponentNameFromType(Component) || "Component", didWarnAboutUninitializedState.has(state) || (didWarnAboutUninitializedState.add(state), console.error("`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.", state, null === _instance.state ? "null" : "undefined", state)));
            if ("function" === typeof Component.getDerivedStateFromProps || "function" === typeof _instance.getSnapshotBeforeUpdate) {
                var foundWillUpdateName = lane = state = null;
                "function" === typeof _instance.componentWillMount && !0 !== _instance.componentWillMount.__suppressDeprecationWarning ? state = "componentWillMount" : "function" === typeof _instance.UNSAFE_componentWillMount && (state = "UNSAFE_componentWillMount");
                "function" === typeof _instance.componentWillReceiveProps && !0 !== _instance.componentWillReceiveProps.__suppressDeprecationWarning ? lane = "componentWillReceiveProps" : "function" === typeof _instance.UNSAFE_componentWillReceiveProps && (lane = "UNSAFE_componentWillReceiveProps");
                "function" === typeof _instance.componentWillUpdate && !0 !== _instance.componentWillUpdate.__suppressDeprecationWarning ? foundWillUpdateName = "componentWillUpdate" : "function" === typeof _instance.UNSAFE_componentWillUpdate && (foundWillUpdateName = "UNSAFE_componentWillUpdate");
                if (null !== state || null !== lane || null !== foundWillUpdateName) {
                    _instance = getComponentNameFromType(Component) || "Component";
                    var newApiName = "function" === typeof Component.getDerivedStateFromProps ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
                    didWarnAboutLegacyLifecyclesAndDerivedState.has(_instance) || (didWarnAboutLegacyLifecyclesAndDerivedState.add(_instance), console.error("Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://react.dev/link/unsafe-component-lifecycles", _instance, newApiName, null !== state ? "\n  " + state : "", null !== lane ? "\n  " + lane : "", null !== foundWillUpdateName ? "\n  " + foundWillUpdateName : ""));
                }
            }
            _instance = workInProgress.stateNode;
            state = getComponentNameFromType(Component) || "Component";
            _instance.render || (Component.prototype && "function" === typeof Component.prototype.render ? console.error("No `render` method found on the %s instance: did you accidentally return an object from the constructor?", state) : console.error("No `render` method found on the %s instance: you may have forgotten to define `render`.", state));
            !_instance.getInitialState || _instance.getInitialState.isReactClassApproved || _instance.state || console.error("getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?", state);
            _instance.getDefaultProps && !_instance.getDefaultProps.isReactClassApproved && console.error("getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.", state);
            _instance.contextType && console.error("contextType was defined as an instance property on %s. Use a static property to define contextType instead.", state);
            Component.childContextTypes && !didWarnAboutChildContextTypes.has(Component) && (didWarnAboutChildContextTypes.add(Component), console.error("%s uses the legacy childContextTypes API which was removed in React 19. Use React.createContext() instead. (https://react.dev/link/legacy-context)", state));
            Component.contextTypes && !didWarnAboutContextTypes$1.has(Component) && (didWarnAboutContextTypes$1.add(Component), console.error("%s uses the legacy contextTypes API which was removed in React 19. Use React.createContext() with static contextType instead. (https://react.dev/link/legacy-context)", state));
            "function" === typeof _instance.componentShouldUpdate && console.error("%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", state);
            Component.prototype && Component.prototype.isPureReactComponent && "undefined" !== typeof _instance.shouldComponentUpdate && console.error("%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.", getComponentNameFromType(Component) || "A pure component");
            "function" === typeof _instance.componentDidUnmount && console.error("%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?", state);
            "function" === typeof _instance.componentDidReceiveProps && console.error("%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().", state);
            "function" === typeof _instance.componentWillRecieveProps && console.error("%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", state);
            "function" === typeof _instance.UNSAFE_componentWillRecieveProps && console.error("%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?", state);
            lane = _instance.props !== nextProps;
            void 0 !== _instance.props && lane && console.error("When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.", state);
            _instance.defaultProps && console.error("Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.", state, state);
            "function" !== typeof _instance.getSnapshotBeforeUpdate || "function" === typeof _instance.componentDidUpdate || didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(Component) || (didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(Component), console.error("%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.", getComponentNameFromType(Component)));
            "function" === typeof _instance.getDerivedStateFromProps && console.error("%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.", state);
            "function" === typeof _instance.getDerivedStateFromError && console.error("%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.", state);
            "function" === typeof Component.getSnapshotBeforeUpdate && console.error("%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.", state);
            (lane = _instance.state) && ("object" !== typeof lane || isArrayImpl(lane)) && console.error("%s.state: must be set to an object or null", state);
            "function" === typeof _instance.getChildContext && "object" !== typeof Component.childContextTypes && console.error("%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().", state);
            _instance = workInProgress.stateNode;
            _instance.props = nextProps;
            _instance.state = workInProgress.memoizedState;
            _instance.refs = {};
            initializeUpdateQueue(workInProgress);
            state = Component.contextType;
            _instance.context = "object" === typeof state && null !== state ? readContext(state) : emptyContextObject;
            _instance.state === nextProps && (state = getComponentNameFromType(Component) || "Component", didWarnAboutDirectlyAssigningPropsToState.has(state) || (didWarnAboutDirectlyAssigningPropsToState.add(state), console.error("%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.", state)));
            workInProgress.mode & StrictLegacyMode && ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, _instance);
            ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress, _instance);
            _instance.state = workInProgress.memoizedState;
            state = Component.getDerivedStateFromProps;
            "function" === typeof state && (applyDerivedStateFromProps(workInProgress, Component, state, nextProps), _instance.state = workInProgress.memoizedState);
            "function" === typeof Component.getDerivedStateFromProps || "function" === typeof _instance.getSnapshotBeforeUpdate || "function" !== typeof _instance.UNSAFE_componentWillMount && "function" !== typeof _instance.componentWillMount || (state = _instance.state, "function" === typeof _instance.componentWillMount && _instance.componentWillMount(), "function" === typeof _instance.UNSAFE_componentWillMount && _instance.UNSAFE_componentWillMount(), state !== _instance.state && (console.error("%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", getComponentNameFromFiber(workInProgress) || "Component"), classComponentUpdater.enqueueReplaceState(_instance, _instance.state, null)), processUpdateQueue(workInProgress, nextProps, _instance, renderLanes), suspendIfUpdateReadFromEntangledAsyncAction(), _instance.state = workInProgress.memoizedState);
            "function" === typeof _instance.componentDidMount && (workInProgress.flags |= 4194308);
            (workInProgress.mode & StrictEffectsMode) !== NoMode && (workInProgress.flags |= 134217728);
            _instance = !0;
        } else if (null === current) {
            _instance = workInProgress.stateNode;
            var unresolvedOldProps = workInProgress.memoizedProps;
            lane = resolveClassComponentProps(Component, unresolvedOldProps);
            _instance.props = lane;
            var oldContext = _instance.context;
            foundWillUpdateName = Component.contextType;
            state = emptyContextObject;
            "object" === typeof foundWillUpdateName && null !== foundWillUpdateName && (state = readContext(foundWillUpdateName));
            newApiName = Component.getDerivedStateFromProps;
            foundWillUpdateName = "function" === typeof newApiName || "function" === typeof _instance.getSnapshotBeforeUpdate;
            unresolvedOldProps = workInProgress.pendingProps !== unresolvedOldProps;
            foundWillUpdateName || "function" !== typeof _instance.UNSAFE_componentWillReceiveProps && "function" !== typeof _instance.componentWillReceiveProps || (unresolvedOldProps || oldContext !== state) && callComponentWillReceiveProps(workInProgress, _instance, nextProps, state);
            hasForceUpdate = !1;
            var oldState = workInProgress.memoizedState;
            _instance.state = oldState;
            processUpdateQueue(workInProgress, nextProps, _instance, renderLanes);
            suspendIfUpdateReadFromEntangledAsyncAction();
            oldContext = workInProgress.memoizedState;
            unresolvedOldProps || oldState !== oldContext || hasForceUpdate ? ("function" === typeof newApiName && (applyDerivedStateFromProps(workInProgress, Component, newApiName, nextProps), oldContext = workInProgress.memoizedState), (lane = hasForceUpdate || checkShouldComponentUpdate(workInProgress, Component, lane, nextProps, oldState, oldContext, state)) ? (foundWillUpdateName || "function" !== typeof _instance.UNSAFE_componentWillMount && "function" !== typeof _instance.componentWillMount || ("function" === typeof _instance.componentWillMount && _instance.componentWillMount(), "function" === typeof _instance.UNSAFE_componentWillMount && _instance.UNSAFE_componentWillMount()), "function" === typeof _instance.componentDidMount && (workInProgress.flags |= 4194308), (workInProgress.mode & StrictEffectsMode) !== NoMode && (workInProgress.flags |= 134217728)) : ("function" === typeof _instance.componentDidMount && (workInProgress.flags |= 4194308), (workInProgress.mode & StrictEffectsMode) !== NoMode && (workInProgress.flags |= 134217728), workInProgress.memoizedProps = nextProps, workInProgress.memoizedState = oldContext), _instance.props = nextProps, _instance.state = oldContext, _instance.context = state, _instance = lane) : ("function" === typeof _instance.componentDidMount && (workInProgress.flags |= 4194308), (workInProgress.mode & StrictEffectsMode) !== NoMode && (workInProgress.flags |= 134217728), _instance = !1);
        } else {
            _instance = workInProgress.stateNode;
            cloneUpdateQueue(current, workInProgress);
            state = workInProgress.memoizedProps;
            foundWillUpdateName = resolveClassComponentProps(Component, state);
            _instance.props = foundWillUpdateName;
            newApiName = workInProgress.pendingProps;
            oldState = _instance.context;
            oldContext = Component.contextType;
            lane = emptyContextObject;
            "object" === typeof oldContext && null !== oldContext && (lane = readContext(oldContext));
            unresolvedOldProps = Component.getDerivedStateFromProps;
            (oldContext = "function" === typeof unresolvedOldProps || "function" === typeof _instance.getSnapshotBeforeUpdate) || "function" !== typeof _instance.UNSAFE_componentWillReceiveProps && "function" !== typeof _instance.componentWillReceiveProps || (state !== newApiName || oldState !== lane) && callComponentWillReceiveProps(workInProgress, _instance, nextProps, lane);
            hasForceUpdate = !1;
            oldState = workInProgress.memoizedState;
            _instance.state = oldState;
            processUpdateQueue(workInProgress, nextProps, _instance, renderLanes);
            suspendIfUpdateReadFromEntangledAsyncAction();
            var newState = workInProgress.memoizedState;
            state !== newApiName || oldState !== newState || hasForceUpdate || null !== current && null !== current.dependencies && checkIfContextChanged(current.dependencies) ? ("function" === typeof unresolvedOldProps && (applyDerivedStateFromProps(workInProgress, Component, unresolvedOldProps, nextProps), newState = workInProgress.memoizedState), (foundWillUpdateName = hasForceUpdate || checkShouldComponentUpdate(workInProgress, Component, foundWillUpdateName, nextProps, oldState, newState, lane) || null !== current && null !== current.dependencies && checkIfContextChanged(current.dependencies)) ? (oldContext || "function" !== typeof _instance.UNSAFE_componentWillUpdate && "function" !== typeof _instance.componentWillUpdate || ("function" === typeof _instance.componentWillUpdate && _instance.componentWillUpdate(nextProps, newState, lane), "function" === typeof _instance.UNSAFE_componentWillUpdate && _instance.UNSAFE_componentWillUpdate(nextProps, newState, lane)), "function" === typeof _instance.componentDidUpdate && (workInProgress.flags |= 4), "function" === typeof _instance.getSnapshotBeforeUpdate && (workInProgress.flags |= 1024)) : ("function" !== typeof _instance.componentDidUpdate || state === current.memoizedProps && oldState === current.memoizedState || (workInProgress.flags |= 4), "function" !== typeof _instance.getSnapshotBeforeUpdate || state === current.memoizedProps && oldState === current.memoizedState || (workInProgress.flags |= 1024), workInProgress.memoizedProps = nextProps, workInProgress.memoizedState = newState), _instance.props = nextProps, _instance.state = newState, _instance.context = lane, _instance = foundWillUpdateName) : ("function" !== typeof _instance.componentDidUpdate || state === current.memoizedProps && oldState === current.memoizedState || (workInProgress.flags |= 4), "function" !== typeof _instance.getSnapshotBeforeUpdate || state === current.memoizedProps && oldState === current.memoizedState || (workInProgress.flags |= 1024), _instance = !1);
        }
        lane = _instance;
        markRef(current, workInProgress);
        state = 0 !== (workInProgress.flags & 128);
        if (lane || state) {
            lane = workInProgress.stateNode;
            setCurrentFiber(workInProgress);
            if (state && "function" !== typeof Component.getDerivedStateFromError) Component = null, profilerStartTime = -1;
            else {
                markComponentRenderStarted(workInProgress);
                Component = callRenderInDEV(lane);
                if (workInProgress.mode & StrictLegacyMode) {
                    setIsStrictModeForDevtools(!0);
                    try {
                        callRenderInDEV(lane);
                    } finally{
                        setIsStrictModeForDevtools(!1);
                    }
                }
                markComponentRenderStopped();
            }
            workInProgress.flags |= 1;
            null !== current && state ? (workInProgress.child = reconcileChildFibers(workInProgress, current.child, null, renderLanes), workInProgress.child = reconcileChildFibers(workInProgress, null, Component, renderLanes)) : reconcileChildren(current, workInProgress, Component, renderLanes);
            workInProgress.memoizedState = lane.state;
            current = workInProgress.child;
        } else current = bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        renderLanes = workInProgress.stateNode;
        _instance && renderLanes.props !== nextProps && (didWarnAboutReassigningProps || console.error("It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.", getComponentNameFromFiber(workInProgress) || "a component"), didWarnAboutReassigningProps = !0);
        return current;
    }
    function mountHostRootWithoutHydrating(current, workInProgress, nextChildren, renderLanes) {
        resetHydrationState();
        workInProgress.flags |= 256;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function validateFunctionComponentInDev(workInProgress, Component) {
        Component && Component.childContextTypes && console.error("childContextTypes cannot be defined on a function component.\n  %s.childContextTypes = ...", Component.displayName || Component.name || "Component");
        "function" === typeof Component.getDerivedStateFromProps && (workInProgress = getComponentNameFromType(Component) || "Unknown", didWarnAboutGetDerivedStateOnFunctionComponent[workInProgress] || (console.error("%s: Function components do not support getDerivedStateFromProps.", workInProgress), didWarnAboutGetDerivedStateOnFunctionComponent[workInProgress] = !0));
        "object" === typeof Component.contextType && null !== Component.contextType && (Component = getComponentNameFromType(Component) || "Unknown", didWarnAboutContextTypeOnFunctionComponent[Component] || (console.error("%s: Function components do not support contextType.", Component), didWarnAboutContextTypeOnFunctionComponent[Component] = !0));
    }
    function mountSuspenseOffscreenState(renderLanes) {
        return {
            baseLanes: renderLanes,
            cachePool: getSuspendedCache()
        };
    }
    function getRemainingWorkInPrimaryTree(current, primaryTreeDidDefer, renderLanes) {
        current = null !== current ? current.childLanes & ~renderLanes : 0;
        primaryTreeDidDefer && (current |= workInProgressDeferredLane);
        return current;
    }
    function updateSuspenseComponent(current, workInProgress, renderLanes) {
        var JSCompiler_object_inline_digest_2451;
        var JSCompiler_object_inline_stack_2452 = workInProgress.pendingProps;
        shouldSuspendImpl(workInProgress) && (workInProgress.flags |= 128);
        var JSCompiler_object_inline_componentStack_2453 = !1;
        var didSuspend = 0 !== (workInProgress.flags & 128);
        (JSCompiler_object_inline_digest_2451 = didSuspend) || (JSCompiler_object_inline_digest_2451 = null !== current && null === current.memoizedState ? !1 : 0 !== (suspenseStackCursor.current & ForceSuspenseFallback));
        JSCompiler_object_inline_digest_2451 && (JSCompiler_object_inline_componentStack_2453 = !0, workInProgress.flags &= -129);
        JSCompiler_object_inline_digest_2451 = 0 !== (workInProgress.flags & 32);
        workInProgress.flags &= -33;
        if (null === current) {
            if (isHydrating) {
                JSCompiler_object_inline_componentStack_2453 ? pushPrimaryTreeSuspenseHandler(workInProgress) : reuseSuspenseHandlerOnStack(workInProgress);
                if (isHydrating) {
                    var JSCompiler_object_inline_message_2450 = nextHydratableInstance;
                    var JSCompiler_temp;
                    if (!(JSCompiler_temp = !JSCompiler_object_inline_message_2450)) {
                        c: {
                            var instance = JSCompiler_object_inline_message_2450;
                            for(JSCompiler_temp = rootOrSingletonContext; 8 !== instance.nodeType;){
                                if (!JSCompiler_temp) {
                                    JSCompiler_temp = null;
                                    break c;
                                }
                                instance = getNextHydratable(instance.nextSibling);
                                if (null === instance) {
                                    JSCompiler_temp = null;
                                    break c;
                                }
                            }
                            JSCompiler_temp = instance;
                        }
                        null !== JSCompiler_temp ? (warnIfNotHydrating(), workInProgress.memoizedState = {
                            dehydrated: JSCompiler_temp,
                            treeContext: null !== treeContextProvider ? {
                                id: treeContextId,
                                overflow: treeContextOverflow
                            } : null,
                            retryLane: 536870912,
                            hydrationErrors: null
                        }, instance = createFiber(18, null, null, NoMode), instance.stateNode = JSCompiler_temp, instance.return = workInProgress, workInProgress.child = instance, hydrationParentFiber = workInProgress, nextHydratableInstance = null, JSCompiler_temp = !0) : JSCompiler_temp = !1;
                        JSCompiler_temp = !JSCompiler_temp;
                    }
                    JSCompiler_temp && (warnNonHydratedInstance(workInProgress, JSCompiler_object_inline_message_2450), throwOnHydrationMismatch(workInProgress));
                }
                JSCompiler_object_inline_message_2450 = workInProgress.memoizedState;
                if (null !== JSCompiler_object_inline_message_2450 && (JSCompiler_object_inline_message_2450 = JSCompiler_object_inline_message_2450.dehydrated, null !== JSCompiler_object_inline_message_2450)) return isSuspenseInstanceFallback(JSCompiler_object_inline_message_2450) ? workInProgress.lanes = 32 : workInProgress.lanes = 536870912, null;
                popSuspenseHandler(workInProgress);
            }
            JSCompiler_object_inline_message_2450 = JSCompiler_object_inline_stack_2452.children;
            JSCompiler_object_inline_stack_2452 = JSCompiler_object_inline_stack_2452.fallback;
            if (JSCompiler_object_inline_componentStack_2453) return reuseSuspenseHandlerOnStack(workInProgress), JSCompiler_object_inline_componentStack_2453 = workInProgress.mode, JSCompiler_object_inline_message_2450 = mountWorkInProgressOffscreenFiber({
                mode: "hidden",
                children: JSCompiler_object_inline_message_2450
            }, JSCompiler_object_inline_componentStack_2453), JSCompiler_object_inline_stack_2452 = createFiberFromFragment(JSCompiler_object_inline_stack_2452, JSCompiler_object_inline_componentStack_2453, renderLanes, null), JSCompiler_object_inline_message_2450.return = workInProgress, JSCompiler_object_inline_stack_2452.return = workInProgress, JSCompiler_object_inline_message_2450.sibling = JSCompiler_object_inline_stack_2452, workInProgress.child = JSCompiler_object_inline_message_2450, JSCompiler_object_inline_componentStack_2453 = workInProgress.child, JSCompiler_object_inline_componentStack_2453.memoizedState = mountSuspenseOffscreenState(renderLanes), JSCompiler_object_inline_componentStack_2453.childLanes = getRemainingWorkInPrimaryTree(current, JSCompiler_object_inline_digest_2451, renderLanes), workInProgress.memoizedState = SUSPENDED_MARKER, JSCompiler_object_inline_stack_2452;
            pushPrimaryTreeSuspenseHandler(workInProgress);
            return mountSuspensePrimaryChildren(workInProgress, JSCompiler_object_inline_message_2450);
        }
        var prevState = current.memoizedState;
        if (null !== prevState && (JSCompiler_object_inline_message_2450 = prevState.dehydrated, null !== JSCompiler_object_inline_message_2450)) {
            if (didSuspend) workInProgress.flags & 256 ? (pushPrimaryTreeSuspenseHandler(workInProgress), workInProgress.flags &= -257, workInProgress = retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes)) : null !== workInProgress.memoizedState ? (reuseSuspenseHandlerOnStack(workInProgress), workInProgress.child = current.child, workInProgress.flags |= 128, workInProgress = null) : (reuseSuspenseHandlerOnStack(workInProgress), JSCompiler_object_inline_componentStack_2453 = JSCompiler_object_inline_stack_2452.fallback, JSCompiler_object_inline_message_2450 = workInProgress.mode, JSCompiler_object_inline_stack_2452 = mountWorkInProgressOffscreenFiber({
                mode: "visible",
                children: JSCompiler_object_inline_stack_2452.children
            }, JSCompiler_object_inline_message_2450), JSCompiler_object_inline_componentStack_2453 = createFiberFromFragment(JSCompiler_object_inline_componentStack_2453, JSCompiler_object_inline_message_2450, renderLanes, null), JSCompiler_object_inline_componentStack_2453.flags |= 2, JSCompiler_object_inline_stack_2452.return = workInProgress, JSCompiler_object_inline_componentStack_2453.return = workInProgress, JSCompiler_object_inline_stack_2452.sibling = JSCompiler_object_inline_componentStack_2453, workInProgress.child = JSCompiler_object_inline_stack_2452, reconcileChildFibers(workInProgress, current.child, null, renderLanes), JSCompiler_object_inline_stack_2452 = workInProgress.child, JSCompiler_object_inline_stack_2452.memoizedState = mountSuspenseOffscreenState(renderLanes), JSCompiler_object_inline_stack_2452.childLanes = getRemainingWorkInPrimaryTree(current, JSCompiler_object_inline_digest_2451, renderLanes), workInProgress.memoizedState = SUSPENDED_MARKER, workInProgress = JSCompiler_object_inline_componentStack_2453);
            else if (pushPrimaryTreeSuspenseHandler(workInProgress), isHydrating && console.error("We should not be hydrating here. This is a bug in React. Please file a bug."), isSuspenseInstanceFallback(JSCompiler_object_inline_message_2450)) {
                JSCompiler_object_inline_digest_2451 = JSCompiler_object_inline_message_2450.nextSibling && JSCompiler_object_inline_message_2450.nextSibling.dataset;
                if (JSCompiler_object_inline_digest_2451) {
                    JSCompiler_temp = JSCompiler_object_inline_digest_2451.dgst;
                    var message = JSCompiler_object_inline_digest_2451.msg;
                    instance = JSCompiler_object_inline_digest_2451.stck;
                    var componentStack = JSCompiler_object_inline_digest_2451.cstck;
                }
                JSCompiler_object_inline_message_2450 = message;
                JSCompiler_object_inline_digest_2451 = JSCompiler_temp;
                JSCompiler_object_inline_stack_2452 = instance;
                JSCompiler_temp = JSCompiler_object_inline_componentStack_2453 = componentStack;
                JSCompiler_object_inline_componentStack_2453 = JSCompiler_object_inline_message_2450 ? Error(JSCompiler_object_inline_message_2450) : Error("The server could not finish this Suspense boundary, likely due to an error during server rendering. Switched to client rendering.");
                JSCompiler_object_inline_componentStack_2453.stack = JSCompiler_object_inline_stack_2452 || "";
                JSCompiler_object_inline_componentStack_2453.digest = JSCompiler_object_inline_digest_2451;
                JSCompiler_object_inline_digest_2451 = void 0 === JSCompiler_temp ? null : JSCompiler_temp;
                JSCompiler_object_inline_stack_2452 = {
                    value: JSCompiler_object_inline_componentStack_2453,
                    source: null,
                    stack: JSCompiler_object_inline_digest_2451
                };
                "string" === typeof JSCompiler_object_inline_digest_2451 && CapturedStacks.set(JSCompiler_object_inline_componentStack_2453, JSCompiler_object_inline_stack_2452);
                queueHydrationError(JSCompiler_object_inline_stack_2452);
                workInProgress = retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes);
            } else if (didReceiveUpdate || propagateParentContextChanges(current, workInProgress, renderLanes, !1), JSCompiler_object_inline_digest_2451 = 0 !== (renderLanes & current.childLanes), didReceiveUpdate || JSCompiler_object_inline_digest_2451) {
                JSCompiler_object_inline_digest_2451 = workInProgressRoot;
                if (null !== JSCompiler_object_inline_digest_2451 && (JSCompiler_object_inline_stack_2452 = renderLanes & -renderLanes, JSCompiler_object_inline_stack_2452 = 0 !== (JSCompiler_object_inline_stack_2452 & 42) ? 1 : getBumpedLaneForHydrationByLane(JSCompiler_object_inline_stack_2452), JSCompiler_object_inline_stack_2452 = 0 !== (JSCompiler_object_inline_stack_2452 & (JSCompiler_object_inline_digest_2451.suspendedLanes | renderLanes)) ? 0 : JSCompiler_object_inline_stack_2452, 0 !== JSCompiler_object_inline_stack_2452 && JSCompiler_object_inline_stack_2452 !== prevState.retryLane)) throw prevState.retryLane = JSCompiler_object_inline_stack_2452, enqueueConcurrentRenderForLane(current, JSCompiler_object_inline_stack_2452), scheduleUpdateOnFiber(JSCompiler_object_inline_digest_2451, current, JSCompiler_object_inline_stack_2452), SelectiveHydrationException;
                JSCompiler_object_inline_message_2450.data === SUSPENSE_PENDING_START_DATA || renderDidSuspendDelayIfPossible();
                workInProgress = retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes);
            } else JSCompiler_object_inline_message_2450.data === SUSPENSE_PENDING_START_DATA ? (workInProgress.flags |= 192, workInProgress.child = current.child, workInProgress = null) : (current = prevState.treeContext, nextHydratableInstance = getNextHydratable(JSCompiler_object_inline_message_2450.nextSibling), hydrationParentFiber = workInProgress, isHydrating = !0, hydrationErrors = null, didSuspendOrErrorDEV = !1, hydrationDiffRootDEV = null, rootOrSingletonContext = !1, null !== current && (warnIfNotHydrating(), idStack[idStackIndex++] = treeContextId, idStack[idStackIndex++] = treeContextOverflow, idStack[idStackIndex++] = treeContextProvider, treeContextId = current.id, treeContextOverflow = current.overflow, treeContextProvider = workInProgress), workInProgress = mountSuspensePrimaryChildren(workInProgress, JSCompiler_object_inline_stack_2452.children), workInProgress.flags |= 4096);
            return workInProgress;
        }
        if (JSCompiler_object_inline_componentStack_2453) return reuseSuspenseHandlerOnStack(workInProgress), JSCompiler_object_inline_componentStack_2453 = JSCompiler_object_inline_stack_2452.fallback, JSCompiler_object_inline_message_2450 = workInProgress.mode, JSCompiler_temp = current.child, instance = JSCompiler_temp.sibling, JSCompiler_object_inline_stack_2452 = createWorkInProgress(JSCompiler_temp, {
            mode: "hidden",
            children: JSCompiler_object_inline_stack_2452.children
        }), JSCompiler_object_inline_stack_2452.subtreeFlags = JSCompiler_temp.subtreeFlags & 65011712, null !== instance ? JSCompiler_object_inline_componentStack_2453 = createWorkInProgress(instance, JSCompiler_object_inline_componentStack_2453) : (JSCompiler_object_inline_componentStack_2453 = createFiberFromFragment(JSCompiler_object_inline_componentStack_2453, JSCompiler_object_inline_message_2450, renderLanes, null), JSCompiler_object_inline_componentStack_2453.flags |= 2), JSCompiler_object_inline_componentStack_2453.return = workInProgress, JSCompiler_object_inline_stack_2452.return = workInProgress, JSCompiler_object_inline_stack_2452.sibling = JSCompiler_object_inline_componentStack_2453, workInProgress.child = JSCompiler_object_inline_stack_2452, JSCompiler_object_inline_stack_2452 = JSCompiler_object_inline_componentStack_2453, JSCompiler_object_inline_componentStack_2453 = workInProgress.child, JSCompiler_object_inline_message_2450 = current.child.memoizedState, null === JSCompiler_object_inline_message_2450 ? JSCompiler_object_inline_message_2450 = mountSuspenseOffscreenState(renderLanes) : (JSCompiler_temp = JSCompiler_object_inline_message_2450.cachePool, null !== JSCompiler_temp ? (instance = CacheContext._currentValue, JSCompiler_temp = JSCompiler_temp.parent !== instance ? {
            parent: instance,
            pool: instance
        } : JSCompiler_temp) : JSCompiler_temp = getSuspendedCache(), JSCompiler_object_inline_message_2450 = {
            baseLanes: JSCompiler_object_inline_message_2450.baseLanes | renderLanes,
            cachePool: JSCompiler_temp
        }), JSCompiler_object_inline_componentStack_2453.memoizedState = JSCompiler_object_inline_message_2450, JSCompiler_object_inline_componentStack_2453.childLanes = getRemainingWorkInPrimaryTree(current, JSCompiler_object_inline_digest_2451, renderLanes), workInProgress.memoizedState = SUSPENDED_MARKER, JSCompiler_object_inline_stack_2452;
        pushPrimaryTreeSuspenseHandler(workInProgress);
        renderLanes = current.child;
        current = renderLanes.sibling;
        renderLanes = createWorkInProgress(renderLanes, {
            mode: "visible",
            children: JSCompiler_object_inline_stack_2452.children
        });
        renderLanes.return = workInProgress;
        renderLanes.sibling = null;
        null !== current && (JSCompiler_object_inline_digest_2451 = workInProgress.deletions, null === JSCompiler_object_inline_digest_2451 ? (workInProgress.deletions = [
            current
        ], workInProgress.flags |= 16) : JSCompiler_object_inline_digest_2451.push(current));
        workInProgress.child = renderLanes;
        workInProgress.memoizedState = null;
        return renderLanes;
    }
    function mountSuspensePrimaryChildren(workInProgress, primaryChildren) {
        primaryChildren = mountWorkInProgressOffscreenFiber({
            mode: "visible",
            children: primaryChildren
        }, workInProgress.mode);
        primaryChildren.return = workInProgress;
        return workInProgress.child = primaryChildren;
    }
    function mountWorkInProgressOffscreenFiber(offscreenProps, mode) {
        offscreenProps = createFiber(22, offscreenProps, null, mode);
        offscreenProps.lanes = 0;
        offscreenProps.stateNode = {
            _visibility: OffscreenVisible,
            _pendingMarkers: null,
            _retryCache: null,
            _transitions: null
        };
        return offscreenProps;
    }
    function retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes) {
        reconcileChildFibers(workInProgress, current.child, null, renderLanes);
        current = mountSuspensePrimaryChildren(workInProgress, workInProgress.pendingProps.children);
        current.flags |= 2;
        workInProgress.memoizedState = null;
        return current;
    }
    function scheduleSuspenseWorkOnFiber(fiber, renderLanes, propagationRoot) {
        fiber.lanes |= renderLanes;
        var alternate = fiber.alternate;
        null !== alternate && (alternate.lanes |= renderLanes);
        scheduleContextWorkOnParentPath(fiber.return, renderLanes, propagationRoot);
    }
    function validateSuspenseListNestedChild(childSlot, index) {
        var isAnArray = isArrayImpl(childSlot);
        childSlot = !isAnArray && "function" === typeof getIteratorFn(childSlot);
        return isAnArray || childSlot ? (isAnArray = isAnArray ? "array" : "iterable", console.error("A nested %s was passed to row #%s in <SuspenseList />. Wrap it in an additional SuspenseList to configure its revealOrder: <SuspenseList revealOrder=...> ... <SuspenseList revealOrder=...>{%s}</SuspenseList> ... </SuspenseList>", isAnArray, index, isAnArray), !1) : !0;
    }
    function initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode) {
        var renderState = workInProgress.memoizedState;
        null === renderState ? workInProgress.memoizedState = {
            isBackwards: isBackwards,
            rendering: null,
            renderingStartTime: 0,
            last: lastContentRow,
            tail: tail,
            tailMode: tailMode
        } : (renderState.isBackwards = isBackwards, renderState.rendering = null, renderState.renderingStartTime = 0, renderState.last = lastContentRow, renderState.tail = tail, renderState.tailMode = tailMode);
    }
    function updateSuspenseListComponent(current, workInProgress, renderLanes) {
        var nextProps = workInProgress.pendingProps, revealOrder = nextProps.revealOrder, tailMode = nextProps.tail;
        nextProps = nextProps.children;
        if (void 0 !== revealOrder && "forwards" !== revealOrder && "backwards" !== revealOrder && "together" !== revealOrder && !didWarnAboutRevealOrder[revealOrder]) {
            if (didWarnAboutRevealOrder[revealOrder] = !0, "string" === typeof revealOrder) switch(revealOrder.toLowerCase()){
                case "together":
                case "forwards":
                case "backwards":
                    console.error('"%s" is not a valid value for revealOrder on <SuspenseList />. Use lowercase "%s" instead.', revealOrder, revealOrder.toLowerCase());
                    break;
                case "forward":
                case "backward":
                    console.error('"%s" is not a valid value for revealOrder on <SuspenseList />. React uses the -s suffix in the spelling. Use "%ss" instead.', revealOrder, revealOrder.toLowerCase());
                    break;
                default:
                    console.error('"%s" is not a supported revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', revealOrder);
            }
            else console.error('%s is not a supported value for revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', revealOrder);
        }
        void 0 === tailMode || didWarnAboutTailOptions[tailMode] || ("collapsed" !== tailMode && "hidden" !== tailMode ? (didWarnAboutTailOptions[tailMode] = !0, console.error('"%s" is not a supported value for tail on <SuspenseList />. Did you mean "collapsed" or "hidden"?', tailMode)) : "forwards" !== revealOrder && "backwards" !== revealOrder && (didWarnAboutTailOptions[tailMode] = !0, console.error('<SuspenseList tail="%s" /> is only valid if revealOrder is "forwards" or "backwards". Did you mean to specify revealOrder="forwards"?', tailMode)));
        a: if (("forwards" === revealOrder || "backwards" === revealOrder) && void 0 !== nextProps && null !== nextProps && !1 !== nextProps) {
            if (isArrayImpl(nextProps)) for(var i = 0; i < nextProps.length; i++){
                if (!validateSuspenseListNestedChild(nextProps[i], i)) break a;
            }
            else if (i = getIteratorFn(nextProps), "function" === typeof i) {
                if (i = i.call(nextProps)) for(var step = i.next(), _i = 0; !step.done; step = i.next()){
                    if (!validateSuspenseListNestedChild(step.value, _i)) break a;
                    _i++;
                }
            } else console.error('A single row was passed to a <SuspenseList revealOrder="%s" />. This is not useful since it needs multiple rows. Did you mean to pass multiple children or an array?', revealOrder);
        }
        reconcileChildren(current, workInProgress, nextProps, renderLanes);
        nextProps = suspenseStackCursor.current;
        if (0 !== (nextProps & ForceSuspenseFallback)) nextProps = nextProps & SubtreeSuspenseContextMask | ForceSuspenseFallback, workInProgress.flags |= 128;
        else {
            if (null !== current && 0 !== (current.flags & 128)) a: for(current = workInProgress.child; null !== current;){
                if (13 === current.tag) null !== current.memoizedState && scheduleSuspenseWorkOnFiber(current, renderLanes, workInProgress);
                else if (19 === current.tag) scheduleSuspenseWorkOnFiber(current, renderLanes, workInProgress);
                else if (null !== current.child) {
                    current.child.return = current;
                    current = current.child;
                    continue;
                }
                if (current === workInProgress) break a;
                for(; null === current.sibling;){
                    if (null === current.return || current.return === workInProgress) break a;
                    current = current.return;
                }
                current.sibling.return = current.return;
                current = current.sibling;
            }
            nextProps &= SubtreeSuspenseContextMask;
        }
        push(suspenseStackCursor, nextProps, workInProgress);
        switch(revealOrder){
            case "forwards":
                renderLanes = workInProgress.child;
                for(revealOrder = null; null !== renderLanes;)current = renderLanes.alternate, null !== current && null === findFirstSuspended(current) && (revealOrder = renderLanes), renderLanes = renderLanes.sibling;
                renderLanes = revealOrder;
                null === renderLanes ? (revealOrder = workInProgress.child, workInProgress.child = null) : (revealOrder = renderLanes.sibling, renderLanes.sibling = null);
                initSuspenseListRenderState(workInProgress, !1, revealOrder, renderLanes, tailMode);
                break;
            case "backwards":
                renderLanes = null;
                revealOrder = workInProgress.child;
                for(workInProgress.child = null; null !== revealOrder;){
                    current = revealOrder.alternate;
                    if (null !== current && null === findFirstSuspended(current)) {
                        workInProgress.child = revealOrder;
                        break;
                    }
                    current = revealOrder.sibling;
                    revealOrder.sibling = renderLanes;
                    renderLanes = revealOrder;
                    revealOrder = current;
                }
                initSuspenseListRenderState(workInProgress, !0, renderLanes, null, tailMode);
                break;
            case "together":
                initSuspenseListRenderState(workInProgress, !1, null, null, void 0);
                break;
            default:
                workInProgress.memoizedState = null;
        }
        return workInProgress.child;
    }
    function bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) {
        null !== current && (workInProgress.dependencies = current.dependencies);
        profilerStartTime = -1;
        workInProgressRootSkippedLanes |= workInProgress.lanes;
        if (0 === (renderLanes & workInProgress.childLanes)) {
            if (null !== current) {
                if (propagateParentContextChanges(current, workInProgress, renderLanes, !1), 0 === (renderLanes & workInProgress.childLanes)) return null;
            } else return null;
        }
        if (null !== current && workInProgress.child !== current.child) throw Error("Resuming work not yet implemented.");
        if (null !== workInProgress.child) {
            current = workInProgress.child;
            renderLanes = createWorkInProgress(current, current.pendingProps);
            workInProgress.child = renderLanes;
            for(renderLanes.return = workInProgress; null !== current.sibling;)current = current.sibling, renderLanes = renderLanes.sibling = createWorkInProgress(current, current.pendingProps), renderLanes.return = workInProgress;
            renderLanes.sibling = null;
        }
        return workInProgress.child;
    }
    function checkScheduledUpdateOrContext(current, renderLanes) {
        if (0 !== (current.lanes & renderLanes)) return !0;
        current = current.dependencies;
        return null !== current && checkIfContextChanged(current) ? !0 : !1;
    }
    function attemptEarlyBailoutIfNoScheduledUpdate(current, workInProgress, renderLanes) {
        switch(workInProgress.tag){
            case 3:
                pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
                pushProvider(workInProgress, CacheContext, current.memoizedState.cache);
                resetHydrationState();
                break;
            case 27:
            case 5:
                pushHostContext(workInProgress);
                break;
            case 4:
                pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
                break;
            case 10:
                pushProvider(workInProgress, workInProgress.type, workInProgress.memoizedProps.value);
                break;
            case 12:
                0 !== (renderLanes & workInProgress.childLanes) && (workInProgress.flags |= 4);
                workInProgress.flags |= 2048;
                var stateNode = workInProgress.stateNode;
                stateNode.effectDuration = -0;
                stateNode.passiveEffectDuration = -0;
                break;
            case 13:
                stateNode = workInProgress.memoizedState;
                if (null !== stateNode) {
                    if (null !== stateNode.dehydrated) return pushPrimaryTreeSuspenseHandler(workInProgress), workInProgress.flags |= 128, null;
                    if (0 !== (renderLanes & workInProgress.child.childLanes)) return updateSuspenseComponent(current, workInProgress, renderLanes);
                    pushPrimaryTreeSuspenseHandler(workInProgress);
                    current = bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
                    return null !== current ? current.sibling : null;
                }
                pushPrimaryTreeSuspenseHandler(workInProgress);
                break;
            case 19:
                var didSuspendBefore = 0 !== (current.flags & 128);
                stateNode = 0 !== (renderLanes & workInProgress.childLanes);
                stateNode || (propagateParentContextChanges(current, workInProgress, renderLanes, !1), stateNode = 0 !== (renderLanes & workInProgress.childLanes));
                if (didSuspendBefore) {
                    if (stateNode) return updateSuspenseListComponent(current, workInProgress, renderLanes);
                    workInProgress.flags |= 128;
                }
                didSuspendBefore = workInProgress.memoizedState;
                null !== didSuspendBefore && (didSuspendBefore.rendering = null, didSuspendBefore.tail = null, didSuspendBefore.lastEffect = null);
                push(suspenseStackCursor, suspenseStackCursor.current, workInProgress);
                if (stateNode) break;
                else return null;
            case 22:
            case 23:
                return workInProgress.lanes = 0, updateOffscreenComponent(current, workInProgress, renderLanes);
            case 24:
                pushProvider(workInProgress, CacheContext, current.memoizedState.cache);
        }
        return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
    }
    function beginWork(current, workInProgress, renderLanes) {
        if (workInProgress._debugNeedsRemount && null !== current) {
            renderLanes = createFiberFromTypeAndProps(workInProgress.type, workInProgress.key, workInProgress.pendingProps, workInProgress._debugOwner || null, workInProgress.mode, workInProgress.lanes);
            renderLanes._debugStack = workInProgress._debugStack;
            renderLanes._debugTask = workInProgress._debugTask;
            var returnFiber = workInProgress.return;
            if (null === returnFiber) throw Error("Cannot swap the root fiber.");
            current.alternate = null;
            workInProgress.alternate = null;
            renderLanes.index = workInProgress.index;
            renderLanes.sibling = workInProgress.sibling;
            renderLanes.return = workInProgress.return;
            renderLanes.ref = workInProgress.ref;
            renderLanes._debugInfo = workInProgress._debugInfo;
            if (workInProgress === returnFiber.child) returnFiber.child = renderLanes;
            else {
                var prevSibling = returnFiber.child;
                if (null === prevSibling) throw Error("Expected parent to have a child.");
                for(; prevSibling.sibling !== workInProgress;)if (prevSibling = prevSibling.sibling, null === prevSibling) throw Error("Expected to find the previous sibling.");
                prevSibling.sibling = renderLanes;
            }
            workInProgress = returnFiber.deletions;
            null === workInProgress ? (returnFiber.deletions = [
                current
            ], returnFiber.flags |= 16) : workInProgress.push(current);
            renderLanes.flags |= 2;
            return renderLanes;
        }
        if (null !== current) {
            if (current.memoizedProps !== workInProgress.pendingProps || workInProgress.type !== current.type) didReceiveUpdate = !0;
            else {
                if (!checkScheduledUpdateOrContext(current, renderLanes) && 0 === (workInProgress.flags & 128)) return didReceiveUpdate = !1, attemptEarlyBailoutIfNoScheduledUpdate(current, workInProgress, renderLanes);
                didReceiveUpdate = 0 !== (current.flags & 131072) ? !0 : !1;
            }
        } else {
            didReceiveUpdate = !1;
            if (returnFiber = isHydrating) warnIfNotHydrating(), returnFiber = 0 !== (workInProgress.flags & 1048576);
            returnFiber && (returnFiber = workInProgress.index, warnIfNotHydrating(), pushTreeId(workInProgress, treeForkCount, returnFiber));
        }
        workInProgress.lanes = 0;
        switch(workInProgress.tag){
            case 16:
                a: if (returnFiber = workInProgress.pendingProps, current = callLazyInitInDEV(workInProgress.elementType), workInProgress.type = current, "function" === typeof current) shouldConstruct(current) ? (returnFiber = resolveClassComponentProps(current, returnFiber), workInProgress.tag = 1, workInProgress.type = current = resolveFunctionForHotReloading(current), workInProgress = updateClassComponent(null, workInProgress, current, returnFiber, renderLanes)) : (workInProgress.tag = 0, validateFunctionComponentInDev(workInProgress, current), workInProgress.type = current = resolveFunctionForHotReloading(current), workInProgress = updateFunctionComponent(null, workInProgress, current, returnFiber, renderLanes));
                else {
                    if (void 0 !== current && null !== current) {
                        if (prevSibling = current.$$typeof, prevSibling === REACT_FORWARD_REF_TYPE) {
                            workInProgress.tag = 11;
                            workInProgress.type = current = resolveForwardRefForHotReloading(current);
                            workInProgress = updateForwardRef(null, workInProgress, current, returnFiber, renderLanes);
                            break a;
                        } else if (prevSibling === REACT_MEMO_TYPE) {
                            workInProgress.tag = 14;
                            workInProgress = updateMemoComponent(null, workInProgress, current, returnFiber, renderLanes);
                            break a;
                        }
                    }
                    workInProgress = "";
                    null !== current && "object" === typeof current && current.$$typeof === REACT_LAZY_TYPE && (workInProgress = " Did you wrap a component in React.lazy() more than once?");
                    current = getComponentNameFromType(current) || current;
                    throw Error("Element type is invalid. Received a promise that resolves to: " + current + ". Lazy element type must resolve to a class or function." + workInProgress);
                }
                return workInProgress;
            case 0:
                return updateFunctionComponent(current, workInProgress, workInProgress.type, workInProgress.pendingProps, renderLanes);
            case 1:
                return returnFiber = workInProgress.type, prevSibling = resolveClassComponentProps(returnFiber, workInProgress.pendingProps), updateClassComponent(current, workInProgress, returnFiber, prevSibling, renderLanes);
            case 3:
                a: {
                    pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
                    if (null === current) throw Error("Should have a current fiber. This is a bug in React.");
                    returnFiber = workInProgress.pendingProps;
                    var prevState = workInProgress.memoizedState;
                    prevSibling = prevState.element;
                    cloneUpdateQueue(current, workInProgress);
                    processUpdateQueue(workInProgress, returnFiber, null, renderLanes);
                    var nextState = workInProgress.memoizedState;
                    returnFiber = nextState.cache;
                    pushProvider(workInProgress, CacheContext, returnFiber);
                    returnFiber !== prevState.cache && propagateContextChanges(workInProgress, [
                        CacheContext
                    ], renderLanes, !0);
                    suspendIfUpdateReadFromEntangledAsyncAction();
                    returnFiber = nextState.element;
                    if (prevState.isDehydrated) {
                        if (prevState = {
                            element: returnFiber,
                            isDehydrated: !1,
                            cache: nextState.cache
                        }, workInProgress.updateQueue.baseState = prevState, workInProgress.memoizedState = prevState, workInProgress.flags & 256) {
                            workInProgress = mountHostRootWithoutHydrating(current, workInProgress, returnFiber, renderLanes);
                            break a;
                        } else if (returnFiber !== prevSibling) {
                            prevSibling = createCapturedValueAtFiber(Error("This root received an early update, before anything was able hydrate. Switched the entire root to client rendering."), workInProgress);
                            queueHydrationError(prevSibling);
                            workInProgress = mountHostRootWithoutHydrating(current, workInProgress, returnFiber, renderLanes);
                            break a;
                        } else {
                            current = workInProgress.stateNode.containerInfo;
                            switch(current.nodeType){
                                case 9:
                                    current = current.body;
                                    break;
                                default:
                                    current = "HTML" === current.nodeName ? current.ownerDocument.body : current;
                            }
                            nextHydratableInstance = getNextHydratable(current.firstChild);
                            hydrationParentFiber = workInProgress;
                            isHydrating = !0;
                            hydrationErrors = null;
                            didSuspendOrErrorDEV = !1;
                            hydrationDiffRootDEV = null;
                            rootOrSingletonContext = !0;
                            current = mountChildFibers(workInProgress, null, returnFiber, renderLanes);
                            for(workInProgress.child = current; current;)current.flags = current.flags & -3 | 4096, current = current.sibling;
                        }
                    } else {
                        resetHydrationState();
                        if (returnFiber === prevSibling) {
                            workInProgress = bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
                            break a;
                        }
                        reconcileChildren(current, workInProgress, returnFiber, renderLanes);
                    }
                    workInProgress = workInProgress.child;
                }
                return workInProgress;
            case 26:
                return markRef(current, workInProgress), null === current ? (current = getResource(workInProgress.type, null, workInProgress.pendingProps, null)) ? workInProgress.memoizedState = current : isHydrating || (current = workInProgress.type, renderLanes = workInProgress.pendingProps, returnFiber = requiredContext(rootInstanceStackCursor.current), returnFiber = getOwnerDocumentFromRootContainer(returnFiber).createElement(current), returnFiber[internalInstanceKey] = workInProgress, returnFiber[internalPropsKey] = renderLanes, setInitialProperties(returnFiber, current, renderLanes), markNodeAsHoistable(returnFiber), workInProgress.stateNode = returnFiber) : workInProgress.memoizedState = getResource(workInProgress.type, current.memoizedProps, workInProgress.pendingProps, current.memoizedState), null;
            case 27:
                return pushHostContext(workInProgress), null === current && isHydrating && (returnFiber = requiredContext(rootInstanceStackCursor.current), prevSibling = getHostContext(), returnFiber = workInProgress.stateNode = resolveSingletonInstance(workInProgress.type, workInProgress.pendingProps, returnFiber, prevSibling, !1), didSuspendOrErrorDEV || (prevSibling = diffHydratedProperties(returnFiber, workInProgress.type, workInProgress.pendingProps, prevSibling), null !== prevSibling && (buildHydrationDiffNode(workInProgress, 0).serverProps = prevSibling)), hydrationParentFiber = workInProgress, rootOrSingletonContext = !0, prevSibling = nextHydratableInstance, isSingletonScope(workInProgress.type) ? (previousHydratableOnEnteringScopedSingleton = prevSibling, nextHydratableInstance = getNextHydratable(returnFiber.firstChild)) : nextHydratableInstance = prevSibling), reconcileChildren(current, workInProgress, workInProgress.pendingProps.children, renderLanes), markRef(current, workInProgress), null === current && (workInProgress.flags |= 4194304), workInProgress.child;
            case 5:
                return null === current && isHydrating && (prevState = getHostContext(), returnFiber = validateDOMNesting(workInProgress.type, prevState.ancestorInfo), prevSibling = nextHydratableInstance, (nextState = !prevSibling) || (nextState = canHydrateInstance(prevSibling, workInProgress.type, workInProgress.pendingProps, rootOrSingletonContext), null !== nextState ? (workInProgress.stateNode = nextState, didSuspendOrErrorDEV || (prevState = diffHydratedProperties(nextState, workInProgress.type, workInProgress.pendingProps, prevState), null !== prevState && (buildHydrationDiffNode(workInProgress, 0).serverProps = prevState)), hydrationParentFiber = workInProgress, nextHydratableInstance = getNextHydratable(nextState.firstChild), rootOrSingletonContext = !1, prevState = !0) : prevState = !1, nextState = !prevState), nextState && (returnFiber && warnNonHydratedInstance(workInProgress, prevSibling), throwOnHydrationMismatch(workInProgress))), pushHostContext(workInProgress), prevSibling = workInProgress.type, prevState = workInProgress.pendingProps, nextState = null !== current ? current.memoizedProps : null, returnFiber = prevState.children, shouldSetTextContent(prevSibling, prevState) ? returnFiber = null : null !== nextState && shouldSetTextContent(prevSibling, nextState) && (workInProgress.flags |= 32), null !== workInProgress.memoizedState && (prevSibling = renderWithHooks(current, workInProgress, TransitionAwareHostComponent, null, null, renderLanes), HostTransitionContext._currentValue = prevSibling), markRef(current, workInProgress), reconcileChildren(current, workInProgress, returnFiber, renderLanes), workInProgress.child;
            case 6:
                return null === current && isHydrating && (current = workInProgress.pendingProps, renderLanes = getHostContext(), returnFiber = renderLanes.ancestorInfo.current, current = null != returnFiber ? validateTextNesting(current, returnFiber.tag, renderLanes.ancestorInfo.implicitRootScope) : !0, renderLanes = nextHydratableInstance, (returnFiber = !renderLanes) || (returnFiber = canHydrateTextInstance(renderLanes, workInProgress.pendingProps, rootOrSingletonContext), null !== returnFiber ? (workInProgress.stateNode = returnFiber, hydrationParentFiber = workInProgress, nextHydratableInstance = null, returnFiber = !0) : returnFiber = !1, returnFiber = !returnFiber), returnFiber && (current && warnNonHydratedInstance(workInProgress, renderLanes), throwOnHydrationMismatch(workInProgress))), null;
            case 13:
                return updateSuspenseComponent(current, workInProgress, renderLanes);
            case 4:
                return pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo), returnFiber = workInProgress.pendingProps, null === current ? workInProgress.child = reconcileChildFibers(workInProgress, null, returnFiber, renderLanes) : reconcileChildren(current, workInProgress, returnFiber, renderLanes), workInProgress.child;
            case 11:
                return updateForwardRef(current, workInProgress, workInProgress.type, workInProgress.pendingProps, renderLanes);
            case 7:
                return reconcileChildren(current, workInProgress, workInProgress.pendingProps, renderLanes), workInProgress.child;
            case 8:
                return reconcileChildren(current, workInProgress, workInProgress.pendingProps.children, renderLanes), workInProgress.child;
            case 12:
                return workInProgress.flags |= 4, workInProgress.flags |= 2048, returnFiber = workInProgress.stateNode, returnFiber.effectDuration = -0, returnFiber.passiveEffectDuration = -0, reconcileChildren(current, workInProgress, workInProgress.pendingProps.children, renderLanes), workInProgress.child;
            case 10:
                return returnFiber = workInProgress.type, prevSibling = workInProgress.pendingProps, prevState = prevSibling.value, "value" in prevSibling || hasWarnedAboutUsingNoValuePropOnContextProvider || (hasWarnedAboutUsingNoValuePropOnContextProvider = !0, console.error("The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?")), pushProvider(workInProgress, returnFiber, prevState), reconcileChildren(current, workInProgress, prevSibling.children, renderLanes), workInProgress.child;
            case 9:
                return prevSibling = workInProgress.type._context, returnFiber = workInProgress.pendingProps.children, "function" !== typeof returnFiber && console.error("A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it."), prepareToReadContext(workInProgress), prevSibling = readContext(prevSibling), markComponentRenderStarted(workInProgress), returnFiber = callComponentInDEV(returnFiber, prevSibling, void 0), markComponentRenderStopped(), workInProgress.flags |= 1, reconcileChildren(current, workInProgress, returnFiber, renderLanes), workInProgress.child;
            case 14:
                return updateMemoComponent(current, workInProgress, workInProgress.type, workInProgress.pendingProps, renderLanes);
            case 15:
                return updateSimpleMemoComponent(current, workInProgress, workInProgress.type, workInProgress.pendingProps, renderLanes);
            case 19:
                return updateSuspenseListComponent(current, workInProgress, renderLanes);
            case 31:
                return returnFiber = workInProgress.pendingProps, renderLanes = workInProgress.mode, returnFiber = {
                    mode: returnFiber.mode,
                    children: returnFiber.children
                }, null === current ? (current = mountWorkInProgressOffscreenFiber(returnFiber, renderLanes), current.ref = workInProgress.ref, workInProgress.child = current, current.return = workInProgress, workInProgress = current) : (current = createWorkInProgress(current.child, returnFiber), current.ref = workInProgress.ref, workInProgress.child = current, current.return = workInProgress, workInProgress = current), workInProgress;
            case 22:
                return updateOffscreenComponent(current, workInProgress, renderLanes);
            case 24:
                return prepareToReadContext(workInProgress), returnFiber = readContext(CacheContext), null === current ? (prevSibling = peekCacheFromPool(), null === prevSibling && (prevSibling = workInProgressRoot, prevState = createCache(), prevSibling.pooledCache = prevState, retainCache(prevState), null !== prevState && (prevSibling.pooledCacheLanes |= renderLanes), prevSibling = prevState), workInProgress.memoizedState = {
                    parent: returnFiber,
                    cache: prevSibling
                }, initializeUpdateQueue(workInProgress), pushProvider(workInProgress, CacheContext, prevSibling)) : (0 !== (current.lanes & renderLanes) && (cloneUpdateQueue(current, workInProgress), processUpdateQueue(workInProgress, null, null, renderLanes), suspendIfUpdateReadFromEntangledAsyncAction()), prevSibling = current.memoizedState, prevState = workInProgress.memoizedState, prevSibling.parent !== returnFiber ? (prevSibling = {
                    parent: returnFiber,
                    cache: returnFiber
                }, workInProgress.memoizedState = prevSibling, 0 === workInProgress.lanes && (workInProgress.memoizedState = workInProgress.updateQueue.baseState = prevSibling), pushProvider(workInProgress, CacheContext, returnFiber)) : (returnFiber = prevState.cache, pushProvider(workInProgress, CacheContext, returnFiber), returnFiber !== prevSibling.cache && propagateContextChanges(workInProgress, [
                    CacheContext
                ], renderLanes, !0))), reconcileChildren(current, workInProgress, workInProgress.pendingProps.children, renderLanes), workInProgress.child;
            case 29:
                throw workInProgress.pendingProps;
        }
        throw Error("Unknown unit of work tag (" + workInProgress.tag + "). This error is likely caused by a bug in React. Please file an issue.");
    }
    function markUpdate(workInProgress) {
        workInProgress.flags |= 4;
    }
    function preloadResourceAndSuspendIfNeeded(workInProgress, resource) {
        if ("stylesheet" !== resource.type || (resource.state.loading & Inserted) !== NotLoaded) workInProgress.flags &= -16777217;
        else if (workInProgress.flags |= 16777216, !preloadResource(resource)) {
            resource = suspenseHandlerStackCursor.current;
            if (null !== resource && ((workInProgressRootRenderLanes & 4194048) === workInProgressRootRenderLanes ? null !== shellBoundary : (workInProgressRootRenderLanes & 62914560) !== workInProgressRootRenderLanes && 0 === (workInProgressRootRenderLanes & 536870912) || resource !== shellBoundary)) throw suspendedThenable = noopSuspenseyCommitThenable, SuspenseyCommitException;
            workInProgress.flags |= 8192;
        }
    }
    function scheduleRetryEffect(workInProgress, retryQueue) {
        null !== retryQueue && (workInProgress.flags |= 4);
        workInProgress.flags & 16384 && (retryQueue = 22 !== workInProgress.tag ? claimNextRetryLane() : 536870912, workInProgress.lanes |= retryQueue, workInProgressSuspendedRetryLanes |= retryQueue);
    }
    function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
        if (!isHydrating) switch(renderState.tailMode){
            case "hidden":
                hasRenderedATailFallback = renderState.tail;
                for(var lastTailNode = null; null !== hasRenderedATailFallback;)null !== hasRenderedATailFallback.alternate && (lastTailNode = hasRenderedATailFallback), hasRenderedATailFallback = hasRenderedATailFallback.sibling;
                null === lastTailNode ? renderState.tail = null : lastTailNode.sibling = null;
                break;
            case "collapsed":
                lastTailNode = renderState.tail;
                for(var _lastTailNode = null; null !== lastTailNode;)null !== lastTailNode.alternate && (_lastTailNode = lastTailNode), lastTailNode = lastTailNode.sibling;
                null === _lastTailNode ? hasRenderedATailFallback || null === renderState.tail ? renderState.tail = null : renderState.tail.sibling = null : _lastTailNode.sibling = null;
        }
    }
    function bubbleProperties(completedWork) {
        var didBailout = null !== completedWork.alternate && completedWork.alternate.child === completedWork.child, newChildLanes = 0, subtreeFlags = 0;
        if (didBailout) {
            if ((completedWork.mode & ProfileMode) !== NoMode) {
                for(var _treeBaseDuration = completedWork.selfBaseDuration, _child2 = completedWork.child; null !== _child2;)newChildLanes |= _child2.lanes | _child2.childLanes, subtreeFlags |= _child2.subtreeFlags & 65011712, subtreeFlags |= _child2.flags & 65011712, _treeBaseDuration += _child2.treeBaseDuration, _child2 = _child2.sibling;
                completedWork.treeBaseDuration = _treeBaseDuration;
            } else for(_treeBaseDuration = completedWork.child; null !== _treeBaseDuration;)newChildLanes |= _treeBaseDuration.lanes | _treeBaseDuration.childLanes, subtreeFlags |= _treeBaseDuration.subtreeFlags & 65011712, subtreeFlags |= _treeBaseDuration.flags & 65011712, _treeBaseDuration.return = completedWork, _treeBaseDuration = _treeBaseDuration.sibling;
        } else if ((completedWork.mode & ProfileMode) !== NoMode) {
            _treeBaseDuration = completedWork.actualDuration;
            _child2 = completedWork.selfBaseDuration;
            for(var child = completedWork.child; null !== child;)newChildLanes |= child.lanes | child.childLanes, subtreeFlags |= child.subtreeFlags, subtreeFlags |= child.flags, _treeBaseDuration += child.actualDuration, _child2 += child.treeBaseDuration, child = child.sibling;
            completedWork.actualDuration = _treeBaseDuration;
            completedWork.treeBaseDuration = _child2;
        } else for(_treeBaseDuration = completedWork.child; null !== _treeBaseDuration;)newChildLanes |= _treeBaseDuration.lanes | _treeBaseDuration.childLanes, subtreeFlags |= _treeBaseDuration.subtreeFlags, subtreeFlags |= _treeBaseDuration.flags, _treeBaseDuration.return = completedWork, _treeBaseDuration = _treeBaseDuration.sibling;
        completedWork.subtreeFlags |= subtreeFlags;
        completedWork.childLanes = newChildLanes;
        return didBailout;
    }
    function completeWork(current, workInProgress, renderLanes) {
        var newProps = workInProgress.pendingProps;
        popTreeContext(workInProgress);
        switch(workInProgress.tag){
            case 31:
            case 16:
            case 15:
            case 0:
            case 11:
            case 7:
            case 8:
            case 12:
            case 9:
            case 14:
                return bubbleProperties(workInProgress), null;
            case 1:
                return bubbleProperties(workInProgress), null;
            case 3:
                renderLanes = workInProgress.stateNode;
                newProps = null;
                null !== current && (newProps = current.memoizedState.cache);
                workInProgress.memoizedState.cache !== newProps && (workInProgress.flags |= 2048);
                popProvider(CacheContext, workInProgress);
                popHostContainer(workInProgress);
                renderLanes.pendingContext && (renderLanes.context = renderLanes.pendingContext, renderLanes.pendingContext = null);
                if (null === current || null === current.child) popHydrationState(workInProgress) ? (emitPendingHydrationWarnings(), markUpdate(workInProgress)) : null === current || current.memoizedState.isDehydrated && 0 === (workInProgress.flags & 256) || (workInProgress.flags |= 1024, upgradeHydrationErrorsToRecoverable());
                bubbleProperties(workInProgress);
                return null;
            case 26:
                return renderLanes = workInProgress.memoizedState, null === current ? (markUpdate(workInProgress), null !== renderLanes ? (bubbleProperties(workInProgress), preloadResourceAndSuspendIfNeeded(workInProgress, renderLanes)) : (bubbleProperties(workInProgress), workInProgress.flags &= -16777217)) : renderLanes ? renderLanes !== current.memoizedState ? (markUpdate(workInProgress), bubbleProperties(workInProgress), preloadResourceAndSuspendIfNeeded(workInProgress, renderLanes)) : (bubbleProperties(workInProgress), workInProgress.flags &= -16777217) : (current.memoizedProps !== newProps && markUpdate(workInProgress), bubbleProperties(workInProgress), workInProgress.flags &= -16777217), null;
            case 27:
                popHostContext(workInProgress);
                renderLanes = requiredContext(rootInstanceStackCursor.current);
                var _type = workInProgress.type;
                if (null !== current && null != workInProgress.stateNode) current.memoizedProps !== newProps && markUpdate(workInProgress);
                else {
                    if (!newProps) {
                        if (null === workInProgress.stateNode) throw Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                        bubbleProperties(workInProgress);
                        return null;
                    }
                    current = getHostContext();
                    popHydrationState(workInProgress) ? prepareToHydrateHostInstance(workInProgress, current) : (current = resolveSingletonInstance(_type, newProps, renderLanes, current, !0), workInProgress.stateNode = current, markUpdate(workInProgress));
                }
                bubbleProperties(workInProgress);
                return null;
            case 5:
                popHostContext(workInProgress);
                renderLanes = workInProgress.type;
                if (null !== current && null != workInProgress.stateNode) current.memoizedProps !== newProps && markUpdate(workInProgress);
                else {
                    if (!newProps) {
                        if (null === workInProgress.stateNode) throw Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                        bubbleProperties(workInProgress);
                        return null;
                    }
                    _type = getHostContext();
                    if (popHydrationState(workInProgress)) prepareToHydrateHostInstance(workInProgress, _type);
                    else {
                        current = requiredContext(rootInstanceStackCursor.current);
                        validateDOMNesting(renderLanes, _type.ancestorInfo);
                        _type = _type.context;
                        current = getOwnerDocumentFromRootContainer(current);
                        switch(_type){
                            case HostContextNamespaceSvg:
                                current = current.createElementNS(SVG_NAMESPACE, renderLanes);
                                break;
                            case HostContextNamespaceMath:
                                current = current.createElementNS(MATH_NAMESPACE, renderLanes);
                                break;
                            default:
                                switch(renderLanes){
                                    case "svg":
                                        current = current.createElementNS(SVG_NAMESPACE, renderLanes);
                                        break;
                                    case "math":
                                        current = current.createElementNS(MATH_NAMESPACE, renderLanes);
                                        break;
                                    case "script":
                                        current = current.createElement("div");
                                        current.innerHTML = "<script>\x3c/script>";
                                        current = current.removeChild(current.firstChild);
                                        break;
                                    case "select":
                                        current = "string" === typeof newProps.is ? current.createElement("select", {
                                            is: newProps.is
                                        }) : current.createElement("select");
                                        newProps.multiple ? current.multiple = !0 : newProps.size && (current.size = newProps.size);
                                        break;
                                    default:
                                        current = "string" === typeof newProps.is ? current.createElement(renderLanes, {
                                            is: newProps.is
                                        }) : current.createElement(renderLanes), -1 === renderLanes.indexOf("-") && (renderLanes !== renderLanes.toLowerCase() && console.error("<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.", renderLanes), "[object HTMLUnknownElement]" !== Object.prototype.toString.call(current) || hasOwnProperty.call(warnedUnknownTags, renderLanes) || (warnedUnknownTags[renderLanes] = !0, console.error("The tag <%s> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.", renderLanes)));
                                }
                        }
                        current[internalInstanceKey] = workInProgress;
                        current[internalPropsKey] = newProps;
                        a: for(_type = workInProgress.child; null !== _type;){
                            if (5 === _type.tag || 6 === _type.tag) current.appendChild(_type.stateNode);
                            else if (4 !== _type.tag && 27 !== _type.tag && null !== _type.child) {
                                _type.child.return = _type;
                                _type = _type.child;
                                continue;
                            }
                            if (_type === workInProgress) break a;
                            for(; null === _type.sibling;){
                                if (null === _type.return || _type.return === workInProgress) break a;
                                _type = _type.return;
                            }
                            _type.sibling.return = _type.return;
                            _type = _type.sibling;
                        }
                        workInProgress.stateNode = current;
                        a: switch(setInitialProperties(current, renderLanes, newProps), renderLanes){
                            case "button":
                            case "input":
                            case "select":
                            case "textarea":
                                current = !!newProps.autoFocus;
                                break a;
                            case "img":
                                current = !0;
                                break a;
                            default:
                                current = !1;
                        }
                        current && markUpdate(workInProgress);
                    }
                }
                bubbleProperties(workInProgress);
                workInProgress.flags &= -16777217;
                return null;
            case 6:
                if (current && null != workInProgress.stateNode) current.memoizedProps !== newProps && markUpdate(workInProgress);
                else {
                    if ("string" !== typeof newProps && null === workInProgress.stateNode) throw Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                    current = requiredContext(rootInstanceStackCursor.current);
                    renderLanes = getHostContext();
                    if (popHydrationState(workInProgress)) {
                        current = workInProgress.stateNode;
                        renderLanes = workInProgress.memoizedProps;
                        _type = !didSuspendOrErrorDEV;
                        newProps = null;
                        var returnFiber = hydrationParentFiber;
                        if (null !== returnFiber) switch(returnFiber.tag){
                            case 3:
                                _type && (_type = diffHydratedTextForDevWarnings(current, renderLanes, newProps), null !== _type && (buildHydrationDiffNode(workInProgress, 0).serverProps = _type));
                                break;
                            case 27:
                            case 5:
                                newProps = returnFiber.memoizedProps, _type && (_type = diffHydratedTextForDevWarnings(current, renderLanes, newProps), null !== _type && (buildHydrationDiffNode(workInProgress, 0).serverProps = _type));
                        }
                        current[internalInstanceKey] = workInProgress;
                        current = current.nodeValue === renderLanes || null !== newProps && !0 === newProps.suppressHydrationWarning || checkForUnmatchedText(current.nodeValue, renderLanes) ? !0 : !1;
                        current || throwOnHydrationMismatch(workInProgress);
                    } else _type = renderLanes.ancestorInfo.current, null != _type && validateTextNesting(newProps, _type.tag, renderLanes.ancestorInfo.implicitRootScope), current = getOwnerDocumentFromRootContainer(current).createTextNode(newProps), current[internalInstanceKey] = workInProgress, workInProgress.stateNode = current;
                }
                bubbleProperties(workInProgress);
                return null;
            case 13:
                newProps = workInProgress.memoizedState;
                if (null === current || null !== current.memoizedState && null !== current.memoizedState.dehydrated) {
                    _type = popHydrationState(workInProgress);
                    if (null !== newProps && null !== newProps.dehydrated) {
                        if (null === current) {
                            if (!_type) throw Error("A dehydrated suspense component was completed without a hydrated node. This is probably a bug in React.");
                            _type = workInProgress.memoizedState;
                            _type = null !== _type ? _type.dehydrated : null;
                            if (!_type) throw Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
                            _type[internalInstanceKey] = workInProgress;
                            bubbleProperties(workInProgress);
                            (workInProgress.mode & ProfileMode) !== NoMode && null !== newProps && (_type = workInProgress.child, null !== _type && (workInProgress.treeBaseDuration -= _type.treeBaseDuration));
                        } else emitPendingHydrationWarnings(), resetHydrationState(), 0 === (workInProgress.flags & 128) && (workInProgress.memoizedState = null), workInProgress.flags |= 4, bubbleProperties(workInProgress), (workInProgress.mode & ProfileMode) !== NoMode && null !== newProps && (_type = workInProgress.child, null !== _type && (workInProgress.treeBaseDuration -= _type.treeBaseDuration));
                        _type = !1;
                    } else _type = upgradeHydrationErrorsToRecoverable(), null !== current && null !== current.memoizedState && (current.memoizedState.hydrationErrors = _type), _type = !0;
                    if (!_type) {
                        if (workInProgress.flags & 256) return popSuspenseHandler(workInProgress), workInProgress;
                        popSuspenseHandler(workInProgress);
                        return null;
                    }
                }
                popSuspenseHandler(workInProgress);
                if (0 !== (workInProgress.flags & 128)) return workInProgress.lanes = renderLanes, (workInProgress.mode & ProfileMode) !== NoMode && transferActualDuration(workInProgress), workInProgress;
                renderLanes = null !== newProps;
                current = null !== current && null !== current.memoizedState;
                renderLanes && (newProps = workInProgress.child, _type = null, null !== newProps.alternate && null !== newProps.alternate.memoizedState && null !== newProps.alternate.memoizedState.cachePool && (_type = newProps.alternate.memoizedState.cachePool.pool), returnFiber = null, null !== newProps.memoizedState && null !== newProps.memoizedState.cachePool && (returnFiber = newProps.memoizedState.cachePool.pool), returnFiber !== _type && (newProps.flags |= 2048));
                renderLanes !== current && renderLanes && (workInProgress.child.flags |= 8192);
                scheduleRetryEffect(workInProgress, workInProgress.updateQueue);
                bubbleProperties(workInProgress);
                (workInProgress.mode & ProfileMode) !== NoMode && renderLanes && (current = workInProgress.child, null !== current && (workInProgress.treeBaseDuration -= current.treeBaseDuration));
                return null;
            case 4:
                return popHostContainer(workInProgress), null === current && listenToAllSupportedEvents(workInProgress.stateNode.containerInfo), bubbleProperties(workInProgress), null;
            case 10:
                return popProvider(workInProgress.type, workInProgress), bubbleProperties(workInProgress), null;
            case 19:
                pop(suspenseStackCursor, workInProgress);
                _type = workInProgress.memoizedState;
                if (null === _type) return bubbleProperties(workInProgress), null;
                newProps = 0 !== (workInProgress.flags & 128);
                returnFiber = _type.rendering;
                if (null === returnFiber) {
                    if (newProps) cutOffTailIfNeeded(_type, !1);
                    else {
                        if (workInProgressRootExitStatus !== RootInProgress || null !== current && 0 !== (current.flags & 128)) for(current = workInProgress.child; null !== current;){
                            returnFiber = findFirstSuspended(current);
                            if (null !== returnFiber) {
                                workInProgress.flags |= 128;
                                cutOffTailIfNeeded(_type, !1);
                                current = returnFiber.updateQueue;
                                workInProgress.updateQueue = current;
                                scheduleRetryEffect(workInProgress, current);
                                workInProgress.subtreeFlags = 0;
                                current = renderLanes;
                                for(renderLanes = workInProgress.child; null !== renderLanes;)resetWorkInProgress(renderLanes, current), renderLanes = renderLanes.sibling;
                                push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask | ForceSuspenseFallback, workInProgress);
                                return workInProgress.child;
                            }
                            current = current.sibling;
                        }
                        null !== _type.tail && now$1() > workInProgressRootRenderTargetTime && (workInProgress.flags |= 128, newProps = !0, cutOffTailIfNeeded(_type, !1), workInProgress.lanes = 4194304);
                    }
                } else {
                    if (!newProps) {
                        if (current = findFirstSuspended(returnFiber), null !== current) {
                            if (workInProgress.flags |= 128, newProps = !0, current = current.updateQueue, workInProgress.updateQueue = current, scheduleRetryEffect(workInProgress, current), cutOffTailIfNeeded(_type, !0), null === _type.tail && "hidden" === _type.tailMode && !returnFiber.alternate && !isHydrating) return bubbleProperties(workInProgress), null;
                        } else 2 * now$1() - _type.renderingStartTime > workInProgressRootRenderTargetTime && 536870912 !== renderLanes && (workInProgress.flags |= 128, newProps = !0, cutOffTailIfNeeded(_type, !1), workInProgress.lanes = 4194304);
                    }
                    _type.isBackwards ? (returnFiber.sibling = workInProgress.child, workInProgress.child = returnFiber) : (current = _type.last, null !== current ? current.sibling = returnFiber : workInProgress.child = returnFiber, _type.last = returnFiber);
                }
                if (null !== _type.tail) return current = _type.tail, _type.rendering = current, _type.tail = current.sibling, _type.renderingStartTime = now$1(), current.sibling = null, renderLanes = suspenseStackCursor.current, renderLanes = newProps ? renderLanes & SubtreeSuspenseContextMask | ForceSuspenseFallback : renderLanes & SubtreeSuspenseContextMask, push(suspenseStackCursor, renderLanes, workInProgress), current;
                bubbleProperties(workInProgress);
                return null;
            case 22:
            case 23:
                return popSuspenseHandler(workInProgress), popHiddenContext(workInProgress), newProps = null !== workInProgress.memoizedState, null !== current ? null !== current.memoizedState !== newProps && (workInProgress.flags |= 8192) : newProps && (workInProgress.flags |= 8192), newProps ? 0 !== (renderLanes & 536870912) && 0 === (workInProgress.flags & 128) && (bubbleProperties(workInProgress), workInProgress.subtreeFlags & 6 && (workInProgress.flags |= 8192)) : bubbleProperties(workInProgress), renderLanes = workInProgress.updateQueue, null !== renderLanes && scheduleRetryEffect(workInProgress, renderLanes.retryQueue), renderLanes = null, null !== current && null !== current.memoizedState && null !== current.memoizedState.cachePool && (renderLanes = current.memoizedState.cachePool.pool), newProps = null, null !== workInProgress.memoizedState && null !== workInProgress.memoizedState.cachePool && (newProps = workInProgress.memoizedState.cachePool.pool), newProps !== renderLanes && (workInProgress.flags |= 2048), null !== current && pop(resumedCache, workInProgress), null;
            case 24:
                return renderLanes = null, null !== current && (renderLanes = current.memoizedState.cache), workInProgress.memoizedState.cache !== renderLanes && (workInProgress.flags |= 2048), popProvider(CacheContext, workInProgress), bubbleProperties(workInProgress), null;
            case 25:
                return null;
            case 30:
                return null;
        }
        throw Error("Unknown unit of work tag (" + workInProgress.tag + "). This error is likely caused by a bug in React. Please file an issue.");
    }
    function unwindWork(current, workInProgress) {
        popTreeContext(workInProgress);
        switch(workInProgress.tag){
            case 1:
                return current = workInProgress.flags, current & 65536 ? (workInProgress.flags = current & -65537 | 128, (workInProgress.mode & ProfileMode) !== NoMode && transferActualDuration(workInProgress), workInProgress) : null;
            case 3:
                return popProvider(CacheContext, workInProgress), popHostContainer(workInProgress), current = workInProgress.flags, 0 !== (current & 65536) && 0 === (current & 128) ? (workInProgress.flags = current & -65537 | 128, workInProgress) : null;
            case 26:
            case 27:
            case 5:
                return popHostContext(workInProgress), null;
            case 13:
                popSuspenseHandler(workInProgress);
                current = workInProgress.memoizedState;
                if (null !== current && null !== current.dehydrated) {
                    if (null === workInProgress.alternate) throw Error("Threw in newly mounted dehydrated component. This is likely a bug in React. Please file an issue.");
                    resetHydrationState();
                }
                current = workInProgress.flags;
                return current & 65536 ? (workInProgress.flags = current & -65537 | 128, (workInProgress.mode & ProfileMode) !== NoMode && transferActualDuration(workInProgress), workInProgress) : null;
            case 19:
                return pop(suspenseStackCursor, workInProgress), null;
            case 4:
                return popHostContainer(workInProgress), null;
            case 10:
                return popProvider(workInProgress.type, workInProgress), null;
            case 22:
            case 23:
                return popSuspenseHandler(workInProgress), popHiddenContext(workInProgress), null !== current && pop(resumedCache, workInProgress), current = workInProgress.flags, current & 65536 ? (workInProgress.flags = current & -65537 | 128, (workInProgress.mode & ProfileMode) !== NoMode && transferActualDuration(workInProgress), workInProgress) : null;
            case 24:
                return popProvider(CacheContext, workInProgress), null;
            case 25:
                return null;
            default:
                return null;
        }
    }
    function unwindInterruptedWork(current, interruptedWork) {
        popTreeContext(interruptedWork);
        switch(interruptedWork.tag){
            case 3:
                popProvider(CacheContext, interruptedWork);
                popHostContainer(interruptedWork);
                break;
            case 26:
            case 27:
            case 5:
                popHostContext(interruptedWork);
                break;
            case 4:
                popHostContainer(interruptedWork);
                break;
            case 13:
                popSuspenseHandler(interruptedWork);
                break;
            case 19:
                pop(suspenseStackCursor, interruptedWork);
                break;
            case 10:
                popProvider(interruptedWork.type, interruptedWork);
                break;
            case 22:
            case 23:
                popSuspenseHandler(interruptedWork);
                popHiddenContext(interruptedWork);
                null !== current && pop(resumedCache, interruptedWork);
                break;
            case 24:
                popProvider(CacheContext, interruptedWork);
        }
    }
    function shouldProfile(current) {
        return (current.mode & ProfileMode) !== NoMode;
    }
    function commitHookLayoutEffects(finishedWork, hookFlags) {
        shouldProfile(finishedWork) ? (startEffectTimer(), commitHookEffectListMount(hookFlags, finishedWork), recordEffectDuration()) : commitHookEffectListMount(hookFlags, finishedWork);
    }
    function commitHookLayoutUnmountEffects(finishedWork, nearestMountedAncestor, hookFlags) {
        shouldProfile(finishedWork) ? (startEffectTimer(), commitHookEffectListUnmount(hookFlags, finishedWork, nearestMountedAncestor), recordEffectDuration()) : commitHookEffectListUnmount(hookFlags, finishedWork, nearestMountedAncestor);
    }
    function commitHookEffectListMount(flags, finishedWork) {
        try {
            var updateQueue = finishedWork.updateQueue, lastEffect = null !== updateQueue ? updateQueue.lastEffect : null;
            if (null !== lastEffect) {
                var firstEffect = lastEffect.next;
                updateQueue = firstEffect;
                do {
                    if ((updateQueue.tag & flags) === flags && ((flags & Passive) !== NoFlags ? null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentPassiveEffectMountStarted && injectedProfilingHooks.markComponentPassiveEffectMountStarted(finishedWork) : (flags & Layout) !== NoFlags && null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentLayoutEffectMountStarted && injectedProfilingHooks.markComponentLayoutEffectMountStarted(finishedWork), lastEffect = void 0, (flags & Insertion) !== NoFlags && (isRunningInsertionEffect = !0), lastEffect = runWithFiberInDEV(finishedWork, callCreateInDEV, updateQueue), (flags & Insertion) !== NoFlags && (isRunningInsertionEffect = !1), (flags & Passive) !== NoFlags ? null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentPassiveEffectMountStopped && injectedProfilingHooks.markComponentPassiveEffectMountStopped() : (flags & Layout) !== NoFlags && null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentLayoutEffectMountStopped && injectedProfilingHooks.markComponentLayoutEffectMountStopped(), void 0 !== lastEffect && "function" !== typeof lastEffect)) {
                        var hookName = void 0;
                        hookName = 0 !== (updateQueue.tag & Layout) ? "useLayoutEffect" : 0 !== (updateQueue.tag & Insertion) ? "useInsertionEffect" : "useEffect";
                        var addendum = void 0;
                        addendum = null === lastEffect ? " You returned null. If your effect does not require clean up, return undefined (or nothing)." : "function" === typeof lastEffect.then ? "\n\nIt looks like you wrote " + hookName + "(async () => ...) or returned a Promise. Instead, write the async function inside your effect and call it immediately:\n\n" + hookName + "(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://react.dev/link/hooks-data-fetching" : " You returned: " + lastEffect;
                        runWithFiberInDEV(finishedWork, function(n, a) {
                            console.error("%s must not return anything besides a function, which is used for clean-up.%s", n, a);
                        }, hookName, addendum);
                    }
                    updateQueue = updateQueue.next;
                }while (updateQueue !== firstEffect);
            }
        } catch (error) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error);
        }
    }
    function commitHookEffectListUnmount(flags, finishedWork, nearestMountedAncestor) {
        try {
            var updateQueue = finishedWork.updateQueue, lastEffect = null !== updateQueue ? updateQueue.lastEffect : null;
            if (null !== lastEffect) {
                var firstEffect = lastEffect.next;
                updateQueue = firstEffect;
                do {
                    if ((updateQueue.tag & flags) === flags) {
                        var inst = updateQueue.inst, destroy = inst.destroy;
                        void 0 !== destroy && (inst.destroy = void 0, (flags & Passive) !== NoFlags ? null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStarted && injectedProfilingHooks.markComponentPassiveEffectUnmountStarted(finishedWork) : (flags & Layout) !== NoFlags && null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStarted && injectedProfilingHooks.markComponentLayoutEffectUnmountStarted(finishedWork), (flags & Insertion) !== NoFlags && (isRunningInsertionEffect = !0), lastEffect = finishedWork, runWithFiberInDEV(lastEffect, callDestroyInDEV, lastEffect, nearestMountedAncestor, destroy), (flags & Insertion) !== NoFlags && (isRunningInsertionEffect = !1), (flags & Passive) !== NoFlags ? null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStopped && injectedProfilingHooks.markComponentPassiveEffectUnmountStopped() : (flags & Layout) !== NoFlags && null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStopped && injectedProfilingHooks.markComponentLayoutEffectUnmountStopped());
                    }
                    updateQueue = updateQueue.next;
                }while (updateQueue !== firstEffect);
            }
        } catch (error) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error);
        }
    }
    function commitHookPassiveMountEffects(finishedWork, hookFlags) {
        shouldProfile(finishedWork) ? (startEffectTimer(), commitHookEffectListMount(hookFlags, finishedWork), recordEffectDuration()) : commitHookEffectListMount(hookFlags, finishedWork);
    }
    function commitHookPassiveUnmountEffects(finishedWork, nearestMountedAncestor, hookFlags) {
        shouldProfile(finishedWork) ? (startEffectTimer(), commitHookEffectListUnmount(hookFlags, finishedWork, nearestMountedAncestor), recordEffectDuration()) : commitHookEffectListUnmount(hookFlags, finishedWork, nearestMountedAncestor);
    }
    function commitClassCallbacks(finishedWork) {
        var updateQueue = finishedWork.updateQueue;
        if (null !== updateQueue) {
            var instance = finishedWork.stateNode;
            finishedWork.type.defaultProps || "ref" in finishedWork.memoizedProps || didWarnAboutReassigningProps || (instance.props !== finishedWork.memoizedProps && console.error("Expected %s props to match memoized props before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance"), instance.state !== finishedWork.memoizedState && console.error("Expected %s state to match memoized state before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance"));
            try {
                runWithFiberInDEV(finishedWork, commitCallbacks, updateQueue, instance);
            } catch (error) {
                captureCommitPhaseError(finishedWork, finishedWork.return, error);
            }
        }
    }
    function callGetSnapshotBeforeUpdates(instance, prevProps, prevState) {
        return instance.getSnapshotBeforeUpdate(prevProps, prevState);
    }
    function commitClassSnapshot(finishedWork, current) {
        var prevProps = current.memoizedProps, prevState = current.memoizedState;
        current = finishedWork.stateNode;
        finishedWork.type.defaultProps || "ref" in finishedWork.memoizedProps || didWarnAboutReassigningProps || (current.props !== finishedWork.memoizedProps && console.error("Expected %s props to match memoized props before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance"), current.state !== finishedWork.memoizedState && console.error("Expected %s state to match memoized state before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance"));
        try {
            var resolvedPrevProps = resolveClassComponentProps(finishedWork.type, prevProps, finishedWork.elementType === finishedWork.type);
            var snapshot = runWithFiberInDEV(finishedWork, callGetSnapshotBeforeUpdates, current, resolvedPrevProps, prevState);
            prevProps = didWarnAboutUndefinedSnapshotBeforeUpdate;
            void 0 !== snapshot || prevProps.has(finishedWork.type) || (prevProps.add(finishedWork.type), runWithFiberInDEV(finishedWork, function() {
                console.error("%s.getSnapshotBeforeUpdate(): A snapshot value (or null) must be returned. You have returned undefined.", getComponentNameFromFiber(finishedWork));
            }));
            current.__reactInternalSnapshotBeforeUpdate = snapshot;
        } catch (error) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error);
        }
    }
    function safelyCallComponentWillUnmount(current, nearestMountedAncestor, instance) {
        instance.props = resolveClassComponentProps(current.type, current.memoizedProps);
        instance.state = current.memoizedState;
        shouldProfile(current) ? (startEffectTimer(), runWithFiberInDEV(current, callComponentWillUnmountInDEV, current, nearestMountedAncestor, instance), recordEffectDuration()) : runWithFiberInDEV(current, callComponentWillUnmountInDEV, current, nearestMountedAncestor, instance);
    }
    function commitAttachRef(finishedWork) {
        var ref = finishedWork.ref;
        if (null !== ref) {
            switch(finishedWork.tag){
                case 26:
                case 27:
                case 5:
                    var instanceToUse = finishedWork.stateNode;
                    break;
                case 30:
                    instanceToUse = finishedWork.stateNode;
                    break;
                default:
                    instanceToUse = finishedWork.stateNode;
            }
            if ("function" === typeof ref) {
                if (shouldProfile(finishedWork)) try {
                    startEffectTimer(), finishedWork.refCleanup = ref(instanceToUse);
                } finally{
                    recordEffectDuration();
                }
                else finishedWork.refCleanup = ref(instanceToUse);
            } else "string" === typeof ref ? console.error("String refs are no longer supported.") : ref.hasOwnProperty("current") || console.error("Unexpected ref object provided for %s. Use either a ref-setter function or React.createRef().", getComponentNameFromFiber(finishedWork)), ref.current = instanceToUse;
        }
    }
    function safelyAttachRef(current, nearestMountedAncestor) {
        try {
            runWithFiberInDEV(current, commitAttachRef, current);
        } catch (error) {
            captureCommitPhaseError(current, nearestMountedAncestor, error);
        }
    }
    function safelyDetachRef(current, nearestMountedAncestor) {
        var ref = current.ref, refCleanup = current.refCleanup;
        if (null !== ref) {
            if ("function" === typeof refCleanup) try {
                if (shouldProfile(current)) try {
                    startEffectTimer(), runWithFiberInDEV(current, refCleanup);
                } finally{
                    recordEffectDuration(current);
                }
                else runWithFiberInDEV(current, refCleanup);
            } catch (error) {
                captureCommitPhaseError(current, nearestMountedAncestor, error);
            } finally{
                current.refCleanup = null, current = current.alternate, null != current && (current.refCleanup = null);
            }
            else if ("function" === typeof ref) try {
                if (shouldProfile(current)) try {
                    startEffectTimer(), runWithFiberInDEV(current, ref, null);
                } finally{
                    recordEffectDuration(current);
                }
                else runWithFiberInDEV(current, ref, null);
            } catch (error$7) {
                captureCommitPhaseError(current, nearestMountedAncestor, error$7);
            }
            else ref.current = null;
        }
    }
    function commitProfiler(finishedWork, current, commitStartTime, effectDuration) {
        var _finishedWork$memoize = finishedWork.memoizedProps, id = _finishedWork$memoize.id, onCommit = _finishedWork$memoize.onCommit;
        _finishedWork$memoize = _finishedWork$memoize.onRender;
        current = null === current ? "mount" : "update";
        currentUpdateIsNested && (current = "nested-update");
        "function" === typeof _finishedWork$memoize && _finishedWork$memoize(id, current, finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, commitStartTime);
        "function" === typeof onCommit && onCommit(finishedWork.memoizedProps.id, current, effectDuration, commitStartTime);
    }
    function commitProfilerPostCommitImpl(finishedWork, current, commitStartTime, passiveEffectDuration) {
        var _finishedWork$memoize2 = finishedWork.memoizedProps;
        finishedWork = _finishedWork$memoize2.id;
        _finishedWork$memoize2 = _finishedWork$memoize2.onPostCommit;
        current = null === current ? "mount" : "update";
        currentUpdateIsNested && (current = "nested-update");
        "function" === typeof _finishedWork$memoize2 && _finishedWork$memoize2(finishedWork, current, passiveEffectDuration, commitStartTime);
    }
    function commitHostMount(finishedWork) {
        var type = finishedWork.type, props = finishedWork.memoizedProps, instance = finishedWork.stateNode;
        try {
            runWithFiberInDEV(finishedWork, commitMount, instance, type, props, finishedWork);
        } catch (error) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error);
        }
    }
    function commitHostUpdate(finishedWork, newProps, oldProps) {
        try {
            runWithFiberInDEV(finishedWork, commitUpdate, finishedWork.stateNode, finishedWork.type, oldProps, newProps, finishedWork);
        } catch (error) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error);
        }
    }
    function isHostParent(fiber) {
        return 5 === fiber.tag || 3 === fiber.tag || 26 === fiber.tag || 27 === fiber.tag && isSingletonScope(fiber.type) || 4 === fiber.tag;
    }
    function getHostSibling(fiber) {
        a: for(;;){
            for(; null === fiber.sibling;){
                if (null === fiber.return || isHostParent(fiber.return)) return null;
                fiber = fiber.return;
            }
            fiber.sibling.return = fiber.return;
            for(fiber = fiber.sibling; 5 !== fiber.tag && 6 !== fiber.tag && 18 !== fiber.tag;){
                if (27 === fiber.tag && isSingletonScope(fiber.type)) continue a;
                if (fiber.flags & 2) continue a;
                if (null === fiber.child || 4 === fiber.tag) continue a;
                else fiber.child.return = fiber, fiber = fiber.child;
            }
            if (!(fiber.flags & 2)) return fiber.stateNode;
        }
    }
    function insertOrAppendPlacementNodeIntoContainer(node, before, parent) {
        var tag = node.tag;
        if (5 === tag || 6 === tag) node = node.stateNode, before ? (9 === parent.nodeType ? parent.body : "HTML" === parent.nodeName ? parent.ownerDocument.body : parent).insertBefore(node, before) : (before = 9 === parent.nodeType ? parent.body : "HTML" === parent.nodeName ? parent.ownerDocument.body : parent, before.appendChild(node), parent = parent._reactRootContainer, null !== parent && void 0 !== parent || null !== before.onclick || (before.onclick = noop$1));
        else if (4 !== tag && (27 === tag && isSingletonScope(node.type) && (parent = node.stateNode, before = null), node = node.child, null !== node)) for(insertOrAppendPlacementNodeIntoContainer(node, before, parent), node = node.sibling; null !== node;)insertOrAppendPlacementNodeIntoContainer(node, before, parent), node = node.sibling;
    }
    function insertOrAppendPlacementNode(node, before, parent) {
        var tag = node.tag;
        if (5 === tag || 6 === tag) node = node.stateNode, before ? parent.insertBefore(node, before) : parent.appendChild(node);
        else if (4 !== tag && (27 === tag && isSingletonScope(node.type) && (parent = node.stateNode), node = node.child, null !== node)) for(insertOrAppendPlacementNode(node, before, parent), node = node.sibling; null !== node;)insertOrAppendPlacementNode(node, before, parent), node = node.sibling;
    }
    function commitPlacement(finishedWork) {
        for(var hostParentFiber, parentFiber = finishedWork.return; null !== parentFiber;){
            if (isHostParent(parentFiber)) {
                hostParentFiber = parentFiber;
                break;
            }
            parentFiber = parentFiber.return;
        }
        if (null == hostParentFiber) throw Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
        switch(hostParentFiber.tag){
            case 27:
                hostParentFiber = hostParentFiber.stateNode;
                parentFiber = getHostSibling(finishedWork);
                insertOrAppendPlacementNode(finishedWork, parentFiber, hostParentFiber);
                break;
            case 5:
                parentFiber = hostParentFiber.stateNode;
                hostParentFiber.flags & 32 && (resetTextContent(parentFiber), hostParentFiber.flags &= -33);
                hostParentFiber = getHostSibling(finishedWork);
                insertOrAppendPlacementNode(finishedWork, hostParentFiber, parentFiber);
                break;
            case 3:
            case 4:
                hostParentFiber = hostParentFiber.stateNode.containerInfo;
                parentFiber = getHostSibling(finishedWork);
                insertOrAppendPlacementNodeIntoContainer(finishedWork, parentFiber, hostParentFiber);
                break;
            default:
                throw Error("Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.");
        }
    }
    function commitHostSingletonAcquisition(finishedWork) {
        var singleton = finishedWork.stateNode, props = finishedWork.memoizedProps;
        try {
            runWithFiberInDEV(finishedWork, acquireSingletonInstance, finishedWork.type, props, singleton, finishedWork);
        } catch (error) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error);
        }
    }
    function commitBeforeMutationEffects(root, firstChild) {
        root = root.containerInfo;
        eventsEnabled = _enabled;
        root = getActiveElementDeep(root);
        if (hasSelectionCapabilities(root)) {
            if ("selectionStart" in root) var JSCompiler_temp = {
                start: root.selectionStart,
                end: root.selectionEnd
            };
            else a: {
                JSCompiler_temp = (JSCompiler_temp = root.ownerDocument) && JSCompiler_temp.defaultView || window;
                var selection = JSCompiler_temp.getSelection && JSCompiler_temp.getSelection();
                if (selection && 0 !== selection.rangeCount) {
                    JSCompiler_temp = selection.anchorNode;
                    var anchorOffset = selection.anchorOffset, focusNode = selection.focusNode;
                    selection = selection.focusOffset;
                    try {
                        JSCompiler_temp.nodeType, focusNode.nodeType;
                    } catch (e$2) {
                        JSCompiler_temp = null;
                        break a;
                    }
                    var length = 0, start = -1, end = -1, indexWithinAnchor = 0, indexWithinFocus = 0, node = root, parentNode = null;
                    b: for(;;){
                        for(var next;;){
                            node !== JSCompiler_temp || 0 !== anchorOffset && 3 !== node.nodeType || (start = length + anchorOffset);
                            node !== focusNode || 0 !== selection && 3 !== node.nodeType || (end = length + selection);
                            3 === node.nodeType && (length += node.nodeValue.length);
                            if (null === (next = node.firstChild)) break;
                            parentNode = node;
                            node = next;
                        }
                        for(;;){
                            if (node === root) break b;
                            parentNode === JSCompiler_temp && ++indexWithinAnchor === anchorOffset && (start = length);
                            parentNode === focusNode && ++indexWithinFocus === selection && (end = length);
                            if (null !== (next = node.nextSibling)) break;
                            node = parentNode;
                            parentNode = node.parentNode;
                        }
                        node = next;
                    }
                    JSCompiler_temp = -1 === start || -1 === end ? null : {
                        start: start,
                        end: end
                    };
                } else JSCompiler_temp = null;
            }
            JSCompiler_temp = JSCompiler_temp || {
                start: 0,
                end: 0
            };
        } else JSCompiler_temp = null;
        selectionInformation = {
            focusedElem: root,
            selectionRange: JSCompiler_temp
        };
        _enabled = !1;
        for(nextEffect = firstChild; null !== nextEffect;)if (firstChild = nextEffect, root = firstChild.child, 0 !== (firstChild.subtreeFlags & 1024) && null !== root) root.return = firstChild, nextEffect = root;
        else for(; null !== nextEffect;){
            root = firstChild = nextEffect;
            JSCompiler_temp = root.alternate;
            anchorOffset = root.flags;
            switch(root.tag){
                case 0:
                    break;
                case 11:
                case 15:
                    break;
                case 1:
                    0 !== (anchorOffset & 1024) && null !== JSCompiler_temp && commitClassSnapshot(root, JSCompiler_temp);
                    break;
                case 3:
                    if (0 !== (anchorOffset & 1024)) {
                        if (root = root.stateNode.containerInfo, JSCompiler_temp = root.nodeType, 9 === JSCompiler_temp) clearContainerSparingly(root);
                        else if (1 === JSCompiler_temp) switch(root.nodeName){
                            case "HEAD":
                            case "HTML":
                            case "BODY":
                                clearContainerSparingly(root);
                                break;
                            default:
                                root.textContent = "";
                        }
                    }
                    break;
                case 5:
                case 26:
                case 27:
                case 6:
                case 4:
                case 17:
                    break;
                default:
                    if (0 !== (anchorOffset & 1024)) throw Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
            }
            root = firstChild.sibling;
            if (null !== root) {
                root.return = firstChild.return;
                nextEffect = root;
                break;
            }
            nextEffect = firstChild.return;
        }
    }
    function commitLayoutEffectOnFiber(finishedRoot, current, finishedWork) {
        var flags = finishedWork.flags;
        switch(finishedWork.tag){
            case 0:
            case 11:
            case 15:
                recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
                flags & 4 && commitHookLayoutEffects(finishedWork, Layout | HasEffect);
                break;
            case 1:
                recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
                if (flags & 4) {
                    if (finishedRoot = finishedWork.stateNode, null === current) finishedWork.type.defaultProps || "ref" in finishedWork.memoizedProps || didWarnAboutReassigningProps || (finishedRoot.props !== finishedWork.memoizedProps && console.error("Expected %s props to match memoized props before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance"), finishedRoot.state !== finishedWork.memoizedState && console.error("Expected %s state to match memoized state before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance")), shouldProfile(finishedWork) ? (startEffectTimer(), runWithFiberInDEV(finishedWork, callComponentDidMountInDEV, finishedWork, finishedRoot), recordEffectDuration()) : runWithFiberInDEV(finishedWork, callComponentDidMountInDEV, finishedWork, finishedRoot);
                    else {
                        var prevProps = resolveClassComponentProps(finishedWork.type, current.memoizedProps);
                        current = current.memoizedState;
                        finishedWork.type.defaultProps || "ref" in finishedWork.memoizedProps || didWarnAboutReassigningProps || (finishedRoot.props !== finishedWork.memoizedProps && console.error("Expected %s props to match memoized props before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance"), finishedRoot.state !== finishedWork.memoizedState && console.error("Expected %s state to match memoized state before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance"));
                        shouldProfile(finishedWork) ? (startEffectTimer(), runWithFiberInDEV(finishedWork, callComponentDidUpdateInDEV, finishedWork, finishedRoot, prevProps, current, finishedRoot.__reactInternalSnapshotBeforeUpdate), recordEffectDuration()) : runWithFiberInDEV(finishedWork, callComponentDidUpdateInDEV, finishedWork, finishedRoot, prevProps, current, finishedRoot.__reactInternalSnapshotBeforeUpdate);
                    }
                }
                flags & 64 && commitClassCallbacks(finishedWork);
                flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);
                break;
            case 3:
                current = pushNestedEffectDurations();
                recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
                if (flags & 64 && (flags = finishedWork.updateQueue, null !== flags)) {
                    prevProps = null;
                    if (null !== finishedWork.child) switch(finishedWork.child.tag){
                        case 27:
                        case 5:
                            prevProps = finishedWork.child.stateNode;
                            break;
                        case 1:
                            prevProps = finishedWork.child.stateNode;
                    }
                    try {
                        runWithFiberInDEV(finishedWork, commitCallbacks, flags, prevProps);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                }
                finishedRoot.effectDuration += popNestedEffectDurations(current);
                break;
            case 27:
                null === current && flags & 4 && commitHostSingletonAcquisition(finishedWork);
            case 26:
            case 5:
                recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
                null === current && flags & 4 && commitHostMount(finishedWork);
                flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);
                break;
            case 12:
                if (flags & 4) {
                    flags = pushNestedEffectDurations();
                    recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
                    finishedRoot = finishedWork.stateNode;
                    finishedRoot.effectDuration += bubbleNestedEffectDurations(flags);
                    try {
                        runWithFiberInDEV(finishedWork, commitProfiler, finishedWork, current, commitStartTime, finishedRoot.effectDuration);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                } else recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
                break;
            case 13:
                recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
                flags & 4 && commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);
                flags & 64 && (finishedRoot = finishedWork.memoizedState, null !== finishedRoot && (finishedRoot = finishedRoot.dehydrated, null !== finishedRoot && (finishedWork = retryDehydratedSuspenseBoundary.bind(null, finishedWork), registerSuspenseInstanceRetry(finishedRoot, finishedWork))));
                break;
            case 22:
                flags = null !== finishedWork.memoizedState || offscreenSubtreeIsHidden;
                if (!flags) {
                    current = null !== current && null !== current.memoizedState || offscreenSubtreeWasHidden;
                    prevProps = offscreenSubtreeIsHidden;
                    var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
                    offscreenSubtreeIsHidden = flags;
                    (offscreenSubtreeWasHidden = current) && !prevOffscreenSubtreeWasHidden ? recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, 0 !== (finishedWork.subtreeFlags & 8772)) : recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
                    offscreenSubtreeIsHidden = prevProps;
                    offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
                }
                break;
            case 30:
                break;
            default:
                recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
        }
    }
    function detachFiberAfterEffects(fiber) {
        var alternate = fiber.alternate;
        null !== alternate && (fiber.alternate = null, detachFiberAfterEffects(alternate));
        fiber.child = null;
        fiber.deletions = null;
        fiber.sibling = null;
        5 === fiber.tag && (alternate = fiber.stateNode, null !== alternate && detachDeletedInstance(alternate));
        fiber.stateNode = null;
        fiber._debugOwner = null;
        fiber.return = null;
        fiber.dependencies = null;
        fiber.memoizedProps = null;
        fiber.memoizedState = null;
        fiber.pendingProps = null;
        fiber.stateNode = null;
        fiber.updateQueue = null;
    }
    function recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, parent) {
        for(parent = parent.child; null !== parent;)commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, parent), parent = parent.sibling;
    }
    function commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, deletedFiber) {
        if (injectedHook && "function" === typeof injectedHook.onCommitFiberUnmount) try {
            injectedHook.onCommitFiberUnmount(rendererID, deletedFiber);
        } catch (err) {
            hasLoggedError || (hasLoggedError = !0, console.error("React instrumentation encountered an error: %s", err));
        }
        switch(deletedFiber.tag){
            case 26:
                offscreenSubtreeWasHidden || safelyDetachRef(deletedFiber, nearestMountedAncestor);
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                deletedFiber.memoizedState ? deletedFiber.memoizedState.count-- : deletedFiber.stateNode && (deletedFiber = deletedFiber.stateNode, deletedFiber.parentNode.removeChild(deletedFiber));
                break;
            case 27:
                offscreenSubtreeWasHidden || safelyDetachRef(deletedFiber, nearestMountedAncestor);
                var prevHostParent = hostParent, prevHostParentIsContainer = hostParentIsContainer;
                isSingletonScope(deletedFiber.type) && (hostParent = deletedFiber.stateNode, hostParentIsContainer = !1);
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                runWithFiberInDEV(deletedFiber, releaseSingletonInstance, deletedFiber.stateNode);
                hostParent = prevHostParent;
                hostParentIsContainer = prevHostParentIsContainer;
                break;
            case 5:
                offscreenSubtreeWasHidden || safelyDetachRef(deletedFiber, nearestMountedAncestor);
            case 6:
                prevHostParent = hostParent;
                prevHostParentIsContainer = hostParentIsContainer;
                hostParent = null;
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                hostParent = prevHostParent;
                hostParentIsContainer = prevHostParentIsContainer;
                if (null !== hostParent) {
                    if (hostParentIsContainer) try {
                        runWithFiberInDEV(deletedFiber, removeChildFromContainer, hostParent, deletedFiber.stateNode);
                    } catch (error) {
                        captureCommitPhaseError(deletedFiber, nearestMountedAncestor, error);
                    }
                    else try {
                        runWithFiberInDEV(deletedFiber, removeChild, hostParent, deletedFiber.stateNode);
                    } catch (error) {
                        captureCommitPhaseError(deletedFiber, nearestMountedAncestor, error);
                    }
                }
                break;
            case 18:
                null !== hostParent && (hostParentIsContainer ? (finishedRoot = hostParent, clearSuspenseBoundary(9 === finishedRoot.nodeType ? finishedRoot.body : "HTML" === finishedRoot.nodeName ? finishedRoot.ownerDocument.body : finishedRoot, deletedFiber.stateNode), retryIfBlockedOn(finishedRoot)) : clearSuspenseBoundary(hostParent, deletedFiber.stateNode));
                break;
            case 4:
                prevHostParent = hostParent;
                prevHostParentIsContainer = hostParentIsContainer;
                hostParent = deletedFiber.stateNode.containerInfo;
                hostParentIsContainer = !0;
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                hostParent = prevHostParent;
                hostParentIsContainer = prevHostParentIsContainer;
                break;
            case 0:
            case 11:
            case 14:
            case 15:
                offscreenSubtreeWasHidden || commitHookEffectListUnmount(Insertion, deletedFiber, nearestMountedAncestor);
                offscreenSubtreeWasHidden || commitHookLayoutUnmountEffects(deletedFiber, nearestMountedAncestor, Layout);
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                break;
            case 1:
                offscreenSubtreeWasHidden || (safelyDetachRef(deletedFiber, nearestMountedAncestor), prevHostParent = deletedFiber.stateNode, "function" === typeof prevHostParent.componentWillUnmount && safelyCallComponentWillUnmount(deletedFiber, nearestMountedAncestor, prevHostParent));
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                break;
            case 21:
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                break;
            case 22:
                offscreenSubtreeWasHidden = (prevHostParent = offscreenSubtreeWasHidden) || null !== deletedFiber.memoizedState;
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                offscreenSubtreeWasHidden = prevHostParent;
                break;
            default:
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
        }
    }
    function commitSuspenseHydrationCallbacks(finishedRoot, finishedWork) {
        if (null === finishedWork.memoizedState && (finishedRoot = finishedWork.alternate, null !== finishedRoot && (finishedRoot = finishedRoot.memoizedState, null !== finishedRoot && (finishedRoot = finishedRoot.dehydrated, null !== finishedRoot)))) try {
            runWithFiberInDEV(finishedWork, commitHydratedSuspenseInstance, finishedRoot);
        } catch (error) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error);
        }
    }
    function getRetryCache(finishedWork) {
        switch(finishedWork.tag){
            case 13:
            case 19:
                var retryCache = finishedWork.stateNode;
                null === retryCache && (retryCache = finishedWork.stateNode = new PossiblyWeakSet());
                return retryCache;
            case 22:
                return finishedWork = finishedWork.stateNode, retryCache = finishedWork._retryCache, null === retryCache && (retryCache = finishedWork._retryCache = new PossiblyWeakSet()), retryCache;
            default:
                throw Error("Unexpected Suspense handler tag (" + finishedWork.tag + "). This is a bug in React.");
        }
    }
    function attachSuspenseRetryListeners(finishedWork, wakeables) {
        var retryCache = getRetryCache(finishedWork);
        wakeables.forEach(function(wakeable) {
            var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);
            if (!retryCache.has(wakeable)) {
                retryCache.add(wakeable);
                if (isDevToolsPresent) {
                    if (null !== inProgressLanes && null !== inProgressRoot) restorePendingUpdaters(inProgressRoot, inProgressLanes);
                    else throw Error("Expected finished root and lanes to be set. This is a bug in React.");
                }
                wakeable.then(retry, retry);
            }
        });
    }
    function recursivelyTraverseMutationEffects(root$jscomp$0, parentFiber) {
        var deletions = parentFiber.deletions;
        if (null !== deletions) for(var i = 0; i < deletions.length; i++){
            var root = root$jscomp$0, returnFiber = parentFiber, deletedFiber = deletions[i], parent = returnFiber;
            a: for(; null !== parent;){
                switch(parent.tag){
                    case 27:
                        if (isSingletonScope(parent.type)) {
                            hostParent = parent.stateNode;
                            hostParentIsContainer = !1;
                            break a;
                        }
                        break;
                    case 5:
                        hostParent = parent.stateNode;
                        hostParentIsContainer = !1;
                        break a;
                    case 3:
                    case 4:
                        hostParent = parent.stateNode.containerInfo;
                        hostParentIsContainer = !0;
                        break a;
                }
                parent = parent.return;
            }
            if (null === hostParent) throw Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
            commitDeletionEffectsOnFiber(root, returnFiber, deletedFiber);
            hostParent = null;
            hostParentIsContainer = !1;
            root = deletedFiber;
            returnFiber = root.alternate;
            null !== returnFiber && (returnFiber.return = null);
            root.return = null;
        }
        if (parentFiber.subtreeFlags & 13878) for(parentFiber = parentFiber.child; null !== parentFiber;)commitMutationEffectsOnFiber(parentFiber, root$jscomp$0), parentFiber = parentFiber.sibling;
    }
    function commitMutationEffectsOnFiber(finishedWork, root) {
        var current = finishedWork.alternate, flags = finishedWork.flags;
        switch(finishedWork.tag){
            case 0:
            case 11:
            case 14:
            case 15:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                flags & 4 && (commitHookEffectListUnmount(Insertion | HasEffect, finishedWork, finishedWork.return), commitHookEffectListMount(Insertion | HasEffect, finishedWork), commitHookLayoutUnmountEffects(finishedWork, finishedWork.return, Layout | HasEffect));
                break;
            case 1:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                flags & 512 && (offscreenSubtreeWasHidden || null === current || safelyDetachRef(current, current.return));
                flags & 64 && offscreenSubtreeIsHidden && (finishedWork = finishedWork.updateQueue, null !== finishedWork && (flags = finishedWork.callbacks, null !== flags && (current = finishedWork.shared.hiddenCallbacks, finishedWork.shared.hiddenCallbacks = null === current ? flags : current.concat(flags))));
                break;
            case 26:
                var hoistableRoot = currentHoistableRoot;
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                flags & 512 && (offscreenSubtreeWasHidden || null === current || safelyDetachRef(current, current.return));
                if (flags & 4) {
                    if (root = null !== current ? current.memoizedState : null, flags = finishedWork.memoizedState, null === current) {
                        if (null === flags) {
                            if (null === finishedWork.stateNode) {
                                a: {
                                    flags = finishedWork.type;
                                    current = finishedWork.memoizedProps;
                                    root = hoistableRoot.ownerDocument || hoistableRoot;
                                    b: switch(flags){
                                        case "title":
                                            hoistableRoot = root.getElementsByTagName("title")[0];
                                            if (!hoistableRoot || hoistableRoot[internalHoistableMarker] || hoistableRoot[internalInstanceKey] || hoistableRoot.namespaceURI === SVG_NAMESPACE || hoistableRoot.hasAttribute("itemprop")) hoistableRoot = root.createElement(flags), root.head.insertBefore(hoistableRoot, root.querySelector("head > title"));
                                            setInitialProperties(hoistableRoot, flags, current);
                                            hoistableRoot[internalInstanceKey] = finishedWork;
                                            markNodeAsHoistable(hoistableRoot);
                                            flags = hoistableRoot;
                                            break a;
                                        case "link":
                                            var maybeNodes = getHydratableHoistableCache("link", "href", root).get(flags + (current.href || ""));
                                            if (maybeNodes) {
                                                for(var i = 0; i < maybeNodes.length; i++)if (hoistableRoot = maybeNodes[i], hoistableRoot.getAttribute("href") === (null == current.href || "" === current.href ? null : current.href) && hoistableRoot.getAttribute("rel") === (null == current.rel ? null : current.rel) && hoistableRoot.getAttribute("title") === (null == current.title ? null : current.title) && hoistableRoot.getAttribute("crossorigin") === (null == current.crossOrigin ? null : current.crossOrigin)) {
                                                    maybeNodes.splice(i, 1);
                                                    break b;
                                                }
                                            }
                                            hoistableRoot = root.createElement(flags);
                                            setInitialProperties(hoistableRoot, flags, current);
                                            root.head.appendChild(hoistableRoot);
                                            break;
                                        case "meta":
                                            if (maybeNodes = getHydratableHoistableCache("meta", "content", root).get(flags + (current.content || ""))) {
                                                for(i = 0; i < maybeNodes.length; i++)if (hoistableRoot = maybeNodes[i], checkAttributeStringCoercion(current.content, "content"), hoistableRoot.getAttribute("content") === (null == current.content ? null : "" + current.content) && hoistableRoot.getAttribute("name") === (null == current.name ? null : current.name) && hoistableRoot.getAttribute("property") === (null == current.property ? null : current.property) && hoistableRoot.getAttribute("http-equiv") === (null == current.httpEquiv ? null : current.httpEquiv) && hoistableRoot.getAttribute("charset") === (null == current.charSet ? null : current.charSet)) {
                                                    maybeNodes.splice(i, 1);
                                                    break b;
                                                }
                                            }
                                            hoistableRoot = root.createElement(flags);
                                            setInitialProperties(hoistableRoot, flags, current);
                                            root.head.appendChild(hoistableRoot);
                                            break;
                                        default:
                                            throw Error('getNodesForType encountered a type it did not expect: "' + flags + '". This is a bug in React.');
                                    }
                                    hoistableRoot[internalInstanceKey] = finishedWork;
                                    markNodeAsHoistable(hoistableRoot);
                                    flags = hoistableRoot;
                                }
                                finishedWork.stateNode = flags;
                            } else mountHoistable(hoistableRoot, finishedWork.type, finishedWork.stateNode);
                        } else finishedWork.stateNode = acquireResource(hoistableRoot, flags, finishedWork.memoizedProps);
                    } else root !== flags ? (null === root ? null !== current.stateNode && (current = current.stateNode, current.parentNode.removeChild(current)) : root.count--, null === flags ? mountHoistable(hoistableRoot, finishedWork.type, finishedWork.stateNode) : acquireResource(hoistableRoot, flags, finishedWork.memoizedProps)) : null === flags && null !== finishedWork.stateNode && commitHostUpdate(finishedWork, finishedWork.memoizedProps, current.memoizedProps);
                }
                break;
            case 27:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                flags & 512 && (offscreenSubtreeWasHidden || null === current || safelyDetachRef(current, current.return));
                null !== current && flags & 4 && commitHostUpdate(finishedWork, finishedWork.memoizedProps, current.memoizedProps);
                break;
            case 5:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                flags & 512 && (offscreenSubtreeWasHidden || null === current || safelyDetachRef(current, current.return));
                if (finishedWork.flags & 32) {
                    root = finishedWork.stateNode;
                    try {
                        runWithFiberInDEV(finishedWork, resetTextContent, root);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                }
                flags & 4 && null != finishedWork.stateNode && (root = finishedWork.memoizedProps, commitHostUpdate(finishedWork, root, null !== current ? current.memoizedProps : root));
                flags & 1024 && (needsFormReset = !0, "form" !== finishedWork.type && console.error("Unexpected host component type. Expected a form. This is a bug in React."));
                break;
            case 6:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & 4) {
                    if (null === finishedWork.stateNode) throw Error("This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.");
                    flags = finishedWork.memoizedProps;
                    current = null !== current ? current.memoizedProps : flags;
                    root = finishedWork.stateNode;
                    try {
                        runWithFiberInDEV(finishedWork, commitTextUpdate, root, current, flags);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                }
                break;
            case 3:
                hoistableRoot = pushNestedEffectDurations();
                tagCaches = null;
                maybeNodes = currentHoistableRoot;
                currentHoistableRoot = getHoistableRoot(root.containerInfo);
                recursivelyTraverseMutationEffects(root, finishedWork);
                currentHoistableRoot = maybeNodes;
                commitReconciliationEffects(finishedWork);
                if (flags & 4 && null !== current && current.memoizedState.isDehydrated) try {
                    runWithFiberInDEV(finishedWork, commitHydratedContainer, root.containerInfo);
                } catch (error) {
                    captureCommitPhaseError(finishedWork, finishedWork.return, error);
                }
                needsFormReset && (needsFormReset = !1, recursivelyResetForms(finishedWork));
                root.effectDuration += popNestedEffectDurations(hoistableRoot);
                break;
            case 4:
                flags = currentHoistableRoot;
                currentHoistableRoot = getHoistableRoot(finishedWork.stateNode.containerInfo);
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                currentHoistableRoot = flags;
                break;
            case 12:
                flags = pushNestedEffectDurations();
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                finishedWork.stateNode.effectDuration += bubbleNestedEffectDurations(flags);
                break;
            case 13:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                finishedWork.child.flags & 8192 && null !== finishedWork.memoizedState !== (null !== current && null !== current.memoizedState) && (globalMostRecentFallbackTime = now$1());
                flags & 4 && (flags = finishedWork.updateQueue, null !== flags && (finishedWork.updateQueue = null, attachSuspenseRetryListeners(finishedWork, flags)));
                break;
            case 22:
                hoistableRoot = null !== finishedWork.memoizedState;
                var wasHidden = null !== current && null !== current.memoizedState, prevOffscreenSubtreeIsHidden = offscreenSubtreeIsHidden, prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
                offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden || hoistableRoot;
                offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || wasHidden;
                recursivelyTraverseMutationEffects(root, finishedWork);
                offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
                offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden;
                commitReconciliationEffects(finishedWork);
                if (flags & 8192) a: for(root = finishedWork.stateNode, root._visibility = hoistableRoot ? root._visibility & ~OffscreenVisible : root._visibility | OffscreenVisible, hoistableRoot && (null === current || wasHidden || offscreenSubtreeIsHidden || offscreenSubtreeWasHidden || recursivelyTraverseDisappearLayoutEffects(finishedWork)), current = null, root = finishedWork;;){
                    if (5 === root.tag || 26 === root.tag) {
                        if (null === current) {
                            wasHidden = current = root;
                            try {
                                maybeNodes = wasHidden.stateNode, hoistableRoot ? runWithFiberInDEV(wasHidden, hideInstance, maybeNodes) : runWithFiberInDEV(wasHidden, unhideInstance, wasHidden.stateNode, wasHidden.memoizedProps);
                            } catch (error) {
                                captureCommitPhaseError(wasHidden, wasHidden.return, error);
                            }
                        }
                    } else if (6 === root.tag) {
                        if (null === current) {
                            wasHidden = root;
                            try {
                                i = wasHidden.stateNode, hoistableRoot ? runWithFiberInDEV(wasHidden, hideTextInstance, i) : runWithFiberInDEV(wasHidden, unhideTextInstance, i, wasHidden.memoizedProps);
                            } catch (error) {
                                captureCommitPhaseError(wasHidden, wasHidden.return, error);
                            }
                        }
                    } else if ((22 !== root.tag && 23 !== root.tag || null === root.memoizedState || root === finishedWork) && null !== root.child) {
                        root.child.return = root;
                        root = root.child;
                        continue;
                    }
                    if (root === finishedWork) break a;
                    for(; null === root.sibling;){
                        if (null === root.return || root.return === finishedWork) break a;
                        current === root && (current = null);
                        root = root.return;
                    }
                    current === root && (current = null);
                    root.sibling.return = root.return;
                    root = root.sibling;
                }
                flags & 4 && (flags = finishedWork.updateQueue, null !== flags && (current = flags.retryQueue, null !== current && (flags.retryQueue = null, attachSuspenseRetryListeners(finishedWork, current))));
                break;
            case 19:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                flags & 4 && (flags = finishedWork.updateQueue, null !== flags && (finishedWork.updateQueue = null, attachSuspenseRetryListeners(finishedWork, flags)));
                break;
            case 30:
                break;
            case 21:
                break;
            default:
                recursivelyTraverseMutationEffects(root, finishedWork), commitReconciliationEffects(finishedWork);
        }
    }
    function commitReconciliationEffects(finishedWork) {
        var flags = finishedWork.flags;
        if (flags & 2) {
            try {
                runWithFiberInDEV(finishedWork, commitPlacement, finishedWork);
            } catch (error) {
                captureCommitPhaseError(finishedWork, finishedWork.return, error);
            }
            finishedWork.flags &= -3;
        }
        flags & 4096 && (finishedWork.flags &= -4097);
    }
    function recursivelyResetForms(parentFiber) {
        if (parentFiber.subtreeFlags & 1024) for(parentFiber = parentFiber.child; null !== parentFiber;){
            var fiber = parentFiber;
            recursivelyResetForms(fiber);
            5 === fiber.tag && fiber.flags & 1024 && fiber.stateNode.reset();
            parentFiber = parentFiber.sibling;
        }
    }
    function recursivelyTraverseLayoutEffects(root, parentFiber) {
        if (parentFiber.subtreeFlags & 8772) for(parentFiber = parentFiber.child; null !== parentFiber;)commitLayoutEffectOnFiber(root, parentFiber.alternate, parentFiber), parentFiber = parentFiber.sibling;
    }
    function disappearLayoutEffects(finishedWork) {
        switch(finishedWork.tag){
            case 0:
            case 11:
            case 14:
            case 15:
                commitHookLayoutUnmountEffects(finishedWork, finishedWork.return, Layout);
                recursivelyTraverseDisappearLayoutEffects(finishedWork);
                break;
            case 1:
                safelyDetachRef(finishedWork, finishedWork.return);
                var instance = finishedWork.stateNode;
                "function" === typeof instance.componentWillUnmount && safelyCallComponentWillUnmount(finishedWork, finishedWork.return, instance);
                recursivelyTraverseDisappearLayoutEffects(finishedWork);
                break;
            case 27:
                runWithFiberInDEV(finishedWork, releaseSingletonInstance, finishedWork.stateNode);
            case 26:
            case 5:
                safelyDetachRef(finishedWork, finishedWork.return);
                recursivelyTraverseDisappearLayoutEffects(finishedWork);
                break;
            case 22:
                null === finishedWork.memoizedState && recursivelyTraverseDisappearLayoutEffects(finishedWork);
                break;
            case 30:
                recursivelyTraverseDisappearLayoutEffects(finishedWork);
                break;
            default:
                recursivelyTraverseDisappearLayoutEffects(finishedWork);
        }
    }
    function recursivelyTraverseDisappearLayoutEffects(parentFiber) {
        for(parentFiber = parentFiber.child; null !== parentFiber;)disappearLayoutEffects(parentFiber), parentFiber = parentFiber.sibling;
    }
    function reappearLayoutEffects(finishedRoot, current, finishedWork, includeWorkInProgressEffects) {
        var flags = finishedWork.flags;
        switch(finishedWork.tag){
            case 0:
            case 11:
            case 15:
                recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, includeWorkInProgressEffects);
                commitHookLayoutEffects(finishedWork, Layout);
                break;
            case 1:
                recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, includeWorkInProgressEffects);
                current = finishedWork.stateNode;
                "function" === typeof current.componentDidMount && runWithFiberInDEV(finishedWork, callComponentDidMountInDEV, finishedWork, current);
                current = finishedWork.updateQueue;
                if (null !== current) {
                    finishedRoot = finishedWork.stateNode;
                    try {
                        runWithFiberInDEV(finishedWork, commitHiddenCallbacks, current, finishedRoot);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                }
                includeWorkInProgressEffects && flags & 64 && commitClassCallbacks(finishedWork);
                safelyAttachRef(finishedWork, finishedWork.return);
                break;
            case 27:
                commitHostSingletonAcquisition(finishedWork);
            case 26:
            case 5:
                recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, includeWorkInProgressEffects);
                includeWorkInProgressEffects && null === current && flags & 4 && commitHostMount(finishedWork);
                safelyAttachRef(finishedWork, finishedWork.return);
                break;
            case 12:
                if (includeWorkInProgressEffects && flags & 4) {
                    flags = pushNestedEffectDurations();
                    recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, includeWorkInProgressEffects);
                    includeWorkInProgressEffects = finishedWork.stateNode;
                    includeWorkInProgressEffects.effectDuration += bubbleNestedEffectDurations(flags);
                    try {
                        runWithFiberInDEV(finishedWork, commitProfiler, finishedWork, current, commitStartTime, includeWorkInProgressEffects.effectDuration);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                } else recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, includeWorkInProgressEffects);
                break;
            case 13:
                recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, includeWorkInProgressEffects);
                includeWorkInProgressEffects && flags & 4 && commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);
                break;
            case 22:
                null === finishedWork.memoizedState && recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, includeWorkInProgressEffects);
                safelyAttachRef(finishedWork, finishedWork.return);
                break;
            case 30:
                break;
            default:
                recursivelyTraverseReappearLayoutEffects(finishedRoot, finishedWork, includeWorkInProgressEffects);
        }
    }
    function recursivelyTraverseReappearLayoutEffects(finishedRoot, parentFiber, includeWorkInProgressEffects) {
        includeWorkInProgressEffects = includeWorkInProgressEffects && 0 !== (parentFiber.subtreeFlags & 8772);
        for(parentFiber = parentFiber.child; null !== parentFiber;)reappearLayoutEffects(finishedRoot, parentFiber.alternate, parentFiber, includeWorkInProgressEffects), parentFiber = parentFiber.sibling;
    }
    function commitOffscreenPassiveMountEffects(current, finishedWork) {
        var previousCache = null;
        null !== current && null !== current.memoizedState && null !== current.memoizedState.cachePool && (previousCache = current.memoizedState.cachePool.pool);
        current = null;
        null !== finishedWork.memoizedState && null !== finishedWork.memoizedState.cachePool && (current = finishedWork.memoizedState.cachePool.pool);
        current !== previousCache && (null != current && retainCache(current), null != previousCache && releaseCache(previousCache));
    }
    function commitCachePassiveMountEffect(current, finishedWork) {
        current = null;
        null !== finishedWork.alternate && (current = finishedWork.alternate.memoizedState.cache);
        finishedWork = finishedWork.memoizedState.cache;
        finishedWork !== current && (retainCache(finishedWork), null != current && releaseCache(current));
    }
    function recursivelyTraversePassiveMountEffects(root, parentFiber, committedLanes, committedTransitions) {
        if (parentFiber.subtreeFlags & 10256) for(parentFiber = parentFiber.child; null !== parentFiber;)commitPassiveMountOnFiber(root, parentFiber, committedLanes, committedTransitions), parentFiber = parentFiber.sibling;
    }
    function commitPassiveMountOnFiber(finishedRoot, finishedWork, committedLanes, committedTransitions) {
        var flags = finishedWork.flags;
        switch(finishedWork.tag){
            case 0:
            case 11:
            case 15:
                recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions);
                flags & 2048 && commitHookPassiveMountEffects(finishedWork, Passive | HasEffect);
                break;
            case 1:
                recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions);
                break;
            case 3:
                var prevEffectDuration = pushNestedEffectDurations();
                recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions);
                flags & 2048 && (committedLanes = null, null !== finishedWork.alternate && (committedLanes = finishedWork.alternate.memoizedState.cache), finishedWork = finishedWork.memoizedState.cache, finishedWork !== committedLanes && (retainCache(finishedWork), null != committedLanes && releaseCache(committedLanes)));
                finishedRoot.passiveEffectDuration += popNestedEffectDurations(prevEffectDuration);
                break;
            case 12:
                if (flags & 2048) {
                    flags = pushNestedEffectDurations();
                    recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions);
                    finishedRoot = finishedWork.stateNode;
                    finishedRoot.passiveEffectDuration += bubbleNestedEffectDurations(flags);
                    try {
                        runWithFiberInDEV(finishedWork, commitProfilerPostCommitImpl, finishedWork, finishedWork.alternate, commitStartTime, finishedRoot.passiveEffectDuration);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                } else recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions);
                break;
            case 13:
                recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions);
                break;
            case 23:
                break;
            case 22:
                prevEffectDuration = finishedWork.stateNode;
                var _current = finishedWork.alternate;
                null !== finishedWork.memoizedState ? prevEffectDuration._visibility & OffscreenPassiveEffectsConnected ? recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions) : recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork) : prevEffectDuration._visibility & OffscreenPassiveEffectsConnected ? recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions) : (prevEffectDuration._visibility |= OffscreenPassiveEffectsConnected, recursivelyTraverseReconnectPassiveEffects(finishedRoot, finishedWork, committedLanes, committedTransitions, 0 !== (finishedWork.subtreeFlags & 10256)));
                flags & 2048 && commitOffscreenPassiveMountEffects(_current, finishedWork);
                break;
            case 24:
                recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions);
                flags & 2048 && commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);
                break;
            default:
                recursivelyTraversePassiveMountEffects(finishedRoot, finishedWork, committedLanes, committedTransitions);
        }
    }
    function recursivelyTraverseReconnectPassiveEffects(finishedRoot, parentFiber, committedLanes, committedTransitions, includeWorkInProgressEffects) {
        includeWorkInProgressEffects = includeWorkInProgressEffects && 0 !== (parentFiber.subtreeFlags & 10256);
        for(parentFiber = parentFiber.child; null !== parentFiber;)reconnectPassiveEffects(finishedRoot, parentFiber, committedLanes, committedTransitions, includeWorkInProgressEffects), parentFiber = parentFiber.sibling;
    }
    function reconnectPassiveEffects(finishedRoot, finishedWork, committedLanes, committedTransitions, includeWorkInProgressEffects) {
        var flags = finishedWork.flags;
        switch(finishedWork.tag){
            case 0:
            case 11:
            case 15:
                recursivelyTraverseReconnectPassiveEffects(finishedRoot, finishedWork, committedLanes, committedTransitions, includeWorkInProgressEffects);
                commitHookPassiveMountEffects(finishedWork, Passive);
                break;
            case 23:
                break;
            case 22:
                var _instance2 = finishedWork.stateNode;
                null !== finishedWork.memoizedState ? _instance2._visibility & OffscreenPassiveEffectsConnected ? recursivelyTraverseReconnectPassiveEffects(finishedRoot, finishedWork, committedLanes, committedTransitions, includeWorkInProgressEffects) : recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork) : (_instance2._visibility |= OffscreenPassiveEffectsConnected, recursivelyTraverseReconnectPassiveEffects(finishedRoot, finishedWork, committedLanes, committedTransitions, includeWorkInProgressEffects));
                includeWorkInProgressEffects && flags & 2048 && commitOffscreenPassiveMountEffects(finishedWork.alternate, finishedWork);
                break;
            case 24:
                recursivelyTraverseReconnectPassiveEffects(finishedRoot, finishedWork, committedLanes, committedTransitions, includeWorkInProgressEffects);
                includeWorkInProgressEffects && flags & 2048 && commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);
                break;
            default:
                recursivelyTraverseReconnectPassiveEffects(finishedRoot, finishedWork, committedLanes, committedTransitions, includeWorkInProgressEffects);
        }
    }
    function recursivelyTraverseAtomicPassiveEffects(finishedRoot$jscomp$0, parentFiber) {
        if (parentFiber.subtreeFlags & 10256) for(parentFiber = parentFiber.child; null !== parentFiber;){
            var finishedRoot = finishedRoot$jscomp$0, finishedWork = parentFiber, flags = finishedWork.flags;
            switch(finishedWork.tag){
                case 22:
                    recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork);
                    flags & 2048 && commitOffscreenPassiveMountEffects(finishedWork.alternate, finishedWork);
                    break;
                case 24:
                    recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork);
                    flags & 2048 && commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);
                    break;
                default:
                    recursivelyTraverseAtomicPassiveEffects(finishedRoot, finishedWork);
            }
            parentFiber = parentFiber.sibling;
        }
    }
    function recursivelyAccumulateSuspenseyCommit(parentFiber) {
        if (parentFiber.subtreeFlags & suspenseyCommitFlag) for(parentFiber = parentFiber.child; null !== parentFiber;)accumulateSuspenseyCommitOnFiber(parentFiber), parentFiber = parentFiber.sibling;
    }
    function accumulateSuspenseyCommitOnFiber(fiber) {
        switch(fiber.tag){
            case 26:
                recursivelyAccumulateSuspenseyCommit(fiber);
                fiber.flags & suspenseyCommitFlag && null !== fiber.memoizedState && suspendResource(currentHoistableRoot, fiber.memoizedState, fiber.memoizedProps);
                break;
            case 5:
                recursivelyAccumulateSuspenseyCommit(fiber);
                break;
            case 3:
            case 4:
                var previousHoistableRoot = currentHoistableRoot;
                currentHoistableRoot = getHoistableRoot(fiber.stateNode.containerInfo);
                recursivelyAccumulateSuspenseyCommit(fiber);
                currentHoistableRoot = previousHoistableRoot;
                break;
            case 22:
                null === fiber.memoizedState && (previousHoistableRoot = fiber.alternate, null !== previousHoistableRoot && null !== previousHoistableRoot.memoizedState ? (previousHoistableRoot = suspenseyCommitFlag, suspenseyCommitFlag = 16777216, recursivelyAccumulateSuspenseyCommit(fiber), suspenseyCommitFlag = previousHoistableRoot) : recursivelyAccumulateSuspenseyCommit(fiber));
                break;
            default:
                recursivelyAccumulateSuspenseyCommit(fiber);
        }
    }
    function detachAlternateSiblings(parentFiber) {
        var previousFiber = parentFiber.alternate;
        if (null !== previousFiber && (parentFiber = previousFiber.child, null !== parentFiber)) {
            previousFiber.child = null;
            do previousFiber = parentFiber.sibling, parentFiber.sibling = null, parentFiber = previousFiber;
            while (null !== parentFiber);
        }
    }
    function recursivelyTraversePassiveUnmountEffects(parentFiber) {
        var deletions = parentFiber.deletions;
        if (0 !== (parentFiber.flags & 16)) {
            if (null !== deletions) for(var i = 0; i < deletions.length; i++){
                var childToDelete = deletions[i];
                nextEffect = childToDelete;
                commitPassiveUnmountEffectsInsideOfDeletedTree_begin(childToDelete, parentFiber);
            }
            detachAlternateSiblings(parentFiber);
        }
        if (parentFiber.subtreeFlags & 10256) for(parentFiber = parentFiber.child; null !== parentFiber;)commitPassiveUnmountOnFiber(parentFiber), parentFiber = parentFiber.sibling;
    }
    function commitPassiveUnmountOnFiber(finishedWork) {
        switch(finishedWork.tag){
            case 0:
            case 11:
            case 15:
                recursivelyTraversePassiveUnmountEffects(finishedWork);
                finishedWork.flags & 2048 && commitHookPassiveUnmountEffects(finishedWork, finishedWork.return, Passive | HasEffect);
                break;
            case 3:
                var prevEffectDuration = pushNestedEffectDurations();
                recursivelyTraversePassiveUnmountEffects(finishedWork);
                finishedWork.stateNode.passiveEffectDuration += popNestedEffectDurations(prevEffectDuration);
                break;
            case 12:
                prevEffectDuration = pushNestedEffectDurations();
                recursivelyTraversePassiveUnmountEffects(finishedWork);
                finishedWork.stateNode.passiveEffectDuration += bubbleNestedEffectDurations(prevEffectDuration);
                break;
            case 22:
                prevEffectDuration = finishedWork.stateNode;
                null !== finishedWork.memoizedState && prevEffectDuration._visibility & OffscreenPassiveEffectsConnected && (null === finishedWork.return || 13 !== finishedWork.return.tag) ? (prevEffectDuration._visibility &= ~OffscreenPassiveEffectsConnected, recursivelyTraverseDisconnectPassiveEffects(finishedWork)) : recursivelyTraversePassiveUnmountEffects(finishedWork);
                break;
            default:
                recursivelyTraversePassiveUnmountEffects(finishedWork);
        }
    }
    function recursivelyTraverseDisconnectPassiveEffects(parentFiber) {
        var deletions = parentFiber.deletions;
        if (0 !== (parentFiber.flags & 16)) {
            if (null !== deletions) for(var i = 0; i < deletions.length; i++){
                var childToDelete = deletions[i];
                nextEffect = childToDelete;
                commitPassiveUnmountEffectsInsideOfDeletedTree_begin(childToDelete, parentFiber);
            }
            detachAlternateSiblings(parentFiber);
        }
        for(parentFiber = parentFiber.child; null !== parentFiber;)disconnectPassiveEffect(parentFiber), parentFiber = parentFiber.sibling;
    }
    function disconnectPassiveEffect(finishedWork) {
        switch(finishedWork.tag){
            case 0:
            case 11:
            case 15:
                commitHookPassiveUnmountEffects(finishedWork, finishedWork.return, Passive);
                recursivelyTraverseDisconnectPassiveEffects(finishedWork);
                break;
            case 22:
                var instance = finishedWork.stateNode;
                instance._visibility & OffscreenPassiveEffectsConnected && (instance._visibility &= ~OffscreenPassiveEffectsConnected, recursivelyTraverseDisconnectPassiveEffects(finishedWork));
                break;
            default:
                recursivelyTraverseDisconnectPassiveEffects(finishedWork);
        }
    }
    function commitPassiveUnmountEffectsInsideOfDeletedTree_begin(deletedSubtreeRoot, nearestMountedAncestor) {
        for(; null !== nextEffect;){
            var fiber = nextEffect, current = fiber;
            switch(current.tag){
                case 0:
                case 11:
                case 15:
                    commitHookPassiveUnmountEffects(current, nearestMountedAncestor, Passive);
                    break;
                case 23:
                case 22:
                    null !== current.memoizedState && null !== current.memoizedState.cachePool && (current = current.memoizedState.cachePool.pool, null != current && retainCache(current));
                    break;
                case 24:
                    releaseCache(current.memoizedState.cache);
            }
            current = fiber.child;
            if (null !== current) current.return = fiber, nextEffect = current;
            else a: for(fiber = deletedSubtreeRoot; null !== nextEffect;){
                current = nextEffect;
                var sibling = current.sibling, returnFiber = current.return;
                detachFiberAfterEffects(current);
                if (current === fiber) {
                    nextEffect = null;
                    break a;
                }
                if (null !== sibling) {
                    sibling.return = returnFiber;
                    nextEffect = sibling;
                    break a;
                }
                nextEffect = returnFiber;
            }
        }
    }
    function onCommitRoot() {
        commitHooks.forEach(function(commitHook) {
            return commitHook();
        });
    }
    function isConcurrentActEnvironment() {
        var isReactActEnvironmentGlobal = "undefined" !== typeof IS_REACT_ACT_ENVIRONMENT ? IS_REACT_ACT_ENVIRONMENT : void 0;
        isReactActEnvironmentGlobal || null === ReactSharedInternals.actQueue || console.error("The current testing environment is not configured to support act(...)");
        return isReactActEnvironmentGlobal;
    }
    function requestUpdateLane(fiber) {
        if ((executionContext & RenderContext) !== NoContext && 0 !== workInProgressRootRenderLanes) return workInProgressRootRenderLanes & -workInProgressRootRenderLanes;
        var transition = ReactSharedInternals.T;
        return null !== transition ? (transition._updatedFibers || (transition._updatedFibers = new Set()), transition._updatedFibers.add(fiber), fiber = currentEntangledLane, 0 !== fiber ? fiber : requestTransitionLane()) : resolveUpdatePriority();
    }
    function requestDeferredLane() {
        0 === workInProgressDeferredLane && (workInProgressDeferredLane = 0 === (workInProgressRootRenderLanes & 536870912) || isHydrating ? claimNextTransitionLane() : 536870912);
        var suspenseHandler = suspenseHandlerStackCursor.current;
        null !== suspenseHandler && (suspenseHandler.flags |= 32);
        return workInProgressDeferredLane;
    }
    function scheduleUpdateOnFiber(root, fiber, lane) {
        isRunningInsertionEffect && console.error("useInsertionEffect must not schedule updates.");
        isFlushingPassiveEffects && (didScheduleUpdateDuringPassiveEffects = !0);
        if (root === workInProgressRoot && (workInProgressSuspendedReason === SuspendedOnData || workInProgressSuspendedReason === SuspendedOnAction) || null !== root.cancelPendingCommit) prepareFreshStack(root, 0), markRootSuspended(root, workInProgressRootRenderLanes, workInProgressDeferredLane, !1);
        markRootUpdated$1(root, lane);
        if (0 !== (executionContext & RenderContext) && root === workInProgressRoot) {
            if (isRendering) switch(fiber.tag){
                case 0:
                case 11:
                case 15:
                    root = workInProgress && getComponentNameFromFiber(workInProgress) || "Unknown";
                    didWarnAboutUpdateInRenderForAnotherComponent.has(root) || (didWarnAboutUpdateInRenderForAnotherComponent.add(root), fiber = getComponentNameFromFiber(fiber) || "Unknown", console.error("Cannot update a component (`%s`) while rendering a different component (`%s`). To locate the bad setState() call inside `%s`, follow the stack trace as described in https://react.dev/link/setstate-in-render", fiber, root, root));
                    break;
                case 1:
                    didWarnAboutUpdateInRender || (console.error("Cannot update during an existing state transition (such as within `render`). Render methods should be a pure function of props and state."), didWarnAboutUpdateInRender = !0);
            }
        } else isDevToolsPresent && addFiberToLanesMap(root, fiber, lane), warnIfUpdatesNotWrappedWithActDEV(fiber), root === workInProgressRoot && ((executionContext & RenderContext) === NoContext && (workInProgressRootInterleavedUpdatedLanes |= lane), workInProgressRootExitStatus === RootSuspendedWithDelay && markRootSuspended(root, workInProgressRootRenderLanes, workInProgressDeferredLane, !1)), ensureRootIsScheduled(root);
    }
    function performWorkOnRoot(root, lanes, forceSync) {
        if ((executionContext & (RenderContext | CommitContext)) !== NoContext) throw Error("Should not already be working.");
        var shouldTimeSlice = !forceSync && 0 === (lanes & 124) && 0 === (lanes & root.expiredLanes) || checkIfRootIsPrerendering(root, lanes), exitStatus = shouldTimeSlice ? renderRootConcurrent(root, lanes) : renderRootSync(root, lanes, !0), renderWasConcurrent = shouldTimeSlice;
        do {
            if (exitStatus === RootInProgress) {
                workInProgressRootIsPrerendering && !shouldTimeSlice && markRootSuspended(root, lanes, 0, !1);
                break;
            } else {
                forceSync = root.current.alternate;
                if (renderWasConcurrent && !isRenderConsistentWithExternalStores(forceSync)) {
                    exitStatus = renderRootSync(root, lanes, !1);
                    renderWasConcurrent = !1;
                    continue;
                }
                if (exitStatus === RootErrored) {
                    renderWasConcurrent = lanes;
                    if (root.errorRecoveryDisabledLanes & renderWasConcurrent) var errorRetryLanes = 0;
                    else errorRetryLanes = root.pendingLanes & -536870913, errorRetryLanes = 0 !== errorRetryLanes ? errorRetryLanes : errorRetryLanes & 536870912 ? 536870912 : 0;
                    if (0 !== errorRetryLanes) {
                        lanes = errorRetryLanes;
                        a: {
                            exitStatus = root;
                            var errorRetryLanes$jscomp$0 = errorRetryLanes;
                            errorRetryLanes = workInProgressRootConcurrentErrors;
                            var wasRootDehydrated = exitStatus.current.memoizedState.isDehydrated;
                            wasRootDehydrated && (prepareFreshStack(exitStatus, errorRetryLanes$jscomp$0).flags |= 256);
                            errorRetryLanes$jscomp$0 = renderRootSync(exitStatus, errorRetryLanes$jscomp$0, !1);
                            if (errorRetryLanes$jscomp$0 !== RootErrored) {
                                if (workInProgressRootDidAttachPingListener && !wasRootDehydrated) {
                                    exitStatus.errorRecoveryDisabledLanes |= renderWasConcurrent;
                                    workInProgressRootInterleavedUpdatedLanes |= renderWasConcurrent;
                                    exitStatus = RootSuspendedWithDelay;
                                    break a;
                                }
                                exitStatus = workInProgressRootRecoverableErrors;
                                workInProgressRootRecoverableErrors = errorRetryLanes;
                                null !== exitStatus && (null === workInProgressRootRecoverableErrors ? workInProgressRootRecoverableErrors = exitStatus : workInProgressRootRecoverableErrors.push.apply(workInProgressRootRecoverableErrors, exitStatus));
                            }
                            exitStatus = errorRetryLanes$jscomp$0;
                        }
                        renderWasConcurrent = !1;
                        if (exitStatus !== RootErrored) continue;
                    }
                }
                if (exitStatus === RootFatalErrored) {
                    prepareFreshStack(root, 0);
                    markRootSuspended(root, lanes, 0, !0);
                    break;
                }
                a: {
                    shouldTimeSlice = root;
                    switch(exitStatus){
                        case RootInProgress:
                        case RootFatalErrored:
                            throw Error("Root did not complete. This is a bug in React.");
                        case RootSuspendedWithDelay:
                            if ((lanes & 4194048) !== lanes) break;
                        case RootSuspendedAtTheShell:
                            markRootSuspended(shouldTimeSlice, lanes, workInProgressDeferredLane, !workInProgressRootDidSkipSuspendedSiblings);
                            break a;
                        case RootErrored:
                            workInProgressRootRecoverableErrors = null;
                            break;
                        case RootSuspended:
                        case RootCompleted:
                            break;
                        default:
                            throw Error("Unknown root exit status.");
                    }
                    if (null !== ReactSharedInternals.actQueue) commitRoot(shouldTimeSlice, forceSync, lanes, workInProgressRootRecoverableErrors, workInProgressTransitions, workInProgressRootDidIncludeRecursiveRenderUpdate, workInProgressDeferredLane, workInProgressRootInterleavedUpdatedLanes, workInProgressSuspendedRetryLanes);
                    else {
                        if ((lanes & 62914560) === lanes && (renderWasConcurrent = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now$1(), 10 < renderWasConcurrent)) {
                            markRootSuspended(shouldTimeSlice, lanes, workInProgressDeferredLane, !workInProgressRootDidSkipSuspendedSiblings);
                            if (0 !== getNextLanes(shouldTimeSlice, 0, !0)) break a;
                            shouldTimeSlice.timeoutHandle = scheduleTimeout(commitRootWhenReady.bind(null, shouldTimeSlice, forceSync, workInProgressRootRecoverableErrors, workInProgressTransitions, workInProgressRootDidIncludeRecursiveRenderUpdate, lanes, workInProgressDeferredLane, workInProgressRootInterleavedUpdatedLanes, workInProgressSuspendedRetryLanes, workInProgressRootDidSkipSuspendedSiblings, exitStatus, THROTTLED_COMMIT, renderStartTime, 0), renderWasConcurrent);
                            break a;
                        }
                        commitRootWhenReady(shouldTimeSlice, forceSync, workInProgressRootRecoverableErrors, workInProgressTransitions, workInProgressRootDidIncludeRecursiveRenderUpdate, lanes, workInProgressDeferredLane, workInProgressRootInterleavedUpdatedLanes, workInProgressSuspendedRetryLanes, workInProgressRootDidSkipSuspendedSiblings, exitStatus, IMMEDIATE_COMMIT, renderStartTime, 0);
                    }
                }
            }
            break;
        }while (1);
        ensureRootIsScheduled(root);
    }
    function commitRootWhenReady(root, finishedWork, recoverableErrors, transitions, didIncludeRenderPhaseUpdate, lanes, spawnedLane, updatedLanes, suspendedRetryLanes, didSkipSuspendedSiblings, exitStatus, suspendedCommitReason, completedRenderStartTime, completedRenderEndTime) {
        root.timeoutHandle = noTimeout;
        suspendedCommitReason = finishedWork.subtreeFlags;
        if (suspendedCommitReason & 8192 || 16785408 === (suspendedCommitReason & 16785408)) {
            if (suspendedState = {
                stylesheets: null,
                count: 0,
                unsuspend: noop
            }, accumulateSuspenseyCommitOnFiber(finishedWork), suspendedCommitReason = waitForCommitToBeReady(), null !== suspendedCommitReason) {
                root.cancelPendingCommit = suspendedCommitReason(commitRoot.bind(null, root, finishedWork, lanes, recoverableErrors, transitions, didIncludeRenderPhaseUpdate, spawnedLane, updatedLanes, suspendedRetryLanes, exitStatus, SUSPENDED_COMMIT, completedRenderStartTime, completedRenderEndTime));
                markRootSuspended(root, lanes, spawnedLane, !didSkipSuspendedSiblings);
                return;
            }
        }
        commitRoot(root, finishedWork, lanes, recoverableErrors, transitions, didIncludeRenderPhaseUpdate, spawnedLane, updatedLanes, suspendedRetryLanes);
    }
    function isRenderConsistentWithExternalStores(finishedWork) {
        for(var node = finishedWork;;){
            var tag = node.tag;
            if ((0 === tag || 11 === tag || 15 === tag) && node.flags & 16384 && (tag = node.updateQueue, null !== tag && (tag = tag.stores, null !== tag))) for(var i = 0; i < tag.length; i++){
                var check = tag[i], getSnapshot = check.getSnapshot;
                check = check.value;
                try {
                    if (!objectIs(getSnapshot(), check)) return !1;
                } catch (error) {
                    return !1;
                }
            }
            tag = node.child;
            if (node.subtreeFlags & 16384 && null !== tag) tag.return = node, node = tag;
            else {
                if (node === finishedWork) break;
                for(; null === node.sibling;){
                    if (null === node.return || node.return === finishedWork) return !0;
                    node = node.return;
                }
                node.sibling.return = node.return;
                node = node.sibling;
            }
        }
        return !0;
    }
    function markRootSuspended(root, suspendedLanes, spawnedLane, didAttemptEntireTree) {
        suspendedLanes &= ~workInProgressRootPingedLanes;
        suspendedLanes &= ~workInProgressRootInterleavedUpdatedLanes;
        root.suspendedLanes |= suspendedLanes;
        root.pingedLanes &= ~suspendedLanes;
        didAttemptEntireTree && (root.warmLanes |= suspendedLanes);
        didAttemptEntireTree = root.expirationTimes;
        for(var lanes = suspendedLanes; 0 < lanes;){
            var index = 31 - clz32(lanes), lane = 1 << index;
            didAttemptEntireTree[index] = -1;
            lanes &= ~lane;
        }
        0 !== spawnedLane && markSpawnedDeferredLane(root, spawnedLane, suspendedLanes);
    }
    function flushSyncWork$1() {
        return (executionContext & (RenderContext | CommitContext)) === NoContext ? (flushSyncWorkAcrossRoots_impl(0, !1), !1) : !0;
    }
    function resetWorkInProgressStack() {
        if (null !== workInProgress) {
            if (workInProgressSuspendedReason === NotSuspended) var interruptedWork = workInProgress.return;
            else interruptedWork = workInProgress, resetContextDependencies(), resetHooksOnUnwind(interruptedWork), thenableState = null, thenableIndexCounter = 0, interruptedWork = workInProgress;
            for(; null !== interruptedWork;)unwindInterruptedWork(interruptedWork.alternate, interruptedWork), interruptedWork = interruptedWork.return;
            workInProgress = null;
        }
    }
    function prepareFreshStack(root, lanes) {
        var timeoutHandle = root.timeoutHandle;
        timeoutHandle !== noTimeout && (root.timeoutHandle = noTimeout, cancelTimeout(timeoutHandle));
        timeoutHandle = root.cancelPendingCommit;
        null !== timeoutHandle && (root.cancelPendingCommit = null, timeoutHandle());
        resetWorkInProgressStack();
        workInProgressRoot = root;
        workInProgress = timeoutHandle = createWorkInProgress(root.current, null);
        workInProgressRootRenderLanes = lanes;
        workInProgressSuspendedReason = NotSuspended;
        workInProgressThrownValue = null;
        workInProgressRootDidSkipSuspendedSiblings = !1;
        workInProgressRootIsPrerendering = checkIfRootIsPrerendering(root, lanes);
        workInProgressRootDidAttachPingListener = !1;
        workInProgressRootExitStatus = RootInProgress;
        workInProgressSuspendedRetryLanes = workInProgressDeferredLane = workInProgressRootPingedLanes = workInProgressRootInterleavedUpdatedLanes = workInProgressRootSkippedLanes = 0;
        workInProgressRootRecoverableErrors = workInProgressRootConcurrentErrors = null;
        workInProgressRootDidIncludeRecursiveRenderUpdate = !1;
        0 !== (lanes & 8) && (lanes |= lanes & 32);
        var allEntangledLanes = root.entangledLanes;
        if (0 !== allEntangledLanes) for(root = root.entanglements, allEntangledLanes &= lanes; 0 < allEntangledLanes;){
            var index = 31 - clz32(allEntangledLanes), lane = 1 << index;
            lanes |= root[index];
            allEntangledLanes &= ~lane;
        }
        entangledRenderLanes = lanes;
        finishQueueingConcurrentUpdates();
        lanes = getCurrentTime();
        1e3 < lanes - lastResetTime && (ReactSharedInternals.recentlyCreatedOwnerStacks = 0, lastResetTime = lanes);
        ReactStrictModeWarnings.discardPendingWarnings();
        return timeoutHandle;
    }
    function handleThrow(root, thrownValue) {
        currentlyRenderingFiber = null;
        ReactSharedInternals.H = ContextOnlyDispatcher;
        ReactSharedInternals.getCurrentStack = null;
        isRendering = !1;
        current = null;
        thrownValue === SuspenseException || thrownValue === SuspenseActionException ? (thrownValue = getSuspendedThenable(), workInProgressSuspendedReason = SuspendedOnImmediate) : thrownValue === SuspenseyCommitException ? (thrownValue = getSuspendedThenable(), workInProgressSuspendedReason = SuspendedOnInstance) : workInProgressSuspendedReason = thrownValue === SelectiveHydrationException ? SuspendedOnHydration : null !== thrownValue && "object" === typeof thrownValue && "function" === typeof thrownValue.then ? SuspendedOnDeprecatedThrowPromise : SuspendedOnError;
        workInProgressThrownValue = thrownValue;
        var erroredWork = workInProgress;
        if (null === erroredWork) workInProgressRootExitStatus = RootFatalErrored, logUncaughtError(root, createCapturedValueAtFiber(thrownValue, root.current));
        else switch(erroredWork.mode & ProfileMode && stopProfilerTimerIfRunningAndRecordDuration(erroredWork), markComponentRenderStopped(), workInProgressSuspendedReason){
            case SuspendedOnError:
                null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentErrored && injectedProfilingHooks.markComponentErrored(erroredWork, thrownValue, workInProgressRootRenderLanes);
                break;
            case SuspendedOnData:
            case SuspendedOnAction:
            case SuspendedOnImmediate:
            case SuspendedOnDeprecatedThrowPromise:
            case SuspendedAndReadyToContinue:
                null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markComponentSuspended && injectedProfilingHooks.markComponentSuspended(erroredWork, thrownValue, workInProgressRootRenderLanes);
        }
    }
    function pushDispatcher() {
        var prevDispatcher = ReactSharedInternals.H;
        ReactSharedInternals.H = ContextOnlyDispatcher;
        return null === prevDispatcher ? ContextOnlyDispatcher : prevDispatcher;
    }
    function pushAsyncDispatcher() {
        var prevAsyncDispatcher = ReactSharedInternals.A;
        ReactSharedInternals.A = DefaultAsyncDispatcher;
        return prevAsyncDispatcher;
    }
    function renderDidSuspendDelayIfPossible() {
        workInProgressRootExitStatus = RootSuspendedWithDelay;
        workInProgressRootDidSkipSuspendedSiblings || (workInProgressRootRenderLanes & 4194048) !== workInProgressRootRenderLanes && null !== suspenseHandlerStackCursor.current || (workInProgressRootIsPrerendering = !0);
        0 === (workInProgressRootSkippedLanes & 134217727) && 0 === (workInProgressRootInterleavedUpdatedLanes & 134217727) || null === workInProgressRoot || markRootSuspended(workInProgressRoot, workInProgressRootRenderLanes, workInProgressDeferredLane, !1);
    }
    function renderRootSync(root, lanes, shouldYieldForPrerendering) {
        var prevExecutionContext = executionContext;
        executionContext |= RenderContext;
        var prevDispatcher = pushDispatcher(), prevAsyncDispatcher = pushAsyncDispatcher();
        if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {
            if (isDevToolsPresent) {
                var memoizedUpdaters = root.memoizedUpdaters;
                0 < memoizedUpdaters.size && (restorePendingUpdaters(root, workInProgressRootRenderLanes), memoizedUpdaters.clear());
                movePendingFibersToMemoized(root, lanes);
            }
            workInProgressTransitions = null;
            prepareFreshStack(root, lanes);
        }
        markRenderStarted(lanes);
        lanes = !1;
        memoizedUpdaters = workInProgressRootExitStatus;
        a: do try {
            if (workInProgressSuspendedReason !== NotSuspended && null !== workInProgress) {
                var unitOfWork = workInProgress, thrownValue = workInProgressThrownValue;
                switch(workInProgressSuspendedReason){
                    case SuspendedOnHydration:
                        resetWorkInProgressStack();
                        memoizedUpdaters = RootSuspendedAtTheShell;
                        break a;
                    case SuspendedOnImmediate:
                    case SuspendedOnData:
                    case SuspendedOnAction:
                    case SuspendedOnDeprecatedThrowPromise:
                        null === suspenseHandlerStackCursor.current && (lanes = !0);
                        var reason = workInProgressSuspendedReason;
                        workInProgressSuspendedReason = NotSuspended;
                        workInProgressThrownValue = null;
                        throwAndUnwindWorkLoop(root, unitOfWork, thrownValue, reason);
                        if (shouldYieldForPrerendering && workInProgressRootIsPrerendering) {
                            memoizedUpdaters = RootInProgress;
                            break a;
                        }
                        break;
                    default:
                        reason = workInProgressSuspendedReason, workInProgressSuspendedReason = NotSuspended, workInProgressThrownValue = null, throwAndUnwindWorkLoop(root, unitOfWork, thrownValue, reason);
                }
            }
            workLoopSync();
            memoizedUpdaters = workInProgressRootExitStatus;
            break;
        } catch (thrownValue$8) {
            handleThrow(root, thrownValue$8);
        }
        while (1);
        lanes && root.shellSuspendCounter++;
        resetContextDependencies();
        executionContext = prevExecutionContext;
        ReactSharedInternals.H = prevDispatcher;
        ReactSharedInternals.A = prevAsyncDispatcher;
        markRenderStopped();
        null === workInProgress && (workInProgressRoot = null, workInProgressRootRenderLanes = 0, finishQueueingConcurrentUpdates());
        return memoizedUpdaters;
    }
    function workLoopSync() {
        for(; null !== workInProgress;)performUnitOfWork(workInProgress);
    }
    function renderRootConcurrent(root, lanes) {
        var prevExecutionContext = executionContext;
        executionContext |= RenderContext;
        var prevDispatcher = pushDispatcher(), prevAsyncDispatcher = pushAsyncDispatcher();
        if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {
            if (isDevToolsPresent) {
                var memoizedUpdaters = root.memoizedUpdaters;
                0 < memoizedUpdaters.size && (restorePendingUpdaters(root, workInProgressRootRenderLanes), memoizedUpdaters.clear());
                movePendingFibersToMemoized(root, lanes);
            }
            workInProgressTransitions = null;
            workInProgressRootRenderTargetTime = now$1() + RENDER_TIMEOUT_MS;
            prepareFreshStack(root, lanes);
        } else workInProgressRootIsPrerendering = checkIfRootIsPrerendering(root, lanes);
        markRenderStarted(lanes);
        a: do try {
            if (workInProgressSuspendedReason !== NotSuspended && null !== workInProgress) b: switch(lanes = workInProgress, memoizedUpdaters = workInProgressThrownValue, workInProgressSuspendedReason){
                case SuspendedOnError:
                    workInProgressSuspendedReason = NotSuspended;
                    workInProgressThrownValue = null;
                    throwAndUnwindWorkLoop(root, lanes, memoizedUpdaters, SuspendedOnError);
                    break;
                case SuspendedOnData:
                case SuspendedOnAction:
                    if (isThenableResolved(memoizedUpdaters)) {
                        workInProgressSuspendedReason = NotSuspended;
                        workInProgressThrownValue = null;
                        replaySuspendedUnitOfWork(lanes);
                        break;
                    }
                    lanes = function() {
                        workInProgressSuspendedReason !== SuspendedOnData && workInProgressSuspendedReason !== SuspendedOnAction || workInProgressRoot !== root || (workInProgressSuspendedReason = SuspendedAndReadyToContinue);
                        ensureRootIsScheduled(root);
                    };
                    memoizedUpdaters.then(lanes, lanes);
                    break a;
                case SuspendedOnImmediate:
                    workInProgressSuspendedReason = SuspendedAndReadyToContinue;
                    break a;
                case SuspendedOnInstance:
                    workInProgressSuspendedReason = SuspendedOnInstanceAndReadyToContinue;
                    break a;
                case SuspendedAndReadyToContinue:
                    isThenableResolved(memoizedUpdaters) ? (workInProgressSuspendedReason = NotSuspended, workInProgressThrownValue = null, replaySuspendedUnitOfWork(lanes)) : (workInProgressSuspendedReason = NotSuspended, workInProgressThrownValue = null, throwAndUnwindWorkLoop(root, lanes, memoizedUpdaters, SuspendedAndReadyToContinue));
                    break;
                case SuspendedOnInstanceAndReadyToContinue:
                    var resource = null;
                    switch(workInProgress.tag){
                        case 26:
                            resource = workInProgress.memoizedState;
                        case 5:
                        case 27:
                            var hostFiber = workInProgress;
                            if (resource ? preloadResource(resource) : 1) {
                                workInProgressSuspendedReason = NotSuspended;
                                workInProgressThrownValue = null;
                                var sibling = hostFiber.sibling;
                                if (null !== sibling) workInProgress = sibling;
                                else {
                                    var returnFiber = hostFiber.return;
                                    null !== returnFiber ? (workInProgress = returnFiber, completeUnitOfWork(returnFiber)) : workInProgress = null;
                                }
                                break b;
                            }
                            break;
                        default:
                            console.error("Unexpected type of fiber triggered a suspensey commit. This is a bug in React.");
                    }
                    workInProgressSuspendedReason = NotSuspended;
                    workInProgressThrownValue = null;
                    throwAndUnwindWorkLoop(root, lanes, memoizedUpdaters, SuspendedOnInstanceAndReadyToContinue);
                    break;
                case SuspendedOnDeprecatedThrowPromise:
                    workInProgressSuspendedReason = NotSuspended;
                    workInProgressThrownValue = null;
                    throwAndUnwindWorkLoop(root, lanes, memoizedUpdaters, SuspendedOnDeprecatedThrowPromise);
                    break;
                case SuspendedOnHydration:
                    resetWorkInProgressStack();
                    workInProgressRootExitStatus = RootSuspendedAtTheShell;
                    break a;
                default:
                    throw Error("Unexpected SuspendedReason. This is a bug in React.");
            }
            null !== ReactSharedInternals.actQueue ? workLoopSync() : workLoopConcurrentByScheduler();
            break;
        } catch (thrownValue$9) {
            handleThrow(root, thrownValue$9);
        }
        while (1);
        resetContextDependencies();
        ReactSharedInternals.H = prevDispatcher;
        ReactSharedInternals.A = prevAsyncDispatcher;
        executionContext = prevExecutionContext;
        if (null !== workInProgress) return null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markRenderYielded && injectedProfilingHooks.markRenderYielded(), RootInProgress;
        markRenderStopped();
        workInProgressRoot = null;
        workInProgressRootRenderLanes = 0;
        finishQueueingConcurrentUpdates();
        return workInProgressRootExitStatus;
    }
    function workLoopConcurrentByScheduler() {
        for(; null !== workInProgress && !shouldYield();)performUnitOfWork(workInProgress);
    }
    function performUnitOfWork(unitOfWork) {
        var current = unitOfWork.alternate;
        (unitOfWork.mode & ProfileMode) !== NoMode ? (startProfilerTimer(unitOfWork), current = runWithFiberInDEV(unitOfWork, beginWork, current, unitOfWork, entangledRenderLanes), stopProfilerTimerIfRunningAndRecordDuration(unitOfWork)) : current = runWithFiberInDEV(unitOfWork, beginWork, current, unitOfWork, entangledRenderLanes);
        unitOfWork.memoizedProps = unitOfWork.pendingProps;
        null === current ? completeUnitOfWork(unitOfWork) : workInProgress = current;
    }
    function replaySuspendedUnitOfWork(unitOfWork) {
        var next = runWithFiberInDEV(unitOfWork, replayBeginWork, unitOfWork);
        unitOfWork.memoizedProps = unitOfWork.pendingProps;
        null === next ? completeUnitOfWork(unitOfWork) : workInProgress = next;
    }
    function replayBeginWork(unitOfWork) {
        var current = unitOfWork.alternate, isProfilingMode = (unitOfWork.mode & ProfileMode) !== NoMode;
        isProfilingMode && startProfilerTimer(unitOfWork);
        switch(unitOfWork.tag){
            case 15:
            case 0:
                current = replayFunctionComponent(current, unitOfWork, unitOfWork.pendingProps, unitOfWork.type, void 0, workInProgressRootRenderLanes);
                break;
            case 11:
                current = replayFunctionComponent(current, unitOfWork, unitOfWork.pendingProps, unitOfWork.type.render, unitOfWork.ref, workInProgressRootRenderLanes);
                break;
            case 5:
                resetHooksOnUnwind(unitOfWork);
            default:
                unwindInterruptedWork(current, unitOfWork), unitOfWork = workInProgress = resetWorkInProgress(unitOfWork, entangledRenderLanes), current = beginWork(current, unitOfWork, entangledRenderLanes);
        }
        isProfilingMode && stopProfilerTimerIfRunningAndRecordDuration(unitOfWork);
        return current;
    }
    function throwAndUnwindWorkLoop(root, unitOfWork, thrownValue, suspendedReason) {
        resetContextDependencies();
        resetHooksOnUnwind(unitOfWork);
        thenableState = null;
        thenableIndexCounter = 0;
        var returnFiber = unitOfWork.return;
        try {
            if (throwException(root, returnFiber, unitOfWork, thrownValue, workInProgressRootRenderLanes)) {
                workInProgressRootExitStatus = RootFatalErrored;
                logUncaughtError(root, createCapturedValueAtFiber(thrownValue, root.current));
                workInProgress = null;
                return;
            }
        } catch (error) {
            if (null !== returnFiber) throw workInProgress = returnFiber, error;
            workInProgressRootExitStatus = RootFatalErrored;
            logUncaughtError(root, createCapturedValueAtFiber(thrownValue, root.current));
            workInProgress = null;
            return;
        }
        if (unitOfWork.flags & 32768) {
            if (isHydrating || suspendedReason === SuspendedOnError) root = !0;
            else if (workInProgressRootIsPrerendering || 0 !== (workInProgressRootRenderLanes & 536870912)) root = !1;
            else if (workInProgressRootDidSkipSuspendedSiblings = root = !0, suspendedReason === SuspendedOnData || suspendedReason === SuspendedOnAction || suspendedReason === SuspendedOnImmediate || suspendedReason === SuspendedOnDeprecatedThrowPromise) suspendedReason = suspenseHandlerStackCursor.current, null !== suspendedReason && 13 === suspendedReason.tag && (suspendedReason.flags |= 16384);
            unwindUnitOfWork(unitOfWork, root);
        } else completeUnitOfWork(unitOfWork);
    }
    function completeUnitOfWork(unitOfWork) {
        var completedWork = unitOfWork;
        do {
            if (0 !== (completedWork.flags & 32768)) {
                unwindUnitOfWork(completedWork, workInProgressRootDidSkipSuspendedSiblings);
                return;
            }
            var current = completedWork.alternate;
            unitOfWork = completedWork.return;
            startProfilerTimer(completedWork);
            current = runWithFiberInDEV(completedWork, completeWork, current, completedWork, entangledRenderLanes);
            (completedWork.mode & ProfileMode) !== NoMode && stopProfilerTimerIfRunningAndRecordIncompleteDuration(completedWork);
            if (null !== current) {
                workInProgress = current;
                return;
            }
            completedWork = completedWork.sibling;
            if (null !== completedWork) {
                workInProgress = completedWork;
                return;
            }
            workInProgress = completedWork = unitOfWork;
        }while (null !== completedWork);
        workInProgressRootExitStatus === RootInProgress && (workInProgressRootExitStatus = RootCompleted);
    }
    function unwindUnitOfWork(unitOfWork, skipSiblings) {
        do {
            var next = unwindWork(unitOfWork.alternate, unitOfWork);
            if (null !== next) {
                next.flags &= 32767;
                workInProgress = next;
                return;
            }
            if ((unitOfWork.mode & ProfileMode) !== NoMode) {
                stopProfilerTimerIfRunningAndRecordIncompleteDuration(unitOfWork);
                next = unitOfWork.actualDuration;
                for(var child = unitOfWork.child; null !== child;)next += child.actualDuration, child = child.sibling;
                unitOfWork.actualDuration = next;
            }
            next = unitOfWork.return;
            null !== next && (next.flags |= 32768, next.subtreeFlags = 0, next.deletions = null);
            if (!skipSiblings && (unitOfWork = unitOfWork.sibling, null !== unitOfWork)) {
                workInProgress = unitOfWork;
                return;
            }
            workInProgress = unitOfWork = next;
        }while (null !== unitOfWork);
        workInProgressRootExitStatus = RootSuspendedAtTheShell;
        workInProgress = null;
    }
    function commitRoot(root, finishedWork, lanes, recoverableErrors, transitions, didIncludeRenderPhaseUpdate, spawnedLane, updatedLanes, suspendedRetryLanes) {
        root.cancelPendingCommit = null;
        do flushPendingEffects();
        while (pendingEffectsStatus !== NO_PENDING_EFFECTS);
        ReactStrictModeWarnings.flushLegacyContextWarning();
        ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();
        if ((executionContext & (RenderContext | CommitContext)) !== NoContext) throw Error("Should not already be working.");
        null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markCommitStarted && injectedProfilingHooks.markCommitStarted(lanes);
        if (null === finishedWork) markCommitStopped();
        else {
            0 === lanes && console.error("finishedLanes should not be empty during a commit. This is a bug in React.");
            if (finishedWork === root.current) throw Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue.");
            didIncludeRenderPhaseUpdate = finishedWork.lanes | finishedWork.childLanes;
            didIncludeRenderPhaseUpdate |= concurrentlyUpdatedLanes;
            markRootFinished(root, lanes, didIncludeRenderPhaseUpdate, spawnedLane, updatedLanes, suspendedRetryLanes);
            root === workInProgressRoot && (workInProgress = workInProgressRoot = null, workInProgressRootRenderLanes = 0);
            pendingFinishedWork = finishedWork;
            pendingEffectsRoot = root;
            pendingEffectsLanes = lanes;
            pendingEffectsRemainingLanes = didIncludeRenderPhaseUpdate;
            pendingPassiveTransitions = transitions;
            pendingRecoverableErrors = recoverableErrors;
            0 !== (finishedWork.subtreeFlags & 10256) || 0 !== (finishedWork.flags & 10256) ? (root.callbackNode = null, root.callbackPriority = 0, scheduleCallback$1(NormalPriority$1, function() {
                flushPassiveEffects(!0);
                return null;
            })) : (root.callbackNode = null, root.callbackPriority = 0);
            commitStartTime = now();
            recoverableErrors = 0 !== (finishedWork.flags & 13878);
            if (0 !== (finishedWork.subtreeFlags & 13878) || recoverableErrors) {
                recoverableErrors = ReactSharedInternals.T;
                ReactSharedInternals.T = null;
                transitions = ReactDOMSharedInternals.p;
                ReactDOMSharedInternals.p = DiscreteEventPriority;
                spawnedLane = executionContext;
                executionContext |= CommitContext;
                try {
                    commitBeforeMutationEffects(root, finishedWork, lanes);
                } finally{
                    executionContext = spawnedLane, ReactDOMSharedInternals.p = transitions, ReactSharedInternals.T = recoverableErrors;
                }
            }
            pendingEffectsStatus = PENDING_MUTATION_PHASE;
            flushMutationEffects();
            flushLayoutEffects();
            flushSpawnedWork();
        }
    }
    function flushMutationEffects() {
        if (pendingEffectsStatus === PENDING_MUTATION_PHASE) {
            pendingEffectsStatus = NO_PENDING_EFFECTS;
            var root = pendingEffectsRoot, finishedWork = pendingFinishedWork, lanes = pendingEffectsLanes, rootMutationHasEffect = 0 !== (finishedWork.flags & 13878);
            if (0 !== (finishedWork.subtreeFlags & 13878) || rootMutationHasEffect) {
                rootMutationHasEffect = ReactSharedInternals.T;
                ReactSharedInternals.T = null;
                var previousPriority = ReactDOMSharedInternals.p;
                ReactDOMSharedInternals.p = DiscreteEventPriority;
                var prevExecutionContext = executionContext;
                executionContext |= CommitContext;
                try {
                    inProgressLanes = lanes;
                    inProgressRoot = root;
                    commitMutationEffectsOnFiber(finishedWork, root);
                    inProgressRoot = inProgressLanes = null;
                    lanes = selectionInformation;
                    var curFocusedElem = getActiveElementDeep(root.containerInfo), priorFocusedElem = lanes.focusedElem, priorSelectionRange = lanes.selectionRange;
                    if (curFocusedElem !== priorFocusedElem && priorFocusedElem && priorFocusedElem.ownerDocument && containsNode(priorFocusedElem.ownerDocument.documentElement, priorFocusedElem)) {
                        if (null !== priorSelectionRange && hasSelectionCapabilities(priorFocusedElem)) {
                            var start = priorSelectionRange.start, end = priorSelectionRange.end;
                            void 0 === end && (end = start);
                            if ("selectionStart" in priorFocusedElem) priorFocusedElem.selectionStart = start, priorFocusedElem.selectionEnd = Math.min(end, priorFocusedElem.value.length);
                            else {
                                var doc = priorFocusedElem.ownerDocument || document, win = doc && doc.defaultView || window;
                                if (win.getSelection) {
                                    var selection = win.getSelection(), length = priorFocusedElem.textContent.length, start$jscomp$0 = Math.min(priorSelectionRange.start, length), end$jscomp$0 = void 0 === priorSelectionRange.end ? start$jscomp$0 : Math.min(priorSelectionRange.end, length);
                                    !selection.extend && start$jscomp$0 > end$jscomp$0 && (curFocusedElem = end$jscomp$0, end$jscomp$0 = start$jscomp$0, start$jscomp$0 = curFocusedElem);
                                    var startMarker = getNodeForCharacterOffset(priorFocusedElem, start$jscomp$0), endMarker = getNodeForCharacterOffset(priorFocusedElem, end$jscomp$0);
                                    if (startMarker && endMarker && (1 !== selection.rangeCount || selection.anchorNode !== startMarker.node || selection.anchorOffset !== startMarker.offset || selection.focusNode !== endMarker.node || selection.focusOffset !== endMarker.offset)) {
                                        var range = doc.createRange();
                                        range.setStart(startMarker.node, startMarker.offset);
                                        selection.removeAllRanges();
                                        start$jscomp$0 > end$jscomp$0 ? (selection.addRange(range), selection.extend(endMarker.node, endMarker.offset)) : (range.setEnd(endMarker.node, endMarker.offset), selection.addRange(range));
                                    }
                                }
                            }
                        }
                        doc = [];
                        for(selection = priorFocusedElem; selection = selection.parentNode;)1 === selection.nodeType && doc.push({
                            element: selection,
                            left: selection.scrollLeft,
                            top: selection.scrollTop
                        });
                        "function" === typeof priorFocusedElem.focus && priorFocusedElem.focus();
                        for(priorFocusedElem = 0; priorFocusedElem < doc.length; priorFocusedElem++){
                            var info = doc[priorFocusedElem];
                            info.element.scrollLeft = info.left;
                            info.element.scrollTop = info.top;
                        }
                    }
                    _enabled = !!eventsEnabled;
                    selectionInformation = eventsEnabled = null;
                } finally{
                    executionContext = prevExecutionContext, ReactDOMSharedInternals.p = previousPriority, ReactSharedInternals.T = rootMutationHasEffect;
                }
            }
            root.current = finishedWork;
            pendingEffectsStatus = PENDING_LAYOUT_PHASE;
        }
    }
    function flushLayoutEffects() {
        if (pendingEffectsStatus === PENDING_LAYOUT_PHASE) {
            pendingEffectsStatus = NO_PENDING_EFFECTS;
            var root = pendingEffectsRoot, finishedWork = pendingFinishedWork, lanes = pendingEffectsLanes, rootHasLayoutEffect = 0 !== (finishedWork.flags & 8772);
            if (0 !== (finishedWork.subtreeFlags & 8772) || rootHasLayoutEffect) {
                rootHasLayoutEffect = ReactSharedInternals.T;
                ReactSharedInternals.T = null;
                var previousPriority = ReactDOMSharedInternals.p;
                ReactDOMSharedInternals.p = DiscreteEventPriority;
                var prevExecutionContext = executionContext;
                executionContext |= CommitContext;
                try {
                    null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markLayoutEffectsStarted && injectedProfilingHooks.markLayoutEffectsStarted(lanes), inProgressLanes = lanes, inProgressRoot = root, commitLayoutEffectOnFiber(root, finishedWork.alternate, finishedWork), inProgressRoot = inProgressLanes = null, null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markLayoutEffectsStopped && injectedProfilingHooks.markLayoutEffectsStopped();
                } finally{
                    executionContext = prevExecutionContext, ReactDOMSharedInternals.p = previousPriority, ReactSharedInternals.T = rootHasLayoutEffect;
                }
            }
            pendingEffectsStatus = PENDING_AFTER_MUTATION_PHASE;
        }
    }
    function flushSpawnedWork() {
        if (pendingEffectsStatus === PENDING_SPAWNED_WORK || pendingEffectsStatus === PENDING_AFTER_MUTATION_PHASE) {
            pendingEffectsStatus = NO_PENDING_EFFECTS;
            requestPaint();
            var root = pendingEffectsRoot, finishedWork = pendingFinishedWork, lanes = pendingEffectsLanes, recoverableErrors = pendingRecoverableErrors, rootDidHavePassiveEffects = 0 !== (finishedWork.subtreeFlags & 10256) || 0 !== (finishedWork.flags & 10256);
            rootDidHavePassiveEffects ? pendingEffectsStatus = PENDING_PASSIVE_PHASE : (pendingEffectsStatus = NO_PENDING_EFFECTS, pendingFinishedWork = pendingEffectsRoot = null, releaseRootPooledCache(root, root.pendingLanes), nestedPassiveUpdateCount = 0, rootWithPassiveNestedUpdates = null);
            var remainingLanes = root.pendingLanes;
            0 === remainingLanes && (legacyErrorBoundariesThatAlreadyFailed = null);
            rootDidHavePassiveEffects || commitDoubleInvokeEffectsInDEV(root);
            rootDidHavePassiveEffects = lanesToEventPriority(lanes);
            finishedWork = finishedWork.stateNode;
            if (injectedHook && "function" === typeof injectedHook.onCommitFiberRoot) try {
                var didError = 128 === (finishedWork.current.flags & 128);
                switch(rootDidHavePassiveEffects){
                    case DiscreteEventPriority:
                        var schedulerPriority = ImmediatePriority;
                        break;
                    case ContinuousEventPriority:
                        schedulerPriority = UserBlockingPriority;
                        break;
                    case DefaultEventPriority:
                        schedulerPriority = NormalPriority$1;
                        break;
                    case IdleEventPriority:
                        schedulerPriority = IdlePriority;
                        break;
                    default:
                        schedulerPriority = NormalPriority$1;
                }
                injectedHook.onCommitFiberRoot(rendererID, finishedWork, schedulerPriority, didError);
            } catch (err) {
                hasLoggedError || (hasLoggedError = !0, console.error("React instrumentation encountered an error: %s", err));
            }
            isDevToolsPresent && root.memoizedUpdaters.clear();
            onCommitRoot();
            if (null !== recoverableErrors) {
                didError = ReactSharedInternals.T;
                schedulerPriority = ReactDOMSharedInternals.p;
                ReactDOMSharedInternals.p = DiscreteEventPriority;
                ReactSharedInternals.T = null;
                try {
                    var onRecoverableError = root.onRecoverableError;
                    for(finishedWork = 0; finishedWork < recoverableErrors.length; finishedWork++){
                        var recoverableError = recoverableErrors[finishedWork], errorInfo = makeErrorInfo(recoverableError.stack);
                        runWithFiberInDEV(recoverableError.source, onRecoverableError, recoverableError.value, errorInfo);
                    }
                } finally{
                    ReactSharedInternals.T = didError, ReactDOMSharedInternals.p = schedulerPriority;
                }
            }
            0 !== (pendingEffectsLanes & 3) && flushPendingEffects();
            ensureRootIsScheduled(root);
            remainingLanes = root.pendingLanes;
            0 !== (lanes & 4194090) && 0 !== (remainingLanes & 42) ? (nestedUpdateScheduled = !0, root === rootWithNestedUpdates ? nestedUpdateCount++ : (nestedUpdateCount = 0, rootWithNestedUpdates = root)) : nestedUpdateCount = 0;
            flushSyncWorkAcrossRoots_impl(0, !1);
            markCommitStopped();
        }
    }
    function makeErrorInfo(componentStack) {
        componentStack = {
            componentStack: componentStack
        };
        Object.defineProperty(componentStack, "digest", {
            get: function() {
                console.error('You are accessing "digest" from the errorInfo object passed to onRecoverableError. This property is no longer provided as part of errorInfo but can be accessed as a property of the Error instance itself.');
            }
        });
        return componentStack;
    }
    function releaseRootPooledCache(root, remainingLanes) {
        0 === (root.pooledCacheLanes &= remainingLanes) && (remainingLanes = root.pooledCache, null != remainingLanes && (root.pooledCache = null, releaseCache(remainingLanes)));
    }
    function flushPendingEffects(wasDelayedCommit) {
        flushMutationEffects();
        flushLayoutEffects();
        flushSpawnedWork();
        return flushPassiveEffects(wasDelayedCommit);
    }
    function flushPassiveEffects() {
        if (pendingEffectsStatus !== PENDING_PASSIVE_PHASE) return !1;
        var root = pendingEffectsRoot, remainingLanes = pendingEffectsRemainingLanes;
        pendingEffectsRemainingLanes = 0;
        var renderPriority = lanesToEventPriority(pendingEffectsLanes), priority = 0 === DefaultEventPriority || DefaultEventPriority > renderPriority ? DefaultEventPriority : renderPriority;
        renderPriority = ReactSharedInternals.T;
        var previousPriority = ReactDOMSharedInternals.p;
        try {
            ReactDOMSharedInternals.p = priority;
            ReactSharedInternals.T = null;
            priority = pendingPassiveTransitions;
            pendingPassiveTransitions = null;
            var root$jscomp$0 = pendingEffectsRoot, lanes = pendingEffectsLanes;
            pendingEffectsStatus = NO_PENDING_EFFECTS;
            pendingFinishedWork = pendingEffectsRoot = null;
            pendingEffectsLanes = 0;
            if ((executionContext & (RenderContext | CommitContext)) !== NoContext) throw Error("Cannot flush passive effects while already rendering.");
            isFlushingPassiveEffects = !0;
            didScheduleUpdateDuringPassiveEffects = !1;
            null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markPassiveEffectsStarted && injectedProfilingHooks.markPassiveEffectsStarted(lanes);
            var prevExecutionContext = executionContext;
            executionContext |= CommitContext;
            commitPassiveUnmountOnFiber(root$jscomp$0.current);
            commitPassiveMountOnFiber(root$jscomp$0, root$jscomp$0.current, lanes, priority);
            null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markPassiveEffectsStopped && injectedProfilingHooks.markPassiveEffectsStopped();
            commitDoubleInvokeEffectsInDEV(root$jscomp$0);
            executionContext = prevExecutionContext;
            flushSyncWorkAcrossRoots_impl(0, !1);
            didScheduleUpdateDuringPassiveEffects ? root$jscomp$0 === rootWithPassiveNestedUpdates ? nestedPassiveUpdateCount++ : (nestedPassiveUpdateCount = 0, rootWithPassiveNestedUpdates = root$jscomp$0) : nestedPassiveUpdateCount = 0;
            didScheduleUpdateDuringPassiveEffects = isFlushingPassiveEffects = !1;
            if (injectedHook && "function" === typeof injectedHook.onPostCommitFiberRoot) try {
                injectedHook.onPostCommitFiberRoot(rendererID, root$jscomp$0);
            } catch (err) {
                hasLoggedError || (hasLoggedError = !0, console.error("React instrumentation encountered an error: %s", err));
            }
            var stateNode = root$jscomp$0.current.stateNode;
            stateNode.effectDuration = 0;
            stateNode.passiveEffectDuration = 0;
            return !0;
        } finally{
            ReactDOMSharedInternals.p = previousPriority, ReactSharedInternals.T = renderPriority, releaseRootPooledCache(root, remainingLanes);
        }
    }
    function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {
        sourceFiber = createCapturedValueAtFiber(error, sourceFiber);
        sourceFiber = createRootErrorUpdate(rootFiber.stateNode, sourceFiber, 2);
        rootFiber = enqueueUpdate(rootFiber, sourceFiber, 2);
        null !== rootFiber && (markRootUpdated$1(rootFiber, 2), ensureRootIsScheduled(rootFiber));
    }
    function captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error) {
        isRunningInsertionEffect = !1;
        if (3 === sourceFiber.tag) captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);
        else {
            for(; null !== nearestMountedAncestor;){
                if (3 === nearestMountedAncestor.tag) {
                    captureCommitPhaseErrorOnRoot(nearestMountedAncestor, sourceFiber, error);
                    return;
                }
                if (1 === nearestMountedAncestor.tag) {
                    var instance = nearestMountedAncestor.stateNode;
                    if ("function" === typeof nearestMountedAncestor.type.getDerivedStateFromError || "function" === typeof instance.componentDidCatch && (null === legacyErrorBoundariesThatAlreadyFailed || !legacyErrorBoundariesThatAlreadyFailed.has(instance))) {
                        sourceFiber = createCapturedValueAtFiber(error, sourceFiber);
                        error = createClassErrorUpdate(2);
                        instance = enqueueUpdate(nearestMountedAncestor, error, 2);
                        null !== instance && (initializeClassErrorUpdate(error, instance, nearestMountedAncestor, sourceFiber), markRootUpdated$1(instance, 2), ensureRootIsScheduled(instance));
                        return;
                    }
                }
                nearestMountedAncestor = nearestMountedAncestor.return;
            }
            console.error("Internal React error: Attempted to capture a commit phase error inside a detached tree. This indicates a bug in React. Potential causes include deleting the same fiber more than once, committing an already-finished tree, or an inconsistent return pointer.\n\nError message:\n\n%s", error);
        }
    }
    function attachPingListener(root, wakeable, lanes) {
        var pingCache = root.pingCache;
        if (null === pingCache) {
            pingCache = root.pingCache = new PossiblyWeakMap();
            var threadIDs = new Set();
            pingCache.set(wakeable, threadIDs);
        } else threadIDs = pingCache.get(wakeable), void 0 === threadIDs && (threadIDs = new Set(), pingCache.set(wakeable, threadIDs));
        threadIDs.has(lanes) || (workInProgressRootDidAttachPingListener = !0, threadIDs.add(lanes), pingCache = pingSuspendedRoot.bind(null, root, wakeable, lanes), isDevToolsPresent && restorePendingUpdaters(root, lanes), wakeable.then(pingCache, pingCache));
    }
    function pingSuspendedRoot(root, wakeable, pingedLanes) {
        var pingCache = root.pingCache;
        null !== pingCache && pingCache.delete(wakeable);
        root.pingedLanes |= root.suspendedLanes & pingedLanes;
        root.warmLanes &= ~pingedLanes;
        isConcurrentActEnvironment() && null === ReactSharedInternals.actQueue && console.error("A suspended resource finished loading inside a test, but the event was not wrapped in act(...).\n\nWhen testing, code that resolves suspended data should be wrapped into act(...):\n\nact(() => {\n  /* finish loading suspended data */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act");
        workInProgressRoot === root && (workInProgressRootRenderLanes & pingedLanes) === pingedLanes && (workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && (workInProgressRootRenderLanes & 62914560) === workInProgressRootRenderLanes && now$1() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS ? (executionContext & RenderContext) === NoContext && prepareFreshStack(root, 0) : workInProgressRootPingedLanes |= pingedLanes, workInProgressSuspendedRetryLanes === workInProgressRootRenderLanes && (workInProgressSuspendedRetryLanes = 0));
        ensureRootIsScheduled(root);
    }
    function retryTimedOutBoundary(boundaryFiber, retryLane) {
        0 === retryLane && (retryLane = claimNextRetryLane());
        boundaryFiber = enqueueConcurrentRenderForLane(boundaryFiber, retryLane);
        null !== boundaryFiber && (markRootUpdated$1(boundaryFiber, retryLane), ensureRootIsScheduled(boundaryFiber));
    }
    function retryDehydratedSuspenseBoundary(boundaryFiber) {
        var suspenseState = boundaryFiber.memoizedState, retryLane = 0;
        null !== suspenseState && (retryLane = suspenseState.retryLane);
        retryTimedOutBoundary(boundaryFiber, retryLane);
    }
    function resolveRetryWakeable(boundaryFiber, wakeable) {
        var retryLane = 0;
        switch(boundaryFiber.tag){
            case 13:
                var retryCache = boundaryFiber.stateNode;
                var suspenseState = boundaryFiber.memoizedState;
                null !== suspenseState && (retryLane = suspenseState.retryLane);
                break;
            case 19:
                retryCache = boundaryFiber.stateNode;
                break;
            case 22:
                retryCache = boundaryFiber.stateNode._retryCache;
                break;
            default:
                throw Error("Pinged unknown suspense boundary type. This is probably a bug in React.");
        }
        null !== retryCache && retryCache.delete(wakeable);
        retryTimedOutBoundary(boundaryFiber, retryLane);
    }
    function recursivelyTraverseAndDoubleInvokeEffectsInDEV(root$jscomp$0, parentFiber, isInStrictMode) {
        if (0 !== (parentFiber.subtreeFlags & 67117056)) for(parentFiber = parentFiber.child; null !== parentFiber;){
            var root = root$jscomp$0, fiber = parentFiber, isStrictModeFiber = fiber.type === REACT_STRICT_MODE_TYPE;
            isStrictModeFiber = isInStrictMode || isStrictModeFiber;
            22 !== fiber.tag ? fiber.flags & 67108864 ? isStrictModeFiber && runWithFiberInDEV(fiber, doubleInvokeEffectsOnFiber, root, fiber, (fiber.mode & NoStrictPassiveEffectsMode) === NoMode) : recursivelyTraverseAndDoubleInvokeEffectsInDEV(root, fiber, isStrictModeFiber) : null === fiber.memoizedState && (isStrictModeFiber && fiber.flags & 8192 ? runWithFiberInDEV(fiber, doubleInvokeEffectsOnFiber, root, fiber) : fiber.subtreeFlags & 67108864 && runWithFiberInDEV(fiber, recursivelyTraverseAndDoubleInvokeEffectsInDEV, root, fiber, isStrictModeFiber));
            parentFiber = parentFiber.sibling;
        }
    }
    function doubleInvokeEffectsOnFiber(root, fiber) {
        var shouldDoubleInvokePassiveEffects = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : !0;
        setIsStrictModeForDevtools(!0);
        try {
            disappearLayoutEffects(fiber), shouldDoubleInvokePassiveEffects && disconnectPassiveEffect(fiber), reappearLayoutEffects(root, fiber.alternate, fiber, !1), shouldDoubleInvokePassiveEffects && reconnectPassiveEffects(root, fiber, 0, null, !1, 0);
        } finally{
            setIsStrictModeForDevtools(!1);
        }
    }
    function commitDoubleInvokeEffectsInDEV(root) {
        var doubleInvokeEffects = !0;
        root.current.mode & (StrictLegacyMode | StrictEffectsMode) || (doubleInvokeEffects = !1);
        recursivelyTraverseAndDoubleInvokeEffectsInDEV(root, root.current, doubleInvokeEffects);
    }
    function warnAboutUpdateOnNotYetMountedFiberInDEV(fiber) {
        if ((executionContext & RenderContext) === NoContext) {
            var tag = fiber.tag;
            if (3 === tag || 1 === tag || 0 === tag || 11 === tag || 14 === tag || 15 === tag) {
                tag = getComponentNameFromFiber(fiber) || "ReactComponent";
                if (null !== didWarnStateUpdateForNotYetMountedComponent) {
                    if (didWarnStateUpdateForNotYetMountedComponent.has(tag)) return;
                    didWarnStateUpdateForNotYetMountedComponent.add(tag);
                } else didWarnStateUpdateForNotYetMountedComponent = new Set([
                    tag
                ]);
                runWithFiberInDEV(fiber, function() {
                    console.error("Can't perform a React state update on a component that hasn't mounted yet. This indicates that you have a side-effect in your render function that asynchronously later calls tries to update the component. Move this work to useEffect instead.");
                });
            }
        }
    }
    function restorePendingUpdaters(root, lanes) {
        isDevToolsPresent && root.memoizedUpdaters.forEach(function(schedulingFiber) {
            addFiberToLanesMap(root, schedulingFiber, lanes);
        });
    }
    function scheduleCallback$1(priorityLevel, callback) {
        var actQueue = ReactSharedInternals.actQueue;
        return null !== actQueue ? (actQueue.push(callback), fakeActCallbackNode$1) : scheduleCallback$3(priorityLevel, callback);
    }
    function warnIfUpdatesNotWrappedWithActDEV(fiber) {
        isConcurrentActEnvironment() && null === ReactSharedInternals.actQueue && runWithFiberInDEV(fiber, function() {
            console.error("An update to %s inside a test was not wrapped in act(...).\n\nWhen testing, code that causes React state updates should be wrapped into act(...):\n\nact(() => {\n  /* fire events that update state */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act", getComponentNameFromFiber(fiber));
        });
    }
    function ensureRootIsScheduled(root) {
        root !== lastScheduledRoot && null === root.next && (null === lastScheduledRoot ? firstScheduledRoot = lastScheduledRoot = root : lastScheduledRoot = lastScheduledRoot.next = root);
        mightHavePendingSyncWork = !0;
        null !== ReactSharedInternals.actQueue ? didScheduleMicrotask_act || (didScheduleMicrotask_act = !0, scheduleImmediateRootScheduleTask()) : didScheduleMicrotask || (didScheduleMicrotask = !0, scheduleImmediateRootScheduleTask());
    }
    function flushSyncWorkAcrossRoots_impl(syncTransitionLanes, onlyLegacy) {
        if (!isFlushingWork && mightHavePendingSyncWork) {
            isFlushingWork = !0;
            do {
                var didPerformSomeWork = !1;
                for(var root = firstScheduledRoot; null !== root;){
                    if (!onlyLegacy) {
                        if (0 !== syncTransitionLanes) {
                            var pendingLanes = root.pendingLanes;
                            if (0 === pendingLanes) var nextLanes = 0;
                            else {
                                var suspendedLanes = root.suspendedLanes, pingedLanes = root.pingedLanes;
                                nextLanes = (1 << 31 - clz32(42 | syncTransitionLanes) + 1) - 1;
                                nextLanes &= pendingLanes & ~(suspendedLanes & ~pingedLanes);
                                nextLanes = nextLanes & 201326741 ? nextLanes & 201326741 | 1 : nextLanes ? nextLanes | 2 : 0;
                            }
                            0 !== nextLanes && (didPerformSomeWork = !0, performSyncWorkOnRoot(root, nextLanes));
                        } else nextLanes = workInProgressRootRenderLanes, nextLanes = getNextLanes(root, root === workInProgressRoot ? nextLanes : 0, null !== root.cancelPendingCommit || root.timeoutHandle !== noTimeout), 0 === (nextLanes & 3) || checkIfRootIsPrerendering(root, nextLanes) || (didPerformSomeWork = !0, performSyncWorkOnRoot(root, nextLanes));
                    }
                    root = root.next;
                }
            }while (didPerformSomeWork);
            isFlushingWork = !1;
        }
    }
    function processRootScheduleInImmediateTask() {
        processRootScheduleInMicrotask();
    }
    function processRootScheduleInMicrotask() {
        mightHavePendingSyncWork = didScheduleMicrotask_act = didScheduleMicrotask = !1;
        var syncTransitionLanes = 0;
        0 !== currentEventTransitionLane && (shouldAttemptEagerTransition() && (syncTransitionLanes = currentEventTransitionLane), currentEventTransitionLane = 0);
        for(var currentTime = now$1(), prev = null, root = firstScheduledRoot; null !== root;){
            var next = root.next, nextLanes = scheduleTaskForRootDuringMicrotask(root, currentTime);
            if (0 === nextLanes) root.next = null, null === prev ? firstScheduledRoot = next : prev.next = next, null === next && (lastScheduledRoot = prev);
            else if (prev = root, 0 !== syncTransitionLanes || 0 !== (nextLanes & 3)) mightHavePendingSyncWork = !0;
            root = next;
        }
        flushSyncWorkAcrossRoots_impl(syncTransitionLanes, !1);
    }
    function scheduleTaskForRootDuringMicrotask(root, currentTime) {
        for(var suspendedLanes = root.suspendedLanes, pingedLanes = root.pingedLanes, expirationTimes = root.expirationTimes, lanes = root.pendingLanes & -62914561; 0 < lanes;){
            var index = 31 - clz32(lanes), lane = 1 << index, expirationTime = expirationTimes[index];
            if (-1 === expirationTime) {
                if (0 === (lane & suspendedLanes) || 0 !== (lane & pingedLanes)) expirationTimes[index] = computeExpirationTime(lane, currentTime);
            } else expirationTime <= currentTime && (root.expiredLanes |= lane);
            lanes &= ~lane;
        }
        currentTime = workInProgressRoot;
        suspendedLanes = workInProgressRootRenderLanes;
        suspendedLanes = getNextLanes(root, root === currentTime ? suspendedLanes : 0, null !== root.cancelPendingCommit || root.timeoutHandle !== noTimeout);
        pingedLanes = root.callbackNode;
        if (0 === suspendedLanes || root === currentTime && (workInProgressSuspendedReason === SuspendedOnData || workInProgressSuspendedReason === SuspendedOnAction) || null !== root.cancelPendingCommit) return null !== pingedLanes && cancelCallback(pingedLanes), root.callbackNode = null, root.callbackPriority = 0;
        if (0 === (suspendedLanes & 3) || checkIfRootIsPrerendering(root, suspendedLanes)) {
            currentTime = suspendedLanes & -suspendedLanes;
            if (currentTime !== root.callbackPriority || null !== ReactSharedInternals.actQueue && pingedLanes !== fakeActCallbackNode) cancelCallback(pingedLanes);
            else return currentTime;
            switch(lanesToEventPriority(suspendedLanes)){
                case DiscreteEventPriority:
                case ContinuousEventPriority:
                    suspendedLanes = UserBlockingPriority;
                    break;
                case DefaultEventPriority:
                    suspendedLanes = NormalPriority$1;
                    break;
                case IdleEventPriority:
                    suspendedLanes = IdlePriority;
                    break;
                default:
                    suspendedLanes = NormalPriority$1;
            }
            pingedLanes = performWorkOnRootViaSchedulerTask.bind(null, root);
            null !== ReactSharedInternals.actQueue ? (ReactSharedInternals.actQueue.push(pingedLanes), suspendedLanes = fakeActCallbackNode) : suspendedLanes = scheduleCallback$3(suspendedLanes, pingedLanes);
            root.callbackPriority = currentTime;
            root.callbackNode = suspendedLanes;
            return currentTime;
        }
        null !== pingedLanes && cancelCallback(pingedLanes);
        root.callbackPriority = 2;
        root.callbackNode = null;
        return 2;
    }
    function performWorkOnRootViaSchedulerTask(root, didTimeout) {
        nestedUpdateScheduled = currentUpdateIsNested = !1;
        if (pendingEffectsStatus !== NO_PENDING_EFFECTS && pendingEffectsStatus !== PENDING_PASSIVE_PHASE) return root.callbackNode = null, root.callbackPriority = 0, null;
        var originalCallbackNode = root.callbackNode;
        if (flushPendingEffects(!0) && root.callbackNode !== originalCallbackNode) return null;
        var workInProgressRootRenderLanes$jscomp$0 = workInProgressRootRenderLanes;
        workInProgressRootRenderLanes$jscomp$0 = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes$jscomp$0 : 0, null !== root.cancelPendingCommit || root.timeoutHandle !== noTimeout);
        if (0 === workInProgressRootRenderLanes$jscomp$0) return null;
        performWorkOnRoot(root, workInProgressRootRenderLanes$jscomp$0, didTimeout);
        scheduleTaskForRootDuringMicrotask(root, now$1());
        return null != root.callbackNode && root.callbackNode === originalCallbackNode ? performWorkOnRootViaSchedulerTask.bind(null, root) : null;
    }
    function performSyncWorkOnRoot(root, lanes) {
        if (flushPendingEffects()) return null;
        currentUpdateIsNested = nestedUpdateScheduled;
        nestedUpdateScheduled = !1;
        performWorkOnRoot(root, lanes, !0);
    }
    function cancelCallback(callbackNode) {
        callbackNode !== fakeActCallbackNode && null !== callbackNode && cancelCallback$1(callbackNode);
    }
    function scheduleImmediateRootScheduleTask() {
        null !== ReactSharedInternals.actQueue && ReactSharedInternals.actQueue.push(function() {
            processRootScheduleInMicrotask();
            return null;
        });
        scheduleMicrotask(function() {
            (executionContext & (RenderContext | CommitContext)) !== NoContext ? scheduleCallback$3(ImmediatePriority, processRootScheduleInImmediateTask) : processRootScheduleInMicrotask();
        });
    }
    function requestTransitionLane() {
        0 === currentEventTransitionLane && (currentEventTransitionLane = claimNextTransitionLane());
        return currentEventTransitionLane;
    }
    function coerceFormActionProp(actionProp) {
        if (null == actionProp || "symbol" === typeof actionProp || "boolean" === typeof actionProp) return null;
        if ("function" === typeof actionProp) return actionProp;
        checkAttributeStringCoercion(actionProp, "action");
        return sanitizeURL("" + actionProp);
    }
    function createFormDataWithSubmitter(form, submitter) {
        var temp = submitter.ownerDocument.createElement("input");
        temp.name = submitter.name;
        temp.value = submitter.value;
        form.id && temp.setAttribute("form", form.id);
        submitter.parentNode.insertBefore(temp, submitter);
        form = new FormData(form);
        temp.parentNode.removeChild(temp);
        return form;
    }
    function extractEvents$1(dispatchQueue, domEventName, maybeTargetInst, nativeEvent, nativeEventTarget) {
        if ("submit" === domEventName && maybeTargetInst && maybeTargetInst.stateNode === nativeEventTarget) {
            var action = coerceFormActionProp((nativeEventTarget[internalPropsKey] || null).action), submitter = nativeEvent.submitter;
            submitter && (domEventName = (domEventName = submitter[internalPropsKey] || null) ? coerceFormActionProp(domEventName.formAction) : submitter.getAttribute("formAction"), null !== domEventName && (action = domEventName, submitter = null));
            var event = new SyntheticEvent("action", "action", null, nativeEvent, nativeEventTarget);
            dispatchQueue.push({
                event: event,
                listeners: [
                    {
                        instance: null,
                        listener: function() {
                            if (nativeEvent.defaultPrevented) {
                                if (0 !== currentEventTransitionLane) {
                                    var formData = submitter ? createFormDataWithSubmitter(nativeEventTarget, submitter) : new FormData(nativeEventTarget), pendingState = {
                                        pending: !0,
                                        data: formData,
                                        method: nativeEventTarget.method,
                                        action: action
                                    };
                                    Object.freeze(pendingState);
                                    startHostTransition(maybeTargetInst, pendingState, null, formData);
                                }
                            } else "function" === typeof action && (event.preventDefault(), formData = submitter ? createFormDataWithSubmitter(nativeEventTarget, submitter) : new FormData(nativeEventTarget), pendingState = {
                                pending: !0,
                                data: formData,
                                method: nativeEventTarget.method,
                                action: action
                            }, Object.freeze(pendingState), startHostTransition(maybeTargetInst, pendingState, action, formData));
                        },
                        currentTarget: nativeEventTarget
                    }
                ]
            });
        }
    }
    function executeDispatch(event, listener, currentTarget) {
        event.currentTarget = currentTarget;
        try {
            listener(event);
        } catch (error) {
            reportGlobalError(error);
        }
        event.currentTarget = null;
    }
    function processDispatchQueue(dispatchQueue, eventSystemFlags) {
        eventSystemFlags = 0 !== (eventSystemFlags & 4);
        for(var i = 0; i < dispatchQueue.length; i++){
            var _dispatchQueue$i = dispatchQueue[i];
            a: {
                var previousInstance = void 0, event = _dispatchQueue$i.event;
                _dispatchQueue$i = _dispatchQueue$i.listeners;
                if (eventSystemFlags) for(var i$jscomp$0 = _dispatchQueue$i.length - 1; 0 <= i$jscomp$0; i$jscomp$0--){
                    var _dispatchListeners$i = _dispatchQueue$i[i$jscomp$0], instance = _dispatchListeners$i.instance, currentTarget = _dispatchListeners$i.currentTarget;
                    _dispatchListeners$i = _dispatchListeners$i.listener;
                    if (instance !== previousInstance && event.isPropagationStopped()) break a;
                    null !== instance ? runWithFiberInDEV(instance, executeDispatch, event, _dispatchListeners$i, currentTarget) : executeDispatch(event, _dispatchListeners$i, currentTarget);
                    previousInstance = instance;
                }
                else for(i$jscomp$0 = 0; i$jscomp$0 < _dispatchQueue$i.length; i$jscomp$0++){
                    _dispatchListeners$i = _dispatchQueue$i[i$jscomp$0];
                    instance = _dispatchListeners$i.instance;
                    currentTarget = _dispatchListeners$i.currentTarget;
                    _dispatchListeners$i = _dispatchListeners$i.listener;
                    if (instance !== previousInstance && event.isPropagationStopped()) break a;
                    null !== instance ? runWithFiberInDEV(instance, executeDispatch, event, _dispatchListeners$i, currentTarget) : executeDispatch(event, _dispatchListeners$i, currentTarget);
                    previousInstance = instance;
                }
            }
        }
    }
    function listenToNonDelegatedEvent(domEventName, targetElement) {
        nonDelegatedEvents.has(domEventName) || console.error('Did not expect a listenToNonDelegatedEvent() call for "%s". This is a bug in React. Please file an issue.', domEventName);
        var listenerSet = targetElement[internalEventHandlersKey];
        void 0 === listenerSet && (listenerSet = targetElement[internalEventHandlersKey] = new Set());
        var listenerSetKey = domEventName + "__bubble";
        listenerSet.has(listenerSetKey) || (addTrappedEventListener(targetElement, domEventName, 2, !1), listenerSet.add(listenerSetKey));
    }
    function listenToNativeEvent(domEventName, isCapturePhaseListener, target) {
        nonDelegatedEvents.has(domEventName) && !isCapturePhaseListener && console.error('Did not expect a listenToNativeEvent() call for "%s" in the bubble phase. This is a bug in React. Please file an issue.', domEventName);
        var eventSystemFlags = 0;
        isCapturePhaseListener && (eventSystemFlags |= 4);
        addTrappedEventListener(target, domEventName, eventSystemFlags, isCapturePhaseListener);
    }
    function listenToAllSupportedEvents(rootContainerElement) {
        if (!rootContainerElement[listeningMarker]) {
            rootContainerElement[listeningMarker] = !0;
            allNativeEvents.forEach(function(domEventName) {
                "selectionchange" !== domEventName && (nonDelegatedEvents.has(domEventName) || listenToNativeEvent(domEventName, !1, rootContainerElement), listenToNativeEvent(domEventName, !0, rootContainerElement));
            });
            var ownerDocument = 9 === rootContainerElement.nodeType ? rootContainerElement : rootContainerElement.ownerDocument;
            null === ownerDocument || ownerDocument[listeningMarker] || (ownerDocument[listeningMarker] = !0, listenToNativeEvent("selectionchange", !1, ownerDocument));
        }
    }
    function addTrappedEventListener(targetContainer, domEventName, eventSystemFlags, isCapturePhaseListener) {
        switch(getEventPriority(domEventName)){
            case DiscreteEventPriority:
                var listenerWrapper = dispatchDiscreteEvent;
                break;
            case ContinuousEventPriority:
                listenerWrapper = dispatchContinuousEvent;
                break;
            default:
                listenerWrapper = dispatchEvent;
        }
        eventSystemFlags = listenerWrapper.bind(null, domEventName, eventSystemFlags, targetContainer);
        listenerWrapper = void 0;
        !passiveBrowserEventsSupported || "touchstart" !== domEventName && "touchmove" !== domEventName && "wheel" !== domEventName || (listenerWrapper = !0);
        isCapturePhaseListener ? void 0 !== listenerWrapper ? targetContainer.addEventListener(domEventName, eventSystemFlags, {
            capture: !0,
            passive: listenerWrapper
        }) : targetContainer.addEventListener(domEventName, eventSystemFlags, !0) : void 0 !== listenerWrapper ? targetContainer.addEventListener(domEventName, eventSystemFlags, {
            passive: listenerWrapper
        }) : targetContainer.addEventListener(domEventName, eventSystemFlags, !1);
    }
    function dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, targetInst$jscomp$0, targetContainer) {
        var ancestorInst = targetInst$jscomp$0;
        if (0 === (eventSystemFlags & 1) && 0 === (eventSystemFlags & 2) && null !== targetInst$jscomp$0) a: for(;;){
            if (null === targetInst$jscomp$0) return;
            var nodeTag = targetInst$jscomp$0.tag;
            if (3 === nodeTag || 4 === nodeTag) {
                var container = targetInst$jscomp$0.stateNode.containerInfo;
                if (container === targetContainer) break;
                if (4 === nodeTag) for(nodeTag = targetInst$jscomp$0.return; null !== nodeTag;){
                    var grandTag = nodeTag.tag;
                    if ((3 === grandTag || 4 === grandTag) && nodeTag.stateNode.containerInfo === targetContainer) return;
                    nodeTag = nodeTag.return;
                }
                for(; null !== container;){
                    nodeTag = getClosestInstanceFromNode(container);
                    if (null === nodeTag) return;
                    grandTag = nodeTag.tag;
                    if (5 === grandTag || 6 === grandTag || 26 === grandTag || 27 === grandTag) {
                        targetInst$jscomp$0 = ancestorInst = nodeTag;
                        continue a;
                    }
                    container = container.parentNode;
                }
            }
            targetInst$jscomp$0 = targetInst$jscomp$0.return;
        }
        batchedUpdates$1(function() {
            var targetInst = ancestorInst, nativeEventTarget = getEventTarget(nativeEvent), dispatchQueue = [];
            a: {
                var reactName = topLevelEventsToReactNames.get(domEventName);
                if (void 0 !== reactName) {
                    var SyntheticEventCtor = SyntheticEvent, reactEventType = domEventName;
                    switch(domEventName){
                        case "keypress":
                            if (0 === getEventCharCode(nativeEvent)) break a;
                        case "keydown":
                        case "keyup":
                            SyntheticEventCtor = SyntheticKeyboardEvent;
                            break;
                        case "focusin":
                            reactEventType = "focus";
                            SyntheticEventCtor = SyntheticFocusEvent;
                            break;
                        case "focusout":
                            reactEventType = "blur";
                            SyntheticEventCtor = SyntheticFocusEvent;
                            break;
                        case "beforeblur":
                        case "afterblur":
                            SyntheticEventCtor = SyntheticFocusEvent;
                            break;
                        case "click":
                            if (2 === nativeEvent.button) break a;
                        case "auxclick":
                        case "dblclick":
                        case "mousedown":
                        case "mousemove":
                        case "mouseup":
                        case "mouseout":
                        case "mouseover":
                        case "contextmenu":
                            SyntheticEventCtor = SyntheticMouseEvent;
                            break;
                        case "drag":
                        case "dragend":
                        case "dragenter":
                        case "dragexit":
                        case "dragleave":
                        case "dragover":
                        case "dragstart":
                        case "drop":
                            SyntheticEventCtor = SyntheticDragEvent;
                            break;
                        case "touchcancel":
                        case "touchend":
                        case "touchmove":
                        case "touchstart":
                            SyntheticEventCtor = SyntheticTouchEvent;
                            break;
                        case ANIMATION_END:
                        case ANIMATION_ITERATION:
                        case ANIMATION_START:
                            SyntheticEventCtor = SyntheticAnimationEvent;
                            break;
                        case TRANSITION_END:
                            SyntheticEventCtor = SyntheticTransitionEvent;
                            break;
                        case "scroll":
                        case "scrollend":
                            SyntheticEventCtor = SyntheticUIEvent;
                            break;
                        case "wheel":
                            SyntheticEventCtor = SyntheticWheelEvent;
                            break;
                        case "copy":
                        case "cut":
                        case "paste":
                            SyntheticEventCtor = SyntheticClipboardEvent;
                            break;
                        case "gotpointercapture":
                        case "lostpointercapture":
                        case "pointercancel":
                        case "pointerdown":
                        case "pointermove":
                        case "pointerout":
                        case "pointerover":
                        case "pointerup":
                            SyntheticEventCtor = SyntheticPointerEvent;
                            break;
                        case "toggle":
                        case "beforetoggle":
                            SyntheticEventCtor = SyntheticToggleEvent;
                    }
                    var inCapturePhase = 0 !== (eventSystemFlags & 4), accumulateTargetOnly = !inCapturePhase && ("scroll" === domEventName || "scrollend" === domEventName), reactEventName = inCapturePhase ? null !== reactName ? reactName + "Capture" : null : reactName;
                    inCapturePhase = [];
                    for(var instance = targetInst, lastHostComponent; null !== instance;){
                        var _instance2 = instance;
                        lastHostComponent = _instance2.stateNode;
                        _instance2 = _instance2.tag;
                        5 !== _instance2 && 26 !== _instance2 && 27 !== _instance2 || null === lastHostComponent || null === reactEventName || (_instance2 = getListener(instance, reactEventName), null != _instance2 && inCapturePhase.push(createDispatchListener(instance, _instance2, lastHostComponent)));
                        if (accumulateTargetOnly) break;
                        instance = instance.return;
                    }
                    0 < inCapturePhase.length && (reactName = new SyntheticEventCtor(reactName, reactEventType, null, nativeEvent, nativeEventTarget), dispatchQueue.push({
                        event: reactName,
                        listeners: inCapturePhase
                    }));
                }
            }
            if (0 === (eventSystemFlags & 7)) {
                a: {
                    reactName = "mouseover" === domEventName || "pointerover" === domEventName;
                    SyntheticEventCtor = "mouseout" === domEventName || "pointerout" === domEventName;
                    if (reactName && nativeEvent !== currentReplayingEvent && (reactEventType = nativeEvent.relatedTarget || nativeEvent.fromElement) && (getClosestInstanceFromNode(reactEventType) || reactEventType[internalContainerInstanceKey])) break a;
                    if (SyntheticEventCtor || reactName) {
                        reactName = nativeEventTarget.window === nativeEventTarget ? nativeEventTarget : (reactName = nativeEventTarget.ownerDocument) ? reactName.defaultView || reactName.parentWindow : window;
                        if (SyntheticEventCtor) {
                            if (reactEventType = nativeEvent.relatedTarget || nativeEvent.toElement, SyntheticEventCtor = targetInst, reactEventType = reactEventType ? getClosestInstanceFromNode(reactEventType) : null, null !== reactEventType && (accumulateTargetOnly = getNearestMountedFiber(reactEventType), inCapturePhase = reactEventType.tag, reactEventType !== accumulateTargetOnly || 5 !== inCapturePhase && 27 !== inCapturePhase && 6 !== inCapturePhase)) reactEventType = null;
                        } else SyntheticEventCtor = null, reactEventType = targetInst;
                        if (SyntheticEventCtor !== reactEventType) {
                            inCapturePhase = SyntheticMouseEvent;
                            _instance2 = "onMouseLeave";
                            reactEventName = "onMouseEnter";
                            instance = "mouse";
                            if ("pointerout" === domEventName || "pointerover" === domEventName) inCapturePhase = SyntheticPointerEvent, _instance2 = "onPointerLeave", reactEventName = "onPointerEnter", instance = "pointer";
                            accumulateTargetOnly = null == SyntheticEventCtor ? reactName : getNodeFromInstance(SyntheticEventCtor);
                            lastHostComponent = null == reactEventType ? reactName : getNodeFromInstance(reactEventType);
                            reactName = new inCapturePhase(_instance2, instance + "leave", SyntheticEventCtor, nativeEvent, nativeEventTarget);
                            reactName.target = accumulateTargetOnly;
                            reactName.relatedTarget = lastHostComponent;
                            _instance2 = null;
                            getClosestInstanceFromNode(nativeEventTarget) === targetInst && (inCapturePhase = new inCapturePhase(reactEventName, instance + "enter", reactEventType, nativeEvent, nativeEventTarget), inCapturePhase.target = lastHostComponent, inCapturePhase.relatedTarget = accumulateTargetOnly, _instance2 = inCapturePhase);
                            accumulateTargetOnly = _instance2;
                            if (SyntheticEventCtor && reactEventType) b: {
                                inCapturePhase = SyntheticEventCtor;
                                reactEventName = reactEventType;
                                instance = 0;
                                for(lastHostComponent = inCapturePhase; lastHostComponent; lastHostComponent = getParent(lastHostComponent))instance++;
                                lastHostComponent = 0;
                                for(_instance2 = reactEventName; _instance2; _instance2 = getParent(_instance2))lastHostComponent++;
                                for(; 0 < instance - lastHostComponent;)inCapturePhase = getParent(inCapturePhase), instance--;
                                for(; 0 < lastHostComponent - instance;)reactEventName = getParent(reactEventName), lastHostComponent--;
                                for(; instance--;){
                                    if (inCapturePhase === reactEventName || null !== reactEventName && inCapturePhase === reactEventName.alternate) break b;
                                    inCapturePhase = getParent(inCapturePhase);
                                    reactEventName = getParent(reactEventName);
                                }
                                inCapturePhase = null;
                            }
                            else inCapturePhase = null;
                            null !== SyntheticEventCtor && accumulateEnterLeaveListenersForEvent(dispatchQueue, reactName, SyntheticEventCtor, inCapturePhase, !1);
                            null !== reactEventType && null !== accumulateTargetOnly && accumulateEnterLeaveListenersForEvent(dispatchQueue, accumulateTargetOnly, reactEventType, inCapturePhase, !0);
                        }
                    }
                }
                a: {
                    reactName = targetInst ? getNodeFromInstance(targetInst) : window;
                    SyntheticEventCtor = reactName.nodeName && reactName.nodeName.toLowerCase();
                    if ("select" === SyntheticEventCtor || "input" === SyntheticEventCtor && "file" === reactName.type) var getTargetInstFunc = getTargetInstForChangeEvent;
                    else if (isTextInputElement(reactName)) {
                        if (isInputEventSupported) getTargetInstFunc = getTargetInstForInputOrChangeEvent;
                        else {
                            getTargetInstFunc = getTargetInstForInputEventPolyfill;
                            var handleEventFunc = handleEventsForInputEventPolyfill;
                        }
                    } else SyntheticEventCtor = reactName.nodeName, !SyntheticEventCtor || "input" !== SyntheticEventCtor.toLowerCase() || "checkbox" !== reactName.type && "radio" !== reactName.type ? targetInst && isCustomElement(targetInst.elementType) && (getTargetInstFunc = getTargetInstForChangeEvent) : getTargetInstFunc = getTargetInstForClickEvent;
                    if (getTargetInstFunc && (getTargetInstFunc = getTargetInstFunc(domEventName, targetInst))) {
                        createAndAccumulateChangeEvent(dispatchQueue, getTargetInstFunc, nativeEvent, nativeEventTarget);
                        break a;
                    }
                    handleEventFunc && handleEventFunc(domEventName, reactName, targetInst);
                    "focusout" === domEventName && targetInst && "number" === reactName.type && null != targetInst.memoizedProps.value && setDefaultValue(reactName, "number", reactName.value);
                }
                handleEventFunc = targetInst ? getNodeFromInstance(targetInst) : window;
                switch(domEventName){
                    case "focusin":
                        if (isTextInputElement(handleEventFunc) || "true" === handleEventFunc.contentEditable) activeElement = handleEventFunc, activeElementInst = targetInst, lastSelection = null;
                        break;
                    case "focusout":
                        lastSelection = activeElementInst = activeElement = null;
                        break;
                    case "mousedown":
                        mouseDown = !0;
                        break;
                    case "contextmenu":
                    case "mouseup":
                    case "dragend":
                        mouseDown = !1;
                        constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
                        break;
                    case "selectionchange":
                        if (skipSelectionChangeEvent) break;
                    case "keydown":
                    case "keyup":
                        constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
                }
                var fallbackData;
                if (canUseCompositionEvent) b: {
                    switch(domEventName){
                        case "compositionstart":
                            var eventType = "onCompositionStart";
                            break b;
                        case "compositionend":
                            eventType = "onCompositionEnd";
                            break b;
                        case "compositionupdate":
                            eventType = "onCompositionUpdate";
                            break b;
                    }
                    eventType = void 0;
                }
                else isComposing ? isFallbackCompositionEnd(domEventName, nativeEvent) && (eventType = "onCompositionEnd") : "keydown" === domEventName && nativeEvent.keyCode === START_KEYCODE && (eventType = "onCompositionStart");
                eventType && (useFallbackCompositionData && "ko" !== nativeEvent.locale && (isComposing || "onCompositionStart" !== eventType ? "onCompositionEnd" === eventType && isComposing && (fallbackData = getData()) : (root = nativeEventTarget, startText = "value" in root ? root.value : root.textContent, isComposing = !0)), handleEventFunc = accumulateTwoPhaseListeners(targetInst, eventType), 0 < handleEventFunc.length && (eventType = new SyntheticCompositionEvent(eventType, domEventName, null, nativeEvent, nativeEventTarget), dispatchQueue.push({
                    event: eventType,
                    listeners: handleEventFunc
                }), fallbackData ? eventType.data = fallbackData : (fallbackData = getDataFromCustomEvent(nativeEvent), null !== fallbackData && (eventType.data = fallbackData))));
                if (fallbackData = canUseTextInputEvent ? getNativeBeforeInputChars(domEventName, nativeEvent) : getFallbackBeforeInputChars(domEventName, nativeEvent)) eventType = accumulateTwoPhaseListeners(targetInst, "onBeforeInput"), 0 < eventType.length && (handleEventFunc = new SyntheticInputEvent("onBeforeInput", "beforeinput", null, nativeEvent, nativeEventTarget), dispatchQueue.push({
                    event: handleEventFunc,
                    listeners: eventType
                }), handleEventFunc.data = fallbackData);
                extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
            }
            processDispatchQueue(dispatchQueue, eventSystemFlags);
        });
    }
    function createDispatchListener(instance, listener, currentTarget) {
        return {
            instance: instance,
            listener: listener,
            currentTarget: currentTarget
        };
    }
    function accumulateTwoPhaseListeners(targetFiber, reactName) {
        for(var captureName = reactName + "Capture", listeners = []; null !== targetFiber;){
            var _instance3 = targetFiber, stateNode = _instance3.stateNode;
            _instance3 = _instance3.tag;
            5 !== _instance3 && 26 !== _instance3 && 27 !== _instance3 || null === stateNode || (_instance3 = getListener(targetFiber, captureName), null != _instance3 && listeners.unshift(createDispatchListener(targetFiber, _instance3, stateNode)), _instance3 = getListener(targetFiber, reactName), null != _instance3 && listeners.push(createDispatchListener(targetFiber, _instance3, stateNode)));
            if (3 === targetFiber.tag) return listeners;
            targetFiber = targetFiber.return;
        }
        return [];
    }
    function getParent(inst) {
        if (null === inst) return null;
        do inst = inst.return;
        while (inst && 5 !== inst.tag && 27 !== inst.tag);
        return inst ? inst : null;
    }
    function accumulateEnterLeaveListenersForEvent(dispatchQueue, event, target, common, inCapturePhase) {
        for(var registrationName = event._reactName, listeners = []; null !== target && target !== common;){
            var _instance4 = target, alternate = _instance4.alternate, stateNode = _instance4.stateNode;
            _instance4 = _instance4.tag;
            if (null !== alternate && alternate === common) break;
            5 !== _instance4 && 26 !== _instance4 && 27 !== _instance4 || null === stateNode || (alternate = stateNode, inCapturePhase ? (stateNode = getListener(target, registrationName), null != stateNode && listeners.unshift(createDispatchListener(target, stateNode, alternate))) : inCapturePhase || (stateNode = getListener(target, registrationName), null != stateNode && listeners.push(createDispatchListener(target, stateNode, alternate))));
            target = target.return;
        }
        0 !== listeners.length && dispatchQueue.push({
            event: event,
            listeners: listeners
        });
    }
    function validatePropertiesInDevelopment(type, props) {
        validateProperties$2(type, props);
        "input" !== type && "textarea" !== type && "select" !== type || null == props || null !== props.value || didWarnValueNull || (didWarnValueNull = !0, "select" === type && props.multiple ? console.error("`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.", type) : console.error("`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.", type));
        var eventRegistry = {
            registrationNameDependencies: registrationNameDependencies,
            possibleRegistrationNames: possibleRegistrationNames
        };
        isCustomElement(type) || "string" === typeof props.is || warnUnknownProperties(type, props, eventRegistry);
        props.contentEditable && !props.suppressContentEditableWarning && null != props.children && console.error("A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional.");
    }
    function warnForPropDifference(propName, serverValue, clientValue, serverDifferences) {
        serverValue !== clientValue && (clientValue = normalizeMarkupForTextOrAttribute(clientValue), normalizeMarkupForTextOrAttribute(serverValue) !== clientValue && (serverDifferences[propName] = serverValue));
    }
    function warnForExtraAttributes(domElement, attributeNames, serverDifferences) {
        attributeNames.forEach(function(attributeName) {
            serverDifferences[getPropNameFromAttributeName(attributeName)] = "style" === attributeName ? getStylesObjectFromElement(domElement) : domElement.getAttribute(attributeName);
        });
    }
    function warnForInvalidEventListener(registrationName, listener) {
        !1 === listener ? console.error("Expected `%s` listener to be a function, instead got `false`.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.", registrationName, registrationName, registrationName) : console.error("Expected `%s` listener to be a function, instead got a value of `%s` type.", registrationName, typeof listener);
    }
    function normalizeHTML(parent, html) {
        parent = parent.namespaceURI === MATH_NAMESPACE || parent.namespaceURI === SVG_NAMESPACE ? parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName) : parent.ownerDocument.createElement(parent.tagName);
        parent.innerHTML = html;
        return parent.innerHTML;
    }
    function normalizeMarkupForTextOrAttribute(markup) {
        willCoercionThrow(markup) && (console.error("The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before using it here.", typeName(markup)), testStringCoercion(markup));
        return ("string" === typeof markup ? markup : "" + markup).replace(NORMALIZE_NEWLINES_REGEX, "\n").replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, "");
    }
    function checkForUnmatchedText(serverText, clientText) {
        clientText = normalizeMarkupForTextOrAttribute(clientText);
        return normalizeMarkupForTextOrAttribute(serverText) === clientText ? !0 : !1;
    }
    function noop$1() {}
    function setProp(domElement, tag, key, value, props, prevValue) {
        switch(key){
            case "children":
                if ("string" === typeof value) validateTextNesting(value, tag, !1), "body" === tag || "textarea" === tag && "" === value || setTextContent(domElement, value);
                else if ("number" === typeof value || "bigint" === typeof value) validateTextNesting("" + value, tag, !1), "body" !== tag && setTextContent(domElement, "" + value);
                break;
            case "className":
                setValueForKnownAttribute(domElement, "class", value);
                break;
            case "tabIndex":
                setValueForKnownAttribute(domElement, "tabindex", value);
                break;
            case "dir":
            case "role":
            case "viewBox":
            case "width":
            case "height":
                setValueForKnownAttribute(domElement, key, value);
                break;
            case "style":
                setValueForStyles(domElement, value, prevValue);
                break;
            case "data":
                if ("object" !== tag) {
                    setValueForKnownAttribute(domElement, "data", value);
                    break;
                }
            case "src":
            case "href":
                if ("" === value && ("a" !== tag || "href" !== key)) {
                    "src" === key ? console.error('An empty string ("") was passed to the %s attribute. This may cause the browser to download the whole page again over the network. To fix this, either do not render the element at all or pass null to %s instead of an empty string.', key, key) : console.error('An empty string ("") was passed to the %s attribute. To fix this, either do not render the element at all or pass null to %s instead of an empty string.', key, key);
                    domElement.removeAttribute(key);
                    break;
                }
                if (null == value || "function" === typeof value || "symbol" === typeof value || "boolean" === typeof value) {
                    domElement.removeAttribute(key);
                    break;
                }
                checkAttributeStringCoercion(value, key);
                value = sanitizeURL("" + value);
                domElement.setAttribute(key, value);
                break;
            case "action":
            case "formAction":
                null != value && ("form" === tag ? "formAction" === key ? console.error("You can only pass the formAction prop to <input> or <button>. Use the action prop on <form>.") : "function" === typeof value && (null == props.encType && null == props.method || didWarnFormActionMethod || (didWarnFormActionMethod = !0, console.error("Cannot specify a encType or method for a form that specifies a function as the action. React provides those automatically. They will get overridden.")), null == props.target || didWarnFormActionTarget || (didWarnFormActionTarget = !0, console.error("Cannot specify a target for a form that specifies a function as the action. The function will always be executed in the same window."))) : "input" === tag || "button" === tag ? "action" === key ? console.error("You can only pass the action prop to <form>. Use the formAction prop on <input> or <button>.") : "input" !== tag || "submit" === props.type || "image" === props.type || didWarnFormActionType ? "button" !== tag || null == props.type || "submit" === props.type || didWarnFormActionType ? "function" === typeof value && (null == props.name || didWarnFormActionName || (didWarnFormActionName = !0, console.error('Cannot specify a "name" prop for a button that specifies a function as a formAction. React needs it to encode which action should be invoked. It will get overridden.')), null == props.formEncType && null == props.formMethod || didWarnFormActionMethod || (didWarnFormActionMethod = !0, console.error("Cannot specify a formEncType or formMethod for a button that specifies a function as a formAction. React provides those automatically. They will get overridden.")), null == props.formTarget || didWarnFormActionTarget || (didWarnFormActionTarget = !0, console.error("Cannot specify a formTarget for a button that specifies a function as a formAction. The function will always be executed in the same window."))) : (didWarnFormActionType = !0, console.error('A button can only specify a formAction along with type="submit" or no type.')) : (didWarnFormActionType = !0, console.error('An input can only specify a formAction along with type="submit" or type="image".')) : "action" === key ? console.error("You can only pass the action prop to <form>.") : console.error("You can only pass the formAction prop to <input> or <button>."));
                if ("function" === typeof value) {
                    domElement.setAttribute(key, "javascript:throw new Error('A React form was unexpectedly submitted. If you called form.submit() manually, consider using form.requestSubmit() instead. If you\\'re trying to use event.stopPropagation() in a submit event handler, consider also calling event.preventDefault().')");
                    break;
                } else "function" === typeof prevValue && ("formAction" === key ? ("input" !== tag && setProp(domElement, tag, "name", props.name, props, null), setProp(domElement, tag, "formEncType", props.formEncType, props, null), setProp(domElement, tag, "formMethod", props.formMethod, props, null), setProp(domElement, tag, "formTarget", props.formTarget, props, null)) : (setProp(domElement, tag, "encType", props.encType, props, null), setProp(domElement, tag, "method", props.method, props, null), setProp(domElement, tag, "target", props.target, props, null)));
                if (null == value || "symbol" === typeof value || "boolean" === typeof value) {
                    domElement.removeAttribute(key);
                    break;
                }
                checkAttributeStringCoercion(value, key);
                value = sanitizeURL("" + value);
                domElement.setAttribute(key, value);
                break;
            case "onClick":
                null != value && ("function" !== typeof value && warnForInvalidEventListener(key, value), domElement.onclick = noop$1);
                break;
            case "onScroll":
                null != value && ("function" !== typeof value && warnForInvalidEventListener(key, value), listenToNonDelegatedEvent("scroll", domElement));
                break;
            case "onScrollEnd":
                null != value && ("function" !== typeof value && warnForInvalidEventListener(key, value), listenToNonDelegatedEvent("scrollend", domElement));
                break;
            case "dangerouslySetInnerHTML":
                if (null != value) {
                    if ("object" !== typeof value || !("__html" in value)) throw Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://react.dev/link/dangerously-set-inner-html for more information.");
                    key = value.__html;
                    if (null != key) {
                        if (null != props.children) throw Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
                        domElement.innerHTML = key;
                    }
                }
                break;
            case "multiple":
                domElement.multiple = value && "function" !== typeof value && "symbol" !== typeof value;
                break;
            case "muted":
                domElement.muted = value && "function" !== typeof value && "symbol" !== typeof value;
                break;
            case "suppressContentEditableWarning":
            case "suppressHydrationWarning":
            case "defaultValue":
            case "defaultChecked":
            case "innerHTML":
            case "ref":
                break;
            case "autoFocus":
                break;
            case "xlinkHref":
                if (null == value || "function" === typeof value || "boolean" === typeof value || "symbol" === typeof value) {
                    domElement.removeAttribute("xlink:href");
                    break;
                }
                checkAttributeStringCoercion(value, key);
                key = sanitizeURL("" + value);
                domElement.setAttributeNS(xlinkNamespace, "xlink:href", key);
                break;
            case "contentEditable":
            case "spellCheck":
            case "draggable":
            case "value":
            case "autoReverse":
            case "externalResourcesRequired":
            case "focusable":
            case "preserveAlpha":
                null != value && "function" !== typeof value && "symbol" !== typeof value ? (checkAttributeStringCoercion(value, key), domElement.setAttribute(key, "" + value)) : domElement.removeAttribute(key);
                break;
            case "inert":
                "" !== value || didWarnForNewBooleanPropsWithEmptyValue[key] || (didWarnForNewBooleanPropsWithEmptyValue[key] = !0, console.error("Received an empty string for a boolean attribute `%s`. This will treat the attribute as if it were false. Either pass `false` to silence this warning, or pass `true` if you used an empty string in earlier versions of React to indicate this attribute is true.", key));
            case "allowFullScreen":
            case "async":
            case "autoPlay":
            case "controls":
            case "default":
            case "defer":
            case "disabled":
            case "disablePictureInPicture":
            case "disableRemotePlayback":
            case "formNoValidate":
            case "hidden":
            case "loop":
            case "noModule":
            case "noValidate":
            case "open":
            case "playsInline":
            case "readOnly":
            case "required":
            case "reversed":
            case "scoped":
            case "seamless":
            case "itemScope":
                value && "function" !== typeof value && "symbol" !== typeof value ? domElement.setAttribute(key, "") : domElement.removeAttribute(key);
                break;
            case "capture":
            case "download":
                !0 === value ? domElement.setAttribute(key, "") : !1 !== value && null != value && "function" !== typeof value && "symbol" !== typeof value ? (checkAttributeStringCoercion(value, key), domElement.setAttribute(key, value)) : domElement.removeAttribute(key);
                break;
            case "cols":
            case "rows":
            case "size":
            case "span":
                null != value && "function" !== typeof value && "symbol" !== typeof value && !isNaN(value) && 1 <= value ? (checkAttributeStringCoercion(value, key), domElement.setAttribute(key, value)) : domElement.removeAttribute(key);
                break;
            case "rowSpan":
            case "start":
                null == value || "function" === typeof value || "symbol" === typeof value || isNaN(value) ? domElement.removeAttribute(key) : (checkAttributeStringCoercion(value, key), domElement.setAttribute(key, value));
                break;
            case "popover":
                listenToNonDelegatedEvent("beforetoggle", domElement);
                listenToNonDelegatedEvent("toggle", domElement);
                setValueForAttribute(domElement, "popover", value);
                break;
            case "xlinkActuate":
                setValueForNamespacedAttribute(domElement, xlinkNamespace, "xlink:actuate", value);
                break;
            case "xlinkArcrole":
                setValueForNamespacedAttribute(domElement, xlinkNamespace, "xlink:arcrole", value);
                break;
            case "xlinkRole":
                setValueForNamespacedAttribute(domElement, xlinkNamespace, "xlink:role", value);
                break;
            case "xlinkShow":
                setValueForNamespacedAttribute(domElement, xlinkNamespace, "xlink:show", value);
                break;
            case "xlinkTitle":
                setValueForNamespacedAttribute(domElement, xlinkNamespace, "xlink:title", value);
                break;
            case "xlinkType":
                setValueForNamespacedAttribute(domElement, xlinkNamespace, "xlink:type", value);
                break;
            case "xmlBase":
                setValueForNamespacedAttribute(domElement, xmlNamespace, "xml:base", value);
                break;
            case "xmlLang":
                setValueForNamespacedAttribute(domElement, xmlNamespace, "xml:lang", value);
                break;
            case "xmlSpace":
                setValueForNamespacedAttribute(domElement, xmlNamespace, "xml:space", value);
                break;
            case "is":
                null != prevValue && console.error('Cannot update the "is" prop after it has been initialized.');
                setValueForAttribute(domElement, "is", value);
                break;
            case "innerText":
            case "textContent":
                break;
            case "popoverTarget":
                didWarnPopoverTargetObject || null == value || "object" !== typeof value || (didWarnPopoverTargetObject = !0, console.error("The `popoverTarget` prop expects the ID of an Element as a string. Received %s instead.", value));
            default:
                !(2 < key.length) || "o" !== key[0] && "O" !== key[0] || "n" !== key[1] && "N" !== key[1] ? (key = getAttributeAlias(key), setValueForAttribute(domElement, key, value)) : registrationNameDependencies.hasOwnProperty(key) && null != value && "function" !== typeof value && warnForInvalidEventListener(key, value);
        }
    }
    function setPropOnCustomElement(domElement, tag, key, value, props, prevValue) {
        switch(key){
            case "style":
                setValueForStyles(domElement, value, prevValue);
                break;
            case "dangerouslySetInnerHTML":
                if (null != value) {
                    if ("object" !== typeof value || !("__html" in value)) throw Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://react.dev/link/dangerously-set-inner-html for more information.");
                    key = value.__html;
                    if (null != key) {
                        if (null != props.children) throw Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
                        domElement.innerHTML = key;
                    }
                }
                break;
            case "children":
                "string" === typeof value ? setTextContent(domElement, value) : ("number" === typeof value || "bigint" === typeof value) && setTextContent(domElement, "" + value);
                break;
            case "onScroll":
                null != value && ("function" !== typeof value && warnForInvalidEventListener(key, value), listenToNonDelegatedEvent("scroll", domElement));
                break;
            case "onScrollEnd":
                null != value && ("function" !== typeof value && warnForInvalidEventListener(key, value), listenToNonDelegatedEvent("scrollend", domElement));
                break;
            case "onClick":
                null != value && ("function" !== typeof value && warnForInvalidEventListener(key, value), domElement.onclick = noop$1);
                break;
            case "suppressContentEditableWarning":
            case "suppressHydrationWarning":
            case "innerHTML":
            case "ref":
                break;
            case "innerText":
            case "textContent":
                break;
            default:
                if (registrationNameDependencies.hasOwnProperty(key)) null != value && "function" !== typeof value && warnForInvalidEventListener(key, value);
                else a: {
                    if ("o" === key[0] && "n" === key[1] && (props = key.endsWith("Capture"), tag = key.slice(2, props ? key.length - 7 : void 0), prevValue = domElement[internalPropsKey] || null, prevValue = null != prevValue ? prevValue[key] : null, "function" === typeof prevValue && domElement.removeEventListener(tag, prevValue, props), "function" === typeof value)) {
                        "function" !== typeof prevValue && null !== prevValue && (key in domElement ? domElement[key] = null : domElement.hasAttribute(key) && domElement.removeAttribute(key));
                        domElement.addEventListener(tag, value, props);
                        break a;
                    }
                    key in domElement ? domElement[key] = value : !0 === value ? domElement.setAttribute(key, "") : setValueForAttribute(domElement, key, value);
                }
        }
    }
    function setInitialProperties(domElement, tag, props) {
        validatePropertiesInDevelopment(tag, props);
        switch(tag){
            case "div":
            case "span":
            case "svg":
            case "path":
            case "a":
            case "g":
            case "p":
            case "li":
                break;
            case "img":
                listenToNonDelegatedEvent("error", domElement);
                listenToNonDelegatedEvent("load", domElement);
                var hasSrc = !1, hasSrcSet = !1, propKey;
                for(propKey in props)if (props.hasOwnProperty(propKey)) {
                    var propValue = props[propKey];
                    if (null != propValue) switch(propKey){
                        case "src":
                            hasSrc = !0;
                            break;
                        case "srcSet":
                            hasSrcSet = !0;
                            break;
                        case "children":
                        case "dangerouslySetInnerHTML":
                            throw Error(tag + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
                        default:
                            setProp(domElement, tag, propKey, propValue, props, null);
                    }
                }
                hasSrcSet && setProp(domElement, tag, "srcSet", props.srcSet, props, null);
                hasSrc && setProp(domElement, tag, "src", props.src, props, null);
                return;
            case "input":
                checkControlledValueProps("input", props);
                listenToNonDelegatedEvent("invalid", domElement);
                var defaultValue = propKey = propValue = hasSrcSet = null, checked = null, defaultChecked = null;
                for(hasSrc in props)if (props.hasOwnProperty(hasSrc)) {
                    var _propValue = props[hasSrc];
                    if (null != _propValue) switch(hasSrc){
                        case "name":
                            hasSrcSet = _propValue;
                            break;
                        case "type":
                            propValue = _propValue;
                            break;
                        case "checked":
                            checked = _propValue;
                            break;
                        case "defaultChecked":
                            defaultChecked = _propValue;
                            break;
                        case "value":
                            propKey = _propValue;
                            break;
                        case "defaultValue":
                            defaultValue = _propValue;
                            break;
                        case "children":
                        case "dangerouslySetInnerHTML":
                            if (null != _propValue) throw Error(tag + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
                            break;
                        default:
                            setProp(domElement, tag, hasSrc, _propValue, props, null);
                    }
                }
                validateInputProps(domElement, props);
                initInput(domElement, propKey, defaultValue, checked, defaultChecked, propValue, hasSrcSet, !1);
                track(domElement);
                return;
            case "select":
                checkControlledValueProps("select", props);
                listenToNonDelegatedEvent("invalid", domElement);
                hasSrc = propValue = propKey = null;
                for(hasSrcSet in props)if (props.hasOwnProperty(hasSrcSet) && (defaultValue = props[hasSrcSet], null != defaultValue)) switch(hasSrcSet){
                    case "value":
                        propKey = defaultValue;
                        break;
                    case "defaultValue":
                        propValue = defaultValue;
                        break;
                    case "multiple":
                        hasSrc = defaultValue;
                    default:
                        setProp(domElement, tag, hasSrcSet, defaultValue, props, null);
                }
                validateSelectProps(domElement, props);
                tag = propKey;
                props = propValue;
                domElement.multiple = !!hasSrc;
                null != tag ? updateOptions(domElement, !!hasSrc, tag, !1) : null != props && updateOptions(domElement, !!hasSrc, props, !0);
                return;
            case "textarea":
                checkControlledValueProps("textarea", props);
                listenToNonDelegatedEvent("invalid", domElement);
                propKey = hasSrcSet = hasSrc = null;
                for(propValue in props)if (props.hasOwnProperty(propValue) && (defaultValue = props[propValue], null != defaultValue)) switch(propValue){
                    case "value":
                        hasSrc = defaultValue;
                        break;
                    case "defaultValue":
                        hasSrcSet = defaultValue;
                        break;
                    case "children":
                        propKey = defaultValue;
                        break;
                    case "dangerouslySetInnerHTML":
                        if (null != defaultValue) throw Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
                        break;
                    default:
                        setProp(domElement, tag, propValue, defaultValue, props, null);
                }
                validateTextareaProps(domElement, props);
                initTextarea(domElement, hasSrc, hasSrcSet, propKey);
                track(domElement);
                return;
            case "option":
                validateOptionProps(domElement, props);
                for(checked in props)if (props.hasOwnProperty(checked) && (hasSrc = props[checked], null != hasSrc)) switch(checked){
                    case "selected":
                        domElement.selected = hasSrc && "function" !== typeof hasSrc && "symbol" !== typeof hasSrc;
                        break;
                    default:
                        setProp(domElement, tag, checked, hasSrc, props, null);
                }
                return;
            case "dialog":
                listenToNonDelegatedEvent("beforetoggle", domElement);
                listenToNonDelegatedEvent("toggle", domElement);
                listenToNonDelegatedEvent("cancel", domElement);
                listenToNonDelegatedEvent("close", domElement);
                break;
            case "iframe":
            case "object":
                listenToNonDelegatedEvent("load", domElement);
                break;
            case "video":
            case "audio":
                for(hasSrc = 0; hasSrc < mediaEventTypes.length; hasSrc++)listenToNonDelegatedEvent(mediaEventTypes[hasSrc], domElement);
                break;
            case "image":
                listenToNonDelegatedEvent("error", domElement);
                listenToNonDelegatedEvent("load", domElement);
                break;
            case "details":
                listenToNonDelegatedEvent("toggle", domElement);
                break;
            case "embed":
            case "source":
            case "link":
                listenToNonDelegatedEvent("error", domElement), listenToNonDelegatedEvent("load", domElement);
            case "area":
            case "base":
            case "br":
            case "col":
            case "hr":
            case "keygen":
            case "meta":
            case "param":
            case "track":
            case "wbr":
            case "menuitem":
                for(defaultChecked in props)if (props.hasOwnProperty(defaultChecked) && (hasSrc = props[defaultChecked], null != hasSrc)) switch(defaultChecked){
                    case "children":
                    case "dangerouslySetInnerHTML":
                        throw Error(tag + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
                    default:
                        setProp(domElement, tag, defaultChecked, hasSrc, props, null);
                }
                return;
            default:
                if (isCustomElement(tag)) {
                    for(_propValue in props)props.hasOwnProperty(_propValue) && (hasSrc = props[_propValue], void 0 !== hasSrc && setPropOnCustomElement(domElement, tag, _propValue, hasSrc, props, void 0));
                    return;
                }
        }
        for(defaultValue in props)props.hasOwnProperty(defaultValue) && (hasSrc = props[defaultValue], null != hasSrc && setProp(domElement, tag, defaultValue, hasSrc, props, null));
    }
    function updateProperties(domElement, tag, lastProps, nextProps) {
        validatePropertiesInDevelopment(tag, nextProps);
        switch(tag){
            case "div":
            case "span":
            case "svg":
            case "path":
            case "a":
            case "g":
            case "p":
            case "li":
                break;
            case "input":
                var name = null, type = null, value = null, defaultValue = null, lastDefaultValue = null, checked = null, defaultChecked = null;
                for(propKey in lastProps){
                    var lastProp = lastProps[propKey];
                    if (lastProps.hasOwnProperty(propKey) && null != lastProp) switch(propKey){
                        case "checked":
                            break;
                        case "value":
                            break;
                        case "defaultValue":
                            lastDefaultValue = lastProp;
                        default:
                            nextProps.hasOwnProperty(propKey) || setProp(domElement, tag, propKey, null, nextProps, lastProp);
                    }
                }
                for(var _propKey8 in nextProps){
                    var propKey = nextProps[_propKey8];
                    lastProp = lastProps[_propKey8];
                    if (nextProps.hasOwnProperty(_propKey8) && (null != propKey || null != lastProp)) switch(_propKey8){
                        case "type":
                            type = propKey;
                            break;
                        case "name":
                            name = propKey;
                            break;
                        case "checked":
                            checked = propKey;
                            break;
                        case "defaultChecked":
                            defaultChecked = propKey;
                            break;
                        case "value":
                            value = propKey;
                            break;
                        case "defaultValue":
                            defaultValue = propKey;
                            break;
                        case "children":
                        case "dangerouslySetInnerHTML":
                            if (null != propKey) throw Error(tag + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
                            break;
                        default:
                            propKey !== lastProp && setProp(domElement, tag, _propKey8, propKey, nextProps, lastProp);
                    }
                }
                tag = "checkbox" === lastProps.type || "radio" === lastProps.type ? null != lastProps.checked : null != lastProps.value;
                nextProps = "checkbox" === nextProps.type || "radio" === nextProps.type ? null != nextProps.checked : null != nextProps.value;
                tag || !nextProps || didWarnUncontrolledToControlled || (console.error("A component is changing an uncontrolled input to be controlled. This is likely caused by the value changing from undefined to a defined value, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://react.dev/link/controlled-components"), didWarnUncontrolledToControlled = !0);
                !tag || nextProps || didWarnControlledToUncontrolled || (console.error("A component is changing a controlled input to be uncontrolled. This is likely caused by the value changing from a defined to undefined, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://react.dev/link/controlled-components"), didWarnControlledToUncontrolled = !0);
                updateInput(domElement, value, defaultValue, lastDefaultValue, checked, defaultChecked, type, name);
                return;
            case "select":
                propKey = value = defaultValue = _propKey8 = null;
                for(type in lastProps)if (lastDefaultValue = lastProps[type], lastProps.hasOwnProperty(type) && null != lastDefaultValue) switch(type){
                    case "value":
                        break;
                    case "multiple":
                        propKey = lastDefaultValue;
                    default:
                        nextProps.hasOwnProperty(type) || setProp(domElement, tag, type, null, nextProps, lastDefaultValue);
                }
                for(name in nextProps)if (type = nextProps[name], lastDefaultValue = lastProps[name], nextProps.hasOwnProperty(name) && (null != type || null != lastDefaultValue)) switch(name){
                    case "value":
                        _propKey8 = type;
                        break;
                    case "defaultValue":
                        defaultValue = type;
                        break;
                    case "multiple":
                        value = type;
                    default:
                        type !== lastDefaultValue && setProp(domElement, tag, name, type, nextProps, lastDefaultValue);
                }
                nextProps = defaultValue;
                tag = value;
                lastProps = propKey;
                null != _propKey8 ? updateOptions(domElement, !!tag, _propKey8, !1) : !!lastProps !== !!tag && (null != nextProps ? updateOptions(domElement, !!tag, nextProps, !0) : updateOptions(domElement, !!tag, tag ? [] : "", !1));
                return;
            case "textarea":
                propKey = _propKey8 = null;
                for(defaultValue in lastProps)if (name = lastProps[defaultValue], lastProps.hasOwnProperty(defaultValue) && null != name && !nextProps.hasOwnProperty(defaultValue)) switch(defaultValue){
                    case "value":
                        break;
                    case "children":
                        break;
                    default:
                        setProp(domElement, tag, defaultValue, null, nextProps, name);
                }
                for(value in nextProps)if (name = nextProps[value], type = lastProps[value], nextProps.hasOwnProperty(value) && (null != name || null != type)) switch(value){
                    case "value":
                        _propKey8 = name;
                        break;
                    case "defaultValue":
                        propKey = name;
                        break;
                    case "children":
                        break;
                    case "dangerouslySetInnerHTML":
                        if (null != name) throw Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
                        break;
                    default:
                        name !== type && setProp(domElement, tag, value, name, nextProps, type);
                }
                updateTextarea(domElement, _propKey8, propKey);
                return;
            case "option":
                for(var _propKey13 in lastProps)if (_propKey8 = lastProps[_propKey13], lastProps.hasOwnProperty(_propKey13) && null != _propKey8 && !nextProps.hasOwnProperty(_propKey13)) switch(_propKey13){
                    case "selected":
                        domElement.selected = !1;
                        break;
                    default:
                        setProp(domElement, tag, _propKey13, null, nextProps, _propKey8);
                }
                for(lastDefaultValue in nextProps)if (_propKey8 = nextProps[lastDefaultValue], propKey = lastProps[lastDefaultValue], nextProps.hasOwnProperty(lastDefaultValue) && _propKey8 !== propKey && (null != _propKey8 || null != propKey)) switch(lastDefaultValue){
                    case "selected":
                        domElement.selected = _propKey8 && "function" !== typeof _propKey8 && "symbol" !== typeof _propKey8;
                        break;
                    default:
                        setProp(domElement, tag, lastDefaultValue, _propKey8, nextProps, propKey);
                }
                return;
            case "img":
            case "link":
            case "area":
            case "base":
            case "br":
            case "col":
            case "embed":
            case "hr":
            case "keygen":
            case "meta":
            case "param":
            case "source":
            case "track":
            case "wbr":
            case "menuitem":
                for(var _propKey15 in lastProps)_propKey8 = lastProps[_propKey15], lastProps.hasOwnProperty(_propKey15) && null != _propKey8 && !nextProps.hasOwnProperty(_propKey15) && setProp(domElement, tag, _propKey15, null, nextProps, _propKey8);
                for(checked in nextProps)if (_propKey8 = nextProps[checked], propKey = lastProps[checked], nextProps.hasOwnProperty(checked) && _propKey8 !== propKey && (null != _propKey8 || null != propKey)) switch(checked){
                    case "children":
                    case "dangerouslySetInnerHTML":
                        if (null != _propKey8) throw Error(tag + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
                        break;
                    default:
                        setProp(domElement, tag, checked, _propKey8, nextProps, propKey);
                }
                return;
            default:
                if (isCustomElement(tag)) {
                    for(var _propKey17 in lastProps)_propKey8 = lastProps[_propKey17], lastProps.hasOwnProperty(_propKey17) && void 0 !== _propKey8 && !nextProps.hasOwnProperty(_propKey17) && setPropOnCustomElement(domElement, tag, _propKey17, void 0, nextProps, _propKey8);
                    for(defaultChecked in nextProps)_propKey8 = nextProps[defaultChecked], propKey = lastProps[defaultChecked], !nextProps.hasOwnProperty(defaultChecked) || _propKey8 === propKey || void 0 === _propKey8 && void 0 === propKey || setPropOnCustomElement(domElement, tag, defaultChecked, _propKey8, nextProps, propKey);
                    return;
                }
        }
        for(var _propKey19 in lastProps)_propKey8 = lastProps[_propKey19], lastProps.hasOwnProperty(_propKey19) && null != _propKey8 && !nextProps.hasOwnProperty(_propKey19) && setProp(domElement, tag, _propKey19, null, nextProps, _propKey8);
        for(lastProp in nextProps)_propKey8 = nextProps[lastProp], propKey = lastProps[lastProp], !nextProps.hasOwnProperty(lastProp) || _propKey8 === propKey || null == _propKey8 && null == propKey || setProp(domElement, tag, lastProp, _propKey8, nextProps, propKey);
    }
    function getPropNameFromAttributeName(attrName) {
        switch(attrName){
            case "class":
                return "className";
            case "for":
                return "htmlFor";
            default:
                return attrName;
        }
    }
    function getStylesObjectFromElement(domElement) {
        var serverValueInObjectForm = {};
        domElement = domElement.style;
        for(var i = 0; i < domElement.length; i++){
            var styleName = domElement[i];
            serverValueInObjectForm[styleName] = domElement.getPropertyValue(styleName);
        }
        return serverValueInObjectForm;
    }
    function diffHydratedStyles(domElement, value$jscomp$0, serverDifferences) {
        if (null != value$jscomp$0 && "object" !== typeof value$jscomp$0) console.error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
        else {
            var clientValue;
            var delimiter = clientValue = "", styleName;
            for(styleName in value$jscomp$0)if (value$jscomp$0.hasOwnProperty(styleName)) {
                var value = value$jscomp$0[styleName];
                null != value && "boolean" !== typeof value && "" !== value && (0 === styleName.indexOf("--") ? (checkCSSPropertyStringCoercion(value, styleName), clientValue += delimiter + styleName + ":" + ("" + value).trim()) : "number" !== typeof value || 0 === value || unitlessNumbers.has(styleName) ? (checkCSSPropertyStringCoercion(value, styleName), clientValue += delimiter + styleName.replace(uppercasePattern, "-$1").toLowerCase().replace(msPattern$1, "-ms-") + ":" + ("" + value).trim()) : clientValue += delimiter + styleName.replace(uppercasePattern, "-$1").toLowerCase().replace(msPattern$1, "-ms-") + ":" + value + "px", delimiter = ";");
            }
            clientValue = clientValue || null;
            value$jscomp$0 = domElement.getAttribute("style");
            value$jscomp$0 !== clientValue && (clientValue = normalizeMarkupForTextOrAttribute(clientValue), normalizeMarkupForTextOrAttribute(value$jscomp$0) !== clientValue && (serverDifferences.style = getStylesObjectFromElement(domElement)));
        }
    }
    function hydrateAttribute(domElement, propKey, attributeName, value, extraAttributes, serverDifferences) {
        extraAttributes.delete(attributeName);
        domElement = domElement.getAttribute(attributeName);
        if (null === domElement) switch(typeof value){
            case "undefined":
            case "function":
            case "symbol":
            case "boolean":
                return;
        }
        else if (null != value) switch(typeof value){
            case "function":
            case "symbol":
            case "boolean":
                break;
            default:
                if (checkAttributeStringCoercion(value, propKey), domElement === "" + value) return;
        }
        warnForPropDifference(propKey, domElement, value, serverDifferences);
    }
    function hydrateBooleanAttribute(domElement, propKey, attributeName, value, extraAttributes, serverDifferences) {
        extraAttributes.delete(attributeName);
        domElement = domElement.getAttribute(attributeName);
        if (null === domElement) {
            switch(typeof value){
                case "function":
                case "symbol":
                    return;
            }
            if (!value) return;
        } else switch(typeof value){
            case "function":
            case "symbol":
                break;
            default:
                if (value) return;
        }
        warnForPropDifference(propKey, domElement, value, serverDifferences);
    }
    function hydrateBooleanishAttribute(domElement, propKey, attributeName, value, extraAttributes, serverDifferences) {
        extraAttributes.delete(attributeName);
        domElement = domElement.getAttribute(attributeName);
        if (null === domElement) switch(typeof value){
            case "undefined":
            case "function":
            case "symbol":
                return;
        }
        else if (null != value) switch(typeof value){
            case "function":
            case "symbol":
                break;
            default:
                if (checkAttributeStringCoercion(value, attributeName), domElement === "" + value) return;
        }
        warnForPropDifference(propKey, domElement, value, serverDifferences);
    }
    function hydrateNumericAttribute(domElement, propKey, attributeName, value, extraAttributes, serverDifferences) {
        extraAttributes.delete(attributeName);
        domElement = domElement.getAttribute(attributeName);
        if (null === domElement) switch(typeof value){
            case "undefined":
            case "function":
            case "symbol":
            case "boolean":
                return;
            default:
                if (isNaN(value)) return;
        }
        else if (null != value) switch(typeof value){
            case "function":
            case "symbol":
            case "boolean":
                break;
            default:
                if (!isNaN(value) && (checkAttributeStringCoercion(value, propKey), domElement === "" + value)) return;
        }
        warnForPropDifference(propKey, domElement, value, serverDifferences);
    }
    function hydrateSanitizedAttribute(domElement, propKey, attributeName, value, extraAttributes, serverDifferences) {
        extraAttributes.delete(attributeName);
        domElement = domElement.getAttribute(attributeName);
        if (null === domElement) switch(typeof value){
            case "undefined":
            case "function":
            case "symbol":
            case "boolean":
                return;
        }
        else if (null != value) switch(typeof value){
            case "function":
            case "symbol":
            case "boolean":
                break;
            default:
                if (checkAttributeStringCoercion(value, propKey), attributeName = sanitizeURL("" + value), domElement === attributeName) return;
        }
        warnForPropDifference(propKey, domElement, value, serverDifferences);
    }
    function diffHydratedProperties(domElement, tag, props, hostContext) {
        for(var serverDifferences = {}, extraAttributes = new Set(), attributes = domElement.attributes, i = 0; i < attributes.length; i++)switch(attributes[i].name.toLowerCase()){
            case "value":
                break;
            case "checked":
                break;
            case "selected":
                break;
            default:
                extraAttributes.add(attributes[i].name);
        }
        if (isCustomElement(tag)) {
            for(var propKey in props)if (props.hasOwnProperty(propKey)) {
                var value = props[propKey];
                if (null != value) {
                    if (registrationNameDependencies.hasOwnProperty(propKey)) "function" !== typeof value && warnForInvalidEventListener(propKey, value);
                    else if (!0 !== props.suppressHydrationWarning) switch(propKey){
                        case "children":
                            "string" !== typeof value && "number" !== typeof value || warnForPropDifference("children", domElement.textContent, value, serverDifferences);
                            continue;
                        case "suppressContentEditableWarning":
                        case "suppressHydrationWarning":
                        case "defaultValue":
                        case "defaultChecked":
                        case "innerHTML":
                        case "ref":
                            continue;
                        case "dangerouslySetInnerHTML":
                            attributes = domElement.innerHTML;
                            value = value ? value.__html : void 0;
                            null != value && (value = normalizeHTML(domElement, value), warnForPropDifference(propKey, attributes, value, serverDifferences));
                            continue;
                        case "style":
                            extraAttributes.delete(propKey);
                            diffHydratedStyles(domElement, value, serverDifferences);
                            continue;
                        case "offsetParent":
                        case "offsetTop":
                        case "offsetLeft":
                        case "offsetWidth":
                        case "offsetHeight":
                        case "isContentEditable":
                        case "outerText":
                        case "outerHTML":
                            extraAttributes.delete(propKey.toLowerCase());
                            console.error("Assignment to read-only property will result in a no-op: `%s`", propKey);
                            continue;
                        case "className":
                            extraAttributes.delete("class");
                            attributes = getValueForAttributeOnCustomComponent(domElement, "class", value);
                            warnForPropDifference("className", attributes, value, serverDifferences);
                            continue;
                        default:
                            hostContext.context === HostContextNamespaceNone && "svg" !== tag && "math" !== tag ? extraAttributes.delete(propKey.toLowerCase()) : extraAttributes.delete(propKey), attributes = getValueForAttributeOnCustomComponent(domElement, propKey, value), warnForPropDifference(propKey, attributes, value, serverDifferences);
                    }
                }
            }
        } else for(value in props)if (props.hasOwnProperty(value) && (propKey = props[value], null != propKey)) {
            if (registrationNameDependencies.hasOwnProperty(value)) "function" !== typeof propKey && warnForInvalidEventListener(value, propKey);
            else if (!0 !== props.suppressHydrationWarning) switch(value){
                case "children":
                    "string" !== typeof propKey && "number" !== typeof propKey || warnForPropDifference("children", domElement.textContent, propKey, serverDifferences);
                    continue;
                case "suppressContentEditableWarning":
                case "suppressHydrationWarning":
                case "value":
                case "checked":
                case "selected":
                case "defaultValue":
                case "defaultChecked":
                case "innerHTML":
                case "ref":
                    continue;
                case "dangerouslySetInnerHTML":
                    attributes = domElement.innerHTML;
                    propKey = propKey ? propKey.__html : void 0;
                    null != propKey && (propKey = normalizeHTML(domElement, propKey), attributes !== propKey && (serverDifferences[value] = {
                        __html: attributes
                    }));
                    continue;
                case "className":
                    hydrateAttribute(domElement, value, "class", propKey, extraAttributes, serverDifferences);
                    continue;
                case "tabIndex":
                    hydrateAttribute(domElement, value, "tabindex", propKey, extraAttributes, serverDifferences);
                    continue;
                case "style":
                    extraAttributes.delete(value);
                    diffHydratedStyles(domElement, propKey, serverDifferences);
                    continue;
                case "multiple":
                    extraAttributes.delete(value);
                    warnForPropDifference(value, domElement.multiple, propKey, serverDifferences);
                    continue;
                case "muted":
                    extraAttributes.delete(value);
                    warnForPropDifference(value, domElement.muted, propKey, serverDifferences);
                    continue;
                case "autoFocus":
                    extraAttributes.delete("autofocus");
                    warnForPropDifference(value, domElement.autofocus, propKey, serverDifferences);
                    continue;
                case "data":
                    if ("object" !== tag) {
                        extraAttributes.delete(value);
                        attributes = domElement.getAttribute("data");
                        warnForPropDifference(value, attributes, propKey, serverDifferences);
                        continue;
                    }
                case "src":
                case "href":
                    if (!("" !== propKey || "a" === tag && "href" === value || "object" === tag && "data" === value)) {
                        "src" === value ? console.error('An empty string ("") was passed to the %s attribute. This may cause the browser to download the whole page again over the network. To fix this, either do not render the element at all or pass null to %s instead of an empty string.', value, value) : console.error('An empty string ("") was passed to the %s attribute. To fix this, either do not render the element at all or pass null to %s instead of an empty string.', value, value);
                        continue;
                    }
                    hydrateSanitizedAttribute(domElement, value, value, propKey, extraAttributes, serverDifferences);
                    continue;
                case "action":
                case "formAction":
                    attributes = domElement.getAttribute(value);
                    if ("function" === typeof propKey) {
                        extraAttributes.delete(value.toLowerCase());
                        "formAction" === value ? (extraAttributes.delete("name"), extraAttributes.delete("formenctype"), extraAttributes.delete("formmethod"), extraAttributes.delete("formtarget")) : (extraAttributes.delete("enctype"), extraAttributes.delete("method"), extraAttributes.delete("target"));
                        continue;
                    } else if (attributes === EXPECTED_FORM_ACTION_URL) {
                        extraAttributes.delete(value.toLowerCase());
                        warnForPropDifference(value, "function", propKey, serverDifferences);
                        continue;
                    }
                    hydrateSanitizedAttribute(domElement, value, value.toLowerCase(), propKey, extraAttributes, serverDifferences);
                    continue;
                case "xlinkHref":
                    hydrateSanitizedAttribute(domElement, value, "xlink:href", propKey, extraAttributes, serverDifferences);
                    continue;
                case "contentEditable":
                    hydrateBooleanishAttribute(domElement, value, "contenteditable", propKey, extraAttributes, serverDifferences);
                    continue;
                case "spellCheck":
                    hydrateBooleanishAttribute(domElement, value, "spellcheck", propKey, extraAttributes, serverDifferences);
                    continue;
                case "draggable":
                case "autoReverse":
                case "externalResourcesRequired":
                case "focusable":
                case "preserveAlpha":
                    hydrateBooleanishAttribute(domElement, value, value, propKey, extraAttributes, serverDifferences);
                    continue;
                case "allowFullScreen":
                case "async":
                case "autoPlay":
                case "controls":
                case "default":
                case "defer":
                case "disabled":
                case "disablePictureInPicture":
                case "disableRemotePlayback":
                case "formNoValidate":
                case "hidden":
                case "loop":
                case "noModule":
                case "noValidate":
                case "open":
                case "playsInline":
                case "readOnly":
                case "required":
                case "reversed":
                case "scoped":
                case "seamless":
                case "itemScope":
                    hydrateBooleanAttribute(domElement, value, value.toLowerCase(), propKey, extraAttributes, serverDifferences);
                    continue;
                case "capture":
                case "download":
                    a: {
                        i = domElement;
                        var attributeName = attributes = value, serverDifferences$jscomp$0 = serverDifferences;
                        extraAttributes.delete(attributeName);
                        i = i.getAttribute(attributeName);
                        if (null === i) switch(typeof propKey){
                            case "undefined":
                            case "function":
                            case "symbol":
                                break a;
                            default:
                                if (!1 === propKey) break a;
                        }
                        else if (null != propKey) switch(typeof propKey){
                            case "function":
                            case "symbol":
                                break;
                            case "boolean":
                                if (!0 === propKey && "" === i) break a;
                                break;
                            default:
                                if (checkAttributeStringCoercion(propKey, attributes), i === "" + propKey) break a;
                        }
                        warnForPropDifference(attributes, i, propKey, serverDifferences$jscomp$0);
                    }
                    continue;
                case "cols":
                case "rows":
                case "size":
                case "span":
                    a: {
                        i = domElement;
                        attributeName = attributes = value;
                        serverDifferences$jscomp$0 = serverDifferences;
                        extraAttributes.delete(attributeName);
                        i = i.getAttribute(attributeName);
                        if (null === i) switch(typeof propKey){
                            case "undefined":
                            case "function":
                            case "symbol":
                            case "boolean":
                                break a;
                            default:
                                if (isNaN(propKey) || 1 > propKey) break a;
                        }
                        else if (null != propKey) switch(typeof propKey){
                            case "function":
                            case "symbol":
                            case "boolean":
                                break;
                            default:
                                if (!(isNaN(propKey) || 1 > propKey) && (checkAttributeStringCoercion(propKey, attributes), i === "" + propKey)) break a;
                        }
                        warnForPropDifference(attributes, i, propKey, serverDifferences$jscomp$0);
                    }
                    continue;
                case "rowSpan":
                    hydrateNumericAttribute(domElement, value, "rowspan", propKey, extraAttributes, serverDifferences);
                    continue;
                case "start":
                    hydrateNumericAttribute(domElement, value, value, propKey, extraAttributes, serverDifferences);
                    continue;
                case "xHeight":
                    hydrateAttribute(domElement, value, "x-height", propKey, extraAttributes, serverDifferences);
                    continue;
                case "xlinkActuate":
                    hydrateAttribute(domElement, value, "xlink:actuate", propKey, extraAttributes, serverDifferences);
                    continue;
                case "xlinkArcrole":
                    hydrateAttribute(domElement, value, "xlink:arcrole", propKey, extraAttributes, serverDifferences);
                    continue;
                case "xlinkRole":
                    hydrateAttribute(domElement, value, "xlink:role", propKey, extraAttributes, serverDifferences);
                    continue;
                case "xlinkShow":
                    hydrateAttribute(domElement, value, "xlink:show", propKey, extraAttributes, serverDifferences);
                    continue;
                case "xlinkTitle":
                    hydrateAttribute(domElement, value, "xlink:title", propKey, extraAttributes, serverDifferences);
                    continue;
                case "xlinkType":
                    hydrateAttribute(domElement, value, "xlink:type", propKey, extraAttributes, serverDifferences);
                    continue;
                case "xmlBase":
                    hydrateAttribute(domElement, value, "xml:base", propKey, extraAttributes, serverDifferences);
                    continue;
                case "xmlLang":
                    hydrateAttribute(domElement, value, "xml:lang", propKey, extraAttributes, serverDifferences);
                    continue;
                case "xmlSpace":
                    hydrateAttribute(domElement, value, "xml:space", propKey, extraAttributes, serverDifferences);
                    continue;
                case "inert":
                    "" !== propKey || didWarnForNewBooleanPropsWithEmptyValue[value] || (didWarnForNewBooleanPropsWithEmptyValue[value] = !0, console.error("Received an empty string for a boolean attribute `%s`. This will treat the attribute as if it were false. Either pass `false` to silence this warning, or pass `true` if you used an empty string in earlier versions of React to indicate this attribute is true.", value));
                    hydrateBooleanAttribute(domElement, value, value, propKey, extraAttributes, serverDifferences);
                    continue;
                default:
                    if (!(2 < value.length) || "o" !== value[0] && "O" !== value[0] || "n" !== value[1] && "N" !== value[1]) {
                        i = getAttributeAlias(value);
                        attributes = !1;
                        hostContext.context === HostContextNamespaceNone && "svg" !== tag && "math" !== tag ? extraAttributes.delete(i.toLowerCase()) : (attributeName = value.toLowerCase(), attributeName = possibleStandardNames.hasOwnProperty(attributeName) ? possibleStandardNames[attributeName] || null : null, null !== attributeName && attributeName !== value && (attributes = !0, extraAttributes.delete(attributeName)), extraAttributes.delete(i));
                        a: if (attributeName = domElement, serverDifferences$jscomp$0 = i, i = propKey, isAttributeNameSafe(serverDifferences$jscomp$0)) {
                            if (attributeName.hasAttribute(serverDifferences$jscomp$0)) attributeName = attributeName.getAttribute(serverDifferences$jscomp$0), checkAttributeStringCoercion(i, serverDifferences$jscomp$0), i = attributeName === "" + i ? i : attributeName;
                            else {
                                switch(typeof i){
                                    case "function":
                                    case "symbol":
                                        break a;
                                    case "boolean":
                                        if (attributeName = serverDifferences$jscomp$0.toLowerCase().slice(0, 5), "data-" !== attributeName && "aria-" !== attributeName) break a;
                                }
                                i = void 0 === i ? void 0 : null;
                            }
                        } else i = void 0;
                        attributes || warnForPropDifference(value, i, propKey, serverDifferences);
                    }
            }
        }
        0 < extraAttributes.size && !0 !== props.suppressHydrationWarning && warnForExtraAttributes(domElement, extraAttributes, serverDifferences);
        return 0 === Object.keys(serverDifferences).length ? null : serverDifferences;
    }
    function propNamesListJoin(list, combinator) {
        switch(list.length){
            case 0:
                return "";
            case 1:
                return list[0];
            case 2:
                return list[0] + " " + combinator + " " + list[1];
            default:
                return list.slice(0, -1).join(", ") + ", " + combinator + " " + list[list.length - 1];
        }
    }
    function getOwnerDocumentFromRootContainer(rootContainerElement) {
        return 9 === rootContainerElement.nodeType ? rootContainerElement : rootContainerElement.ownerDocument;
    }
    function getOwnHostContext(namespaceURI) {
        switch(namespaceURI){
            case SVG_NAMESPACE:
                return HostContextNamespaceSvg;
            case MATH_NAMESPACE:
                return HostContextNamespaceMath;
            default:
                return HostContextNamespaceNone;
        }
    }
    function getChildHostContextProd(parentNamespace, type) {
        if (parentNamespace === HostContextNamespaceNone) switch(type){
            case "svg":
                return HostContextNamespaceSvg;
            case "math":
                return HostContextNamespaceMath;
            default:
                return HostContextNamespaceNone;
        }
        return parentNamespace === HostContextNamespaceSvg && "foreignObject" === type ? HostContextNamespaceNone : parentNamespace;
    }
    function shouldSetTextContent(type, props) {
        return "textarea" === type || "noscript" === type || "string" === typeof props.children || "number" === typeof props.children || "bigint" === typeof props.children || "object" === typeof props.dangerouslySetInnerHTML && null !== props.dangerouslySetInnerHTML && null != props.dangerouslySetInnerHTML.__html;
    }
    function shouldAttemptEagerTransition() {
        var event = window.event;
        if (event && "popstate" === event.type) {
            if (event === currentPopstateTransitionEvent) return !1;
            currentPopstateTransitionEvent = event;
            return !0;
        }
        currentPopstateTransitionEvent = null;
        return !1;
    }
    function handleErrorInNextTick(error) {
        setTimeout(function() {
            throw error;
        });
    }
    function commitMount(domElement, type, newProps) {
        switch(type){
            case "button":
            case "input":
            case "select":
            case "textarea":
                newProps.autoFocus && domElement.focus();
                break;
            case "img":
                newProps.src ? domElement.src = newProps.src : newProps.srcSet && (domElement.srcset = newProps.srcSet);
        }
    }
    function commitUpdate(domElement, type, oldProps, newProps) {
        updateProperties(domElement, type, oldProps, newProps);
        domElement[internalPropsKey] = newProps;
    }
    function resetTextContent(domElement) {
        setTextContent(domElement, "");
    }
    function commitTextUpdate(textInstance, oldText, newText) {
        textInstance.nodeValue = newText;
    }
    function isSingletonScope(type) {
        return "head" === type;
    }
    function removeChild(parentInstance, child) {
        parentInstance.removeChild(child);
    }
    function removeChildFromContainer(container, child) {
        (9 === container.nodeType ? container.body : "HTML" === container.nodeName ? container.ownerDocument.body : container).removeChild(child);
    }
    function clearSuspenseBoundary(parentInstance, suspenseInstance) {
        var node = suspenseInstance, possiblePreambleContribution = 0, depth = 0;
        do {
            var nextNode = node.nextSibling;
            parentInstance.removeChild(node);
            if (nextNode && 8 === nextNode.nodeType) {
                if (node = nextNode.data, node === SUSPENSE_END_DATA) {
                    if (0 < possiblePreambleContribution && 8 > possiblePreambleContribution) {
                        node = possiblePreambleContribution;
                        var ownerDocument = parentInstance.ownerDocument;
                        node & PREAMBLE_CONTRIBUTION_HTML && releaseSingletonInstance(ownerDocument.documentElement);
                        node & PREAMBLE_CONTRIBUTION_BODY && releaseSingletonInstance(ownerDocument.body);
                        if (node & PREAMBLE_CONTRIBUTION_HEAD) for(node = ownerDocument.head, releaseSingletonInstance(node), ownerDocument = node.firstChild; ownerDocument;){
                            var nextNode$jscomp$0 = ownerDocument.nextSibling, nodeName = ownerDocument.nodeName;
                            ownerDocument[internalHoistableMarker] || "SCRIPT" === nodeName || "STYLE" === nodeName || "LINK" === nodeName && "stylesheet" === ownerDocument.rel.toLowerCase() || node.removeChild(ownerDocument);
                            ownerDocument = nextNode$jscomp$0;
                        }
                    }
                    if (0 === depth) {
                        parentInstance.removeChild(nextNode);
                        retryIfBlockedOn(suspenseInstance);
                        return;
                    }
                    depth--;
                } else node === SUSPENSE_START_DATA || node === SUSPENSE_PENDING_START_DATA || node === SUSPENSE_FALLBACK_START_DATA ? depth++ : possiblePreambleContribution = node.charCodeAt(0) - 48;
            } else possiblePreambleContribution = 0;
            node = nextNode;
        }while (node);
        retryIfBlockedOn(suspenseInstance);
    }
    function hideInstance(instance) {
        instance = instance.style;
        "function" === typeof instance.setProperty ? instance.setProperty("display", "none", "important") : instance.display = "none";
    }
    function hideTextInstance(textInstance) {
        textInstance.nodeValue = "";
    }
    function unhideInstance(instance, props) {
        props = props[STYLE];
        props = void 0 !== props && null !== props && props.hasOwnProperty("display") ? props.display : null;
        instance.style.display = null == props || "boolean" === typeof props ? "" : ("" + props).trim();
    }
    function unhideTextInstance(textInstance, text) {
        textInstance.nodeValue = text;
    }
    function clearContainerSparingly(container) {
        var nextNode = container.firstChild;
        nextNode && 10 === nextNode.nodeType && (nextNode = nextNode.nextSibling);
        for(; nextNode;){
            var node = nextNode;
            nextNode = nextNode.nextSibling;
            switch(node.nodeName){
                case "HTML":
                case "HEAD":
                case "BODY":
                    clearContainerSparingly(node);
                    detachDeletedInstance(node);
                    continue;
                case "SCRIPT":
                case "STYLE":
                    continue;
                case "LINK":
                    if ("stylesheet" === node.rel.toLowerCase()) continue;
            }
            container.removeChild(node);
        }
    }
    function canHydrateInstance(instance, type, props, inRootOrSingleton) {
        for(; 1 === instance.nodeType;){
            var anyProps = props;
            if (instance.nodeName.toLowerCase() !== type.toLowerCase()) {
                if (!inRootOrSingleton && ("INPUT" !== instance.nodeName || "hidden" !== instance.type)) break;
            } else if (!inRootOrSingleton) {
                if ("input" === type && "hidden" === instance.type) {
                    checkAttributeStringCoercion(anyProps.name, "name");
                    var name = null == anyProps.name ? null : "" + anyProps.name;
                    if ("hidden" === anyProps.type && instance.getAttribute("name") === name) return instance;
                } else return instance;
            } else if (!instance[internalHoistableMarker]) switch(type){
                case "meta":
                    if (!instance.hasAttribute("itemprop")) break;
                    return instance;
                case "link":
                    name = instance.getAttribute("rel");
                    if ("stylesheet" === name && instance.hasAttribute("data-precedence")) break;
                    else if (name !== anyProps.rel || instance.getAttribute("href") !== (null == anyProps.href || "" === anyProps.href ? null : anyProps.href) || instance.getAttribute("crossorigin") !== (null == anyProps.crossOrigin ? null : anyProps.crossOrigin) || instance.getAttribute("title") !== (null == anyProps.title ? null : anyProps.title)) break;
                    return instance;
                case "style":
                    if (instance.hasAttribute("data-precedence")) break;
                    return instance;
                case "script":
                    name = instance.getAttribute("src");
                    if ((name !== (null == anyProps.src ? null : anyProps.src) || instance.getAttribute("type") !== (null == anyProps.type ? null : anyProps.type) || instance.getAttribute("crossorigin") !== (null == anyProps.crossOrigin ? null : anyProps.crossOrigin)) && name && instance.hasAttribute("async") && !instance.hasAttribute("itemprop")) break;
                    return instance;
                default:
                    return instance;
            }
            instance = getNextHydratable(instance.nextSibling);
            if (null === instance) break;
        }
        return null;
    }
    function canHydrateTextInstance(instance, text, inRootOrSingleton) {
        if ("" === text) return null;
        for(; 3 !== instance.nodeType;){
            if ((1 !== instance.nodeType || "INPUT" !== instance.nodeName || "hidden" !== instance.type) && !inRootOrSingleton) return null;
            instance = getNextHydratable(instance.nextSibling);
            if (null === instance) return null;
        }
        return instance;
    }
    function isSuspenseInstanceFallback(instance) {
        return instance.data === SUSPENSE_FALLBACK_START_DATA || instance.data === SUSPENSE_PENDING_START_DATA && instance.ownerDocument.readyState === DOCUMENT_READY_STATE_COMPLETE;
    }
    function registerSuspenseInstanceRetry(instance, callback) {
        var ownerDocument = instance.ownerDocument;
        if (instance.data !== SUSPENSE_PENDING_START_DATA || ownerDocument.readyState === DOCUMENT_READY_STATE_COMPLETE) callback();
        else {
            var listener = function() {
                callback();
                ownerDocument.removeEventListener("DOMContentLoaded", listener);
            };
            ownerDocument.addEventListener("DOMContentLoaded", listener);
            instance._reactRetry = listener;
        }
    }
    function getNextHydratable(node) {
        for(; null != node; node = node.nextSibling){
            var nodeType = node.nodeType;
            if (1 === nodeType || 3 === nodeType) break;
            if (8 === nodeType) {
                nodeType = node.data;
                if (nodeType === SUSPENSE_START_DATA || nodeType === SUSPENSE_FALLBACK_START_DATA || nodeType === SUSPENSE_PENDING_START_DATA || nodeType === FORM_STATE_IS_MATCHING || nodeType === FORM_STATE_IS_NOT_MATCHING) break;
                if (nodeType === SUSPENSE_END_DATA) return null;
            }
        }
        return node;
    }
    function describeHydratableInstanceForDevWarnings(instance) {
        if (1 === instance.nodeType) {
            for(var JSCompiler_temp_const = instance.nodeName.toLowerCase(), serverDifferences = {}, attributes = instance.attributes, i = 0; i < attributes.length; i++){
                var attr = attributes[i];
                serverDifferences[getPropNameFromAttributeName(attr.name)] = "style" === attr.name.toLowerCase() ? getStylesObjectFromElement(instance) : attr.value;
            }
            return {
                type: JSCompiler_temp_const,
                props: serverDifferences
            };
        }
        return 8 === instance.nodeType ? {
            type: "Suspense",
            props: {}
        } : instance.nodeValue;
    }
    function diffHydratedTextForDevWarnings(textInstance, text, parentProps) {
        return null === parentProps || !0 !== parentProps[SUPPRESS_HYDRATION_WARNING] ? (textInstance.nodeValue === text ? textInstance = null : (text = normalizeMarkupForTextOrAttribute(text), textInstance = normalizeMarkupForTextOrAttribute(textInstance.nodeValue) === text ? null : textInstance.nodeValue), textInstance) : null;
    }
    function getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance) {
        suspenseInstance = suspenseInstance.nextSibling;
        for(var depth = 0; suspenseInstance;){
            if (8 === suspenseInstance.nodeType) {
                var data = suspenseInstance.data;
                if (data === SUSPENSE_END_DATA) {
                    if (0 === depth) return getNextHydratable(suspenseInstance.nextSibling);
                    depth--;
                } else data !== SUSPENSE_START_DATA && data !== SUSPENSE_FALLBACK_START_DATA && data !== SUSPENSE_PENDING_START_DATA || depth++;
            }
            suspenseInstance = suspenseInstance.nextSibling;
        }
        return null;
    }
    function getParentSuspenseInstance(targetInstance) {
        targetInstance = targetInstance.previousSibling;
        for(var depth = 0; targetInstance;){
            if (8 === targetInstance.nodeType) {
                var data = targetInstance.data;
                if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {
                    if (0 === depth) return targetInstance;
                    depth--;
                } else data === SUSPENSE_END_DATA && depth++;
            }
            targetInstance = targetInstance.previousSibling;
        }
        return null;
    }
    function commitHydratedContainer(container) {
        retryIfBlockedOn(container);
    }
    function commitHydratedSuspenseInstance(suspenseInstance) {
        retryIfBlockedOn(suspenseInstance);
    }
    function resolveSingletonInstance(type, props, rootContainerInstance, hostContext, validateDOMNestingDev) {
        validateDOMNestingDev && validateDOMNesting(type, hostContext.ancestorInfo);
        props = getOwnerDocumentFromRootContainer(rootContainerInstance);
        switch(type){
            case "html":
                type = props.documentElement;
                if (!type) throw Error("React expected an <html> element (document.documentElement) to exist in the Document but one was not found. React never removes the documentElement for any Document it renders into so the cause is likely in some other script running on this page.");
                return type;
            case "head":
                type = props.head;
                if (!type) throw Error("React expected a <head> element (document.head) to exist in the Document but one was not found. React never removes the head for any Document it renders into so the cause is likely in some other script running on this page.");
                return type;
            case "body":
                type = props.body;
                if (!type) throw Error("React expected a <body> element (document.body) to exist in the Document but one was not found. React never removes the body for any Document it renders into so the cause is likely in some other script running on this page.");
                return type;
            default:
                throw Error("resolveSingletonInstance was called with an element type that is not supported. This is a bug in React.");
        }
    }
    function acquireSingletonInstance(type, props, instance, internalInstanceHandle) {
        if (!instance[internalContainerInstanceKey] && getInstanceFromNode(instance)) {
            var tagName = instance.tagName.toLowerCase();
            console.error("You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first.", tagName, tagName, tagName);
        }
        switch(type){
            case "html":
            case "head":
            case "body":
                break;
            default:
                console.error("acquireSingletonInstance was called with an element type that is not supported. This is a bug in React.");
        }
        for(tagName = instance.attributes; tagName.length;)instance.removeAttributeNode(tagName[0]);
        setInitialProperties(instance, type, props);
        instance[internalInstanceKey] = internalInstanceHandle;
        instance[internalPropsKey] = props;
    }
    function releaseSingletonInstance(instance) {
        for(var attributes = instance.attributes; attributes.length;)instance.removeAttributeNode(attributes[0]);
        detachDeletedInstance(instance);
    }
    function getHoistableRoot(container) {
        return "function" === typeof container.getRootNode ? container.getRootNode() : 9 === container.nodeType ? container : container.ownerDocument;
    }
    function preconnectAs(rel, href, crossOrigin) {
        var ownerDocument = globalDocument;
        if (ownerDocument && "string" === typeof href && href) {
            var limitedEscapedHref = escapeSelectorAttributeValueInsideDoubleQuotes(href);
            limitedEscapedHref = 'link[rel="' + rel + '"][href="' + limitedEscapedHref + '"]';
            "string" === typeof crossOrigin && (limitedEscapedHref += '[crossorigin="' + crossOrigin + '"]');
            preconnectsSet.has(limitedEscapedHref) || (preconnectsSet.add(limitedEscapedHref), rel = {
                rel: rel,
                crossOrigin: crossOrigin,
                href: href
            }, null === ownerDocument.querySelector(limitedEscapedHref) && (href = ownerDocument.createElement("link"), setInitialProperties(href, "link", rel), markNodeAsHoistable(href), ownerDocument.head.appendChild(href)));
        }
    }
    function getResource(type, currentProps, pendingProps, currentResource) {
        var resourceRoot = (resourceRoot = rootInstanceStackCursor.current) ? getHoistableRoot(resourceRoot) : null;
        if (!resourceRoot) throw Error('"resourceRoot" was expected to exist. This is a bug in React.');
        switch(type){
            case "meta":
            case "title":
                return null;
            case "style":
                return "string" === typeof pendingProps.precedence && "string" === typeof pendingProps.href ? (pendingProps = getStyleKey(pendingProps.href), currentProps = getResourcesFromRoot(resourceRoot).hoistableStyles, currentResource = currentProps.get(pendingProps), currentResource || (currentResource = {
                    type: "style",
                    instance: null,
                    count: 0,
                    state: null
                }, currentProps.set(pendingProps, currentResource)), currentResource) : {
                    type: "void",
                    instance: null,
                    count: 0,
                    state: null
                };
            case "link":
                if ("stylesheet" === pendingProps.rel && "string" === typeof pendingProps.href && "string" === typeof pendingProps.precedence) {
                    type = getStyleKey(pendingProps.href);
                    var _styles = getResourcesFromRoot(resourceRoot).hoistableStyles, _resource = _styles.get(type);
                    if (!_resource && (resourceRoot = resourceRoot.ownerDocument || resourceRoot, _resource = {
                        type: "stylesheet",
                        instance: null,
                        count: 0,
                        state: {
                            loading: NotLoaded,
                            preload: null
                        }
                    }, _styles.set(type, _resource), (_styles = resourceRoot.querySelector(getStylesheetSelectorFromKey(type))) && !_styles._p && (_resource.instance = _styles, _resource.state.loading = Loaded | Inserted), !preloadPropsMap.has(type))) {
                        var preloadProps = {
                            rel: "preload",
                            as: "style",
                            href: pendingProps.href,
                            crossOrigin: pendingProps.crossOrigin,
                            integrity: pendingProps.integrity,
                            media: pendingProps.media,
                            hrefLang: pendingProps.hrefLang,
                            referrerPolicy: pendingProps.referrerPolicy
                        };
                        preloadPropsMap.set(type, preloadProps);
                        _styles || preloadStylesheet(resourceRoot, type, preloadProps, _resource.state);
                    }
                    if (currentProps && null === currentResource) throw pendingProps = "\n\n  - " + describeLinkForResourceErrorDEV(currentProps) + "\n  + " + describeLinkForResourceErrorDEV(pendingProps), Error("Expected <link> not to update to be updated to a stylesheet with precedence. Check the `rel`, `href`, and `precedence` props of this component. Alternatively, check whether two different <link> components render in the same slot or share the same key." + pendingProps);
                    return _resource;
                }
                if (currentProps && null !== currentResource) throw pendingProps = "\n\n  - " + describeLinkForResourceErrorDEV(currentProps) + "\n  + " + describeLinkForResourceErrorDEV(pendingProps), Error("Expected stylesheet with precedence to not be updated to a different kind of <link>. Check the `rel`, `href`, and `precedence` props of this component. Alternatively, check whether two different <link> components render in the same slot or share the same key." + pendingProps);
                return null;
            case "script":
                return currentProps = pendingProps.async, pendingProps = pendingProps.src, "string" === typeof pendingProps && currentProps && "function" !== typeof currentProps && "symbol" !== typeof currentProps ? (pendingProps = getScriptKey(pendingProps), currentProps = getResourcesFromRoot(resourceRoot).hoistableScripts, currentResource = currentProps.get(pendingProps), currentResource || (currentResource = {
                    type: "script",
                    instance: null,
                    count: 0,
                    state: null
                }, currentProps.set(pendingProps, currentResource)), currentResource) : {
                    type: "void",
                    instance: null,
                    count: 0,
                    state: null
                };
            default:
                throw Error('getResource encountered a type it did not expect: "' + type + '". this is a bug in React.');
        }
    }
    function describeLinkForResourceErrorDEV(props) {
        var describedProps = 0, description = "<link";
        "string" === typeof props.rel ? (describedProps++, description += ' rel="' + props.rel + '"') : hasOwnProperty.call(props, "rel") && (describedProps++, description += ' rel="' + (null === props.rel ? "null" : "invalid type " + typeof props.rel) + '"');
        "string" === typeof props.href ? (describedProps++, description += ' href="' + props.href + '"') : hasOwnProperty.call(props, "href") && (describedProps++, description += ' href="' + (null === props.href ? "null" : "invalid type " + typeof props.href) + '"');
        "string" === typeof props.precedence ? (describedProps++, description += ' precedence="' + props.precedence + '"') : hasOwnProperty.call(props, "precedence") && (describedProps++, description += " precedence={" + (null === props.precedence ? "null" : "invalid type " + typeof props.precedence) + "}");
        Object.getOwnPropertyNames(props).length > describedProps && (description += " ...");
        return description + " />";
    }
    function getStyleKey(href) {
        return 'href="' + escapeSelectorAttributeValueInsideDoubleQuotes(href) + '"';
    }
    function getStylesheetSelectorFromKey(key) {
        return 'link[rel="stylesheet"][' + key + "]";
    }
    function stylesheetPropsFromRawProps(rawProps) {
        return assign({}, rawProps, {
            "data-precedence": rawProps.precedence,
            precedence: null
        });
    }
    function preloadStylesheet(ownerDocument, key, preloadProps, state) {
        ownerDocument.querySelector('link[rel="preload"][as="style"][' + key + "]") ? state.loading = Loaded : (key = ownerDocument.createElement("link"), state.preload = key, key.addEventListener("load", function() {
            return state.loading |= Loaded;
        }), key.addEventListener("error", function() {
            return state.loading |= Errored;
        }), setInitialProperties(key, "link", preloadProps), markNodeAsHoistable(key), ownerDocument.head.appendChild(key));
    }
    function getScriptKey(src) {
        return '[src="' + escapeSelectorAttributeValueInsideDoubleQuotes(src) + '"]';
    }
    function getScriptSelectorFromKey(key) {
        return "script[async]" + key;
    }
    function acquireResource(hoistableRoot, resource, props) {
        resource.count++;
        if (null === resource.instance) switch(resource.type){
            case "style":
                var instance = hoistableRoot.querySelector('style[data-href~="' + escapeSelectorAttributeValueInsideDoubleQuotes(props.href) + '"]');
                if (instance) return resource.instance = instance, markNodeAsHoistable(instance), instance;
                var styleProps = assign({}, props, {
                    "data-href": props.href,
                    "data-precedence": props.precedence,
                    href: null,
                    precedence: null
                });
                instance = (hoistableRoot.ownerDocument || hoistableRoot).createElement("style");
                markNodeAsHoistable(instance);
                setInitialProperties(instance, "style", styleProps);
                insertStylesheet(instance, props.precedence, hoistableRoot);
                return resource.instance = instance;
            case "stylesheet":
                styleProps = getStyleKey(props.href);
                var _instance = hoistableRoot.querySelector(getStylesheetSelectorFromKey(styleProps));
                if (_instance) return resource.state.loading |= Inserted, resource.instance = _instance, markNodeAsHoistable(_instance), _instance;
                instance = stylesheetPropsFromRawProps(props);
                (styleProps = preloadPropsMap.get(styleProps)) && adoptPreloadPropsForStylesheet(instance, styleProps);
                _instance = (hoistableRoot.ownerDocument || hoistableRoot).createElement("link");
                markNodeAsHoistable(_instance);
                var linkInstance = _instance;
                linkInstance._p = new Promise(function(resolve, reject) {
                    linkInstance.onload = resolve;
                    linkInstance.onerror = reject;
                });
                setInitialProperties(_instance, "link", instance);
                resource.state.loading |= Inserted;
                insertStylesheet(_instance, props.precedence, hoistableRoot);
                return resource.instance = _instance;
            case "script":
                _instance = getScriptKey(props.src);
                if (styleProps = hoistableRoot.querySelector(getScriptSelectorFromKey(_instance))) return resource.instance = styleProps, markNodeAsHoistable(styleProps), styleProps;
                instance = props;
                if (styleProps = preloadPropsMap.get(_instance)) instance = assign({}, props), adoptPreloadPropsForScript(instance, styleProps);
                hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;
                styleProps = hoistableRoot.createElement("script");
                markNodeAsHoistable(styleProps);
                setInitialProperties(styleProps, "link", instance);
                hoistableRoot.head.appendChild(styleProps);
                return resource.instance = styleProps;
            case "void":
                return null;
            default:
                throw Error('acquireResource encountered a resource type it did not expect: "' + resource.type + '". this is a bug in React.');
        }
        else "stylesheet" === resource.type && (resource.state.loading & Inserted) === NotLoaded && (instance = resource.instance, resource.state.loading |= Inserted, insertStylesheet(instance, props.precedence, hoistableRoot));
        return resource.instance;
    }
    function insertStylesheet(instance, precedence, root) {
        for(var nodes = root.querySelectorAll('link[rel="stylesheet"][data-precedence],style[data-precedence]'), last = nodes.length ? nodes[nodes.length - 1] : null, prior = last, i = 0; i < nodes.length; i++){
            var node = nodes[i];
            if (node.dataset.precedence === precedence) prior = node;
            else if (prior !== last) break;
        }
        prior ? prior.parentNode.insertBefore(instance, prior.nextSibling) : (precedence = 9 === root.nodeType ? root.head : root, precedence.insertBefore(instance, precedence.firstChild));
    }
    function adoptPreloadPropsForStylesheet(stylesheetProps, preloadProps) {
        null == stylesheetProps.crossOrigin && (stylesheetProps.crossOrigin = preloadProps.crossOrigin);
        null == stylesheetProps.referrerPolicy && (stylesheetProps.referrerPolicy = preloadProps.referrerPolicy);
        null == stylesheetProps.title && (stylesheetProps.title = preloadProps.title);
    }
    function adoptPreloadPropsForScript(scriptProps, preloadProps) {
        null == scriptProps.crossOrigin && (scriptProps.crossOrigin = preloadProps.crossOrigin);
        null == scriptProps.referrerPolicy && (scriptProps.referrerPolicy = preloadProps.referrerPolicy);
        null == scriptProps.integrity && (scriptProps.integrity = preloadProps.integrity);
    }
    function getHydratableHoistableCache(type, keyAttribute, ownerDocument) {
        if (null === tagCaches) {
            var cache = new Map();
            var caches = tagCaches = new Map();
            caches.set(ownerDocument, cache);
        } else caches = tagCaches, cache = caches.get(ownerDocument), cache || (cache = new Map(), caches.set(ownerDocument, cache));
        if (cache.has(type)) return cache;
        cache.set(type, null);
        ownerDocument = ownerDocument.getElementsByTagName(type);
        for(caches = 0; caches < ownerDocument.length; caches++){
            var node = ownerDocument[caches];
            if (!(node[internalHoistableMarker] || node[internalInstanceKey] || "link" === type && "stylesheet" === node.getAttribute("rel")) && node.namespaceURI !== SVG_NAMESPACE) {
                var nodeKey = node.getAttribute(keyAttribute) || "";
                nodeKey = type + nodeKey;
                var existing = cache.get(nodeKey);
                existing ? existing.push(node) : cache.set(nodeKey, [
                    node
                ]);
            }
        }
        return cache;
    }
    function mountHoistable(hoistableRoot, type, instance) {
        hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;
        hoistableRoot.head.insertBefore(instance, "title" === type ? hoistableRoot.querySelector("head > title") : null);
    }
    function isHostHoistableType(type, props, hostContext) {
        var outsideHostContainerContext = !hostContext.ancestorInfo.containerTagInScope;
        if (hostContext.context === HostContextNamespaceSvg || null != props.itemProp) return !outsideHostContainerContext || null == props.itemProp || "meta" !== type && "title" !== type && "style" !== type && "link" !== type && "script" !== type || console.error("Cannot render a <%s> outside the main document if it has an `itemProp` prop. `itemProp` suggests the tag belongs to an `itemScope` which can appear anywhere in the DOM. If you were intending for React to hoist this <%s> remove the `itemProp` prop. Otherwise, try moving this tag into the <head> or <body> of the Document.", type, type), !1;
        switch(type){
            case "meta":
            case "title":
                return !0;
            case "style":
                if ("string" !== typeof props.precedence || "string" !== typeof props.href || "" === props.href) {
                    outsideHostContainerContext && console.error('Cannot render a <style> outside the main document without knowing its precedence and a unique href key. React can hoist and deduplicate <style> tags if you provide a `precedence` prop along with an `href` prop that does not conflict with the `href` values used in any other hoisted <style> or <link rel="stylesheet" ...> tags.  Note that hoisting <style> tags is considered an advanced feature that most will not use directly. Consider moving the <style> tag to the <head> or consider adding a `precedence="default"` and `href="some unique resource identifier"`.');
                    break;
                }
                return !0;
            case "link":
                if ("string" !== typeof props.rel || "string" !== typeof props.href || "" === props.href || props.onLoad || props.onError) {
                    if ("stylesheet" === props.rel && "string" === typeof props.precedence) {
                        type = props.href;
                        var onError = props.onError, disabled = props.disabled;
                        hostContext = [];
                        props.onLoad && hostContext.push("`onLoad`");
                        onError && hostContext.push("`onError`");
                        null != disabled && hostContext.push("`disabled`");
                        onError = propNamesListJoin(hostContext, "and");
                        onError += 1 === hostContext.length ? " prop" : " props";
                        disabled = 1 === hostContext.length ? "an " + onError : "the " + onError;
                        hostContext.length && console.error('React encountered a <link rel="stylesheet" href="%s" ... /> with a `precedence` prop that also included %s. The presence of loading and error handlers indicates an intent to manage the stylesheet loading state from your from your Component code and React will not hoist or deduplicate this stylesheet. If your intent was to have React hoist and deduplciate this stylesheet using the `precedence` prop remove the %s, otherwise remove the `precedence` prop.', type, disabled, onError);
                    }
                    outsideHostContainerContext && ("string" !== typeof props.rel || "string" !== typeof props.href || "" === props.href ? console.error("Cannot render a <link> outside the main document without a `rel` and `href` prop. Try adding a `rel` and/or `href` prop to this <link> or moving the link into the <head> tag") : (props.onError || props.onLoad) && console.error("Cannot render a <link> with onLoad or onError listeners outside the main document. Try removing onLoad={...} and onError={...} or moving it into the root <head> tag or somewhere in the <body>."));
                    break;
                }
                switch(props.rel){
                    case "stylesheet":
                        return type = props.precedence, props = props.disabled, "string" !== typeof type && outsideHostContainerContext && console.error('Cannot render a <link rel="stylesheet" /> outside the main document without knowing its precedence. Consider adding precedence="default" or moving it into the root <head> tag.'), "string" === typeof type && null == props;
                    default:
                        return !0;
                }
            case "script":
                type = props.async && "function" !== typeof props.async && "symbol" !== typeof props.async;
                if (!type || props.onLoad || props.onError || !props.src || "string" !== typeof props.src) {
                    outsideHostContainerContext && (type ? props.onLoad || props.onError ? console.error("Cannot render a <script> with onLoad or onError listeners outside the main document. Try removing onLoad={...} and onError={...} or moving it into the root <head> tag or somewhere in the <body>.") : console.error("Cannot render a <script> outside the main document without `async={true}` and a non-empty `src` prop. Ensure there is a valid `src` and either make the script async or move it into the root <head> tag or somewhere in the <body>.") : console.error('Cannot render a sync or defer <script> outside the main document without knowing its order. Try adding async="" or moving it into the root <head> tag.'));
                    break;
                }
                return !0;
            case "noscript":
            case "template":
                outsideHostContainerContext && console.error("Cannot render <%s> outside the main document. Try moving it into the root <head> tag.", type);
        }
        return !1;
    }
    function preloadResource(resource) {
        return "stylesheet" === resource.type && (resource.state.loading & Settled) === NotLoaded ? !1 : !0;
    }
    function noop() {}
    function suspendResource(hoistableRoot, resource, props) {
        if (null === suspendedState) throw Error("Internal React Error: suspendedState null when it was expected to exists. Please report this as a React bug.");
        var state = suspendedState;
        if ("stylesheet" === resource.type && ("string" !== typeof props.media || !1 !== matchMedia(props.media).matches) && (resource.state.loading & Inserted) === NotLoaded) {
            if (null === resource.instance) {
                var key = getStyleKey(props.href), instance = hoistableRoot.querySelector(getStylesheetSelectorFromKey(key));
                if (instance) {
                    hoistableRoot = instance._p;
                    null !== hoistableRoot && "object" === typeof hoistableRoot && "function" === typeof hoistableRoot.then && (state.count++, state = onUnsuspend.bind(state), hoistableRoot.then(state, state));
                    resource.state.loading |= Inserted;
                    resource.instance = instance;
                    markNodeAsHoistable(instance);
                    return;
                }
                instance = hoistableRoot.ownerDocument || hoistableRoot;
                props = stylesheetPropsFromRawProps(props);
                (key = preloadPropsMap.get(key)) && adoptPreloadPropsForStylesheet(props, key);
                instance = instance.createElement("link");
                markNodeAsHoistable(instance);
                var linkInstance = instance;
                linkInstance._p = new Promise(function(resolve, reject) {
                    linkInstance.onload = resolve;
                    linkInstance.onerror = reject;
                });
                setInitialProperties(instance, "link", props);
                resource.instance = instance;
            }
            null === state.stylesheets && (state.stylesheets = new Map());
            state.stylesheets.set(resource, hoistableRoot);
            (hoistableRoot = resource.state.preload) && (resource.state.loading & Settled) === NotLoaded && (state.count++, resource = onUnsuspend.bind(state), hoistableRoot.addEventListener("load", resource), hoistableRoot.addEventListener("error", resource));
        }
    }
    function waitForCommitToBeReady() {
        if (null === suspendedState) throw Error("Internal React Error: suspendedState null when it was expected to exists. Please report this as a React bug.");
        var state = suspendedState;
        state.stylesheets && 0 === state.count && insertSuspendedStylesheets(state, state.stylesheets);
        return 0 < state.count ? function(commit) {
            var stylesheetTimer = setTimeout(function() {
                state.stylesheets && insertSuspendedStylesheets(state, state.stylesheets);
                if (state.unsuspend) {
                    var unsuspend = state.unsuspend;
                    state.unsuspend = null;
                    unsuspend();
                }
            }, 6e4);
            state.unsuspend = commit;
            return function() {
                state.unsuspend = null;
                clearTimeout(stylesheetTimer);
            };
        } : null;
    }
    function onUnsuspend() {
        this.count--;
        if (0 === this.count) {
            if (this.stylesheets) insertSuspendedStylesheets(this, this.stylesheets);
            else if (this.unsuspend) {
                var unsuspend = this.unsuspend;
                this.unsuspend = null;
                unsuspend();
            }
        }
    }
    function insertSuspendedStylesheets(state, resources) {
        state.stylesheets = null;
        null !== state.unsuspend && (state.count++, precedencesByRoot = new Map(), resources.forEach(insertStylesheetIntoRoot, state), precedencesByRoot = null, onUnsuspend.call(state));
    }
    function insertStylesheetIntoRoot(root, resource) {
        if (!(resource.state.loading & Inserted)) {
            var precedences = precedencesByRoot.get(root);
            if (precedences) var last = precedences.get(LAST_PRECEDENCE);
            else {
                precedences = new Map();
                precedencesByRoot.set(root, precedences);
                for(var nodes = root.querySelectorAll("link[data-precedence],style[data-precedence]"), i = 0; i < nodes.length; i++){
                    var node = nodes[i];
                    if ("LINK" === node.nodeName || "not all" !== node.getAttribute("media")) precedences.set(node.dataset.precedence, node), last = node;
                }
                last && precedences.set(LAST_PRECEDENCE, last);
            }
            nodes = resource.instance;
            node = nodes.getAttribute("data-precedence");
            i = precedences.get(node) || last;
            i === last && precedences.set(LAST_PRECEDENCE, nodes);
            precedences.set(node, nodes);
            this.count++;
            last = onUnsuspend.bind(this);
            nodes.addEventListener("load", last);
            nodes.addEventListener("error", last);
            i ? i.parentNode.insertBefore(nodes, i.nextSibling) : (root = 9 === root.nodeType ? root.head : root, root.insertBefore(nodes, root.firstChild));
            resource.state.loading |= Inserted;
        }
    }
    function FiberRootNode(containerInfo, tag, hydrate, identifierPrefix, onUncaughtError, onCaughtError, onRecoverableError, formState) {
        this.tag = 1;
        this.containerInfo = containerInfo;
        this.pingCache = this.current = this.pendingChildren = null;
        this.timeoutHandle = noTimeout;
        this.callbackNode = this.next = this.pendingContext = this.context = this.cancelPendingCommit = null;
        this.callbackPriority = 0;
        this.expirationTimes = createLaneMap(-1);
        this.entangledLanes = this.shellSuspendCounter = this.errorRecoveryDisabledLanes = this.expiredLanes = this.warmLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0;
        this.entanglements = createLaneMap(0);
        this.hiddenUpdates = createLaneMap(null);
        this.identifierPrefix = identifierPrefix;
        this.onUncaughtError = onUncaughtError;
        this.onCaughtError = onCaughtError;
        this.onRecoverableError = onRecoverableError;
        this.pooledCache = null;
        this.pooledCacheLanes = 0;
        this.formState = formState;
        this.incompleteTransitions = new Map();
        this.passiveEffectDuration = this.effectDuration = -0;
        this.memoizedUpdaters = new Set();
        containerInfo = this.pendingUpdatersLaneMap = [];
        for(tag = 0; 31 > tag; tag++)containerInfo.push(new Set());
        this._debugRootType = hydrate ? "hydrateRoot()" : "createRoot()";
    }
    function createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, identifierPrefix, onUncaughtError, onCaughtError, onRecoverableError, transitionCallbacks, formState) {
        containerInfo = new FiberRootNode(containerInfo, tag, hydrate, identifierPrefix, onUncaughtError, onCaughtError, onRecoverableError, formState);
        tag = ConcurrentMode;
        !0 === isStrictMode && (tag |= StrictLegacyMode | StrictEffectsMode);
        isDevToolsPresent && (tag |= ProfileMode);
        isStrictMode = createFiber(3, null, null, tag);
        containerInfo.current = isStrictMode;
        isStrictMode.stateNode = containerInfo;
        tag = createCache();
        retainCache(tag);
        containerInfo.pooledCache = tag;
        retainCache(tag);
        isStrictMode.memoizedState = {
            element: initialChildren,
            isDehydrated: hydrate,
            cache: tag
        };
        initializeUpdateQueue(isStrictMode);
        return containerInfo;
    }
    function getContextForSubtree(parentComponent) {
        if (!parentComponent) return emptyContextObject;
        parentComponent = emptyContextObject;
        return parentComponent;
    }
    function updateContainerImpl(rootFiber, lane, element, container, parentComponent, callback) {
        if (injectedHook && "function" === typeof injectedHook.onScheduleFiberRoot) try {
            injectedHook.onScheduleFiberRoot(rendererID, container, element);
        } catch (err) {
            hasLoggedError || (hasLoggedError = !0, console.error("React instrumentation encountered an error: %s", err));
        }
        null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markRenderScheduled && injectedProfilingHooks.markRenderScheduled(lane);
        parentComponent = getContextForSubtree(parentComponent);
        null === container.context ? container.context = parentComponent : container.pendingContext = parentComponent;
        isRendering && null !== current && !didWarnAboutNestedUpdates && (didWarnAboutNestedUpdates = !0, console.error("Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate.\n\nCheck the render method of %s.", getComponentNameFromFiber(current) || "Unknown"));
        container = createUpdate(lane);
        container.payload = {
            element: element
        };
        callback = void 0 === callback ? null : callback;
        null !== callback && ("function" !== typeof callback && console.error("Expected the last optional `callback` argument to be a function. Instead received: %s.", callback), container.callback = callback);
        element = enqueueUpdate(rootFiber, container, lane);
        null !== element && (scheduleUpdateOnFiber(element, rootFiber, lane), entangleTransitions(element, rootFiber, lane));
    }
    function markRetryLaneImpl(fiber, retryLane) {
        fiber = fiber.memoizedState;
        if (null !== fiber && null !== fiber.dehydrated) {
            var a = fiber.retryLane;
            fiber.retryLane = 0 !== a && a < retryLane ? a : retryLane;
        }
    }
    function markRetryLaneIfNotHydrated(fiber, retryLane) {
        markRetryLaneImpl(fiber, retryLane);
        (fiber = fiber.alternate) && markRetryLaneImpl(fiber, retryLane);
    }
    function attemptContinuousHydration(fiber) {
        if (13 === fiber.tag) {
            var root = enqueueConcurrentRenderForLane(fiber, 67108864);
            null !== root && scheduleUpdateOnFiber(root, fiber, 67108864);
            markRetryLaneIfNotHydrated(fiber, 67108864);
        }
    }
    function getCurrentFiberForDevTools() {
        return current;
    }
    function getLaneLabelMap() {
        for(var map = new Map(), lane = 1, index = 0; 31 > index; index++){
            var label = getLabelForLane(lane);
            map.set(lane, label);
            lane *= 2;
        }
        return map;
    }
    function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {
        var prevTransition = ReactSharedInternals.T;
        ReactSharedInternals.T = null;
        var previousPriority = ReactDOMSharedInternals.p;
        try {
            ReactDOMSharedInternals.p = DiscreteEventPriority, dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);
        } finally{
            ReactDOMSharedInternals.p = previousPriority, ReactSharedInternals.T = prevTransition;
        }
    }
    function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {
        var prevTransition = ReactSharedInternals.T;
        ReactSharedInternals.T = null;
        var previousPriority = ReactDOMSharedInternals.p;
        try {
            ReactDOMSharedInternals.p = ContinuousEventPriority, dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);
        } finally{
            ReactDOMSharedInternals.p = previousPriority, ReactSharedInternals.T = prevTransition;
        }
    }
    function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        if (_enabled) {
            var blockedOn = findInstanceBlockingEvent(nativeEvent);
            if (null === blockedOn) dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, return_targetInst, targetContainer), clearIfContinuousEvent(domEventName, nativeEvent);
            else if (queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent)) nativeEvent.stopPropagation();
            else if (clearIfContinuousEvent(domEventName, nativeEvent), eventSystemFlags & 4 && -1 < discreteReplayableEvents.indexOf(domEventName)) {
                for(; null !== blockedOn;){
                    var fiber = getInstanceFromNode(blockedOn);
                    if (null !== fiber) switch(fiber.tag){
                        case 3:
                            fiber = fiber.stateNode;
                            if (fiber.current.memoizedState.isDehydrated) {
                                var lanes = getHighestPriorityLanes(fiber.pendingLanes);
                                if (0 !== lanes) {
                                    var root = fiber;
                                    root.pendingLanes |= 2;
                                    for(root.entangledLanes |= 2; lanes;){
                                        var lane = 1 << 31 - clz32(lanes);
                                        root.entanglements[1] |= lane;
                                        lanes &= ~lane;
                                    }
                                    ensureRootIsScheduled(fiber);
                                    (executionContext & (RenderContext | CommitContext)) === NoContext && (workInProgressRootRenderTargetTime = now$1() + RENDER_TIMEOUT_MS, flushSyncWorkAcrossRoots_impl(0, !1));
                                }
                            }
                            break;
                        case 13:
                            root = enqueueConcurrentRenderForLane(fiber, 2), null !== root && scheduleUpdateOnFiber(root, fiber, 2), flushSyncWork$1(), markRetryLaneIfNotHydrated(fiber, 2);
                    }
                    fiber = findInstanceBlockingEvent(nativeEvent);
                    null === fiber && dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, return_targetInst, targetContainer);
                    if (fiber === blockedOn) break;
                    blockedOn = fiber;
                }
                null !== blockedOn && nativeEvent.stopPropagation();
            } else dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, null, targetContainer);
        }
    }
    function findInstanceBlockingEvent(nativeEvent) {
        nativeEvent = getEventTarget(nativeEvent);
        return findInstanceBlockingTarget(nativeEvent);
    }
    function findInstanceBlockingTarget(targetNode) {
        return_targetInst = null;
        targetNode = getClosestInstanceFromNode(targetNode);
        if (null !== targetNode) {
            var nearestMounted = getNearestMountedFiber(targetNode);
            if (null === nearestMounted) targetNode = null;
            else {
                var tag = nearestMounted.tag;
                if (13 === tag) {
                    targetNode = getSuspenseInstanceFromFiber(nearestMounted);
                    if (null !== targetNode) return targetNode;
                    targetNode = null;
                } else if (3 === tag) {
                    if (nearestMounted.stateNode.current.memoizedState.isDehydrated) return 3 === nearestMounted.tag ? nearestMounted.stateNode.containerInfo : null;
                    targetNode = null;
                } else nearestMounted !== targetNode && (targetNode = null);
            }
        }
        return_targetInst = targetNode;
        return null;
    }
    function getEventPriority(domEventName) {
        switch(domEventName){
            case "beforetoggle":
            case "cancel":
            case "click":
            case "close":
            case "contextmenu":
            case "copy":
            case "cut":
            case "auxclick":
            case "dblclick":
            case "dragend":
            case "dragstart":
            case "drop":
            case "focusin":
            case "focusout":
            case "input":
            case "invalid":
            case "keydown":
            case "keypress":
            case "keyup":
            case "mousedown":
            case "mouseup":
            case "paste":
            case "pause":
            case "play":
            case "pointercancel":
            case "pointerdown":
            case "pointerup":
            case "ratechange":
            case "reset":
            case "resize":
            case "seeked":
            case "submit":
            case "toggle":
            case "touchcancel":
            case "touchend":
            case "touchstart":
            case "volumechange":
            case "change":
            case "selectionchange":
            case "textInput":
            case "compositionstart":
            case "compositionend":
            case "compositionupdate":
            case "beforeblur":
            case "afterblur":
            case "beforeinput":
            case "blur":
            case "fullscreenchange":
            case "focus":
            case "hashchange":
            case "popstate":
            case "select":
            case "selectstart":
                return DiscreteEventPriority;
            case "drag":
            case "dragenter":
            case "dragexit":
            case "dragleave":
            case "dragover":
            case "mousemove":
            case "mouseout":
            case "mouseover":
            case "pointermove":
            case "pointerout":
            case "pointerover":
            case "scroll":
            case "touchmove":
            case "wheel":
            case "mouseenter":
            case "mouseleave":
            case "pointerenter":
            case "pointerleave":
                return ContinuousEventPriority;
            case "message":
                switch(getCurrentPriorityLevel()){
                    case ImmediatePriority:
                        return DiscreteEventPriority;
                    case UserBlockingPriority:
                        return ContinuousEventPriority;
                    case NormalPriority$1:
                    case LowPriority:
                        return DefaultEventPriority;
                    case IdlePriority:
                        return IdleEventPriority;
                    default:
                        return DefaultEventPriority;
                }
            default:
                return DefaultEventPriority;
        }
    }
    function clearIfContinuousEvent(domEventName, nativeEvent) {
        switch(domEventName){
            case "focusin":
            case "focusout":
                queuedFocus = null;
                break;
            case "dragenter":
            case "dragleave":
                queuedDrag = null;
                break;
            case "mouseover":
            case "mouseout":
                queuedMouse = null;
                break;
            case "pointerover":
            case "pointerout":
                queuedPointers.delete(nativeEvent.pointerId);
                break;
            case "gotpointercapture":
            case "lostpointercapture":
                queuedPointerCaptures.delete(nativeEvent.pointerId);
        }
    }
    function accumulateOrCreateContinuousQueuedReplayableEvent(existingQueuedEvent, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        if (null === existingQueuedEvent || existingQueuedEvent.nativeEvent !== nativeEvent) return existingQueuedEvent = {
            blockedOn: blockedOn,
            domEventName: domEventName,
            eventSystemFlags: eventSystemFlags,
            nativeEvent: nativeEvent,
            targetContainers: [
                targetContainer
            ]
        }, null !== blockedOn && (blockedOn = getInstanceFromNode(blockedOn), null !== blockedOn && attemptContinuousHydration(blockedOn)), existingQueuedEvent;
        existingQueuedEvent.eventSystemFlags |= eventSystemFlags;
        blockedOn = existingQueuedEvent.targetContainers;
        null !== targetContainer && -1 === blockedOn.indexOf(targetContainer) && blockedOn.push(targetContainer);
        return existingQueuedEvent;
    }
    function queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        switch(domEventName){
            case "focusin":
                return queuedFocus = accumulateOrCreateContinuousQueuedReplayableEvent(queuedFocus, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent), !0;
            case "dragenter":
                return queuedDrag = accumulateOrCreateContinuousQueuedReplayableEvent(queuedDrag, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent), !0;
            case "mouseover":
                return queuedMouse = accumulateOrCreateContinuousQueuedReplayableEvent(queuedMouse, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent), !0;
            case "pointerover":
                var pointerId = nativeEvent.pointerId;
                queuedPointers.set(pointerId, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointers.get(pointerId) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent));
                return !0;
            case "gotpointercapture":
                return pointerId = nativeEvent.pointerId, queuedPointerCaptures.set(pointerId, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointerCaptures.get(pointerId) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent)), !0;
        }
        return !1;
    }
    function attemptExplicitHydrationTarget(queuedTarget) {
        var targetInst = getClosestInstanceFromNode(queuedTarget.target);
        if (null !== targetInst) {
            var nearestMounted = getNearestMountedFiber(targetInst);
            if (null !== nearestMounted) {
                if (targetInst = nearestMounted.tag, 13 === targetInst) {
                    if (targetInst = getSuspenseInstanceFromFiber(nearestMounted), null !== targetInst) {
                        queuedTarget.blockedOn = targetInst;
                        runWithPriority(queuedTarget.priority, function() {
                            if (13 === nearestMounted.tag) {
                                var lane = requestUpdateLane(nearestMounted);
                                lane = getBumpedLaneForHydrationByLane(lane);
                                var root = enqueueConcurrentRenderForLane(nearestMounted, lane);
                                null !== root && scheduleUpdateOnFiber(root, nearestMounted, lane);
                                markRetryLaneIfNotHydrated(nearestMounted, lane);
                            }
                        });
                        return;
                    }
                } else if (3 === targetInst && nearestMounted.stateNode.current.memoizedState.isDehydrated) {
                    queuedTarget.blockedOn = 3 === nearestMounted.tag ? nearestMounted.stateNode.containerInfo : null;
                    return;
                }
            }
        }
        queuedTarget.blockedOn = null;
    }
    function attemptReplayContinuousQueuedEvent(queuedEvent) {
        if (null !== queuedEvent.blockedOn) return !1;
        for(var targetContainers = queuedEvent.targetContainers; 0 < targetContainers.length;){
            var nextBlockedOn = findInstanceBlockingEvent(queuedEvent.nativeEvent);
            if (null === nextBlockedOn) {
                nextBlockedOn = queuedEvent.nativeEvent;
                var nativeEventClone = new nextBlockedOn.constructor(nextBlockedOn.type, nextBlockedOn), event = nativeEventClone;
                null !== currentReplayingEvent && console.error("Expected currently replaying event to be null. This error is likely caused by a bug in React. Please file an issue.");
                currentReplayingEvent = event;
                nextBlockedOn.target.dispatchEvent(nativeEventClone);
                null === currentReplayingEvent && console.error("Expected currently replaying event to not be null. This error is likely caused by a bug in React. Please file an issue.");
                currentReplayingEvent = null;
            } else return targetContainers = getInstanceFromNode(nextBlockedOn), null !== targetContainers && attemptContinuousHydration(targetContainers), queuedEvent.blockedOn = nextBlockedOn, !1;
            targetContainers.shift();
        }
        return !0;
    }
    function attemptReplayContinuousQueuedEventInMap(queuedEvent, key, map) {
        attemptReplayContinuousQueuedEvent(queuedEvent) && map.delete(key);
    }
    function replayUnblockedEvents() {
        hasScheduledReplayAttempt = !1;
        null !== queuedFocus && attemptReplayContinuousQueuedEvent(queuedFocus) && (queuedFocus = null);
        null !== queuedDrag && attemptReplayContinuousQueuedEvent(queuedDrag) && (queuedDrag = null);
        null !== queuedMouse && attemptReplayContinuousQueuedEvent(queuedMouse) && (queuedMouse = null);
        queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap);
        queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);
    }
    function scheduleCallbackIfUnblocked(queuedEvent, unblocked) {
        queuedEvent.blockedOn === unblocked && (queuedEvent.blockedOn = null, hasScheduledReplayAttempt || (hasScheduledReplayAttempt = !0, Scheduler.unstable_scheduleCallback(Scheduler.unstable_NormalPriority, replayUnblockedEvents)));
    }
    function scheduleReplayQueueIfNeeded(formReplayingQueue) {
        lastScheduledReplayQueue !== formReplayingQueue && (lastScheduledReplayQueue = formReplayingQueue, Scheduler.unstable_scheduleCallback(Scheduler.unstable_NormalPriority, function() {
            lastScheduledReplayQueue === formReplayingQueue && (lastScheduledReplayQueue = null);
            for(var i = 0; i < formReplayingQueue.length; i += 3){
                var form = formReplayingQueue[i], submitterOrAction = formReplayingQueue[i + 1], formData = formReplayingQueue[i + 2];
                if ("function" !== typeof submitterOrAction) {
                    if (null === findInstanceBlockingTarget(submitterOrAction || form)) continue;
                    else break;
                }
                var formInst = getInstanceFromNode(form);
                null !== formInst && (formReplayingQueue.splice(i, 3), i -= 3, form = {
                    pending: !0,
                    data: formData,
                    method: form.method,
                    action: submitterOrAction
                }, Object.freeze(form), startHostTransition(formInst, form, submitterOrAction, formData));
            }
        }));
    }
    function retryIfBlockedOn(unblocked) {
        function unblock(queuedEvent) {
            return scheduleCallbackIfUnblocked(queuedEvent, unblocked);
        }
        null !== queuedFocus && scheduleCallbackIfUnblocked(queuedFocus, unblocked);
        null !== queuedDrag && scheduleCallbackIfUnblocked(queuedDrag, unblocked);
        null !== queuedMouse && scheduleCallbackIfUnblocked(queuedMouse, unblocked);
        queuedPointers.forEach(unblock);
        queuedPointerCaptures.forEach(unblock);
        for(var i = 0; i < queuedExplicitHydrationTargets.length; i++){
            var queuedTarget = queuedExplicitHydrationTargets[i];
            queuedTarget.blockedOn === unblocked && (queuedTarget.blockedOn = null);
        }
        for(; 0 < queuedExplicitHydrationTargets.length && (i = queuedExplicitHydrationTargets[0], null === i.blockedOn);)attemptExplicitHydrationTarget(i), null === i.blockedOn && queuedExplicitHydrationTargets.shift();
        i = (unblocked.ownerDocument || unblocked).$$reactFormReplay;
        if (null != i) for(queuedTarget = 0; queuedTarget < i.length; queuedTarget += 3){
            var form = i[queuedTarget], submitterOrAction = i[queuedTarget + 1], formProps = form[internalPropsKey] || null;
            if ("function" === typeof submitterOrAction) formProps || scheduleReplayQueueIfNeeded(i);
            else if (formProps) {
                var action = null;
                if (submitterOrAction && submitterOrAction.hasAttribute("formAction")) {
                    if (form = submitterOrAction, formProps = submitterOrAction[internalPropsKey] || null) action = formProps.formAction;
                    else {
                        if (null !== findInstanceBlockingTarget(form)) continue;
                    }
                } else action = formProps.action;
                "function" === typeof action ? i[queuedTarget + 1] = action : (i.splice(queuedTarget, 3), queuedTarget -= 3);
                scheduleReplayQueueIfNeeded(i);
            }
        }
    }
    function ReactDOMRoot(internalRoot) {
        this._internalRoot = internalRoot;
    }
    function ReactDOMHydrationRoot(internalRoot) {
        this._internalRoot = internalRoot;
    }
    function warnIfReactDOMContainerInDEV(container) {
        container[internalContainerInstanceKey] && (container._reactRootContainer ? console.error("You are calling ReactDOMClient.createRoot() on a container that was previously passed to ReactDOM.render(). This is not supported.") : console.error("You are calling ReactDOMClient.createRoot() on a container that has already been passed to createRoot() before. Instead, call root.render() on the existing root instead if you want to update it."));
    }
    "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());
    var Scheduler = require("c31f9b99c1e288cf"), React = require("c4c4bc2113e5c77f"), ReactDOM = require("772d609564cfd8f6"), assign = Object.assign, REACT_LEGACY_ELEMENT_TYPE = Symbol.for("react.element"), REACT_ELEMENT_TYPE = Symbol.for("react.transitional.element"), REACT_PORTAL_TYPE = Symbol.for("react.portal"), REACT_FRAGMENT_TYPE = Symbol.for("react.fragment"), REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode"), REACT_PROFILER_TYPE = Symbol.for("react.profiler"), REACT_PROVIDER_TYPE = Symbol.for("react.provider"), REACT_CONSUMER_TYPE = Symbol.for("react.consumer"), REACT_CONTEXT_TYPE = Symbol.for("react.context"), REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"), REACT_SUSPENSE_TYPE = Symbol.for("react.suspense"), REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list"), REACT_MEMO_TYPE = Symbol.for("react.memo"), REACT_LAZY_TYPE = Symbol.for("react.lazy");
    Symbol.for("react.scope");
    var REACT_ACTIVITY_TYPE = Symbol.for("react.activity");
    Symbol.for("react.legacy_hidden");
    Symbol.for("react.tracing_marker");
    var REACT_MEMO_CACHE_SENTINEL = Symbol.for("react.memo_cache_sentinel");
    Symbol.for("react.view_transition");
    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator, REACT_CLIENT_REFERENCE = Symbol.for("react.client.reference"), isArrayImpl = Array.isArray, ReactSharedInternals = React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE, ReactDOMSharedInternals = ReactDOM.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE, NotPending = Object.freeze({
        pending: !1,
        data: null,
        method: null,
        action: null
    }), valueStack = [];
    var fiberStack = [];
    var index$jscomp$0 = -1, contextStackCursor = createCursor(null), contextFiberStackCursor = createCursor(null), rootInstanceStackCursor = createCursor(null), hostTransitionProviderCursor = createCursor(null), hasOwnProperty = Object.prototype.hasOwnProperty, scheduleCallback$3 = Scheduler.unstable_scheduleCallback, cancelCallback$1 = Scheduler.unstable_cancelCallback, shouldYield = Scheduler.unstable_shouldYield, requestPaint = Scheduler.unstable_requestPaint, now$1 = Scheduler.unstable_now, getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel, ImmediatePriority = Scheduler.unstable_ImmediatePriority, UserBlockingPriority = Scheduler.unstable_UserBlockingPriority, NormalPriority$1 = Scheduler.unstable_NormalPriority, LowPriority = Scheduler.unstable_LowPriority, IdlePriority = Scheduler.unstable_IdlePriority, log$1 = Scheduler.log, unstable_setDisableYieldValue = Scheduler.unstable_setDisableYieldValue, rendererID = null, injectedHook = null, injectedProfilingHooks = null, hasLoggedError = !1, isDevToolsPresent = "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__, clz32 = Math.clz32 ? Math.clz32 : clz32Fallback, log = Math.log, LN2 = Math.LN2, nextTransitionLane = 256, nextRetryLane = 4194304, DiscreteEventPriority = 2, ContinuousEventPriority = 8, DefaultEventPriority = 32, IdleEventPriority = 268435456, randomKey = Math.random().toString(36).slice(2), internalInstanceKey = "__reactFiber$" + randomKey, internalPropsKey = "__reactProps$" + randomKey, internalContainerInstanceKey = "__reactContainer$" + randomKey, internalEventHandlersKey = "__reactEvents$" + randomKey, internalEventHandlerListenersKey = "__reactListeners$" + randomKey, internalEventHandlesSetKey = "__reactHandles$" + randomKey, internalRootNodeResourcesKey = "__reactResources$" + randomKey, internalHoistableMarker = "__reactMarker$" + randomKey, allNativeEvents = new Set(), registrationNameDependencies = {}, possibleRegistrationNames = {}, hasReadOnlyValue = {
        button: !0,
        checkbox: !0,
        image: !0,
        hidden: !0,
        radio: !0,
        reset: !0,
        submit: !0
    }, VALID_ATTRIBUTE_NAME_REGEX = RegExp("^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"), illegalAttributeNameCache = {}, validatedAttributeNameCache = {}, disabledDepth = 0, prevLog, prevInfo, prevWarn, prevError, prevGroup, prevGroupCollapsed, prevGroupEnd;
    disabledLog.__reactDisabledLog = !0;
    var prefix, suffix, reentry = !1;
    var componentFrameCache = new ("function" === typeof WeakMap ? WeakMap : Map)();
    var current = null, isRendering = !1, escapeSelectorAttributeValueInsideDoubleQuotesRegex = /[\n"\\]/g, didWarnValueDefaultValue$1 = !1, didWarnCheckedDefaultChecked = !1, didWarnSelectedSetOnOption = !1, didWarnInvalidChild = !1, didWarnInvalidInnerHTML = !1;
    var didWarnValueDefaultValue = !1;
    var valuePropNames = [
        "value",
        "defaultValue"
    ], didWarnValDefaultVal = !1, needsEscaping = /["'&<>\n\t]|^\s|\s$/, specialTags = "address applet area article aside base basefont bgsound blockquote body br button caption center col colgroup dd details dir div dl dt embed fieldset figcaption figure footer form frame frameset h1 h2 h3 h4 h5 h6 head header hgroup hr html iframe img input isindex li link listing main marquee menu menuitem meta nav noembed noframes noscript object ol p param plaintext pre script section select source style summary table tbody td template textarea tfoot th thead title tr track ul wbr xmp".split(" "), inScopeTags = "applet caption html table td th marquee object template foreignObject desc title".split(" "), buttonScopeTags = inScopeTags.concat([
        "button"
    ]), impliedEndTags = "dd dt li option optgroup p rp rt".split(" "), emptyAncestorInfoDev = {
        current: null,
        formTag: null,
        aTagInScope: null,
        buttonTagInScope: null,
        nobrTagInScope: null,
        pTagInButtonScope: null,
        listItemTagAutoclosing: null,
        dlItemTagAutoclosing: null,
        containerTagInScope: null,
        implicitRootScope: !1
    }, didWarn = {}, shorthandToLonghand = {
        animation: "animationDelay animationDirection animationDuration animationFillMode animationIterationCount animationName animationPlayState animationTimingFunction".split(" "),
        background: "backgroundAttachment backgroundClip backgroundColor backgroundImage backgroundOrigin backgroundPositionX backgroundPositionY backgroundRepeat backgroundSize".split(" "),
        backgroundPosition: [
            "backgroundPositionX",
            "backgroundPositionY"
        ],
        border: "borderBottomColor borderBottomStyle borderBottomWidth borderImageOutset borderImageRepeat borderImageSlice borderImageSource borderImageWidth borderLeftColor borderLeftStyle borderLeftWidth borderRightColor borderRightStyle borderRightWidth borderTopColor borderTopStyle borderTopWidth".split(" "),
        borderBlockEnd: [
            "borderBlockEndColor",
            "borderBlockEndStyle",
            "borderBlockEndWidth"
        ],
        borderBlockStart: [
            "borderBlockStartColor",
            "borderBlockStartStyle",
            "borderBlockStartWidth"
        ],
        borderBottom: [
            "borderBottomColor",
            "borderBottomStyle",
            "borderBottomWidth"
        ],
        borderColor: [
            "borderBottomColor",
            "borderLeftColor",
            "borderRightColor",
            "borderTopColor"
        ],
        borderImage: [
            "borderImageOutset",
            "borderImageRepeat",
            "borderImageSlice",
            "borderImageSource",
            "borderImageWidth"
        ],
        borderInlineEnd: [
            "borderInlineEndColor",
            "borderInlineEndStyle",
            "borderInlineEndWidth"
        ],
        borderInlineStart: [
            "borderInlineStartColor",
            "borderInlineStartStyle",
            "borderInlineStartWidth"
        ],
        borderLeft: [
            "borderLeftColor",
            "borderLeftStyle",
            "borderLeftWidth"
        ],
        borderRadius: [
            "borderBottomLeftRadius",
            "borderBottomRightRadius",
            "borderTopLeftRadius",
            "borderTopRightRadius"
        ],
        borderRight: [
            "borderRightColor",
            "borderRightStyle",
            "borderRightWidth"
        ],
        borderStyle: [
            "borderBottomStyle",
            "borderLeftStyle",
            "borderRightStyle",
            "borderTopStyle"
        ],
        borderTop: [
            "borderTopColor",
            "borderTopStyle",
            "borderTopWidth"
        ],
        borderWidth: [
            "borderBottomWidth",
            "borderLeftWidth",
            "borderRightWidth",
            "borderTopWidth"
        ],
        columnRule: [
            "columnRuleColor",
            "columnRuleStyle",
            "columnRuleWidth"
        ],
        columns: [
            "columnCount",
            "columnWidth"
        ],
        flex: [
            "flexBasis",
            "flexGrow",
            "flexShrink"
        ],
        flexFlow: [
            "flexDirection",
            "flexWrap"
        ],
        font: "fontFamily fontFeatureSettings fontKerning fontLanguageOverride fontSize fontSizeAdjust fontStretch fontStyle fontVariant fontVariantAlternates fontVariantCaps fontVariantEastAsian fontVariantLigatures fontVariantNumeric fontVariantPosition fontWeight lineHeight".split(" "),
        fontVariant: "fontVariantAlternates fontVariantCaps fontVariantEastAsian fontVariantLigatures fontVariantNumeric fontVariantPosition".split(" "),
        gap: [
            "columnGap",
            "rowGap"
        ],
        grid: "gridAutoColumns gridAutoFlow gridAutoRows gridTemplateAreas gridTemplateColumns gridTemplateRows".split(" "),
        gridArea: [
            "gridColumnEnd",
            "gridColumnStart",
            "gridRowEnd",
            "gridRowStart"
        ],
        gridColumn: [
            "gridColumnEnd",
            "gridColumnStart"
        ],
        gridColumnGap: [
            "columnGap"
        ],
        gridGap: [
            "columnGap",
            "rowGap"
        ],
        gridRow: [
            "gridRowEnd",
            "gridRowStart"
        ],
        gridRowGap: [
            "rowGap"
        ],
        gridTemplate: [
            "gridTemplateAreas",
            "gridTemplateColumns",
            "gridTemplateRows"
        ],
        listStyle: [
            "listStyleImage",
            "listStylePosition",
            "listStyleType"
        ],
        margin: [
            "marginBottom",
            "marginLeft",
            "marginRight",
            "marginTop"
        ],
        marker: [
            "markerEnd",
            "markerMid",
            "markerStart"
        ],
        mask: "maskClip maskComposite maskImage maskMode maskOrigin maskPositionX maskPositionY maskRepeat maskSize".split(" "),
        maskPosition: [
            "maskPositionX",
            "maskPositionY"
        ],
        outline: [
            "outlineColor",
            "outlineStyle",
            "outlineWidth"
        ],
        overflow: [
            "overflowX",
            "overflowY"
        ],
        padding: [
            "paddingBottom",
            "paddingLeft",
            "paddingRight",
            "paddingTop"
        ],
        placeContent: [
            "alignContent",
            "justifyContent"
        ],
        placeItems: [
            "alignItems",
            "justifyItems"
        ],
        placeSelf: [
            "alignSelf",
            "justifySelf"
        ],
        textDecoration: [
            "textDecorationColor",
            "textDecorationLine",
            "textDecorationStyle"
        ],
        textEmphasis: [
            "textEmphasisColor",
            "textEmphasisStyle"
        ],
        transition: [
            "transitionDelay",
            "transitionDuration",
            "transitionProperty",
            "transitionTimingFunction"
        ],
        wordWrap: [
            "overflowWrap"
        ]
    }, uppercasePattern = /([A-Z])/g, msPattern$1 = /^ms-/, badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/, msPattern = /^-ms-/, hyphenPattern = /-(.)/g, badStyleValueWithSemicolonPattern = /;\s*$/, warnedStyleNames = {}, warnedStyleValues = {}, warnedForNaNValue = !1, warnedForInfinityValue = !1, unitlessNumbers = new Set("animationIterationCount aspectRatio borderImageOutset borderImageSlice borderImageWidth boxFlex boxFlexGroup boxOrdinalGroup columnCount columns flex flexGrow flexPositive flexShrink flexNegative flexOrder gridArea gridRow gridRowEnd gridRowSpan gridRowStart gridColumn gridColumnEnd gridColumnSpan gridColumnStart fontWeight lineClamp lineHeight opacity order orphans scale tabSize widows zIndex zoom fillOpacity floodOpacity stopOpacity strokeDasharray strokeDashoffset strokeMiterlimit strokeOpacity strokeWidth MozAnimationIterationCount MozBoxFlex MozBoxFlexGroup MozLineClamp msAnimationIterationCount msFlex msZoom msFlexGrow msFlexNegative msFlexOrder msFlexPositive msFlexShrink msGridColumn msGridColumnSpan msGridRow msGridRowSpan WebkitAnimationIterationCount WebkitBoxFlex WebKitBoxFlexGroup WebkitBoxOrdinalGroup WebkitColumnCount WebkitColumns WebkitFlex WebkitFlexGrow WebkitFlexPositive WebkitFlexShrink WebkitLineClamp".split(" ")), MATH_NAMESPACE = "http://www.w3.org/1998/Math/MathML", SVG_NAMESPACE = "http://www.w3.org/2000/svg", aliases = new Map([
        [
            "acceptCharset",
            "accept-charset"
        ],
        [
            "htmlFor",
            "for"
        ],
        [
            "httpEquiv",
            "http-equiv"
        ],
        [
            "crossOrigin",
            "crossorigin"
        ],
        [
            "accentHeight",
            "accent-height"
        ],
        [
            "alignmentBaseline",
            "alignment-baseline"
        ],
        [
            "arabicForm",
            "arabic-form"
        ],
        [
            "baselineShift",
            "baseline-shift"
        ],
        [
            "capHeight",
            "cap-height"
        ],
        [
            "clipPath",
            "clip-path"
        ],
        [
            "clipRule",
            "clip-rule"
        ],
        [
            "colorInterpolation",
            "color-interpolation"
        ],
        [
            "colorInterpolationFilters",
            "color-interpolation-filters"
        ],
        [
            "colorProfile",
            "color-profile"
        ],
        [
            "colorRendering",
            "color-rendering"
        ],
        [
            "dominantBaseline",
            "dominant-baseline"
        ],
        [
            "enableBackground",
            "enable-background"
        ],
        [
            "fillOpacity",
            "fill-opacity"
        ],
        [
            "fillRule",
            "fill-rule"
        ],
        [
            "floodColor",
            "flood-color"
        ],
        [
            "floodOpacity",
            "flood-opacity"
        ],
        [
            "fontFamily",
            "font-family"
        ],
        [
            "fontSize",
            "font-size"
        ],
        [
            "fontSizeAdjust",
            "font-size-adjust"
        ],
        [
            "fontStretch",
            "font-stretch"
        ],
        [
            "fontStyle",
            "font-style"
        ],
        [
            "fontVariant",
            "font-variant"
        ],
        [
            "fontWeight",
            "font-weight"
        ],
        [
            "glyphName",
            "glyph-name"
        ],
        [
            "glyphOrientationHorizontal",
            "glyph-orientation-horizontal"
        ],
        [
            "glyphOrientationVertical",
            "glyph-orientation-vertical"
        ],
        [
            "horizAdvX",
            "horiz-adv-x"
        ],
        [
            "horizOriginX",
            "horiz-origin-x"
        ],
        [
            "imageRendering",
            "image-rendering"
        ],
        [
            "letterSpacing",
            "letter-spacing"
        ],
        [
            "lightingColor",
            "lighting-color"
        ],
        [
            "markerEnd",
            "marker-end"
        ],
        [
            "markerMid",
            "marker-mid"
        ],
        [
            "markerStart",
            "marker-start"
        ],
        [
            "overlinePosition",
            "overline-position"
        ],
        [
            "overlineThickness",
            "overline-thickness"
        ],
        [
            "paintOrder",
            "paint-order"
        ],
        [
            "panose-1",
            "panose-1"
        ],
        [
            "pointerEvents",
            "pointer-events"
        ],
        [
            "renderingIntent",
            "rendering-intent"
        ],
        [
            "shapeRendering",
            "shape-rendering"
        ],
        [
            "stopColor",
            "stop-color"
        ],
        [
            "stopOpacity",
            "stop-opacity"
        ],
        [
            "strikethroughPosition",
            "strikethrough-position"
        ],
        [
            "strikethroughThickness",
            "strikethrough-thickness"
        ],
        [
            "strokeDasharray",
            "stroke-dasharray"
        ],
        [
            "strokeDashoffset",
            "stroke-dashoffset"
        ],
        [
            "strokeLinecap",
            "stroke-linecap"
        ],
        [
            "strokeLinejoin",
            "stroke-linejoin"
        ],
        [
            "strokeMiterlimit",
            "stroke-miterlimit"
        ],
        [
            "strokeOpacity",
            "stroke-opacity"
        ],
        [
            "strokeWidth",
            "stroke-width"
        ],
        [
            "textAnchor",
            "text-anchor"
        ],
        [
            "textDecoration",
            "text-decoration"
        ],
        [
            "textRendering",
            "text-rendering"
        ],
        [
            "transformOrigin",
            "transform-origin"
        ],
        [
            "underlinePosition",
            "underline-position"
        ],
        [
            "underlineThickness",
            "underline-thickness"
        ],
        [
            "unicodeBidi",
            "unicode-bidi"
        ],
        [
            "unicodeRange",
            "unicode-range"
        ],
        [
            "unitsPerEm",
            "units-per-em"
        ],
        [
            "vAlphabetic",
            "v-alphabetic"
        ],
        [
            "vHanging",
            "v-hanging"
        ],
        [
            "vIdeographic",
            "v-ideographic"
        ],
        [
            "vMathematical",
            "v-mathematical"
        ],
        [
            "vectorEffect",
            "vector-effect"
        ],
        [
            "vertAdvY",
            "vert-adv-y"
        ],
        [
            "vertOriginX",
            "vert-origin-x"
        ],
        [
            "vertOriginY",
            "vert-origin-y"
        ],
        [
            "wordSpacing",
            "word-spacing"
        ],
        [
            "writingMode",
            "writing-mode"
        ],
        [
            "xmlnsXlink",
            "xmlns:xlink"
        ],
        [
            "xHeight",
            "x-height"
        ]
    ]), possibleStandardNames = {
        accept: "accept",
        acceptcharset: "acceptCharset",
        "accept-charset": "acceptCharset",
        accesskey: "accessKey",
        action: "action",
        allowfullscreen: "allowFullScreen",
        alt: "alt",
        as: "as",
        async: "async",
        autocapitalize: "autoCapitalize",
        autocomplete: "autoComplete",
        autocorrect: "autoCorrect",
        autofocus: "autoFocus",
        autoplay: "autoPlay",
        autosave: "autoSave",
        capture: "capture",
        cellpadding: "cellPadding",
        cellspacing: "cellSpacing",
        challenge: "challenge",
        charset: "charSet",
        checked: "checked",
        children: "children",
        cite: "cite",
        class: "className",
        classid: "classID",
        classname: "className",
        cols: "cols",
        colspan: "colSpan",
        content: "content",
        contenteditable: "contentEditable",
        contextmenu: "contextMenu",
        controls: "controls",
        controlslist: "controlsList",
        coords: "coords",
        crossorigin: "crossOrigin",
        dangerouslysetinnerhtml: "dangerouslySetInnerHTML",
        data: "data",
        datetime: "dateTime",
        default: "default",
        defaultchecked: "defaultChecked",
        defaultvalue: "defaultValue",
        defer: "defer",
        dir: "dir",
        disabled: "disabled",
        disablepictureinpicture: "disablePictureInPicture",
        disableremoteplayback: "disableRemotePlayback",
        download: "download",
        draggable: "draggable",
        enctype: "encType",
        enterkeyhint: "enterKeyHint",
        fetchpriority: "fetchPriority",
        for: "htmlFor",
        form: "form",
        formmethod: "formMethod",
        formaction: "formAction",
        formenctype: "formEncType",
        formnovalidate: "formNoValidate",
        formtarget: "formTarget",
        frameborder: "frameBorder",
        headers: "headers",
        height: "height",
        hidden: "hidden",
        high: "high",
        href: "href",
        hreflang: "hrefLang",
        htmlfor: "htmlFor",
        httpequiv: "httpEquiv",
        "http-equiv": "httpEquiv",
        icon: "icon",
        id: "id",
        imagesizes: "imageSizes",
        imagesrcset: "imageSrcSet",
        inert: "inert",
        innerhtml: "innerHTML",
        inputmode: "inputMode",
        integrity: "integrity",
        is: "is",
        itemid: "itemID",
        itemprop: "itemProp",
        itemref: "itemRef",
        itemscope: "itemScope",
        itemtype: "itemType",
        keyparams: "keyParams",
        keytype: "keyType",
        kind: "kind",
        label: "label",
        lang: "lang",
        list: "list",
        loop: "loop",
        low: "low",
        manifest: "manifest",
        marginwidth: "marginWidth",
        marginheight: "marginHeight",
        max: "max",
        maxlength: "maxLength",
        media: "media",
        mediagroup: "mediaGroup",
        method: "method",
        min: "min",
        minlength: "minLength",
        multiple: "multiple",
        muted: "muted",
        name: "name",
        nomodule: "noModule",
        nonce: "nonce",
        novalidate: "noValidate",
        open: "open",
        optimum: "optimum",
        pattern: "pattern",
        placeholder: "placeholder",
        playsinline: "playsInline",
        poster: "poster",
        preload: "preload",
        profile: "profile",
        radiogroup: "radioGroup",
        readonly: "readOnly",
        referrerpolicy: "referrerPolicy",
        rel: "rel",
        required: "required",
        reversed: "reversed",
        role: "role",
        rows: "rows",
        rowspan: "rowSpan",
        sandbox: "sandbox",
        scope: "scope",
        scoped: "scoped",
        scrolling: "scrolling",
        seamless: "seamless",
        selected: "selected",
        shape: "shape",
        size: "size",
        sizes: "sizes",
        span: "span",
        spellcheck: "spellCheck",
        src: "src",
        srcdoc: "srcDoc",
        srclang: "srcLang",
        srcset: "srcSet",
        start: "start",
        step: "step",
        style: "style",
        summary: "summary",
        tabindex: "tabIndex",
        target: "target",
        title: "title",
        type: "type",
        usemap: "useMap",
        value: "value",
        width: "width",
        wmode: "wmode",
        wrap: "wrap",
        about: "about",
        accentheight: "accentHeight",
        "accent-height": "accentHeight",
        accumulate: "accumulate",
        additive: "additive",
        alignmentbaseline: "alignmentBaseline",
        "alignment-baseline": "alignmentBaseline",
        allowreorder: "allowReorder",
        alphabetic: "alphabetic",
        amplitude: "amplitude",
        arabicform: "arabicForm",
        "arabic-form": "arabicForm",
        ascent: "ascent",
        attributename: "attributeName",
        attributetype: "attributeType",
        autoreverse: "autoReverse",
        azimuth: "azimuth",
        basefrequency: "baseFrequency",
        baselineshift: "baselineShift",
        "baseline-shift": "baselineShift",
        baseprofile: "baseProfile",
        bbox: "bbox",
        begin: "begin",
        bias: "bias",
        by: "by",
        calcmode: "calcMode",
        capheight: "capHeight",
        "cap-height": "capHeight",
        clip: "clip",
        clippath: "clipPath",
        "clip-path": "clipPath",
        clippathunits: "clipPathUnits",
        cliprule: "clipRule",
        "clip-rule": "clipRule",
        color: "color",
        colorinterpolation: "colorInterpolation",
        "color-interpolation": "colorInterpolation",
        colorinterpolationfilters: "colorInterpolationFilters",
        "color-interpolation-filters": "colorInterpolationFilters",
        colorprofile: "colorProfile",
        "color-profile": "colorProfile",
        colorrendering: "colorRendering",
        "color-rendering": "colorRendering",
        contentscripttype: "contentScriptType",
        contentstyletype: "contentStyleType",
        cursor: "cursor",
        cx: "cx",
        cy: "cy",
        d: "d",
        datatype: "datatype",
        decelerate: "decelerate",
        descent: "descent",
        diffuseconstant: "diffuseConstant",
        direction: "direction",
        display: "display",
        divisor: "divisor",
        dominantbaseline: "dominantBaseline",
        "dominant-baseline": "dominantBaseline",
        dur: "dur",
        dx: "dx",
        dy: "dy",
        edgemode: "edgeMode",
        elevation: "elevation",
        enablebackground: "enableBackground",
        "enable-background": "enableBackground",
        end: "end",
        exponent: "exponent",
        externalresourcesrequired: "externalResourcesRequired",
        fill: "fill",
        fillopacity: "fillOpacity",
        "fill-opacity": "fillOpacity",
        fillrule: "fillRule",
        "fill-rule": "fillRule",
        filter: "filter",
        filterres: "filterRes",
        filterunits: "filterUnits",
        floodopacity: "floodOpacity",
        "flood-opacity": "floodOpacity",
        floodcolor: "floodColor",
        "flood-color": "floodColor",
        focusable: "focusable",
        fontfamily: "fontFamily",
        "font-family": "fontFamily",
        fontsize: "fontSize",
        "font-size": "fontSize",
        fontsizeadjust: "fontSizeAdjust",
        "font-size-adjust": "fontSizeAdjust",
        fontstretch: "fontStretch",
        "font-stretch": "fontStretch",
        fontstyle: "fontStyle",
        "font-style": "fontStyle",
        fontvariant: "fontVariant",
        "font-variant": "fontVariant",
        fontweight: "fontWeight",
        "font-weight": "fontWeight",
        format: "format",
        from: "from",
        fx: "fx",
        fy: "fy",
        g1: "g1",
        g2: "g2",
        glyphname: "glyphName",
        "glyph-name": "glyphName",
        glyphorientationhorizontal: "glyphOrientationHorizontal",
        "glyph-orientation-horizontal": "glyphOrientationHorizontal",
        glyphorientationvertical: "glyphOrientationVertical",
        "glyph-orientation-vertical": "glyphOrientationVertical",
        glyphref: "glyphRef",
        gradienttransform: "gradientTransform",
        gradientunits: "gradientUnits",
        hanging: "hanging",
        horizadvx: "horizAdvX",
        "horiz-adv-x": "horizAdvX",
        horizoriginx: "horizOriginX",
        "horiz-origin-x": "horizOriginX",
        ideographic: "ideographic",
        imagerendering: "imageRendering",
        "image-rendering": "imageRendering",
        in2: "in2",
        in: "in",
        inlist: "inlist",
        intercept: "intercept",
        k1: "k1",
        k2: "k2",
        k3: "k3",
        k4: "k4",
        k: "k",
        kernelmatrix: "kernelMatrix",
        kernelunitlength: "kernelUnitLength",
        kerning: "kerning",
        keypoints: "keyPoints",
        keysplines: "keySplines",
        keytimes: "keyTimes",
        lengthadjust: "lengthAdjust",
        letterspacing: "letterSpacing",
        "letter-spacing": "letterSpacing",
        lightingcolor: "lightingColor",
        "lighting-color": "lightingColor",
        limitingconeangle: "limitingConeAngle",
        local: "local",
        markerend: "markerEnd",
        "marker-end": "markerEnd",
        markerheight: "markerHeight",
        markermid: "markerMid",
        "marker-mid": "markerMid",
        markerstart: "markerStart",
        "marker-start": "markerStart",
        markerunits: "markerUnits",
        markerwidth: "markerWidth",
        mask: "mask",
        maskcontentunits: "maskContentUnits",
        maskunits: "maskUnits",
        mathematical: "mathematical",
        mode: "mode",
        numoctaves: "numOctaves",
        offset: "offset",
        opacity: "opacity",
        operator: "operator",
        order: "order",
        orient: "orient",
        orientation: "orientation",
        origin: "origin",
        overflow: "overflow",
        overlineposition: "overlinePosition",
        "overline-position": "overlinePosition",
        overlinethickness: "overlineThickness",
        "overline-thickness": "overlineThickness",
        paintorder: "paintOrder",
        "paint-order": "paintOrder",
        panose1: "panose1",
        "panose-1": "panose1",
        pathlength: "pathLength",
        patterncontentunits: "patternContentUnits",
        patterntransform: "patternTransform",
        patternunits: "patternUnits",
        pointerevents: "pointerEvents",
        "pointer-events": "pointerEvents",
        points: "points",
        pointsatx: "pointsAtX",
        pointsaty: "pointsAtY",
        pointsatz: "pointsAtZ",
        popover: "popover",
        popovertarget: "popoverTarget",
        popovertargetaction: "popoverTargetAction",
        prefix: "prefix",
        preservealpha: "preserveAlpha",
        preserveaspectratio: "preserveAspectRatio",
        primitiveunits: "primitiveUnits",
        property: "property",
        r: "r",
        radius: "radius",
        refx: "refX",
        refy: "refY",
        renderingintent: "renderingIntent",
        "rendering-intent": "renderingIntent",
        repeatcount: "repeatCount",
        repeatdur: "repeatDur",
        requiredextensions: "requiredExtensions",
        requiredfeatures: "requiredFeatures",
        resource: "resource",
        restart: "restart",
        result: "result",
        results: "results",
        rotate: "rotate",
        rx: "rx",
        ry: "ry",
        scale: "scale",
        security: "security",
        seed: "seed",
        shaperendering: "shapeRendering",
        "shape-rendering": "shapeRendering",
        slope: "slope",
        spacing: "spacing",
        specularconstant: "specularConstant",
        specularexponent: "specularExponent",
        speed: "speed",
        spreadmethod: "spreadMethod",
        startoffset: "startOffset",
        stddeviation: "stdDeviation",
        stemh: "stemh",
        stemv: "stemv",
        stitchtiles: "stitchTiles",
        stopcolor: "stopColor",
        "stop-color": "stopColor",
        stopopacity: "stopOpacity",
        "stop-opacity": "stopOpacity",
        strikethroughposition: "strikethroughPosition",
        "strikethrough-position": "strikethroughPosition",
        strikethroughthickness: "strikethroughThickness",
        "strikethrough-thickness": "strikethroughThickness",
        string: "string",
        stroke: "stroke",
        strokedasharray: "strokeDasharray",
        "stroke-dasharray": "strokeDasharray",
        strokedashoffset: "strokeDashoffset",
        "stroke-dashoffset": "strokeDashoffset",
        strokelinecap: "strokeLinecap",
        "stroke-linecap": "strokeLinecap",
        strokelinejoin: "strokeLinejoin",
        "stroke-linejoin": "strokeLinejoin",
        strokemiterlimit: "strokeMiterlimit",
        "stroke-miterlimit": "strokeMiterlimit",
        strokewidth: "strokeWidth",
        "stroke-width": "strokeWidth",
        strokeopacity: "strokeOpacity",
        "stroke-opacity": "strokeOpacity",
        suppresscontenteditablewarning: "suppressContentEditableWarning",
        suppresshydrationwarning: "suppressHydrationWarning",
        surfacescale: "surfaceScale",
        systemlanguage: "systemLanguage",
        tablevalues: "tableValues",
        targetx: "targetX",
        targety: "targetY",
        textanchor: "textAnchor",
        "text-anchor": "textAnchor",
        textdecoration: "textDecoration",
        "text-decoration": "textDecoration",
        textlength: "textLength",
        textrendering: "textRendering",
        "text-rendering": "textRendering",
        to: "to",
        transform: "transform",
        transformorigin: "transformOrigin",
        "transform-origin": "transformOrigin",
        typeof: "typeof",
        u1: "u1",
        u2: "u2",
        underlineposition: "underlinePosition",
        "underline-position": "underlinePosition",
        underlinethickness: "underlineThickness",
        "underline-thickness": "underlineThickness",
        unicode: "unicode",
        unicodebidi: "unicodeBidi",
        "unicode-bidi": "unicodeBidi",
        unicoderange: "unicodeRange",
        "unicode-range": "unicodeRange",
        unitsperem: "unitsPerEm",
        "units-per-em": "unitsPerEm",
        unselectable: "unselectable",
        valphabetic: "vAlphabetic",
        "v-alphabetic": "vAlphabetic",
        values: "values",
        vectoreffect: "vectorEffect",
        "vector-effect": "vectorEffect",
        version: "version",
        vertadvy: "vertAdvY",
        "vert-adv-y": "vertAdvY",
        vertoriginx: "vertOriginX",
        "vert-origin-x": "vertOriginX",
        vertoriginy: "vertOriginY",
        "vert-origin-y": "vertOriginY",
        vhanging: "vHanging",
        "v-hanging": "vHanging",
        videographic: "vIdeographic",
        "v-ideographic": "vIdeographic",
        viewbox: "viewBox",
        viewtarget: "viewTarget",
        visibility: "visibility",
        vmathematical: "vMathematical",
        "v-mathematical": "vMathematical",
        vocab: "vocab",
        widths: "widths",
        wordspacing: "wordSpacing",
        "word-spacing": "wordSpacing",
        writingmode: "writingMode",
        "writing-mode": "writingMode",
        x1: "x1",
        x2: "x2",
        x: "x",
        xchannelselector: "xChannelSelector",
        xheight: "xHeight",
        "x-height": "xHeight",
        xlinkactuate: "xlinkActuate",
        "xlink:actuate": "xlinkActuate",
        xlinkarcrole: "xlinkArcrole",
        "xlink:arcrole": "xlinkArcrole",
        xlinkhref: "xlinkHref",
        "xlink:href": "xlinkHref",
        xlinkrole: "xlinkRole",
        "xlink:role": "xlinkRole",
        xlinkshow: "xlinkShow",
        "xlink:show": "xlinkShow",
        xlinktitle: "xlinkTitle",
        "xlink:title": "xlinkTitle",
        xlinktype: "xlinkType",
        "xlink:type": "xlinkType",
        xmlbase: "xmlBase",
        "xml:base": "xmlBase",
        xmllang: "xmlLang",
        "xml:lang": "xmlLang",
        xmlns: "xmlns",
        "xml:space": "xmlSpace",
        xmlnsxlink: "xmlnsXlink",
        "xmlns:xlink": "xmlnsXlink",
        xmlspace: "xmlSpace",
        y1: "y1",
        y2: "y2",
        y: "y",
        ychannelselector: "yChannelSelector",
        z: "z",
        zoomandpan: "zoomAndPan"
    }, ariaProperties = {
        "aria-current": 0,
        "aria-description": 0,
        "aria-details": 0,
        "aria-disabled": 0,
        "aria-hidden": 0,
        "aria-invalid": 0,
        "aria-keyshortcuts": 0,
        "aria-label": 0,
        "aria-roledescription": 0,
        "aria-autocomplete": 0,
        "aria-checked": 0,
        "aria-expanded": 0,
        "aria-haspopup": 0,
        "aria-level": 0,
        "aria-modal": 0,
        "aria-multiline": 0,
        "aria-multiselectable": 0,
        "aria-orientation": 0,
        "aria-placeholder": 0,
        "aria-pressed": 0,
        "aria-readonly": 0,
        "aria-required": 0,
        "aria-selected": 0,
        "aria-sort": 0,
        "aria-valuemax": 0,
        "aria-valuemin": 0,
        "aria-valuenow": 0,
        "aria-valuetext": 0,
        "aria-atomic": 0,
        "aria-busy": 0,
        "aria-live": 0,
        "aria-relevant": 0,
        "aria-dropeffect": 0,
        "aria-grabbed": 0,
        "aria-activedescendant": 0,
        "aria-colcount": 0,
        "aria-colindex": 0,
        "aria-colspan": 0,
        "aria-controls": 0,
        "aria-describedby": 0,
        "aria-errormessage": 0,
        "aria-flowto": 0,
        "aria-labelledby": 0,
        "aria-owns": 0,
        "aria-posinset": 0,
        "aria-rowcount": 0,
        "aria-rowindex": 0,
        "aria-rowspan": 0,
        "aria-setsize": 0
    }, warnedProperties$1 = {}, rARIA$1 = RegExp("^(aria)-[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"), rARIACamel$1 = RegExp("^(aria)[A-Z][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"), didWarnValueNull = !1, warnedProperties = {}, EVENT_NAME_REGEX = /^on./, INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/, rARIA = RegExp("^(aria)-[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"), rARIACamel = RegExp("^(aria)[A-Z][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"), isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*:/i, currentReplayingEvent = null, restoreTarget = null, restoreQueue = null, isInsideEventHandler = !1, canUseDOM = !("undefined" === typeof window || "undefined" === typeof window.document || "undefined" === typeof window.document.createElement), passiveBrowserEventsSupported = !1;
    if (canUseDOM) try {
        var options$jscomp$0 = {};
        Object.defineProperty(options$jscomp$0, "passive", {
            get: function() {
                passiveBrowserEventsSupported = !0;
            }
        });
        window.addEventListener("test", options$jscomp$0, options$jscomp$0);
        window.removeEventListener("test", options$jscomp$0, options$jscomp$0);
    } catch (e) {
        passiveBrowserEventsSupported = !1;
    }
    var root = null, startText = null, fallbackText = null, EventInterface = {
        eventPhase: 0,
        bubbles: 0,
        cancelable: 0,
        timeStamp: function(event) {
            return event.timeStamp || Date.now();
        },
        defaultPrevented: 0,
        isTrusted: 0
    }, SyntheticEvent = createSyntheticEvent(EventInterface), UIEventInterface = assign({}, EventInterface, {
        view: 0,
        detail: 0
    }), SyntheticUIEvent = createSyntheticEvent(UIEventInterface), lastMovementX, lastMovementY, lastMouseEvent, MouseEventInterface = assign({}, UIEventInterface, {
        screenX: 0,
        screenY: 0,
        clientX: 0,
        clientY: 0,
        pageX: 0,
        pageY: 0,
        ctrlKey: 0,
        shiftKey: 0,
        altKey: 0,
        metaKey: 0,
        getModifierState: getEventModifierState,
        button: 0,
        buttons: 0,
        relatedTarget: function(event) {
            return void 0 === event.relatedTarget ? event.fromElement === event.srcElement ? event.toElement : event.fromElement : event.relatedTarget;
        },
        movementX: function(event) {
            if ("movementX" in event) return event.movementX;
            event !== lastMouseEvent && (lastMouseEvent && "mousemove" === event.type ? (lastMovementX = event.screenX - lastMouseEvent.screenX, lastMovementY = event.screenY - lastMouseEvent.screenY) : lastMovementY = lastMovementX = 0, lastMouseEvent = event);
            return lastMovementX;
        },
        movementY: function(event) {
            return "movementY" in event ? event.movementY : lastMovementY;
        }
    }), SyntheticMouseEvent = createSyntheticEvent(MouseEventInterface), DragEventInterface = assign({}, MouseEventInterface, {
        dataTransfer: 0
    }), SyntheticDragEvent = createSyntheticEvent(DragEventInterface), FocusEventInterface = assign({}, UIEventInterface, {
        relatedTarget: 0
    }), SyntheticFocusEvent = createSyntheticEvent(FocusEventInterface), AnimationEventInterface = assign({}, EventInterface, {
        animationName: 0,
        elapsedTime: 0,
        pseudoElement: 0
    }), SyntheticAnimationEvent = createSyntheticEvent(AnimationEventInterface), ClipboardEventInterface = assign({}, EventInterface, {
        clipboardData: function(event) {
            return "clipboardData" in event ? event.clipboardData : window.clipboardData;
        }
    }), SyntheticClipboardEvent = createSyntheticEvent(ClipboardEventInterface), CompositionEventInterface = assign({}, EventInterface, {
        data: 0
    }), SyntheticCompositionEvent = createSyntheticEvent(CompositionEventInterface), SyntheticInputEvent = SyntheticCompositionEvent, normalizeKey = {
        Esc: "Escape",
        Spacebar: " ",
        Left: "ArrowLeft",
        Up: "ArrowUp",
        Right: "ArrowRight",
        Down: "ArrowDown",
        Del: "Delete",
        Win: "OS",
        Menu: "ContextMenu",
        Apps: "ContextMenu",
        Scroll: "ScrollLock",
        MozPrintableKey: "Unidentified"
    }, translateToKey = {
        8: "Backspace",
        9: "Tab",
        12: "Clear",
        13: "Enter",
        16: "Shift",
        17: "Control",
        18: "Alt",
        19: "Pause",
        20: "CapsLock",
        27: "Escape",
        32: " ",
        33: "PageUp",
        34: "PageDown",
        35: "End",
        36: "Home",
        37: "ArrowLeft",
        38: "ArrowUp",
        39: "ArrowRight",
        40: "ArrowDown",
        45: "Insert",
        46: "Delete",
        112: "F1",
        113: "F2",
        114: "F3",
        115: "F4",
        116: "F5",
        117: "F6",
        118: "F7",
        119: "F8",
        120: "F9",
        121: "F10",
        122: "F11",
        123: "F12",
        144: "NumLock",
        145: "ScrollLock",
        224: "Meta"
    }, modifierKeyToProp = {
        Alt: "altKey",
        Control: "ctrlKey",
        Meta: "metaKey",
        Shift: "shiftKey"
    }, KeyboardEventInterface = assign({}, UIEventInterface, {
        key: function(nativeEvent) {
            if (nativeEvent.key) {
                var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
                if ("Unidentified" !== key) return key;
            }
            return "keypress" === nativeEvent.type ? (nativeEvent = getEventCharCode(nativeEvent), 13 === nativeEvent ? "Enter" : String.fromCharCode(nativeEvent)) : "keydown" === nativeEvent.type || "keyup" === nativeEvent.type ? translateToKey[nativeEvent.keyCode] || "Unidentified" : "";
        },
        code: 0,
        location: 0,
        ctrlKey: 0,
        shiftKey: 0,
        altKey: 0,
        metaKey: 0,
        repeat: 0,
        locale: 0,
        getModifierState: getEventModifierState,
        charCode: function(event) {
            return "keypress" === event.type ? getEventCharCode(event) : 0;
        },
        keyCode: function(event) {
            return "keydown" === event.type || "keyup" === event.type ? event.keyCode : 0;
        },
        which: function(event) {
            return "keypress" === event.type ? getEventCharCode(event) : "keydown" === event.type || "keyup" === event.type ? event.keyCode : 0;
        }
    }), SyntheticKeyboardEvent = createSyntheticEvent(KeyboardEventInterface), PointerEventInterface = assign({}, MouseEventInterface, {
        pointerId: 0,
        width: 0,
        height: 0,
        pressure: 0,
        tangentialPressure: 0,
        tiltX: 0,
        tiltY: 0,
        twist: 0,
        pointerType: 0,
        isPrimary: 0
    }), SyntheticPointerEvent = createSyntheticEvent(PointerEventInterface), TouchEventInterface = assign({}, UIEventInterface, {
        touches: 0,
        targetTouches: 0,
        changedTouches: 0,
        altKey: 0,
        metaKey: 0,
        ctrlKey: 0,
        shiftKey: 0,
        getModifierState: getEventModifierState
    }), SyntheticTouchEvent = createSyntheticEvent(TouchEventInterface), TransitionEventInterface = assign({}, EventInterface, {
        propertyName: 0,
        elapsedTime: 0,
        pseudoElement: 0
    }), SyntheticTransitionEvent = createSyntheticEvent(TransitionEventInterface), WheelEventInterface = assign({}, MouseEventInterface, {
        deltaX: function(event) {
            return "deltaX" in event ? event.deltaX : "wheelDeltaX" in event ? -event.wheelDeltaX : 0;
        },
        deltaY: function(event) {
            return "deltaY" in event ? event.deltaY : "wheelDeltaY" in event ? -event.wheelDeltaY : "wheelDelta" in event ? -event.wheelDelta : 0;
        },
        deltaZ: 0,
        deltaMode: 0
    }), SyntheticWheelEvent = createSyntheticEvent(WheelEventInterface), ToggleEventInterface = assign({}, EventInterface, {
        newState: 0,
        oldState: 0
    }), SyntheticToggleEvent = createSyntheticEvent(ToggleEventInterface), END_KEYCODES = [
        9,
        13,
        27,
        32
    ], START_KEYCODE = 229, canUseCompositionEvent = canUseDOM && "CompositionEvent" in window, documentMode = null;
    canUseDOM && "documentMode" in document && (documentMode = document.documentMode);
    var canUseTextInputEvent = canUseDOM && "TextEvent" in window && !documentMode, useFallbackCompositionData = canUseDOM && (!canUseCompositionEvent || documentMode && 8 < documentMode && 11 >= documentMode), SPACEBAR_CODE = 32, SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE), hasSpaceKeypress = !1, isComposing = !1, supportedInputTypes = {
        color: !0,
        date: !0,
        datetime: !0,
        "datetime-local": !0,
        email: !0,
        month: !0,
        number: !0,
        password: !0,
        range: !0,
        search: !0,
        tel: !0,
        text: !0,
        time: !0,
        url: !0,
        week: !0
    }, activeElement$1 = null, activeElementInst$1 = null, isInputEventSupported = !1;
    canUseDOM && (isInputEventSupported = isEventSupported("input") && (!document.documentMode || 9 < document.documentMode));
    var objectIs = "function" === typeof Object.is ? Object.is : is, skipSelectionChangeEvent = canUseDOM && "documentMode" in document && 11 >= document.documentMode, activeElement = null, activeElementInst = null, lastSelection = null, mouseDown = !1, vendorPrefixes = {
        animationend: makePrefixMap("Animation", "AnimationEnd"),
        animationiteration: makePrefixMap("Animation", "AnimationIteration"),
        animationstart: makePrefixMap("Animation", "AnimationStart"),
        transitionrun: makePrefixMap("Transition", "TransitionRun"),
        transitionstart: makePrefixMap("Transition", "TransitionStart"),
        transitioncancel: makePrefixMap("Transition", "TransitionCancel"),
        transitionend: makePrefixMap("Transition", "TransitionEnd")
    }, prefixedEventNames = {}, style = {};
    canUseDOM && (style = document.createElement("div").style, "AnimationEvent" in window || (delete vendorPrefixes.animationend.animation, delete vendorPrefixes.animationiteration.animation, delete vendorPrefixes.animationstart.animation), "TransitionEvent" in window || delete vendorPrefixes.transitionend.transition);
    var ANIMATION_END = getVendorPrefixedEventName("animationend"), ANIMATION_ITERATION = getVendorPrefixedEventName("animationiteration"), ANIMATION_START = getVendorPrefixedEventName("animationstart"), TRANSITION_RUN = getVendorPrefixedEventName("transitionrun"), TRANSITION_START = getVendorPrefixedEventName("transitionstart"), TRANSITION_CANCEL = getVendorPrefixedEventName("transitioncancel"), TRANSITION_END = getVendorPrefixedEventName("transitionend"), topLevelEventsToReactNames = new Map(), simpleEventPluginEvents = "abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");
    simpleEventPluginEvents.push("scrollEnd");
    var CapturedStacks = new WeakMap(), OffscreenVisible = 1, OffscreenPassiveEffectsConnected = 2, concurrentQueues = [], concurrentQueuesIndex = 0, concurrentlyUpdatedLanes = 0, emptyContextObject = {};
    Object.freeze(emptyContextObject);
    var resolveFamily = null, failedBoundaries = null, NoMode = 0, ConcurrentMode = 1, ProfileMode = 2, StrictLegacyMode = 8, StrictEffectsMode = 16, NoStrictPassiveEffectsMode = 64;
    var hasBadMapPolyfill = !1;
    try {
        var nonExtensibleObject = Object.preventExtensions({});
        new Map([
            [
                nonExtensibleObject,
                null
            ]
        ]);
        new Set([
            nonExtensibleObject
        ]);
    } catch (e$3) {
        hasBadMapPolyfill = !0;
    }
    var forkStack = [], forkStackIndex = 0, treeForkProvider = null, treeForkCount = 0, idStack = [], idStackIndex = 0, treeContextProvider = null, treeContextId = 1, treeContextOverflow = "", hydrationParentFiber = null, nextHydratableInstance = null, isHydrating = !1, didSuspendOrErrorDEV = !1, hydrationDiffRootDEV = null, hydrationErrors = null, rootOrSingletonContext = !1, HydrationMismatchException = Error("Hydration Mismatch Exception: This is not a real error, and should not leak into userspace. If you're seeing this, it's likely a bug in React."), lastResetTime = 0;
    if ("object" === typeof performance && "function" === typeof performance.now) {
        var localPerformance = performance;
        var getCurrentTime = function() {
            return localPerformance.now();
        };
    } else {
        var localDate = Date;
        getCurrentTime = function() {
            return localDate.now();
        };
    }
    var valueCursor = createCursor(null);
    var rendererCursorDEV = createCursor(null);
    var rendererSigil = {};
    var currentlyRenderingFiber$1 = null, lastContextDependency = null, isDisallowedContextReadInDEV = !1, AbortControllerLocal = "undefined" !== typeof AbortController ? AbortController : function() {
        var listeners = [], signal = this.signal = {
            aborted: !1,
            addEventListener: function(type, listener) {
                listeners.push(listener);
            }
        };
        this.abort = function() {
            signal.aborted = !0;
            listeners.forEach(function(listener) {
                return listener();
            });
        };
    }, scheduleCallback$2 = Scheduler.unstable_scheduleCallback, NormalPriority = Scheduler.unstable_NormalPriority, CacheContext = {
        $$typeof: REACT_CONTEXT_TYPE,
        Consumer: null,
        Provider: null,
        _currentValue: null,
        _currentValue2: null,
        _threadCount: 0,
        _currentRenderer: null,
        _currentRenderer2: null
    }, now = Scheduler.unstable_now, renderStartTime = -0, commitStartTime = -0, profilerStartTime = -1.1, profilerEffectDuration = -0, currentUpdateIsNested = !1, nestedUpdateScheduled = !1, currentEntangledListeners = null, currentEntangledPendingCount = 0, currentEntangledLane = 0, currentEntangledActionThenable = null, prevOnStartTransitionFinish = ReactSharedInternals.S;
    ReactSharedInternals.S = function(transition, returnValue) {
        "object" === typeof returnValue && null !== returnValue && "function" === typeof returnValue.then && entangleAsyncAction(transition, returnValue);
        null !== prevOnStartTransitionFinish && prevOnStartTransitionFinish(transition, returnValue);
    };
    var resumedCache = createCursor(null), ReactStrictModeWarnings = {
        recordUnsafeLifecycleWarnings: function() {},
        flushPendingUnsafeLifecycleWarnings: function() {},
        recordLegacyContextWarning: function() {},
        flushLegacyContextWarning: function() {},
        discardPendingWarnings: function() {}
    }, pendingComponentWillMountWarnings = [], pendingUNSAFE_ComponentWillMountWarnings = [], pendingComponentWillReceivePropsWarnings = [], pendingUNSAFE_ComponentWillReceivePropsWarnings = [], pendingComponentWillUpdateWarnings = [], pendingUNSAFE_ComponentWillUpdateWarnings = [], didWarnAboutUnsafeLifecycles = new Set();
    ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function(fiber, instance) {
        didWarnAboutUnsafeLifecycles.has(fiber.type) || ("function" === typeof instance.componentWillMount && !0 !== instance.componentWillMount.__suppressDeprecationWarning && pendingComponentWillMountWarnings.push(fiber), fiber.mode & StrictLegacyMode && "function" === typeof instance.UNSAFE_componentWillMount && pendingUNSAFE_ComponentWillMountWarnings.push(fiber), "function" === typeof instance.componentWillReceiveProps && !0 !== instance.componentWillReceiveProps.__suppressDeprecationWarning && pendingComponentWillReceivePropsWarnings.push(fiber), fiber.mode & StrictLegacyMode && "function" === typeof instance.UNSAFE_componentWillReceiveProps && pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber), "function" === typeof instance.componentWillUpdate && !0 !== instance.componentWillUpdate.__suppressDeprecationWarning && pendingComponentWillUpdateWarnings.push(fiber), fiber.mode & StrictLegacyMode && "function" === typeof instance.UNSAFE_componentWillUpdate && pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber));
    };
    ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function() {
        var componentWillMountUniqueNames = new Set();
        0 < pendingComponentWillMountWarnings.length && (pendingComponentWillMountWarnings.forEach(function(fiber) {
            componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
            didWarnAboutUnsafeLifecycles.add(fiber.type);
        }), pendingComponentWillMountWarnings = []);
        var UNSAFE_componentWillMountUniqueNames = new Set();
        0 < pendingUNSAFE_ComponentWillMountWarnings.length && (pendingUNSAFE_ComponentWillMountWarnings.forEach(function(fiber) {
            UNSAFE_componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
            didWarnAboutUnsafeLifecycles.add(fiber.type);
        }), pendingUNSAFE_ComponentWillMountWarnings = []);
        var componentWillReceivePropsUniqueNames = new Set();
        0 < pendingComponentWillReceivePropsWarnings.length && (pendingComponentWillReceivePropsWarnings.forEach(function(fiber) {
            componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
            didWarnAboutUnsafeLifecycles.add(fiber.type);
        }), pendingComponentWillReceivePropsWarnings = []);
        var UNSAFE_componentWillReceivePropsUniqueNames = new Set();
        0 < pendingUNSAFE_ComponentWillReceivePropsWarnings.length && (pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function(fiber) {
            UNSAFE_componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
            didWarnAboutUnsafeLifecycles.add(fiber.type);
        }), pendingUNSAFE_ComponentWillReceivePropsWarnings = []);
        var componentWillUpdateUniqueNames = new Set();
        0 < pendingComponentWillUpdateWarnings.length && (pendingComponentWillUpdateWarnings.forEach(function(fiber) {
            componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
            didWarnAboutUnsafeLifecycles.add(fiber.type);
        }), pendingComponentWillUpdateWarnings = []);
        var UNSAFE_componentWillUpdateUniqueNames = new Set();
        0 < pendingUNSAFE_ComponentWillUpdateWarnings.length && (pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function(fiber) {
            UNSAFE_componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
            didWarnAboutUnsafeLifecycles.add(fiber.type);
        }), pendingUNSAFE_ComponentWillUpdateWarnings = []);
        if (0 < UNSAFE_componentWillMountUniqueNames.size) {
            var sortedNames = setToSortedString(UNSAFE_componentWillMountUniqueNames);
            console.error("Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. See https://react.dev/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n\nPlease update the following components: %s", sortedNames);
        }
        0 < UNSAFE_componentWillReceivePropsUniqueNames.size && (sortedNames = setToSortedString(UNSAFE_componentWillReceivePropsUniqueNames), console.error("Using UNSAFE_componentWillReceiveProps in strict mode is not recommended and may indicate bugs in your code. See https://react.dev/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://react.dev/link/derived-state\n\nPlease update the following components: %s", sortedNames));
        0 < UNSAFE_componentWillUpdateUniqueNames.size && (sortedNames = setToSortedString(UNSAFE_componentWillUpdateUniqueNames), console.error("Using UNSAFE_componentWillUpdate in strict mode is not recommended and may indicate bugs in your code. See https://react.dev/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n\nPlease update the following components: %s", sortedNames));
        0 < componentWillMountUniqueNames.size && (sortedNames = setToSortedString(componentWillMountUniqueNames), console.warn("componentWillMount has been renamed, and is not recommended for use. See https://react.dev/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n* Rename componentWillMount to UNSAFE_componentWillMount to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", sortedNames));
        0 < componentWillReceivePropsUniqueNames.size && (sortedNames = setToSortedString(componentWillReceivePropsUniqueNames), console.warn("componentWillReceiveProps has been renamed, and is not recommended for use. See https://react.dev/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://react.dev/link/derived-state\n* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", sortedNames));
        0 < componentWillUpdateUniqueNames.size && (sortedNames = setToSortedString(componentWillUpdateUniqueNames), console.warn("componentWillUpdate has been renamed, and is not recommended for use. See https://react.dev/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", sortedNames));
    };
    var pendingLegacyContextWarning = new Map(), didWarnAboutLegacyContext = new Set();
    ReactStrictModeWarnings.recordLegacyContextWarning = function(fiber, instance) {
        var strictRoot = null;
        for(var node = fiber; null !== node;)node.mode & StrictLegacyMode && (strictRoot = node), node = node.return;
        null === strictRoot ? console.error("Expected to find a StrictMode component in a strict mode tree. This error is likely caused by a bug in React. Please file an issue.") : !didWarnAboutLegacyContext.has(fiber.type) && (node = pendingLegacyContextWarning.get(strictRoot), null != fiber.type.contextTypes || null != fiber.type.childContextTypes || null !== instance && "function" === typeof instance.getChildContext) && (void 0 === node && (node = [], pendingLegacyContextWarning.set(strictRoot, node)), node.push(fiber));
    };
    ReactStrictModeWarnings.flushLegacyContextWarning = function() {
        pendingLegacyContextWarning.forEach(function(fiberArray) {
            if (0 !== fiberArray.length) {
                var firstFiber = fiberArray[0], uniqueNames = new Set();
                fiberArray.forEach(function(fiber) {
                    uniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                    didWarnAboutLegacyContext.add(fiber.type);
                });
                var sortedNames = setToSortedString(uniqueNames);
                runWithFiberInDEV(firstFiber, function() {
                    console.error("Legacy context API has been detected within a strict-mode tree.\n\nThe old API will be supported in all 16.x releases, but applications using it should migrate to the new version.\n\nPlease update the following components: %s\n\nLearn more about this warning here: https://react.dev/link/legacy-context", sortedNames);
                });
            }
        });
    };
    ReactStrictModeWarnings.discardPendingWarnings = function() {
        pendingComponentWillMountWarnings = [];
        pendingUNSAFE_ComponentWillMountWarnings = [];
        pendingComponentWillReceivePropsWarnings = [];
        pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
        pendingComponentWillUpdateWarnings = [];
        pendingUNSAFE_ComponentWillUpdateWarnings = [];
        pendingLegacyContextWarning = new Map();
    };
    var SuspenseException = Error("Suspense Exception: This is not a real error! It's an implementation detail of `use` to interrupt the current render. You must either rethrow it immediately, or move the `use` call outside of the `try/catch` block. Capturing without rethrowing will lead to unexpected behavior.\n\nTo handle async errors, wrap your component in an error boundary, or call the promise's `.catch` method and pass the result to `use`."), SuspenseyCommitException = Error("Suspense Exception: This is not a real error, and should not leak into userspace. If you're seeing this, it's likely a bug in React."), SuspenseActionException = Error("Suspense Exception: This is not a real error! It's an implementation detail of `useActionState` to interrupt the current render. You must either rethrow it immediately, or move the `useActionState` call outside of the `try/catch` block. Capturing without rethrowing will lead to unexpected behavior.\n\nTo handle async errors, wrap your component in an error boundary."), noopSuspenseyCommitThenable = {
        then: function() {
            console.error('Internal React error: A listener was unexpectedly attached to a "noop" thenable. This is a bug in React. Please file an issue.');
        }
    }, suspendedThenable = null, needsToResetSuspendedThenableDEV = !1, NoFlags = 0, HasEffect = 1, Insertion = 2, Layout = 4, Passive = 8, UpdateState = 0, ReplaceState = 1, ForceUpdate = 2, CaptureUpdate = 3, hasForceUpdate = !1;
    var didWarnUpdateInsideUpdate = !1;
    var currentlyProcessingQueue = null;
    var didReadFromEntangledAsyncAction = !1, currentTreeHiddenStackCursor = createCursor(null), prevEntangledRenderLanesCursor = createCursor(0), didWarnUncachedGetSnapshot;
    var didWarnAboutMismatchedHooksForComponent = new Set();
    var didWarnAboutUseWrappedInTryCatch = new Set();
    var didWarnAboutAsyncClientComponent = new Set();
    var didWarnAboutUseFormState = new Set();
    var renderLanes = 0, currentlyRenderingFiber = null, currentHook = null, workInProgressHook = null, didScheduleRenderPhaseUpdate = !1, didScheduleRenderPhaseUpdateDuringThisPass = !1, shouldDoubleInvokeUserFnsInHooksDEV = !1, localIdCounter = 0, thenableIndexCounter$1 = 0, thenableState$1 = null, globalClientIdCounter = 0, RE_RENDER_LIMIT = 25, currentHookNameInDev = null, hookTypesDev = null, hookTypesUpdateIndexDev = -1, ignorePreviousDependencies = !1, ContextOnlyDispatcher = {
        readContext: readContext,
        use: use,
        useCallback: throwInvalidHookError,
        useContext: throwInvalidHookError,
        useEffect: throwInvalidHookError,
        useImperativeHandle: throwInvalidHookError,
        useLayoutEffect: throwInvalidHookError,
        useInsertionEffect: throwInvalidHookError,
        useMemo: throwInvalidHookError,
        useReducer: throwInvalidHookError,
        useRef: throwInvalidHookError,
        useState: throwInvalidHookError,
        useDebugValue: throwInvalidHookError,
        useDeferredValue: throwInvalidHookError,
        useTransition: throwInvalidHookError,
        useSyncExternalStore: throwInvalidHookError,
        useId: throwInvalidHookError,
        useHostTransitionStatus: throwInvalidHookError,
        useFormState: throwInvalidHookError,
        useActionState: throwInvalidHookError,
        useOptimistic: throwInvalidHookError,
        useMemoCache: throwInvalidHookError,
        useCacheRefresh: throwInvalidHookError
    }, HooksDispatcherOnMountInDEV = null, HooksDispatcherOnMountWithHookTypesInDEV = null, HooksDispatcherOnUpdateInDEV = null, HooksDispatcherOnRerenderInDEV = null, InvalidNestedHooksDispatcherOnMountInDEV = null, InvalidNestedHooksDispatcherOnUpdateInDEV = null, InvalidNestedHooksDispatcherOnRerenderInDEV = null;
    HooksDispatcherOnMountInDEV = {
        readContext: function(context) {
            return readContext(context);
        },
        use: use,
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            mountHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, createDeps) {
            currentHookNameInDev = "useEffect";
            mountHookTypesDev();
            checkDepsAreArrayDev(createDeps);
            return mountEffect(create, createDeps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            mountEffectImpl(4, Insertion, create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountMemo(create, deps);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            mountHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountReducer(reducer, initialArg, init);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = "useRef";
            mountHookTypesDev();
            return mountRef(initialValue);
        },
        useState: function(initialState) {
            currentHookNameInDev = "useState";
            mountHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountState(initialState);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useDebugValue: function() {
            currentHookNameInDev = "useDebugValue";
            mountHookTypesDev();
        },
        useDeferredValue: function(value, initialValue) {
            currentHookNameInDev = "useDeferredValue";
            mountHookTypesDev();
            return mountDeferredValue(value, initialValue);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            mountHookTypesDev();
            return mountTransition();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            mountHookTypesDev();
            return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            mountHookTypesDev();
            return mountId();
        },
        useFormState: function(action, initialState) {
            currentHookNameInDev = "useFormState";
            mountHookTypesDev();
            warnOnUseFormStateInDev();
            return mountActionState(action, initialState);
        },
        useActionState: function(action, initialState) {
            currentHookNameInDev = "useActionState";
            mountHookTypesDev();
            return mountActionState(action, initialState);
        },
        useOptimistic: function(passthrough) {
            currentHookNameInDev = "useOptimistic";
            mountHookTypesDev();
            return mountOptimistic(passthrough);
        },
        useHostTransitionStatus: useHostTransitionStatus,
        useMemoCache: useMemoCache,
        useCacheRefresh: function() {
            currentHookNameInDev = "useCacheRefresh";
            mountHookTypesDev();
            return mountRefresh();
        }
    };
    HooksDispatcherOnMountWithHookTypesInDEV = {
        readContext: function(context) {
            return readContext(context);
        },
        use: use,
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            updateHookTypesDev();
            return mountCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, createDeps) {
            currentHookNameInDev = "useEffect";
            updateHookTypesDev();
            return mountEffect(create, createDeps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            updateHookTypesDev();
            return mountImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            updateHookTypesDev();
            mountEffectImpl(4, Insertion, create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            updateHookTypesDev();
            return mountLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountMemo(create, deps);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountReducer(reducer, initialArg, init);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = "useRef";
            updateHookTypesDev();
            return mountRef(initialValue);
        },
        useState: function(initialState) {
            currentHookNameInDev = "useState";
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountState(initialState);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useDebugValue: function() {
            currentHookNameInDev = "useDebugValue";
            updateHookTypesDev();
        },
        useDeferredValue: function(value, initialValue) {
            currentHookNameInDev = "useDeferredValue";
            updateHookTypesDev();
            return mountDeferredValue(value, initialValue);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            updateHookTypesDev();
            return mountTransition();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            updateHookTypesDev();
            return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            updateHookTypesDev();
            return mountId();
        },
        useActionState: function(action, initialState) {
            currentHookNameInDev = "useActionState";
            updateHookTypesDev();
            return mountActionState(action, initialState);
        },
        useFormState: function(action, initialState) {
            currentHookNameInDev = "useFormState";
            updateHookTypesDev();
            warnOnUseFormStateInDev();
            return mountActionState(action, initialState);
        },
        useOptimistic: function(passthrough) {
            currentHookNameInDev = "useOptimistic";
            updateHookTypesDev();
            return mountOptimistic(passthrough);
        },
        useHostTransitionStatus: useHostTransitionStatus,
        useMemoCache: useMemoCache,
        useCacheRefresh: function() {
            currentHookNameInDev = "useCacheRefresh";
            updateHookTypesDev();
            return mountRefresh();
        }
    };
    HooksDispatcherOnUpdateInDEV = {
        readContext: function(context) {
            return readContext(context);
        },
        use: use,
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, createDeps) {
            currentHookNameInDev = "useEffect";
            updateHookTypesDev();
            updateEffectImpl(2048, Passive, create, createDeps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            updateHookTypesDev();
            return updateEffectImpl(4, Insertion, create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            updateHookTypesDev();
            return updateEffectImpl(4, Layout, create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateReducer(reducer, initialArg, init);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useRef: function() {
            currentHookNameInDev = "useRef";
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        },
        useState: function() {
            currentHookNameInDev = "useState";
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateReducer(basicStateReducer);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useDebugValue: function() {
            currentHookNameInDev = "useDebugValue";
            updateHookTypesDev();
        },
        useDeferredValue: function(value, initialValue) {
            currentHookNameInDev = "useDeferredValue";
            updateHookTypesDev();
            return updateDeferredValue(value, initialValue);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            updateHookTypesDev();
            return updateTransition();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            updateHookTypesDev();
            return updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        },
        useFormState: function(action) {
            currentHookNameInDev = "useFormState";
            updateHookTypesDev();
            warnOnUseFormStateInDev();
            return updateActionState(action);
        },
        useActionState: function(action) {
            currentHookNameInDev = "useActionState";
            updateHookTypesDev();
            return updateActionState(action);
        },
        useOptimistic: function(passthrough, reducer) {
            currentHookNameInDev = "useOptimistic";
            updateHookTypesDev();
            return updateOptimistic(passthrough, reducer);
        },
        useHostTransitionStatus: useHostTransitionStatus,
        useMemoCache: useMemoCache,
        useCacheRefresh: function() {
            currentHookNameInDev = "useCacheRefresh";
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        }
    };
    HooksDispatcherOnRerenderInDEV = {
        readContext: function(context) {
            return readContext(context);
        },
        use: use,
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, createDeps) {
            currentHookNameInDev = "useEffect";
            updateHookTypesDev();
            updateEffectImpl(2048, Passive, create, createDeps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            updateHookTypesDev();
            return updateEffectImpl(4, Insertion, create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            updateHookTypesDev();
            return updateEffectImpl(4, Layout, create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnRerenderInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnRerenderInDEV;
            try {
                return rerenderReducer(reducer, initialArg, init);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useRef: function() {
            currentHookNameInDev = "useRef";
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        },
        useState: function() {
            currentHookNameInDev = "useState";
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnRerenderInDEV;
            try {
                return rerenderReducer(basicStateReducer);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useDebugValue: function() {
            currentHookNameInDev = "useDebugValue";
            updateHookTypesDev();
        },
        useDeferredValue: function(value, initialValue) {
            currentHookNameInDev = "useDeferredValue";
            updateHookTypesDev();
            return rerenderDeferredValue(value, initialValue);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            updateHookTypesDev();
            return rerenderTransition();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            updateHookTypesDev();
            return updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        },
        useFormState: function(action) {
            currentHookNameInDev = "useFormState";
            updateHookTypesDev();
            warnOnUseFormStateInDev();
            return rerenderActionState(action);
        },
        useActionState: function(action) {
            currentHookNameInDev = "useActionState";
            updateHookTypesDev();
            return rerenderActionState(action);
        },
        useOptimistic: function(passthrough, reducer) {
            currentHookNameInDev = "useOptimistic";
            updateHookTypesDev();
            return rerenderOptimistic(passthrough, reducer);
        },
        useHostTransitionStatus: useHostTransitionStatus,
        useMemoCache: useMemoCache,
        useCacheRefresh: function() {
            currentHookNameInDev = "useCacheRefresh";
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        }
    };
    InvalidNestedHooksDispatcherOnMountInDEV = {
        readContext: function(context) {
            warnInvalidContextAccess();
            return readContext(context);
        },
        use: function(usable) {
            warnInvalidHookAccess();
            return use(usable);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, createDeps) {
            currentHookNameInDev = "useEffect";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountEffect(create, createDeps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            warnInvalidHookAccess();
            mountHookTypesDev();
            mountEffectImpl(4, Insertion, create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            warnInvalidHookAccess();
            mountHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountMemo(create, deps);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            warnInvalidHookAccess();
            mountHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountReducer(reducer, initialArg, init);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = "useRef";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountRef(initialValue);
        },
        useState: function(initialState) {
            currentHookNameInDev = "useState";
            warnInvalidHookAccess();
            mountHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountState(initialState);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useDebugValue: function() {
            currentHookNameInDev = "useDebugValue";
            warnInvalidHookAccess();
            mountHookTypesDev();
        },
        useDeferredValue: function(value, initialValue) {
            currentHookNameInDev = "useDeferredValue";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountDeferredValue(value, initialValue);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountTransition();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountId();
        },
        useFormState: function(action, initialState) {
            currentHookNameInDev = "useFormState";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountActionState(action, initialState);
        },
        useActionState: function(action, initialState) {
            currentHookNameInDev = "useActionState";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountActionState(action, initialState);
        },
        useOptimistic: function(passthrough) {
            currentHookNameInDev = "useOptimistic";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountOptimistic(passthrough);
        },
        useMemoCache: function(size) {
            warnInvalidHookAccess();
            return useMemoCache(size);
        },
        useHostTransitionStatus: useHostTransitionStatus,
        useCacheRefresh: function() {
            currentHookNameInDev = "useCacheRefresh";
            mountHookTypesDev();
            return mountRefresh();
        }
    };
    InvalidNestedHooksDispatcherOnUpdateInDEV = {
        readContext: function(context) {
            warnInvalidContextAccess();
            return readContext(context);
        },
        use: function(usable) {
            warnInvalidHookAccess();
            return use(usable);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, createDeps) {
            currentHookNameInDev = "useEffect";
            warnInvalidHookAccess();
            updateHookTypesDev();
            updateEffectImpl(2048, Passive, create, createDeps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateEffectImpl(4, Insertion, create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateEffectImpl(4, Layout, create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateReducer(reducer, initialArg, init);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useRef: function() {
            currentHookNameInDev = "useRef";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        },
        useState: function() {
            currentHookNameInDev = "useState";
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateReducer(basicStateReducer);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useDebugValue: function() {
            currentHookNameInDev = "useDebugValue";
            warnInvalidHookAccess();
            updateHookTypesDev();
        },
        useDeferredValue: function(value, initialValue) {
            currentHookNameInDev = "useDeferredValue";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateDeferredValue(value, initialValue);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateTransition();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        },
        useFormState: function(action) {
            currentHookNameInDev = "useFormState";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateActionState(action);
        },
        useActionState: function(action) {
            currentHookNameInDev = "useActionState";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateActionState(action);
        },
        useOptimistic: function(passthrough, reducer) {
            currentHookNameInDev = "useOptimistic";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateOptimistic(passthrough, reducer);
        },
        useMemoCache: function(size) {
            warnInvalidHookAccess();
            return useMemoCache(size);
        },
        useHostTransitionStatus: useHostTransitionStatus,
        useCacheRefresh: function() {
            currentHookNameInDev = "useCacheRefresh";
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        }
    };
    InvalidNestedHooksDispatcherOnRerenderInDEV = {
        readContext: function(context) {
            warnInvalidContextAccess();
            return readContext(context);
        },
        use: function(usable) {
            warnInvalidHookAccess();
            return use(usable);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, createDeps) {
            currentHookNameInDev = "useEffect";
            warnInvalidHookAccess();
            updateHookTypesDev();
            updateEffectImpl(2048, Passive, create, createDeps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateEffectImpl(4, Insertion, create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateEffectImpl(4, Layout, create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return rerenderReducer(reducer, initialArg, init);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useRef: function() {
            currentHookNameInDev = "useRef";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        },
        useState: function() {
            currentHookNameInDev = "useState";
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactSharedInternals.H;
            ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return rerenderReducer(basicStateReducer);
            } finally{
                ReactSharedInternals.H = prevDispatcher;
            }
        },
        useDebugValue: function() {
            currentHookNameInDev = "useDebugValue";
            warnInvalidHookAccess();
            updateHookTypesDev();
        },
        useDeferredValue: function(value, initialValue) {
            currentHookNameInDev = "useDeferredValue";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return rerenderDeferredValue(value, initialValue);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return rerenderTransition();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        },
        useFormState: function(action) {
            currentHookNameInDev = "useFormState";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return rerenderActionState(action);
        },
        useActionState: function(action) {
            currentHookNameInDev = "useActionState";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return rerenderActionState(action);
        },
        useOptimistic: function(passthrough, reducer) {
            currentHookNameInDev = "useOptimistic";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return rerenderOptimistic(passthrough, reducer);
        },
        useMemoCache: function(size) {
            warnInvalidHookAccess();
            return useMemoCache(size);
        },
        useHostTransitionStatus: useHostTransitionStatus,
        useCacheRefresh: function() {
            currentHookNameInDev = "useCacheRefresh";
            updateHookTypesDev();
            return updateWorkInProgressHook().memoizedState;
        }
    };
    var callComponent = {
        react_stack_bottom_frame: function(Component, props, secondArg) {
            var wasRendering = isRendering;
            isRendering = !0;
            try {
                return Component(props, secondArg);
            } finally{
                isRendering = wasRendering;
            }
        }
    }, callComponentInDEV = callComponent.react_stack_bottom_frame.bind(callComponent), callRender = {
        react_stack_bottom_frame: function(instance) {
            var wasRendering = isRendering;
            isRendering = !0;
            try {
                return instance.render();
            } finally{
                isRendering = wasRendering;
            }
        }
    }, callRenderInDEV = callRender.react_stack_bottom_frame.bind(callRender), callComponentDidMount = {
        react_stack_bottom_frame: function(finishedWork, instance) {
            try {
                instance.componentDidMount();
            } catch (error) {
                captureCommitPhaseError(finishedWork, finishedWork.return, error);
            }
        }
    }, callComponentDidMountInDEV = callComponentDidMount.react_stack_bottom_frame.bind(callComponentDidMount), callComponentDidUpdate = {
        react_stack_bottom_frame: function(finishedWork, instance, prevProps, prevState, snapshot) {
            try {
                instance.componentDidUpdate(prevProps, prevState, snapshot);
            } catch (error) {
                captureCommitPhaseError(finishedWork, finishedWork.return, error);
            }
        }
    }, callComponentDidUpdateInDEV = callComponentDidUpdate.react_stack_bottom_frame.bind(callComponentDidUpdate), callComponentDidCatch = {
        react_stack_bottom_frame: function(instance, errorInfo) {
            var stack = errorInfo.stack;
            instance.componentDidCatch(errorInfo.value, {
                componentStack: null !== stack ? stack : ""
            });
        }
    }, callComponentDidCatchInDEV = callComponentDidCatch.react_stack_bottom_frame.bind(callComponentDidCatch), callComponentWillUnmount = {
        react_stack_bottom_frame: function(current, nearestMountedAncestor, instance) {
            try {
                instance.componentWillUnmount();
            } catch (error) {
                captureCommitPhaseError(current, nearestMountedAncestor, error);
            }
        }
    }, callComponentWillUnmountInDEV = callComponentWillUnmount.react_stack_bottom_frame.bind(callComponentWillUnmount), callCreate = {
        react_stack_bottom_frame: function(effect) {
            null != effect.resourceKind && console.error("Expected only SimpleEffects when enableUseEffectCRUDOverload is disabled, got %s", effect.resourceKind);
            var create = effect.create;
            effect = effect.inst;
            create = create();
            return effect.destroy = create;
        }
    }, callCreateInDEV = callCreate.react_stack_bottom_frame.bind(callCreate), callDestroy = {
        react_stack_bottom_frame: function(current, nearestMountedAncestor, destroy) {
            try {
                destroy();
            } catch (error) {
                captureCommitPhaseError(current, nearestMountedAncestor, error);
            }
        }
    }, callDestroyInDEV = callDestroy.react_stack_bottom_frame.bind(callDestroy), callLazyInit = {
        react_stack_bottom_frame: function(lazy) {
            var init = lazy._init;
            return init(lazy._payload);
        }
    }, callLazyInitInDEV = callLazyInit.react_stack_bottom_frame.bind(callLazyInit), thenableState = null, thenableIndexCounter = 0, currentDebugInfo = null, didWarnAboutMaps;
    var didWarnAboutGenerators = didWarnAboutMaps = !1;
    var ownerHasKeyUseWarning = {};
    var ownerHasFunctionTypeWarning = {};
    var ownerHasSymbolTypeWarning = {};
    warnForMissingKey = function(returnFiber, workInProgress, child) {
        if (null !== child && "object" === typeof child && child._store && (!child._store.validated && null == child.key || 2 === child._store.validated)) {
            if ("object" !== typeof child._store) throw Error("React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.");
            child._store.validated = 1;
            var componentName = getComponentNameFromFiber(returnFiber), componentKey = componentName || "null";
            if (!ownerHasKeyUseWarning[componentKey]) {
                ownerHasKeyUseWarning[componentKey] = !0;
                child = child._owner;
                returnFiber = returnFiber._debugOwner;
                var currentComponentErrorInfo = "";
                returnFiber && "number" === typeof returnFiber.tag && (componentKey = getComponentNameFromFiber(returnFiber)) && (currentComponentErrorInfo = "\n\nCheck the render method of `" + componentKey + "`.");
                currentComponentErrorInfo || componentName && (currentComponentErrorInfo = "\n\nCheck the top-level render call using <" + componentName + ">.");
                var childOwnerAppendix = "";
                null != child && returnFiber !== child && (componentName = null, "number" === typeof child.tag ? componentName = getComponentNameFromFiber(child) : "string" === typeof child.name && (componentName = child.name), componentName && (childOwnerAppendix = " It was passed a child from " + componentName + "."));
                runWithFiberInDEV(workInProgress, function() {
                    console.error('Each child in a list should have a unique "key" prop.%s%s See https://react.dev/link/warning-keys for more information.', currentComponentErrorInfo, childOwnerAppendix);
                });
            }
        }
    };
    var reconcileChildFibers = createChildReconciler(!0), mountChildFibers = createChildReconciler(!1), suspenseHandlerStackCursor = createCursor(null), shellBoundary = null, SubtreeSuspenseContextMask = 1, ForceSuspenseFallback = 2, suspenseStackCursor = createCursor(0), fakeInternalInstance = {};
    var didWarnAboutStateAssignmentForComponent = new Set();
    var didWarnAboutUninitializedState = new Set();
    var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();
    var didWarnAboutLegacyLifecyclesAndDerivedState = new Set();
    var didWarnAboutDirectlyAssigningPropsToState = new Set();
    var didWarnAboutUndefinedDerivedState = new Set();
    var didWarnAboutContextTypes$1 = new Set();
    var didWarnAboutChildContextTypes = new Set();
    var didWarnAboutInvalidateContextType = new Set();
    var didWarnOnInvalidCallback = new Set();
    Object.freeze(fakeInternalInstance);
    var classComponentUpdater = {
        enqueueSetState: function(inst, payload, callback) {
            inst = inst._reactInternals;
            var lane = requestUpdateLane(inst), update = createUpdate(lane);
            update.payload = payload;
            void 0 !== callback && null !== callback && (warnOnInvalidCallback(callback), update.callback = callback);
            payload = enqueueUpdate(inst, update, lane);
            null !== payload && (scheduleUpdateOnFiber(payload, inst, lane), entangleTransitions(payload, inst, lane));
            markStateUpdateScheduled(inst, lane);
        },
        enqueueReplaceState: function(inst, payload, callback) {
            inst = inst._reactInternals;
            var lane = requestUpdateLane(inst), update = createUpdate(lane);
            update.tag = ReplaceState;
            update.payload = payload;
            void 0 !== callback && null !== callback && (warnOnInvalidCallback(callback), update.callback = callback);
            payload = enqueueUpdate(inst, update, lane);
            null !== payload && (scheduleUpdateOnFiber(payload, inst, lane), entangleTransitions(payload, inst, lane));
            markStateUpdateScheduled(inst, lane);
        },
        enqueueForceUpdate: function(inst, callback) {
            inst = inst._reactInternals;
            var lane = requestUpdateLane(inst), update = createUpdate(lane);
            update.tag = ForceUpdate;
            void 0 !== callback && null !== callback && (warnOnInvalidCallback(callback), update.callback = callback);
            callback = enqueueUpdate(inst, update, lane);
            null !== callback && (scheduleUpdateOnFiber(callback, inst, lane), entangleTransitions(callback, inst, lane));
            null !== injectedProfilingHooks && "function" === typeof injectedProfilingHooks.markForceUpdateScheduled && injectedProfilingHooks.markForceUpdateScheduled(inst, lane);
        }
    }, reportGlobalError = "function" === typeof reportError ? reportError : function(error) {
        if ("object" === typeof window && "function" === typeof window.ErrorEvent) {
            var event = new window.ErrorEvent("error", {
                bubbles: !0,
                cancelable: !0,
                message: "object" === typeof error && null !== error && "string" === typeof error.message ? String(error.message) : String(error),
                error: error
            });
            if (!window.dispatchEvent(event)) return;
        }
        console.error(error);
    }, componentName = null, errorBoundaryName = null, SelectiveHydrationException = Error("This is not a real error. It's an implementation detail of React's selective hydration feature. If this leaks into userspace, it's a bug in React. Please file an issue."), didReceiveUpdate = !1;
    var didWarnAboutBadClass = {};
    var didWarnAboutContextTypeOnFunctionComponent = {};
    var didWarnAboutContextTypes = {};
    var didWarnAboutGetDerivedStateOnFunctionComponent = {};
    var didWarnAboutReassigningProps = !1;
    var didWarnAboutRevealOrder = {};
    var didWarnAboutTailOptions = {};
    var SUSPENDED_MARKER = {
        dehydrated: null,
        treeContext: null,
        retryLane: 0,
        hydrationErrors: null
    }, hasWarnedAboutUsingNoValuePropOnContextProvider = !1, didWarnAboutUndefinedSnapshotBeforeUpdate = null;
    didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();
    var offscreenSubtreeIsHidden = !1, offscreenSubtreeWasHidden = !1, needsFormReset = !1, PossiblyWeakSet = "function" === typeof WeakSet ? WeakSet : Set, nextEffect = null, inProgressLanes = null, inProgressRoot = null, hostParent = null, hostParentIsContainer = !1, currentHoistableRoot = null, suspenseyCommitFlag = 8192, DefaultAsyncDispatcher = {
        getCacheForType: function(resourceType) {
            var cache = readContext(CacheContext), cacheForType = cache.data.get(resourceType);
            void 0 === cacheForType && (cacheForType = resourceType(), cache.data.set(resourceType, cacheForType));
            return cacheForType;
        },
        getOwner: function() {
            return current;
        }
    };
    if ("function" === typeof Symbol && Symbol.for) {
        var symbolFor = Symbol.for;
        symbolFor("selector.component");
        symbolFor("selector.has_pseudo_class");
        symbolFor("selector.role");
        symbolFor("selector.test_id");
        symbolFor("selector.text");
    }
    var commitHooks = [], PossiblyWeakMap = "function" === typeof WeakMap ? WeakMap : Map, NoContext = 0, RenderContext = 2, CommitContext = 4, RootInProgress = 0, RootFatalErrored = 1, RootErrored = 2, RootSuspended = 3, RootSuspendedWithDelay = 4, RootSuspendedAtTheShell = 6, RootCompleted = 5, executionContext = NoContext, workInProgressRoot = null, workInProgress = null, workInProgressRootRenderLanes = 0, NotSuspended = 0, SuspendedOnError = 1, SuspendedOnData = 2, SuspendedOnImmediate = 3, SuspendedOnInstance = 4, SuspendedOnInstanceAndReadyToContinue = 5, SuspendedOnDeprecatedThrowPromise = 6, SuspendedAndReadyToContinue = 7, SuspendedOnHydration = 8, SuspendedOnAction = 9, workInProgressSuspendedReason = NotSuspended, workInProgressThrownValue = null, workInProgressRootDidSkipSuspendedSiblings = !1, workInProgressRootIsPrerendering = !1, workInProgressRootDidAttachPingListener = !1, entangledRenderLanes = 0, workInProgressRootExitStatus = RootInProgress, workInProgressRootSkippedLanes = 0, workInProgressRootInterleavedUpdatedLanes = 0, workInProgressRootPingedLanes = 0, workInProgressDeferredLane = 0, workInProgressSuspendedRetryLanes = 0, workInProgressRootConcurrentErrors = null, workInProgressRootRecoverableErrors = null, workInProgressRootDidIncludeRecursiveRenderUpdate = !1, globalMostRecentFallbackTime = 0, FALLBACK_THROTTLE_MS = 300, workInProgressRootRenderTargetTime = Infinity, RENDER_TIMEOUT_MS = 500, workInProgressTransitions = null, legacyErrorBoundariesThatAlreadyFailed = null, IMMEDIATE_COMMIT = 0, SUSPENDED_COMMIT = 1, THROTTLED_COMMIT = 2, NO_PENDING_EFFECTS = 0, PENDING_MUTATION_PHASE = 1, PENDING_LAYOUT_PHASE = 2, PENDING_AFTER_MUTATION_PHASE = 3, PENDING_SPAWNED_WORK = 4, PENDING_PASSIVE_PHASE = 5, pendingEffectsStatus = 0, pendingEffectsRoot = null, pendingFinishedWork = null, pendingEffectsLanes = 0, pendingEffectsRemainingLanes = 0, pendingPassiveTransitions = null, pendingRecoverableErrors = null, NESTED_UPDATE_LIMIT = 50, nestedUpdateCount = 0, rootWithNestedUpdates = null, isFlushingPassiveEffects = !1, didScheduleUpdateDuringPassiveEffects = !1, NESTED_PASSIVE_UPDATE_LIMIT = 50, nestedPassiveUpdateCount = 0, rootWithPassiveNestedUpdates = null, isRunningInsertionEffect = !1, didWarnStateUpdateForNotYetMountedComponent = null, didWarnAboutUpdateInRender = !1;
    var didWarnAboutUpdateInRenderForAnotherComponent = new Set();
    var fakeActCallbackNode$1 = {}, firstScheduledRoot = null, lastScheduledRoot = null, didScheduleMicrotask = !1, didScheduleMicrotask_act = !1, mightHavePendingSyncWork = !1, isFlushingWork = !1, currentEventTransitionLane = 0, fakeActCallbackNode = {};
    (function() {
        for(var i = 0; i < simpleEventPluginEvents.length; i++){
            var eventName = simpleEventPluginEvents[i], domEventName = eventName.toLowerCase();
            eventName = eventName[0].toUpperCase() + eventName.slice(1);
            registerSimpleEvent(domEventName, "on" + eventName);
        }
        registerSimpleEvent(ANIMATION_END, "onAnimationEnd");
        registerSimpleEvent(ANIMATION_ITERATION, "onAnimationIteration");
        registerSimpleEvent(ANIMATION_START, "onAnimationStart");
        registerSimpleEvent("dblclick", "onDoubleClick");
        registerSimpleEvent("focusin", "onFocus");
        registerSimpleEvent("focusout", "onBlur");
        registerSimpleEvent(TRANSITION_RUN, "onTransitionRun");
        registerSimpleEvent(TRANSITION_START, "onTransitionStart");
        registerSimpleEvent(TRANSITION_CANCEL, "onTransitionCancel");
        registerSimpleEvent(TRANSITION_END, "onTransitionEnd");
    })();
    registerDirectEvent("onMouseEnter", [
        "mouseout",
        "mouseover"
    ]);
    registerDirectEvent("onMouseLeave", [
        "mouseout",
        "mouseover"
    ]);
    registerDirectEvent("onPointerEnter", [
        "pointerout",
        "pointerover"
    ]);
    registerDirectEvent("onPointerLeave", [
        "pointerout",
        "pointerover"
    ]);
    registerTwoPhaseEvent("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" "));
    registerTwoPhaseEvent("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));
    registerTwoPhaseEvent("onBeforeInput", [
        "compositionend",
        "keypress",
        "textInput",
        "paste"
    ]);
    registerTwoPhaseEvent("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" "));
    registerTwoPhaseEvent("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" "));
    registerTwoPhaseEvent("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
    var mediaEventTypes = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "), nonDelegatedEvents = new Set("beforetoggle cancel close invalid load scroll scrollend toggle".split(" ").concat(mediaEventTypes)), listeningMarker = "_reactListening" + Math.random().toString(36).slice(2), didWarnControlledToUncontrolled = !1, didWarnUncontrolledToControlled = !1, didWarnFormActionType = !1, didWarnFormActionName = !1, didWarnFormActionTarget = !1, didWarnFormActionMethod = !1, didWarnPopoverTargetObject = !1;
    var didWarnForNewBooleanPropsWithEmptyValue = {};
    var NORMALIZE_NEWLINES_REGEX = /\r\n?/g, NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g, xlinkNamespace = "http://www.w3.org/1999/xlink", xmlNamespace = "http://www.w3.org/XML/1998/namespace", EXPECTED_FORM_ACTION_URL = "javascript:throw new Error('React form unexpectedly submitted.')", SUPPRESS_HYDRATION_WARNING = "suppressHydrationWarning", SUSPENSE_START_DATA = "$", SUSPENSE_END_DATA = "/$", SUSPENSE_PENDING_START_DATA = "$?", SUSPENSE_FALLBACK_START_DATA = "$!", PREAMBLE_CONTRIBUTION_HTML = 1, PREAMBLE_CONTRIBUTION_BODY = 2, PREAMBLE_CONTRIBUTION_HEAD = 4, FORM_STATE_IS_MATCHING = "F!", FORM_STATE_IS_NOT_MATCHING = "F", DOCUMENT_READY_STATE_COMPLETE = "complete", STYLE = "style", HostContextNamespaceNone = 0, HostContextNamespaceSvg = 1, HostContextNamespaceMath = 2, eventsEnabled = null, selectionInformation = null, warnedUnknownTags = {
        dialog: !0,
        webview: !0
    }, currentPopstateTransitionEvent = null, scheduleTimeout = "function" === typeof setTimeout ? setTimeout : void 0, cancelTimeout = "function" === typeof clearTimeout ? clearTimeout : void 0, noTimeout = -1, localPromise = "function" === typeof Promise ? Promise : void 0, scheduleMicrotask = "function" === typeof queueMicrotask ? queueMicrotask : "undefined" !== typeof localPromise ? function(callback) {
        return localPromise.resolve(null).then(callback).catch(handleErrorInNextTick);
    } : scheduleTimeout, previousHydratableOnEnteringScopedSingleton = null, NotLoaded = 0, Loaded = 1, Errored = 2, Settled = 3, Inserted = 4, preloadPropsMap = new Map(), preconnectsSet = new Set(), previousDispatcher = ReactDOMSharedInternals.d;
    ReactDOMSharedInternals.d = {
        f: function() {
            var previousWasRendering = previousDispatcher.f(), wasRendering = flushSyncWork$1();
            return previousWasRendering || wasRendering;
        },
        r: function(form) {
            var formInst = getInstanceFromNode(form);
            null !== formInst && 5 === formInst.tag && "form" === formInst.type ? requestFormReset$1(formInst) : previousDispatcher.r(form);
        },
        D: function(href) {
            previousDispatcher.D(href);
            preconnectAs("dns-prefetch", href, null);
        },
        C: function(href, crossOrigin) {
            previousDispatcher.C(href, crossOrigin);
            preconnectAs("preconnect", href, crossOrigin);
        },
        L: function(href, as, options) {
            previousDispatcher.L(href, as, options);
            var ownerDocument = globalDocument;
            if (ownerDocument && href && as) {
                var preloadSelector = 'link[rel="preload"][as="' + escapeSelectorAttributeValueInsideDoubleQuotes(as) + '"]';
                "image" === as ? options && options.imageSrcSet ? (preloadSelector += '[imagesrcset="' + escapeSelectorAttributeValueInsideDoubleQuotes(options.imageSrcSet) + '"]', "string" === typeof options.imageSizes && (preloadSelector += '[imagesizes="' + escapeSelectorAttributeValueInsideDoubleQuotes(options.imageSizes) + '"]')) : preloadSelector += '[href="' + escapeSelectorAttributeValueInsideDoubleQuotes(href) + '"]' : preloadSelector += '[href="' + escapeSelectorAttributeValueInsideDoubleQuotes(href) + '"]';
                var key = preloadSelector;
                switch(as){
                    case "style":
                        key = getStyleKey(href);
                        break;
                    case "script":
                        key = getScriptKey(href);
                }
                preloadPropsMap.has(key) || (href = assign({
                    rel: "preload",
                    href: "image" === as && options && options.imageSrcSet ? void 0 : href,
                    as: as
                }, options), preloadPropsMap.set(key, href), null !== ownerDocument.querySelector(preloadSelector) || "style" === as && ownerDocument.querySelector(getStylesheetSelectorFromKey(key)) || "script" === as && ownerDocument.querySelector(getScriptSelectorFromKey(key)) || (as = ownerDocument.createElement("link"), setInitialProperties(as, "link", href), markNodeAsHoistable(as), ownerDocument.head.appendChild(as)));
            }
        },
        m: function(href, options) {
            previousDispatcher.m(href, options);
            var ownerDocument = globalDocument;
            if (ownerDocument && href) {
                var as = options && "string" === typeof options.as ? options.as : "script", preloadSelector = 'link[rel="modulepreload"][as="' + escapeSelectorAttributeValueInsideDoubleQuotes(as) + '"][href="' + escapeSelectorAttributeValueInsideDoubleQuotes(href) + '"]', key = preloadSelector;
                switch(as){
                    case "audioworklet":
                    case "paintworklet":
                    case "serviceworker":
                    case "sharedworker":
                    case "worker":
                    case "script":
                        key = getScriptKey(href);
                }
                if (!preloadPropsMap.has(key) && (href = assign({
                    rel: "modulepreload",
                    href: href
                }, options), preloadPropsMap.set(key, href), null === ownerDocument.querySelector(preloadSelector))) {
                    switch(as){
                        case "audioworklet":
                        case "paintworklet":
                        case "serviceworker":
                        case "sharedworker":
                        case "worker":
                        case "script":
                            if (ownerDocument.querySelector(getScriptSelectorFromKey(key))) return;
                    }
                    as = ownerDocument.createElement("link");
                    setInitialProperties(as, "link", href);
                    markNodeAsHoistable(as);
                    ownerDocument.head.appendChild(as);
                }
            }
        },
        X: function(src, options) {
            previousDispatcher.X(src, options);
            var ownerDocument = globalDocument;
            if (ownerDocument && src) {
                var scripts = getResourcesFromRoot(ownerDocument).hoistableScripts, key = getScriptKey(src), resource = scripts.get(key);
                resource || (resource = ownerDocument.querySelector(getScriptSelectorFromKey(key)), resource || (src = assign({
                    src: src,
                    async: !0
                }, options), (options = preloadPropsMap.get(key)) && adoptPreloadPropsForScript(src, options), resource = ownerDocument.createElement("script"), markNodeAsHoistable(resource), setInitialProperties(resource, "link", src), ownerDocument.head.appendChild(resource)), resource = {
                    type: "script",
                    instance: resource,
                    count: 1,
                    state: null
                }, scripts.set(key, resource));
            }
        },
        S: function(href, precedence, options) {
            previousDispatcher.S(href, precedence, options);
            var ownerDocument = globalDocument;
            if (ownerDocument && href) {
                var styles = getResourcesFromRoot(ownerDocument).hoistableStyles, key = getStyleKey(href);
                precedence = precedence || "default";
                var resource = styles.get(key);
                if (!resource) {
                    var state = {
                        loading: NotLoaded,
                        preload: null
                    };
                    if (resource = ownerDocument.querySelector(getStylesheetSelectorFromKey(key))) state.loading = Loaded | Inserted;
                    else {
                        href = assign({
                            rel: "stylesheet",
                            href: href,
                            "data-precedence": precedence
                        }, options);
                        (options = preloadPropsMap.get(key)) && adoptPreloadPropsForStylesheet(href, options);
                        var link = resource = ownerDocument.createElement("link");
                        markNodeAsHoistable(link);
                        setInitialProperties(link, "link", href);
                        link._p = new Promise(function(resolve, reject) {
                            link.onload = resolve;
                            link.onerror = reject;
                        });
                        link.addEventListener("load", function() {
                            state.loading |= Loaded;
                        });
                        link.addEventListener("error", function() {
                            state.loading |= Errored;
                        });
                        state.loading |= Inserted;
                        insertStylesheet(resource, precedence, ownerDocument);
                    }
                    resource = {
                        type: "stylesheet",
                        instance: resource,
                        count: 1,
                        state: state
                    };
                    styles.set(key, resource);
                }
            }
        },
        M: function(src, options) {
            previousDispatcher.M(src, options);
            var ownerDocument = globalDocument;
            if (ownerDocument && src) {
                var scripts = getResourcesFromRoot(ownerDocument).hoistableScripts, key = getScriptKey(src), resource = scripts.get(key);
                resource || (resource = ownerDocument.querySelector(getScriptSelectorFromKey(key)), resource || (src = assign({
                    src: src,
                    async: !0,
                    type: "module"
                }, options), (options = preloadPropsMap.get(key)) && adoptPreloadPropsForScript(src, options), resource = ownerDocument.createElement("script"), markNodeAsHoistable(resource), setInitialProperties(resource, "link", src), ownerDocument.head.appendChild(resource)), resource = {
                    type: "script",
                    instance: resource,
                    count: 1,
                    state: null
                }, scripts.set(key, resource));
            }
        }
    };
    var globalDocument = "undefined" === typeof document ? null : document, tagCaches = null, suspendedState = null, LAST_PRECEDENCE = null, precedencesByRoot = null, NotPendingTransition = NotPending, HostTransitionContext = {
        $$typeof: REACT_CONTEXT_TYPE,
        Provider: null,
        Consumer: null,
        _currentValue: NotPendingTransition,
        _currentValue2: NotPendingTransition,
        _threadCount: 0
    }, badgeFormat = "%c%s%c ", badgeStyle = "background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px", resetStyle = "", pad = " ", bind = Function.prototype.bind;
    var didWarnAboutNestedUpdates = !1;
    var overrideHookState = null, overrideHookStateDeletePath = null, overrideHookStateRenamePath = null, overrideProps = null, overridePropsDeletePath = null, overridePropsRenamePath = null, scheduleUpdate = null, setErrorHandler = null, setSuspenseHandler = null;
    overrideHookState = function(fiber, id, path, value) {
        id = findHook(fiber, id);
        null !== id && (path = copyWithSetImpl(id.memoizedState, path, 0, value), id.memoizedState = path, id.baseState = path, fiber.memoizedProps = assign({}, fiber.memoizedProps), path = enqueueConcurrentRenderForLane(fiber, 2), null !== path && scheduleUpdateOnFiber(path, fiber, 2));
    };
    overrideHookStateDeletePath = function(fiber, id, path) {
        id = findHook(fiber, id);
        null !== id && (path = copyWithDeleteImpl(id.memoizedState, path, 0), id.memoizedState = path, id.baseState = path, fiber.memoizedProps = assign({}, fiber.memoizedProps), path = enqueueConcurrentRenderForLane(fiber, 2), null !== path && scheduleUpdateOnFiber(path, fiber, 2));
    };
    overrideHookStateRenamePath = function(fiber, id, oldPath, newPath) {
        id = findHook(fiber, id);
        null !== id && (oldPath = copyWithRename(id.memoizedState, oldPath, newPath), id.memoizedState = oldPath, id.baseState = oldPath, fiber.memoizedProps = assign({}, fiber.memoizedProps), oldPath = enqueueConcurrentRenderForLane(fiber, 2), null !== oldPath && scheduleUpdateOnFiber(oldPath, fiber, 2));
    };
    overrideProps = function(fiber, path, value) {
        fiber.pendingProps = copyWithSetImpl(fiber.memoizedProps, path, 0, value);
        fiber.alternate && (fiber.alternate.pendingProps = fiber.pendingProps);
        path = enqueueConcurrentRenderForLane(fiber, 2);
        null !== path && scheduleUpdateOnFiber(path, fiber, 2);
    };
    overridePropsDeletePath = function(fiber, path) {
        fiber.pendingProps = copyWithDeleteImpl(fiber.memoizedProps, path, 0);
        fiber.alternate && (fiber.alternate.pendingProps = fiber.pendingProps);
        path = enqueueConcurrentRenderForLane(fiber, 2);
        null !== path && scheduleUpdateOnFiber(path, fiber, 2);
    };
    overridePropsRenamePath = function(fiber, oldPath, newPath) {
        fiber.pendingProps = copyWithRename(fiber.memoizedProps, oldPath, newPath);
        fiber.alternate && (fiber.alternate.pendingProps = fiber.pendingProps);
        oldPath = enqueueConcurrentRenderForLane(fiber, 2);
        null !== oldPath && scheduleUpdateOnFiber(oldPath, fiber, 2);
    };
    scheduleUpdate = function(fiber) {
        var root = enqueueConcurrentRenderForLane(fiber, 2);
        null !== root && scheduleUpdateOnFiber(root, fiber, 2);
    };
    setErrorHandler = function(newShouldErrorImpl) {
        shouldErrorImpl = newShouldErrorImpl;
    };
    setSuspenseHandler = function(newShouldSuspendImpl) {
        shouldSuspendImpl = newShouldSuspendImpl;
    };
    var _enabled = !0, return_targetInst = null, hasScheduledReplayAttempt = !1, queuedFocus = null, queuedDrag = null, queuedMouse = null, queuedPointers = new Map(), queuedPointerCaptures = new Map(), queuedExplicitHydrationTargets = [], discreteReplayableEvents = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset".split(" "), lastScheduledReplayQueue = null;
    ReactDOMHydrationRoot.prototype.render = ReactDOMRoot.prototype.render = function(children) {
        var root = this._internalRoot;
        if (null === root) throw Error("Cannot update an unmounted root.");
        var args = arguments;
        "function" === typeof args[1] ? console.error("does not support the second callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().") : isValidContainer(args[1]) ? console.error("You passed a container to the second argument of root.render(...). You don't need to pass it again since you already passed it to create the root.") : "undefined" !== typeof args[1] && console.error("You passed a second argument to root.render(...) but it only accepts one argument.");
        args = children;
        var current = root.current, lane = requestUpdateLane(current);
        updateContainerImpl(current, lane, args, root, null, null);
    };
    ReactDOMHydrationRoot.prototype.unmount = ReactDOMRoot.prototype.unmount = function() {
        var args = arguments;
        "function" === typeof args[0] && console.error("does not support a callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
        args = this._internalRoot;
        if (null !== args) {
            this._internalRoot = null;
            var container = args.containerInfo;
            (executionContext & (RenderContext | CommitContext)) !== NoContext && console.error("Attempted to synchronously unmount a root while React was already rendering. React cannot finish unmounting the root until the current render has completed, which may lead to a race condition.");
            updateContainerImpl(args.current, 2, null, args, null, null);
            flushSyncWork$1();
            container[internalContainerInstanceKey] = null;
        }
    };
    ReactDOMHydrationRoot.prototype.unstable_scheduleHydration = function(target) {
        if (target) {
            var updatePriority = resolveUpdatePriority();
            target = {
                blockedOn: null,
                target: target,
                priority: updatePriority
            };
            for(var i = 0; i < queuedExplicitHydrationTargets.length && 0 !== updatePriority && updatePriority < queuedExplicitHydrationTargets[i].priority; i++);
            queuedExplicitHydrationTargets.splice(i, 0, target);
            0 === i && attemptExplicitHydrationTarget(target);
        }
    };
    (function() {
        var isomorphicReactPackageVersion = React.version;
        if ("19.1.1" !== isomorphicReactPackageVersion) throw Error('Incompatible React versions: The "react" and "react-dom" packages must have the exact same version. Instead got:\n  - react:      ' + (isomorphicReactPackageVersion + "\n  - react-dom:  19.1.1\nLearn more: https://react.dev/warnings/version-mismatch"));
    })();
    "function" === typeof Map && null != Map.prototype && "function" === typeof Map.prototype.forEach && "function" === typeof Set && null != Set.prototype && "function" === typeof Set.prototype.clear && "function" === typeof Set.prototype.forEach || console.error("React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://react.dev/link/react-polyfills");
    ReactDOMSharedInternals.findDOMNode = function(componentOrElement) {
        var fiber = componentOrElement._reactInternals;
        if (void 0 === fiber) {
            if ("function" === typeof componentOrElement.render) throw Error("Unable to find node on an unmounted component.");
            componentOrElement = Object.keys(componentOrElement).join(",");
            throw Error("Argument appears to not be a ReactComponent. Keys: " + componentOrElement);
        }
        componentOrElement = findCurrentFiberUsingSlowPath(fiber);
        componentOrElement = null !== componentOrElement ? findCurrentHostFiberImpl(componentOrElement) : null;
        componentOrElement = null === componentOrElement ? null : componentOrElement.stateNode;
        return componentOrElement;
    };
    if (!function() {
        var internals = {
            bundleType: 1,
            version: "19.1.1",
            rendererPackageName: "react-dom",
            currentDispatcherRef: ReactSharedInternals,
            reconcilerVersion: "19.1.1"
        };
        internals.overrideHookState = overrideHookState;
        internals.overrideHookStateDeletePath = overrideHookStateDeletePath;
        internals.overrideHookStateRenamePath = overrideHookStateRenamePath;
        internals.overrideProps = overrideProps;
        internals.overridePropsDeletePath = overridePropsDeletePath;
        internals.overridePropsRenamePath = overridePropsRenamePath;
        internals.scheduleUpdate = scheduleUpdate;
        internals.setErrorHandler = setErrorHandler;
        internals.setSuspenseHandler = setSuspenseHandler;
        internals.scheduleRefresh = scheduleRefresh;
        internals.scheduleRoot = scheduleRoot;
        internals.setRefreshHandler = setRefreshHandler;
        internals.getCurrentFiber = getCurrentFiberForDevTools;
        internals.getLaneLabelMap = getLaneLabelMap;
        internals.injectProfilingHooks = injectProfilingHooks;
        return injectInternals(internals);
    }() && canUseDOM && window.top === window.self && (-1 < navigator.userAgent.indexOf("Chrome") && -1 === navigator.userAgent.indexOf("Edge") || -1 < navigator.userAgent.indexOf("Firefox"))) {
        var protocol = window.location.protocol;
        /^(https?|file):$/.test(protocol) && console.info("%cDownload the React DevTools for a better development experience: https://react.dev/link/react-devtools" + ("file:" === protocol ? "\nYou might need to use a local HTTP server (instead of file://): https://react.dev/link/react-devtools-faq" : ""), "font-weight:bold");
    }
    exports.createRoot = function(container, options) {
        if (!isValidContainer(container)) throw Error("Target container is not a DOM element.");
        warnIfReactDOMContainerInDEV(container);
        var isStrictMode = !1, identifierPrefix = "", onUncaughtError = defaultOnUncaughtError, onCaughtError = defaultOnCaughtError, onRecoverableError = defaultOnRecoverableError, transitionCallbacks = null;
        null !== options && void 0 !== options && (options.hydrate ? console.warn("hydrate through createRoot is deprecated. Use ReactDOMClient.hydrateRoot(container, <App />) instead.") : "object" === typeof options && null !== options && options.$$typeof === REACT_ELEMENT_TYPE && console.error("You passed a JSX element to createRoot. You probably meant to call root.render instead. Example usage:\n\n  let root = createRoot(domContainer);\n  root.render(<App />);"), !0 === options.unstable_strictMode && (isStrictMode = !0), void 0 !== options.identifierPrefix && (identifierPrefix = options.identifierPrefix), void 0 !== options.onUncaughtError && (onUncaughtError = options.onUncaughtError), void 0 !== options.onCaughtError && (onCaughtError = options.onCaughtError), void 0 !== options.onRecoverableError && (onRecoverableError = options.onRecoverableError), void 0 !== options.unstable_transitionCallbacks && (transitionCallbacks = options.unstable_transitionCallbacks));
        options = createFiberRoot(container, 1, !1, null, null, isStrictMode, identifierPrefix, onUncaughtError, onCaughtError, onRecoverableError, transitionCallbacks, null);
        container[internalContainerInstanceKey] = options.current;
        listenToAllSupportedEvents(container);
        return new ReactDOMRoot(options);
    };
    exports.hydrateRoot = function(container, initialChildren, options) {
        if (!isValidContainer(container)) throw Error("Target container is not a DOM element.");
        warnIfReactDOMContainerInDEV(container);
        void 0 === initialChildren && console.error("Must provide initial children as second argument to hydrateRoot. Example usage: hydrateRoot(domContainer, <App />)");
        var isStrictMode = !1, identifierPrefix = "", onUncaughtError = defaultOnUncaughtError, onCaughtError = defaultOnCaughtError, onRecoverableError = defaultOnRecoverableError, transitionCallbacks = null, formState = null;
        null !== options && void 0 !== options && (!0 === options.unstable_strictMode && (isStrictMode = !0), void 0 !== options.identifierPrefix && (identifierPrefix = options.identifierPrefix), void 0 !== options.onUncaughtError && (onUncaughtError = options.onUncaughtError), void 0 !== options.onCaughtError && (onCaughtError = options.onCaughtError), void 0 !== options.onRecoverableError && (onRecoverableError = options.onRecoverableError), void 0 !== options.unstable_transitionCallbacks && (transitionCallbacks = options.unstable_transitionCallbacks), void 0 !== options.formState && (formState = options.formState));
        initialChildren = createFiberRoot(container, 1, !0, initialChildren, null != options ? options : null, isStrictMode, identifierPrefix, onUncaughtError, onCaughtError, onRecoverableError, transitionCallbacks, formState);
        initialChildren.context = getContextForSubtree(null);
        options = initialChildren.current;
        isStrictMode = requestUpdateLane(options);
        isStrictMode = getBumpedLaneForHydrationByLane(isStrictMode);
        identifierPrefix = createUpdate(isStrictMode);
        identifierPrefix.callback = null;
        enqueueUpdate(options, identifierPrefix, isStrictMode);
        options = isStrictMode;
        initialChildren.current.lanes = options;
        markRootUpdated$1(initialChildren, options);
        ensureRootIsScheduled(initialChildren);
        container[internalContainerInstanceKey] = initialChildren.current;
        listenToAllSupportedEvents(container);
        return new ReactDOMHydrationRoot(initialChildren);
    };
    exports.version = "19.1.1";
    "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());
})();

},{"c31f9b99c1e288cf":"4OQ2m","c4c4bc2113e5c77f":"jMk1U","772d609564cfd8f6":"i4X7T"}],"4OQ2m":[function(require,module,exports,__globalThis) {
'use strict';
module.exports = require("ef03b89c8fe2794e");

},{"ef03b89c8fe2794e":"j5hep"}],"j5hep":[function(require,module,exports,__globalThis) {
/**
 * @license React
 * scheduler.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
(function() {
    function performWorkUntilDeadline() {
        needsPaint = !1;
        if (isMessageLoopRunning) {
            var currentTime = exports.unstable_now();
            startTime = currentTime;
            var hasMoreWork = !0;
            try {
                a: {
                    isHostCallbackScheduled = !1;
                    isHostTimeoutScheduled && (isHostTimeoutScheduled = !1, localClearTimeout(taskTimeoutID), taskTimeoutID = -1);
                    isPerformingWork = !0;
                    var previousPriorityLevel = currentPriorityLevel;
                    try {
                        b: {
                            advanceTimers(currentTime);
                            for(currentTask = peek(taskQueue); null !== currentTask && !(currentTask.expirationTime > currentTime && shouldYieldToHost());){
                                var callback = currentTask.callback;
                                if ("function" === typeof callback) {
                                    currentTask.callback = null;
                                    currentPriorityLevel = currentTask.priorityLevel;
                                    var continuationCallback = callback(currentTask.expirationTime <= currentTime);
                                    currentTime = exports.unstable_now();
                                    if ("function" === typeof continuationCallback) {
                                        currentTask.callback = continuationCallback;
                                        advanceTimers(currentTime);
                                        hasMoreWork = !0;
                                        break b;
                                    }
                                    currentTask === peek(taskQueue) && pop(taskQueue);
                                    advanceTimers(currentTime);
                                } else pop(taskQueue);
                                currentTask = peek(taskQueue);
                            }
                            if (null !== currentTask) hasMoreWork = !0;
                            else {
                                var firstTimer = peek(timerQueue);
                                null !== firstTimer && requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
                                hasMoreWork = !1;
                            }
                        }
                        break a;
                    } finally{
                        currentTask = null, currentPriorityLevel = previousPriorityLevel, isPerformingWork = !1;
                    }
                    hasMoreWork = void 0;
                }
            } finally{
                hasMoreWork ? schedulePerformWorkUntilDeadline() : isMessageLoopRunning = !1;
            }
        }
    }
    function push(heap, node) {
        var index = heap.length;
        heap.push(node);
        a: for(; 0 < index;){
            var parentIndex = index - 1 >>> 1, parent = heap[parentIndex];
            if (0 < compare(parent, node)) heap[parentIndex] = node, heap[index] = parent, index = parentIndex;
            else break a;
        }
    }
    function peek(heap) {
        return 0 === heap.length ? null : heap[0];
    }
    function pop(heap) {
        if (0 === heap.length) return null;
        var first = heap[0], last = heap.pop();
        if (last !== first) {
            heap[0] = last;
            a: for(var index = 0, length = heap.length, halfLength = length >>> 1; index < halfLength;){
                var leftIndex = 2 * (index + 1) - 1, left = heap[leftIndex], rightIndex = leftIndex + 1, right = heap[rightIndex];
                if (0 > compare(left, last)) rightIndex < length && 0 > compare(right, left) ? (heap[index] = right, heap[rightIndex] = last, index = rightIndex) : (heap[index] = left, heap[leftIndex] = last, index = leftIndex);
                else if (rightIndex < length && 0 > compare(right, last)) heap[index] = right, heap[rightIndex] = last, index = rightIndex;
                else break a;
            }
        }
        return first;
    }
    function compare(a, b) {
        var diff = a.sortIndex - b.sortIndex;
        return 0 !== diff ? diff : a.id - b.id;
    }
    function advanceTimers(currentTime) {
        for(var timer = peek(timerQueue); null !== timer;){
            if (null === timer.callback) pop(timerQueue);
            else if (timer.startTime <= currentTime) pop(timerQueue), timer.sortIndex = timer.expirationTime, push(taskQueue, timer);
            else break;
            timer = peek(timerQueue);
        }
    }
    function handleTimeout(currentTime) {
        isHostTimeoutScheduled = !1;
        advanceTimers(currentTime);
        if (!isHostCallbackScheduled) {
            if (null !== peek(taskQueue)) isHostCallbackScheduled = !0, isMessageLoopRunning || (isMessageLoopRunning = !0, schedulePerformWorkUntilDeadline());
            else {
                var firstTimer = peek(timerQueue);
                null !== firstTimer && requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
            }
        }
    }
    function shouldYieldToHost() {
        return needsPaint ? !0 : exports.unstable_now() - startTime < frameInterval ? !1 : !0;
    }
    function requestHostTimeout(callback, ms) {
        taskTimeoutID = localSetTimeout(function() {
            callback(exports.unstable_now());
        }, ms);
    }
    "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());
    exports.unstable_now = void 0;
    if ("object" === typeof performance && "function" === typeof performance.now) {
        var localPerformance = performance;
        exports.unstable_now = function() {
            return localPerformance.now();
        };
    } else {
        var localDate = Date, initialTime = localDate.now();
        exports.unstable_now = function() {
            return localDate.now() - initialTime;
        };
    }
    var taskQueue = [], timerQueue = [], taskIdCounter = 1, currentTask = null, currentPriorityLevel = 3, isPerformingWork = !1, isHostCallbackScheduled = !1, isHostTimeoutScheduled = !1, needsPaint = !1, localSetTimeout = "function" === typeof setTimeout ? setTimeout : null, localClearTimeout = "function" === typeof clearTimeout ? clearTimeout : null, localSetImmediate = "undefined" !== typeof setImmediate ? setImmediate : null, isMessageLoopRunning = !1, taskTimeoutID = -1, frameInterval = 5, startTime = -1;
    if ("function" === typeof localSetImmediate) var schedulePerformWorkUntilDeadline = function() {
        localSetImmediate(performWorkUntilDeadline);
    };
    else if ("undefined" !== typeof MessageChannel) {
        var channel = new MessageChannel(), port = channel.port2;
        channel.port1.onmessage = performWorkUntilDeadline;
        schedulePerformWorkUntilDeadline = function() {
            port.postMessage(null);
        };
    } else schedulePerformWorkUntilDeadline = function() {
        localSetTimeout(performWorkUntilDeadline, 0);
    };
    exports.unstable_IdlePriority = 5;
    exports.unstable_ImmediatePriority = 1;
    exports.unstable_LowPriority = 4;
    exports.unstable_NormalPriority = 3;
    exports.unstable_Profiling = null;
    exports.unstable_UserBlockingPriority = 2;
    exports.unstable_cancelCallback = function(task) {
        task.callback = null;
    };
    exports.unstable_forceFrameRate = function(fps) {
        0 > fps || 125 < fps ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : frameInterval = 0 < fps ? Math.floor(1e3 / fps) : 5;
    };
    exports.unstable_getCurrentPriorityLevel = function() {
        return currentPriorityLevel;
    };
    exports.unstable_next = function(eventHandler) {
        switch(currentPriorityLevel){
            case 1:
            case 2:
            case 3:
                var priorityLevel = 3;
                break;
            default:
                priorityLevel = currentPriorityLevel;
        }
        var previousPriorityLevel = currentPriorityLevel;
        currentPriorityLevel = priorityLevel;
        try {
            return eventHandler();
        } finally{
            currentPriorityLevel = previousPriorityLevel;
        }
    };
    exports.unstable_requestPaint = function() {
        needsPaint = !0;
    };
    exports.unstable_runWithPriority = function(priorityLevel, eventHandler) {
        switch(priorityLevel){
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
                break;
            default:
                priorityLevel = 3;
        }
        var previousPriorityLevel = currentPriorityLevel;
        currentPriorityLevel = priorityLevel;
        try {
            return eventHandler();
        } finally{
            currentPriorityLevel = previousPriorityLevel;
        }
    };
    exports.unstable_scheduleCallback = function(priorityLevel, callback, options) {
        var currentTime = exports.unstable_now();
        "object" === typeof options && null !== options ? (options = options.delay, options = "number" === typeof options && 0 < options ? currentTime + options : currentTime) : options = currentTime;
        switch(priorityLevel){
            case 1:
                var timeout = -1;
                break;
            case 2:
                timeout = 250;
                break;
            case 5:
                timeout = 1073741823;
                break;
            case 4:
                timeout = 1e4;
                break;
            default:
                timeout = 5e3;
        }
        timeout = options + timeout;
        priorityLevel = {
            id: taskIdCounter++,
            callback: callback,
            priorityLevel: priorityLevel,
            startTime: options,
            expirationTime: timeout,
            sortIndex: -1
        };
        options > currentTime ? (priorityLevel.sortIndex = options, push(timerQueue, priorityLevel), null === peek(taskQueue) && priorityLevel === peek(timerQueue) && (isHostTimeoutScheduled ? (localClearTimeout(taskTimeoutID), taskTimeoutID = -1) : isHostTimeoutScheduled = !0, requestHostTimeout(handleTimeout, options - currentTime))) : (priorityLevel.sortIndex = timeout, push(taskQueue, priorityLevel), isHostCallbackScheduled || isPerformingWork || (isHostCallbackScheduled = !0, isMessageLoopRunning || (isMessageLoopRunning = !0, schedulePerformWorkUntilDeadline())));
        return priorityLevel;
    };
    exports.unstable_shouldYield = shouldYieldToHost;
    exports.unstable_wrapCallback = function(callback) {
        var parentPriorityLevel = currentPriorityLevel;
        return function() {
            var previousPriorityLevel = currentPriorityLevel;
            currentPriorityLevel = parentPriorityLevel;
            try {
                return callback.apply(this, arguments);
            } finally{
                currentPriorityLevel = previousPriorityLevel;
            }
        };
    };
    "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());
})();

},{}],"i4X7T":[function(require,module,exports,__globalThis) {
'use strict';
function checkDCE() {
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') return;
    var err;
    // This branch is unreachable because this function is only called
    // in production, but the condition is true only in development.
    // Therefore if the branch is still here, dead code elimination wasn't
    // properly applied.
    // Don't change the message. React DevTools relies on it. Also make sure
    // this message doesn't occur elsewhere in this function, or it will cause
    // a false positive.
    throw new Error('^_^');
}
module.exports = require("b0f0e6b9e8349dac");

},{"b0f0e6b9e8349dac":"cLd8p"}],"cLd8p":[function(require,module,exports,__globalThis) {
/**
 * @license React
 * react-dom.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
(function() {
    function noop() {}
    function testStringCoercion(value) {
        return "" + value;
    }
    function createPortal$1(children, containerInfo, implementation) {
        var key = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
        try {
            testStringCoercion(key);
            var JSCompiler_inline_result = !1;
        } catch (e) {
            JSCompiler_inline_result = !0;
        }
        JSCompiler_inline_result && (console.error("The provided key is an unsupported type %s. This value must be coerced to a string before using it here.", "function" === typeof Symbol && Symbol.toStringTag && key[Symbol.toStringTag] || key.constructor.name || "Object"), testStringCoercion(key));
        return {
            $$typeof: REACT_PORTAL_TYPE,
            key: null == key ? null : "" + key,
            children: children,
            containerInfo: containerInfo,
            implementation: implementation
        };
    }
    function getCrossOriginStringAs(as, input) {
        if ("font" === as) return "";
        if ("string" === typeof input) return "use-credentials" === input ? input : "";
    }
    function getValueDescriptorExpectingObjectForWarning(thing) {
        return null === thing ? "`null`" : void 0 === thing ? "`undefined`" : "" === thing ? "an empty string" : 'something with type "' + typeof thing + '"';
    }
    function getValueDescriptorExpectingEnumForWarning(thing) {
        return null === thing ? "`null`" : void 0 === thing ? "`undefined`" : "" === thing ? "an empty string" : "string" === typeof thing ? JSON.stringify(thing) : "number" === typeof thing ? "`" + thing + "`" : 'something with type "' + typeof thing + '"';
    }
    function resolveDispatcher() {
        var dispatcher = ReactSharedInternals.H;
        null === dispatcher && console.error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://react.dev/link/invalid-hook-call for tips about how to debug and fix this problem.");
        return dispatcher;
    }
    "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());
    var React = require("6f0162e9ab224cd4"), Internals = {
        d: {
            f: noop,
            r: function() {
                throw Error("Invalid form element. requestFormReset must be passed a form that was rendered by React.");
            },
            D: noop,
            C: noop,
            L: noop,
            m: noop,
            X: noop,
            S: noop,
            M: noop
        },
        p: 0,
        findDOMNode: null
    }, REACT_PORTAL_TYPE = Symbol.for("react.portal"), ReactSharedInternals = React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;
    "function" === typeof Map && null != Map.prototype && "function" === typeof Map.prototype.forEach && "function" === typeof Set && null != Set.prototype && "function" === typeof Set.prototype.clear && "function" === typeof Set.prototype.forEach || console.error("React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
    exports.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE = Internals;
    exports.createPortal = function(children, container) {
        var key = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;
        if (!container || 1 !== container.nodeType && 9 !== container.nodeType && 11 !== container.nodeType) throw Error("Target container is not a DOM element.");
        return createPortal$1(children, container, null, key);
    };
    exports.flushSync = function(fn) {
        var previousTransition = ReactSharedInternals.T, previousUpdatePriority = Internals.p;
        try {
            if (ReactSharedInternals.T = null, Internals.p = 2, fn) return fn();
        } finally{
            ReactSharedInternals.T = previousTransition, Internals.p = previousUpdatePriority, Internals.d.f() && console.error("flushSync was called from inside a lifecycle method. React cannot flush when React is already rendering. Consider moving this call to a scheduler task or micro task.");
        }
    };
    exports.preconnect = function(href, options) {
        "string" === typeof href && href ? null != options && "object" !== typeof options ? console.error("ReactDOM.preconnect(): Expected the `options` argument (second) to be an object but encountered %s instead. The only supported option at this time is `crossOrigin` which accepts a string.", getValueDescriptorExpectingEnumForWarning(options)) : null != options && "string" !== typeof options.crossOrigin && console.error("ReactDOM.preconnect(): Expected the `crossOrigin` option (second argument) to be a string but encountered %s instead. Try removing this option or passing a string value instead.", getValueDescriptorExpectingObjectForWarning(options.crossOrigin)) : console.error("ReactDOM.preconnect(): Expected the `href` argument (first) to be a non-empty string but encountered %s instead.", getValueDescriptorExpectingObjectForWarning(href));
        "string" === typeof href && (options ? (options = options.crossOrigin, options = "string" === typeof options ? "use-credentials" === options ? options : "" : void 0) : options = null, Internals.d.C(href, options));
    };
    exports.prefetchDNS = function(href) {
        if ("string" !== typeof href || !href) console.error("ReactDOM.prefetchDNS(): Expected the `href` argument (first) to be a non-empty string but encountered %s instead.", getValueDescriptorExpectingObjectForWarning(href));
        else if (1 < arguments.length) {
            var options = arguments[1];
            "object" === typeof options && options.hasOwnProperty("crossOrigin") ? console.error("ReactDOM.prefetchDNS(): Expected only one argument, `href`, but encountered %s as a second argument instead. This argument is reserved for future options and is currently disallowed. It looks like the you are attempting to set a crossOrigin property for this DNS lookup hint. Browsers do not perform DNS queries using CORS and setting this attribute on the resource hint has no effect. Try calling ReactDOM.prefetchDNS() with just a single string argument, `href`.", getValueDescriptorExpectingEnumForWarning(options)) : console.error("ReactDOM.prefetchDNS(): Expected only one argument, `href`, but encountered %s as a second argument instead. This argument is reserved for future options and is currently disallowed. Try calling ReactDOM.prefetchDNS() with just a single string argument, `href`.", getValueDescriptorExpectingEnumForWarning(options));
        }
        "string" === typeof href && Internals.d.D(href);
    };
    exports.preinit = function(href, options) {
        "string" === typeof href && href ? null == options || "object" !== typeof options ? console.error("ReactDOM.preinit(): Expected the `options` argument (second) to be an object with an `as` property describing the type of resource to be preinitialized but encountered %s instead.", getValueDescriptorExpectingEnumForWarning(options)) : "style" !== options.as && "script" !== options.as && console.error('ReactDOM.preinit(): Expected the `as` property in the `options` argument (second) to contain a valid value describing the type of resource to be preinitialized but encountered %s instead. Valid values for `as` are "style" and "script".', getValueDescriptorExpectingEnumForWarning(options.as)) : console.error("ReactDOM.preinit(): Expected the `href` argument (first) to be a non-empty string but encountered %s instead.", getValueDescriptorExpectingObjectForWarning(href));
        if ("string" === typeof href && options && "string" === typeof options.as) {
            var as = options.as, crossOrigin = getCrossOriginStringAs(as, options.crossOrigin), integrity = "string" === typeof options.integrity ? options.integrity : void 0, fetchPriority = "string" === typeof options.fetchPriority ? options.fetchPriority : void 0;
            "style" === as ? Internals.d.S(href, "string" === typeof options.precedence ? options.precedence : void 0, {
                crossOrigin: crossOrigin,
                integrity: integrity,
                fetchPriority: fetchPriority
            }) : "script" === as && Internals.d.X(href, {
                crossOrigin: crossOrigin,
                integrity: integrity,
                fetchPriority: fetchPriority,
                nonce: "string" === typeof options.nonce ? options.nonce : void 0
            });
        }
    };
    exports.preinitModule = function(href, options) {
        var encountered = "";
        "string" === typeof href && href || (encountered += " The `href` argument encountered was " + getValueDescriptorExpectingObjectForWarning(href) + ".");
        void 0 !== options && "object" !== typeof options ? encountered += " The `options` argument encountered was " + getValueDescriptorExpectingObjectForWarning(options) + "." : options && "as" in options && "script" !== options.as && (encountered += " The `as` option encountered was " + getValueDescriptorExpectingEnumForWarning(options.as) + ".");
        if (encountered) console.error("ReactDOM.preinitModule(): Expected up to two arguments, a non-empty `href` string and, optionally, an `options` object with a valid `as` property.%s", encountered);
        else switch(encountered = options && "string" === typeof options.as ? options.as : "script", encountered){
            case "script":
                break;
            default:
                encountered = getValueDescriptorExpectingEnumForWarning(encountered), console.error('ReactDOM.preinitModule(): Currently the only supported "as" type for this function is "script" but received "%s" instead. This warning was generated for `href` "%s". In the future other module types will be supported, aligning with the import-attributes proposal. Learn more here: (https://github.com/tc39/proposal-import-attributes)', encountered, href);
        }
        if ("string" === typeof href) {
            if ("object" === typeof options && null !== options) {
                if (null == options.as || "script" === options.as) encountered = getCrossOriginStringAs(options.as, options.crossOrigin), Internals.d.M(href, {
                    crossOrigin: encountered,
                    integrity: "string" === typeof options.integrity ? options.integrity : void 0,
                    nonce: "string" === typeof options.nonce ? options.nonce : void 0
                });
            } else null == options && Internals.d.M(href);
        }
    };
    exports.preload = function(href, options) {
        var encountered = "";
        "string" === typeof href && href || (encountered += " The `href` argument encountered was " + getValueDescriptorExpectingObjectForWarning(href) + ".");
        null == options || "object" !== typeof options ? encountered += " The `options` argument encountered was " + getValueDescriptorExpectingObjectForWarning(options) + "." : "string" === typeof options.as && options.as || (encountered += " The `as` option encountered was " + getValueDescriptorExpectingObjectForWarning(options.as) + ".");
        encountered && console.error('ReactDOM.preload(): Expected two arguments, a non-empty `href` string and an `options` object with an `as` property valid for a `<link rel="preload" as="..." />` tag.%s', encountered);
        if ("string" === typeof href && "object" === typeof options && null !== options && "string" === typeof options.as) {
            encountered = options.as;
            var crossOrigin = getCrossOriginStringAs(encountered, options.crossOrigin);
            Internals.d.L(href, encountered, {
                crossOrigin: crossOrigin,
                integrity: "string" === typeof options.integrity ? options.integrity : void 0,
                nonce: "string" === typeof options.nonce ? options.nonce : void 0,
                type: "string" === typeof options.type ? options.type : void 0,
                fetchPriority: "string" === typeof options.fetchPriority ? options.fetchPriority : void 0,
                referrerPolicy: "string" === typeof options.referrerPolicy ? options.referrerPolicy : void 0,
                imageSrcSet: "string" === typeof options.imageSrcSet ? options.imageSrcSet : void 0,
                imageSizes: "string" === typeof options.imageSizes ? options.imageSizes : void 0,
                media: "string" === typeof options.media ? options.media : void 0
            });
        }
    };
    exports.preloadModule = function(href, options) {
        var encountered = "";
        "string" === typeof href && href || (encountered += " The `href` argument encountered was " + getValueDescriptorExpectingObjectForWarning(href) + ".");
        void 0 !== options && "object" !== typeof options ? encountered += " The `options` argument encountered was " + getValueDescriptorExpectingObjectForWarning(options) + "." : options && "as" in options && "string" !== typeof options.as && (encountered += " The `as` option encountered was " + getValueDescriptorExpectingObjectForWarning(options.as) + ".");
        encountered && console.error('ReactDOM.preloadModule(): Expected two arguments, a non-empty `href` string and, optionally, an `options` object with an `as` property valid for a `<link rel="modulepreload" as="..." />` tag.%s', encountered);
        "string" === typeof href && (options ? (encountered = getCrossOriginStringAs(options.as, options.crossOrigin), Internals.d.m(href, {
            as: "string" === typeof options.as && "script" !== options.as ? options.as : void 0,
            crossOrigin: encountered,
            integrity: "string" === typeof options.integrity ? options.integrity : void 0
        })) : Internals.d.m(href));
    };
    exports.requestFormReset = function(form) {
        Internals.d.r(form);
    };
    exports.unstable_batchedUpdates = function(fn, a) {
        return fn(a);
    };
    exports.useFormState = function(action, initialState, permalink) {
        return resolveDispatcher().useFormState(action, initialState, permalink);
    };
    exports.useFormStatus = function() {
        return resolveDispatcher().useHostTransitionStatus();
    };
    exports.version = "19.1.1";
    "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());
})();

},{"6f0162e9ab224cd4":"jMk1U"}],"3VLq5":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$161e = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$161e.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$161e.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "App", ()=>App);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _heroSection = require("./components/HeroSection");
var _rsvpform = require("./components/RSVPForm");
var _reactSpinners = require("react-spinners");
var _sonner = require("./components/ui/sonner");
var _timeline = require("./components/Timeline");
var _timelineDefault = parcelHelpers.interopDefault(_timeline);
var _photoUpload = require("./components/PhotoUpload");
var _photoUploadDefault = parcelHelpers.interopDefault(_photoUpload);
var _s = $RefreshSig$();
function App() {
    _s();
    const [loading, setLoading] = (0, _react.useState)(true);
    const [invite, setInvite] = (0, _react.useState)(undefined);
    const inviteId = (0, _react.useMemo)(()=>{
        const params = new URLSearchParams(window.location.search);
        return params.get("inviteId");
    }, [
        window.location.search
    ]);
    const key = (0, _react.useMemo)(()=>{
        const params = new URLSearchParams(window.location.search);
        return params.get("key");
    }, [
        window.location.search
    ]);
    (0, _react.useEffect)(()=>{
        fetch(`https://${inviteId}.lambda-url.eu-central-1.on.aws?key=${key}`).then(async (response)=>{
            if (response.ok) {
                const data = await response.json();
                setInvite(data);
            }
        }).catch(()=>{}).finally(()=>{
            setLoading(false);
        });
    }, [
        inviteId
    ]);
    if (loading) return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: "relative flex items-center justify-center min-h-screen bg-sand",
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
            className: "relative z-10",
            children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _reactSpinners.PuffLoader), {
                color: "#2d2f22",
                loading: loading,
                size: 100,
                "aria-label": "Loading Spinner",
                "data-testid": "loader"
            }, void 0, false, {
                fileName: "src/App.tsx",
                lineNumber: 47,
                columnNumber: 11
            }, this)
        }, void 0, false, {
            fileName: "src/App.tsx",
            lineNumber: 46,
            columnNumber: 9
        }, this)
    }, void 0, false, {
        fileName: "src/App.tsx",
        lineNumber: 45,
        columnNumber: 7
    }, this);
    if (!invite) return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: "relative flex flex-col items-center justify-center min-h-screen bg-sand text-center px-6",
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
            className: "bg-white shadow-lg rounded-2xl p-8 max-w-md",
            children: [
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("h1", {
                    className: "text-2xl font-semibold text-gray-800 mb-2",
                    children: "\u041D\u0435\u0449\u043E \u0441\u0435 \u043E\u0431\u044A\u0440\u043A\u0430"
                }, void 0, false, {
                    fileName: "src/App.tsx",
                    lineNumber: 64,
                    columnNumber: 11
                }, this),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                    className: "text-gray-600 mb-4",
                    children: "\u0412\u044A\u0437\u043D\u0438\u043A\u043D\u0430 \u0433\u0440\u0435\u0448\u043A\u0430 \u043F\u0440\u0438 \u0437\u0430\u0440\u0435\u0436\u0434\u0430\u043D\u0435 \u043D\u0430 \u0432\u0430\u0448\u0430\u0442\u0430 \u043F\u043E\u043A\u0430\u043D\u0430. \u041C\u043E\u043B\u044F, \u043F\u0440\u043E\u0432\u0435\u0440\u0435\u0442\u0435 \u0434\u0430\u043B\u0438 \u043B\u0438\u043D\u043A\u044A\u0442 \u0435 \u043F\u0440\u0430\u0432\u0438\u043B\u0435\u043D \u0438\u043B\u0438 \u043E\u043F\u0438\u0442\u0430\u0439\u0442\u0435 \u043E\u0442\u043D\u043E\u0432\u043E."
                }, void 0, false, {
                    fileName: "src/App.tsx",
                    lineNumber: 67,
                    columnNumber: 11
                }, this),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("button", {
                    onClick: ()=>window.location.reload(),
                    className: "mt-4 px-6 py-2 rounded-xl bg-olivewood text-white font-medium hover:bg-olivewood/90 transition",
                    children: "\u041F\u0440\u0435\u0437\u0430\u0440\u0435\u0434\u0438"
                }, void 0, false, {
                    fileName: "src/App.tsx",
                    lineNumber: 71,
                    columnNumber: 11
                }, this)
            ]
        }, void 0, true, {
            fileName: "src/App.tsx",
            lineNumber: 62,
            columnNumber: 9
        }, this)
    }, void 0, false, {
        fileName: "src/App.tsx",
        lineNumber: 61,
        columnNumber: 7
    }, this);
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: "min-h-screen",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _heroSection.HeroSection), {
                name1: invite.name1,
                name2: invite.name2,
                date: "1",
                day: "2",
                location: "\u0421\u043E\u0444\u0438\u044F, \u0411\u044A\u043B\u0433\u0430\u0440\u0438\u044F"
            }, void 0, false, {
                fileName: "src/App.tsx",
                lineNumber: 84,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _timelineDefault.default), {}, void 0, false, {
                fileName: "src/App.tsx",
                lineNumber: 85,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _photoUploadDefault.default), {
                api_key: key
            }, void 0, false, {
                fileName: "src/App.tsx",
                lineNumber: 86,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _rsvpform.RSVPForm), {
                api_key: key
            }, void 0, false, {
                fileName: "src/App.tsx",
                lineNumber: 87,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _sonner.Toaster), {
                position: "top-center",
                toastOptions: {
                    style: {
                        background: 'var(--wedding-white)',
                        color: 'var(--olivewood)',
                        border: '1px solid var(--sand)'
                    }
                }
            }, void 0, false, {
                fileName: "src/App.tsx",
                lineNumber: 89,
                columnNumber: 7
            }, this)
        ]
    }, void 0, true, {
        fileName: "src/App.tsx",
        lineNumber: 83,
        columnNumber: 5
    }, this);
}
_s(App, "0/rxWq94m1eL0KybSXQcmFgnvs8=");
_c = App;
var _c;
$RefreshReg$(_c, "App");

  $parcel$ReactRefreshHelpers$161e.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","./components/HeroSection":"dECKG","./components/RSVPForm":"7MkIF","react-spinners":"cAOHJ","./components/ui/sonner":"3Hn3D","./components/Timeline":"8LKgj","./components/PhotoUpload":"e2VPy","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"dECKG":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$1fa8 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$1fa8.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$1fa8.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "HeroSection", ()=>HeroSection);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
function HeroSection({ name1, name2, location }) {
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("section", {
        id: "home",
        className: "min-h-screen flex flex-col items-center justify-center text-center px-6 bg-gradient-to-b from-parchment to-sand relative overflow-hidden",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "absolute inset-0 overflow-hidden",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "absolute top-20 left-10 w-32 h-32 bg-sage/10 rounded-full blur-xl"
                    }, void 0, false, {
                        fileName: "src/components/HeroSection.tsx",
                        lineNumber: 19,
                        columnNumber: 9
                    }, this),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "absolute bottom-32 right-16 w-48 h-48 bg-olive/10 rounded-full blur-2xl"
                    }, void 0, false, {
                        fileName: "src/components/HeroSection.tsx",
                        lineNumber: 20,
                        columnNumber: 9
                    }, this),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "absolute top-1/2 left-1/4 w-24 h-24 bg-bark/5 rounded-full blur-lg"
                    }, void 0, false, {
                        fileName: "src/components/HeroSection.tsx",
                        lineNumber: 21,
                        columnNumber: 9
                    }, this)
                ]
            }, void 0, true, {
                fileName: "src/components/HeroSection.tsx",
                lineNumber: 18,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "max-w-4xl mx-auto relative z-10",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "mb-12",
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: "w-16 h-0.5 bg-sage mx-auto mb-8"
                            }, void 0, false, {
                                fileName: "src/components/HeroSection.tsx",
                                lineNumber: 26,
                                columnNumber: 11
                            }, this),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: "space-y-6 mb-12",
                                children: [
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                        className: "text-lg md:text-xl text-sage uppercase tracking-wide",
                                        children: "\u0417\u0430\u0435\u0434\u043D\u043E \u0441\u044A\u0441 \u0441\u0432\u043E\u0438\u0442\u0435 \u0441\u0435\u043C\u0435\u0439\u0441\u0442\u0432\u0430"
                                    }, void 0, false, {
                                        fileName: "src/components/HeroSection.tsx",
                                        lineNumber: 29,
                                        columnNumber: 13
                                    }, this),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("h1", {
                                        className: "text-5xl md:text-7xl lg:text-8xl text-olivewood tracking-tight",
                                        children: [
                                            name1,
                                            " \u0438 ",
                                            name2
                                        ]
                                    }, void 0, true, {
                                        fileName: "src/components/HeroSection.tsx",
                                        lineNumber: 33,
                                        columnNumber: 13
                                    }, this),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                        className: "text-xl md:text-2xl text-bark max-w-2xl mx-auto leading-relaxed",
                                        children: "\u0438\u043C\u0430\u0442 \u0443\u0434\u043E\u0432\u043E\u043B\u0441\u0442\u0432\u0438\u0435\u0442\u043E \u0434\u0430 \u0432\u0438 \u043F\u043E\u043A\u0430\u043D\u044F\u0442 \u043D\u0430 \u0442\u044F\u0445\u043D\u0430\u0442\u0430 \u0441\u0432\u0430\u0442\u0431\u0430"
                                    }, void 0, false, {
                                        fileName: "src/components/HeroSection.tsx",
                                        lineNumber: 37,
                                        columnNumber: 13
                                    }, this)
                                ]
                            }, void 0, true, {
                                fileName: "src/components/HeroSection.tsx",
                                lineNumber: 28,
                                columnNumber: 11
                            }, this),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: "bg-wedding-white/90 backdrop-blur-sm rounded-lg p-8 md:p-12 shadow-xl border border-sand/50 max-w-md mx-auto",
                                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    className: "space-y-",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "text-sm uppercase tracking-wider text-sage",
                                            children: "\u0417\u0430\u043F\u0430\u0437\u0435\u0442\u0435 \u0434\u0430\u0442\u0430\u0442\u0430"
                                        }, void 0, false, {
                                            fileName: "src/components/HeroSection.tsx",
                                            lineNumber: 44,
                                            columnNumber: 15
                                        }, this),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "text-3xl md:text-4xl text-olivewood",
                                            children: "15 \u044E\u043D\u0438 2024"
                                        }, void 0, false, {
                                            fileName: "src/components/HeroSection.tsx",
                                            lineNumber: 45,
                                            columnNumber: 15
                                        }, this),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "text-lg text-bark",
                                            children: "\u0421\u044A\u0431\u043E\u0442\u0430 \u2022 16:00"
                                        }, void 0, false, {
                                            fileName: "src/components/HeroSection.tsx",
                                            lineNumber: 46,
                                            columnNumber: 15
                                        }, this),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "text-sm text-sage",
                                            children: location
                                        }, void 0, false, {
                                            fileName: "src/components/HeroSection.tsx",
                                            lineNumber: 47,
                                            columnNumber: 15
                                        }, this)
                                    ]
                                }, void 0, true, {
                                    fileName: "src/components/HeroSection.tsx",
                                    lineNumber: 43,
                                    columnNumber: 13
                                }, this)
                            }, void 0, false, {
                                fileName: "src/components/HeroSection.tsx",
                                lineNumber: 42,
                                columnNumber: 11
                            }, this)
                        ]
                    }, void 0, true, {
                        fileName: "src/components/HeroSection.tsx",
                        lineNumber: 25,
                        columnNumber: 9
                    }, this),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "w-16 h-0.5 bg-sage mx-auto"
                    }, void 0, false, {
                        fileName: "src/components/HeroSection.tsx",
                        lineNumber: 52,
                        columnNumber: 9
                    }, this)
                ]
            }, void 0, true, {
                fileName: "src/components/HeroSection.tsx",
                lineNumber: 24,
                columnNumber: 7
            }, this)
        ]
    }, void 0, true, {
        fileName: "src/components/HeroSection.tsx",
        lineNumber: 14,
        columnNumber: 5
    }, this);
}
_c = HeroSection;
var _c;
$RefreshReg$(_c, "HeroSection");

  $parcel$ReactRefreshHelpers$1fa8.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"jnFvT":[function(require,module,exports,__globalThis) {
exports.interopDefault = function(a) {
    return a && a.__esModule ? a : {
        default: a
    };
};
exports.defineInteropFlag = function(a) {
    Object.defineProperty(a, '__esModule', {
        value: true
    });
};
exports.exportAll = function(source, dest) {
    Object.keys(source).forEach(function(key) {
        if (key === 'default' || key === '__esModule' || Object.prototype.hasOwnProperty.call(dest, key)) return;
        Object.defineProperty(dest, key, {
            enumerable: true,
            get: function() {
                return source[key];
            }
        });
    });
    return dest;
};
exports.export = function(dest, destName, get) {
    Object.defineProperty(dest, destName, {
        enumerable: true,
        get: get
    });
};

},{}],"7h6Pi":[function(require,module,exports,__globalThis) {
"use strict";
var Refresh = require("7422ead32dcc1e6b");
function debounce(func, delay) {
    {
        let timeout = undefined;
        let lastTime = 0;
        return function(args) {
            // Call immediately if last call was more than the delay ago.
            // Otherwise, set a timeout. This means the first call is fast
            // (for the common case of a single update), and subsequent updates
            // are batched.
            let now = Date.now();
            if (now - lastTime > delay) {
                lastTime = now;
                func.call(null, args);
            } else {
                clearTimeout(timeout);
                timeout = setTimeout(function() {
                    timeout = undefined;
                    lastTime = Date.now();
                    func.call(null, args);
                }, delay);
            }
        };
    }
}
var enqueueUpdate = debounce(function() {
    Refresh.performReactRefresh();
}, 30);
module.exports.init = function() {
    if (!globalThis.$RefreshReg$) {
        Refresh.injectIntoGlobalHook(globalThis);
        globalThis.$RefreshReg$ = function() {};
        globalThis.$RefreshSig$ = function() {
            return function(type) {
                return type;
            };
        };
        if (typeof window !== 'undefined') {
            let ErrorOverlay = require("e4d875b7642f9496");
            ErrorOverlay.setEditorHandler(function(errorLocation) {
                let file = `${errorLocation.fileName}:${errorLocation.lineNumber || 1}:${errorLocation.colNumber || 1}`;
                fetch(module.bundle.devServer + `/__parcel_launch_editor?file=${encodeURIComponent(file)}`);
            });
            ErrorOverlay.startReportingRuntimeErrors({
                onError: function() {}
            });
            window.addEventListener('parcelhmraccept', ()=>{
                ErrorOverlay.dismissRuntimeErrors();
            });
        }
    }
};
// Everything below is either adapted or copied from
// https://github.com/facebook/metro/blob/61de16bd1edd7e738dd0311c89555a644023ab2d/packages/metro/src/lib/polyfills/require.js
// MIT License - Copyright (c) Facebook, Inc. and its affiliates.
module.exports.prelude = function(module1) {
    globalThis.$RefreshReg$ = function(type, id) {
        Refresh.register(type, module1.id + ' ' + id);
    };
    globalThis.$RefreshSig$ = Refresh.createSignatureFunctionForTransform;
};
module.exports.postlude = function(module1) {
    if (typeof window === 'undefined') return;
    if (isReactRefreshBoundary(module1.exports)) {
        registerExportsForReactRefresh(module1);
        if (module1.hot) {
            module1.hot.dispose(function(data) {
                if (Refresh.hasUnrecoverableErrors()) window.location.reload();
                data.prevExports = module1.exports;
            });
            module1.hot.accept(function(getParents) {
                var prevExports = module1.hot.data.prevExports;
                var nextExports = module1.exports;
                // Since we just executed the code for it, it's possible
                // that the new exports make it ineligible for being a boundary.
                var isNoLongerABoundary = !isReactRefreshBoundary(nextExports);
                // It can also become ineligible if its exports are incompatible
                // with the previous exports.
                // For example, if you add/remove/change exports, we'll want
                // to re-execute the importing modules, and force those components
                // to re-render. Similarly, if you convert a class component
                // to a function, we want to invalidate the boundary.
                var didInvalidate = shouldInvalidateReactRefreshBoundary(prevExports, nextExports);
                if (isNoLongerABoundary || didInvalidate) {
                    // We'll be conservative. The only case in which we won't do a full
                    // reload is if all parent modules are also refresh boundaries.
                    // In that case we'll add them to the current queue.
                    var parents = getParents();
                    if (parents.length === 0) {
                        // Looks like we bubbled to the root. Can't recover from that.
                        window.location.reload();
                        return;
                    }
                    return parents;
                }
                enqueueUpdate();
            });
        }
    }
};
function isReactRefreshBoundary(exports) {
    if (Refresh.isLikelyComponentType(exports)) return true;
    if (exports == null || typeof exports !== 'object') // Exit if we can't iterate over exports.
    return false;
    var hasExports = false;
    var areAllExportsComponents = true;
    let isESM = '__esModule' in exports;
    for(var key in exports){
        hasExports = true;
        if (key === '__esModule') continue;
        var desc = Object.getOwnPropertyDescriptor(exports, key);
        if (desc && desc.get && !isESM) // Don't invoke getters for CJS as they may have side effects.
        return false;
        var exportValue = exports[key];
        if (!Refresh.isLikelyComponentType(exportValue)) areAllExportsComponents = false;
    }
    return hasExports && areAllExportsComponents;
}
function shouldInvalidateReactRefreshBoundary(prevExports, nextExports) {
    var prevSignature = getRefreshBoundarySignature(prevExports);
    var nextSignature = getRefreshBoundarySignature(nextExports);
    if (prevSignature.length !== nextSignature.length) return true;
    for(var i = 0; i < nextSignature.length; i++){
        if (prevSignature[i] !== nextSignature[i]) return true;
    }
    return false;
}
// When this signature changes, it's unsafe to stop at this refresh boundary.
function getRefreshBoundarySignature(exports) {
    var signature = [];
    signature.push(Refresh.getFamilyByType(exports));
    if (exports == null || typeof exports !== 'object') // Exit if we can't iterate over exports.
    // (This is important for legacy environments.)
    return signature;
    let isESM = '__esModule' in exports;
    for(var key in exports){
        if (key === '__esModule') continue;
        var desc = Object.getOwnPropertyDescriptor(exports, key);
        if (desc && desc.get && !isESM) continue;
        var exportValue = exports[key];
        signature.push(key);
        signature.push(Refresh.getFamilyByType(exportValue));
    }
    return signature;
}
function registerExportsForReactRefresh(module1) {
    var exports = module1.exports, id = module1.id;
    Refresh.register(exports, id + ' %exports%');
    if (exports == null || typeof exports !== 'object') // Exit if we can't iterate over exports.
    // (This is important for legacy environments.)
    return;
    let isESM = '__esModule' in exports;
    for(var key in exports){
        var desc = Object.getOwnPropertyDescriptor(exports, key);
        if (desc && desc.get && !isESM) continue;
        var exportValue = exports[key];
        var typeID = id + ' %exports% ' + key;
        Refresh.register(exportValue, typeID);
    }
}

},{"7422ead32dcc1e6b":"hpiFP","e4d875b7642f9496":"gnoim"}],"hpiFP":[function(require,module,exports,__globalThis) {
'use strict';
module.exports = require("96622d495519d4e");

},{"96622d495519d4e":"7AD9f"}],"7AD9f":[function(require,module,exports,__globalThis) {
/**
 * @license React
 * react-refresh-runtime.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
(function() {
    function computeFullKey(signature) {
        if (null !== signature.fullKey) return signature.fullKey;
        var fullKey = signature.ownKey;
        try {
            var hooks = signature.getCustomHooks();
        } catch (err) {
            return signature.forceReset = !0, signature.fullKey = fullKey;
        }
        for(var i = 0; i < hooks.length; i++){
            var hook = hooks[i];
            if ("function" !== typeof hook) return signature.forceReset = !0, signature.fullKey = fullKey;
            hook = allSignaturesByType.get(hook);
            if (void 0 !== hook) {
                var nestedHookKey = computeFullKey(hook);
                hook.forceReset && (signature.forceReset = !0);
                fullKey += "\n---\n" + nestedHookKey;
            }
        }
        return signature.fullKey = fullKey;
    }
    function resolveFamily(type) {
        return updatedFamiliesByType.get(type);
    }
    function cloneMap(map) {
        var clone = new Map();
        map.forEach(function(value, key) {
            clone.set(key, value);
        });
        return clone;
    }
    function cloneSet(set) {
        var clone = new Set();
        set.forEach(function(value) {
            clone.add(value);
        });
        return clone;
    }
    function getProperty(object, property) {
        try {
            return object[property];
        } catch (err) {}
    }
    function register(type, id) {
        if (!(null === type || "function" !== typeof type && "object" !== typeof type || allFamiliesByType.has(type))) {
            var family = allFamiliesByID.get(id);
            void 0 === family ? (family = {
                current: type
            }, allFamiliesByID.set(id, family)) : pendingUpdates.push([
                family,
                type
            ]);
            allFamiliesByType.set(type, family);
            if ("object" === typeof type && null !== type) switch(getProperty(type, "$$typeof")){
                case REACT_FORWARD_REF_TYPE:
                    register(type.render, id + "$render");
                    break;
                case REACT_MEMO_TYPE:
                    register(type.type, id + "$type");
            }
        }
    }
    function setSignature(type, key) {
        var forceReset = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : !1, getCustomHooks = 3 < arguments.length ? arguments[3] : void 0;
        allSignaturesByType.has(type) || allSignaturesByType.set(type, {
            forceReset: forceReset,
            ownKey: key,
            fullKey: null,
            getCustomHooks: getCustomHooks || function() {
                return [];
            }
        });
        if ("object" === typeof type && null !== type) switch(getProperty(type, "$$typeof")){
            case REACT_FORWARD_REF_TYPE:
                setSignature(type.render, key, forceReset, getCustomHooks);
                break;
            case REACT_MEMO_TYPE:
                setSignature(type.type, key, forceReset, getCustomHooks);
        }
    }
    function collectCustomHooksForSignature(type) {
        type = allSignaturesByType.get(type);
        void 0 !== type && computeFullKey(type);
    }
    var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"), REACT_MEMO_TYPE = Symbol.for("react.memo"), PossiblyWeakMap = "function" === typeof WeakMap ? WeakMap : Map, allFamiliesByID = new Map(), allFamiliesByType = new PossiblyWeakMap(), allSignaturesByType = new PossiblyWeakMap(), updatedFamiliesByType = new PossiblyWeakMap(), pendingUpdates = [], helpersByRendererID = new Map(), helpersByRoot = new Map(), mountedRoots = new Set(), failedRoots = new Set(), rootElements = "function" === typeof WeakMap ? new WeakMap() : null, isPerformingRefresh = !1;
    exports._getMountedRootCount = function() {
        return mountedRoots.size;
    };
    exports.collectCustomHooksForSignature = collectCustomHooksForSignature;
    exports.createSignatureFunctionForTransform = function() {
        var savedType, hasCustomHooks, didCollectHooks = !1;
        return function(type, key, forceReset, getCustomHooks) {
            if ("string" === typeof key) return savedType || (savedType = type, hasCustomHooks = "function" === typeof getCustomHooks), null == type || "function" !== typeof type && "object" !== typeof type || setSignature(type, key, forceReset, getCustomHooks), type;
            !didCollectHooks && hasCustomHooks && (didCollectHooks = !0, collectCustomHooksForSignature(savedType));
        };
    };
    exports.getFamilyByID = function(id) {
        return allFamiliesByID.get(id);
    };
    exports.getFamilyByType = function(type) {
        return allFamiliesByType.get(type);
    };
    exports.hasUnrecoverableErrors = function() {
        return !1;
    };
    exports.injectIntoGlobalHook = function(globalObject) {
        var hook = globalObject.__REACT_DEVTOOLS_GLOBAL_HOOK__;
        if (void 0 === hook) {
            var nextID = 0;
            globalObject.__REACT_DEVTOOLS_GLOBAL_HOOK__ = hook = {
                renderers: new Map(),
                supportsFiber: !0,
                inject: function() {
                    return nextID++;
                },
                onScheduleFiberRoot: function() {},
                onCommitFiberRoot: function() {},
                onCommitFiberUnmount: function() {}
            };
        }
        if (hook.isDisabled) console.warn("Something has shimmed the React DevTools global hook (__REACT_DEVTOOLS_GLOBAL_HOOK__). Fast Refresh is not compatible with this shim and will be disabled.");
        else {
            var oldInject = hook.inject;
            hook.inject = function(injected) {
                var id = oldInject.apply(this, arguments);
                "function" === typeof injected.scheduleRefresh && "function" === typeof injected.setRefreshHandler && helpersByRendererID.set(id, injected);
                return id;
            };
            hook.renderers.forEach(function(injected, id) {
                "function" === typeof injected.scheduleRefresh && "function" === typeof injected.setRefreshHandler && helpersByRendererID.set(id, injected);
            });
            var oldOnCommitFiberRoot = hook.onCommitFiberRoot, oldOnScheduleFiberRoot = hook.onScheduleFiberRoot || function() {};
            hook.onScheduleFiberRoot = function(id, root, children) {
                isPerformingRefresh || (failedRoots.delete(root), null !== rootElements && rootElements.set(root, children));
                return oldOnScheduleFiberRoot.apply(this, arguments);
            };
            hook.onCommitFiberRoot = function(id, root, maybePriorityLevel, didError) {
                var helpers = helpersByRendererID.get(id);
                if (void 0 !== helpers) {
                    helpersByRoot.set(root, helpers);
                    helpers = root.current;
                    var alternate = helpers.alternate;
                    null !== alternate ? (alternate = null != alternate.memoizedState && null != alternate.memoizedState.element && mountedRoots.has(root), helpers = null != helpers.memoizedState && null != helpers.memoizedState.element, !alternate && helpers ? (mountedRoots.add(root), failedRoots.delete(root)) : alternate && helpers || (alternate && !helpers ? (mountedRoots.delete(root), didError ? failedRoots.add(root) : helpersByRoot.delete(root)) : alternate || helpers || didError && failedRoots.add(root))) : mountedRoots.add(root);
                }
                return oldOnCommitFiberRoot.apply(this, arguments);
            };
        }
    };
    exports.isLikelyComponentType = function(type) {
        switch(typeof type){
            case "function":
                if (null != type.prototype) {
                    if (type.prototype.isReactComponent) return !0;
                    var ownNames = Object.getOwnPropertyNames(type.prototype);
                    if (1 < ownNames.length || "constructor" !== ownNames[0] || type.prototype.__proto__ !== Object.prototype) return !1;
                }
                type = type.name || type.displayName;
                return "string" === typeof type && /^[A-Z]/.test(type);
            case "object":
                if (null != type) switch(getProperty(type, "$$typeof")){
                    case REACT_FORWARD_REF_TYPE:
                    case REACT_MEMO_TYPE:
                        return !0;
                }
                return !1;
            default:
                return !1;
        }
    };
    exports.performReactRefresh = function() {
        if (0 === pendingUpdates.length || isPerformingRefresh) return null;
        isPerformingRefresh = !0;
        try {
            var staleFamilies = new Set(), updatedFamilies = new Set(), updates = pendingUpdates;
            pendingUpdates = [];
            updates.forEach(function(_ref) {
                var family = _ref[0];
                _ref = _ref[1];
                var prevType = family.current;
                updatedFamiliesByType.set(prevType, family);
                updatedFamiliesByType.set(_ref, family);
                family.current = _ref;
                prevType.prototype && prevType.prototype.isReactComponent || _ref.prototype && _ref.prototype.isReactComponent ? _ref = !1 : (prevType = allSignaturesByType.get(prevType), _ref = allSignaturesByType.get(_ref), _ref = void 0 === prevType && void 0 === _ref || void 0 !== prevType && void 0 !== _ref && computeFullKey(prevType) === computeFullKey(_ref) && !_ref.forceReset ? !0 : !1);
                _ref ? updatedFamilies.add(family) : staleFamilies.add(family);
            });
            var update = {
                updatedFamilies: updatedFamilies,
                staleFamilies: staleFamilies
            };
            helpersByRendererID.forEach(function(helpers) {
                helpers.setRefreshHandler(resolveFamily);
            });
            var didError = !1, firstError = null, failedRootsSnapshot = cloneSet(failedRoots), mountedRootsSnapshot = cloneSet(mountedRoots), helpersByRootSnapshot = cloneMap(helpersByRoot);
            failedRootsSnapshot.forEach(function(root) {
                var helpers = helpersByRootSnapshot.get(root);
                if (void 0 === helpers) throw Error("Could not find helpers for a root. This is a bug in React Refresh.");
                failedRoots.has(root);
                if (null !== rootElements && rootElements.has(root)) {
                    var element = rootElements.get(root);
                    try {
                        helpers.scheduleRoot(root, element);
                    } catch (err) {
                        didError || (didError = !0, firstError = err);
                    }
                }
            });
            mountedRootsSnapshot.forEach(function(root) {
                var helpers = helpersByRootSnapshot.get(root);
                if (void 0 === helpers) throw Error("Could not find helpers for a root. This is a bug in React Refresh.");
                mountedRoots.has(root);
                try {
                    helpers.scheduleRefresh(root, update);
                } catch (err) {
                    didError || (didError = !0, firstError = err);
                }
            });
            if (didError) throw firstError;
            return update;
        } finally{
            isPerformingRefresh = !1;
        }
    };
    exports.register = register;
    exports.setSignature = setSignature;
})();

},{}],"gnoim":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "setEditorHandler", ()=>$da9882e673ac146b$export$25a22ac46f1bd016);
parcelHelpers.export(exports, "reportRuntimeError", ()=>$da9882e673ac146b$export$74e9101ce4078c0);
parcelHelpers.export(exports, "startReportingRuntimeErrors", ()=>$da9882e673ac146b$export$cda2c88a41631c16);
parcelHelpers.export(exports, "dismissRuntimeErrors", ()=>$da9882e673ac146b$export$1cfa6d161ca81bd9);
parcelHelpers.export(exports, "stopReportingRuntimeErrors", ()=>$da9882e673ac146b$export$25ba7d9a816639e7);
function $parcel$interopDefault(a) {
    return a && a.__esModule ? a.default : a;
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /* eslint-env browser */ /* eslint-disable react/react-in-jsx-scope, no-console */ var $b6c7f0288a15c619$var$n, $b6c7f0288a15c619$export$41c562ebe57d11e2, $b6c7f0288a15c619$var$u, $b6c7f0288a15c619$export$a8257692ac88316c, $b6c7f0288a15c619$var$i, $b6c7f0288a15c619$var$r, $b6c7f0288a15c619$var$o, $b6c7f0288a15c619$var$e, $b6c7f0288a15c619$var$f, $b6c7f0288a15c619$var$c, $b6c7f0288a15c619$var$s, $b6c7f0288a15c619$var$a, $b6c7f0288a15c619$var$h, $b6c7f0288a15c619$var$p = {}, $b6c7f0288a15c619$var$y = [], $b6c7f0288a15c619$var$v = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i, $b6c7f0288a15c619$var$w = Array.isArray;
function $b6c7f0288a15c619$var$d(n, l) {
    for(var u in l)n[u] = l[u];
    return n;
}
function $b6c7f0288a15c619$var$g(n) {
    n && n.parentNode && n.parentNode.removeChild(n);
}
function $b6c7f0288a15c619$export$c8a8987d4410bf2d(l, u, t) {
    var i, r, o, e = {};
    for(o in u)"key" == o ? i = u[o] : "ref" == o ? r = u[o] : e[o] = u[o];
    if (arguments.length > 2 && (e.children = arguments.length > 3 ? $b6c7f0288a15c619$var$n.call(arguments, 2) : t), "function" == typeof l && null != l.defaultProps) for(o in l.defaultProps)null == e[o] && (e[o] = l.defaultProps[o]);
    return $b6c7f0288a15c619$var$m(l, e, i, r, null);
}
function $b6c7f0288a15c619$var$m(n, t, i, r, o) {
    var e = {
        type: n,
        props: t,
        key: i,
        ref: r,
        __k: null,
        __: null,
        __b: 0,
        __e: null,
        __c: null,
        constructor: void 0,
        __v: null == o ? ++$b6c7f0288a15c619$var$u : o,
        __i: -1,
        __u: 0
    };
    return null == o && null != $b6c7f0288a15c619$export$41c562ebe57d11e2.vnode && $b6c7f0288a15c619$export$41c562ebe57d11e2.vnode(e), e;
}
function $b6c7f0288a15c619$export$7d1e3a5e95ceca43() {
    return {
        current: null
    };
}
function $b6c7f0288a15c619$export$ffb0004e005737fa(n) {
    return n.children;
}
function $b6c7f0288a15c619$export$16fa2f45be04daa8(n, l) {
    this.props = n, this.context = l;
}
function $b6c7f0288a15c619$var$S(n, l) {
    if (null == l) return n.__ ? $b6c7f0288a15c619$var$S(n.__, n.__i + 1) : null;
    for(var u; l < n.__k.length; l++)if (null != (u = n.__k[l]) && null != u.__e) return u.__e;
    return "function" == typeof n.type ? $b6c7f0288a15c619$var$S(n) : null;
}
function $b6c7f0288a15c619$var$C(n) {
    var l, u;
    if (null != (n = n.__) && null != n.__c) {
        for(n.__e = n.__c.base = null, l = 0; l < n.__k.length; l++)if (null != (u = n.__k[l]) && null != u.__e) {
            n.__e = n.__c.base = u.__e;
            break;
        }
        return $b6c7f0288a15c619$var$C(n);
    }
}
function $b6c7f0288a15c619$var$M(n) {
    (!n.__d && (n.__d = !0) && $b6c7f0288a15c619$var$i.push(n) && !$b6c7f0288a15c619$var$$.__r++ || $b6c7f0288a15c619$var$r != $b6c7f0288a15c619$export$41c562ebe57d11e2.debounceRendering) && (($b6c7f0288a15c619$var$r = $b6c7f0288a15c619$export$41c562ebe57d11e2.debounceRendering) || $b6c7f0288a15c619$var$o)($b6c7f0288a15c619$var$$);
}
function $b6c7f0288a15c619$var$$() {
    for(var n, u, t, r, o, f, c, s = 1; $b6c7f0288a15c619$var$i.length;)$b6c7f0288a15c619$var$i.length > s && $b6c7f0288a15c619$var$i.sort($b6c7f0288a15c619$var$e), n = $b6c7f0288a15c619$var$i.shift(), s = $b6c7f0288a15c619$var$i.length, n.__d && (t = void 0, o = (r = (u = n).__v).__e, f = [], c = [], u.__P && ((t = $b6c7f0288a15c619$var$d({}, r)).__v = r.__v + 1, $b6c7f0288a15c619$export$41c562ebe57d11e2.vnode && $b6c7f0288a15c619$export$41c562ebe57d11e2.vnode(t), $b6c7f0288a15c619$var$O(u.__P, t, r, u.__n, u.__P.namespaceURI, 32 & r.__u ? [
        o
    ] : null, f, null == o ? $b6c7f0288a15c619$var$S(r) : o, !!(32 & r.__u), c), t.__v = r.__v, t.__.__k[t.__i] = t, $b6c7f0288a15c619$var$z(f, t, c), t.__e != o && $b6c7f0288a15c619$var$C(t)));
    $b6c7f0288a15c619$var$$.__r = 0;
}
function $b6c7f0288a15c619$var$I(n, l, u, t, i, r, o, e, f, c, s) {
    var a, h, v, w, d, g, _ = t && t.__k || $b6c7f0288a15c619$var$y, m = l.length;
    for(f = $b6c7f0288a15c619$var$P(u, l, _, f, m), a = 0; a < m; a++)null != (v = u.__k[a]) && (h = -1 == v.__i ? $b6c7f0288a15c619$var$p : _[v.__i] || $b6c7f0288a15c619$var$p, v.__i = a, g = $b6c7f0288a15c619$var$O(n, v, h, i, r, o, e, f, c, s), w = v.__e, v.ref && h.ref != v.ref && (h.ref && $b6c7f0288a15c619$var$q(h.ref, null, v), s.push(v.ref, v.__c || w, v)), null == d && null != w && (d = w), 4 & v.__u || h.__k === v.__k ? f = $b6c7f0288a15c619$var$A(v, f, n) : "function" == typeof v.type && void 0 !== g ? f = g : w && (f = w.nextSibling), v.__u &= -7);
    return u.__e = d, f;
}
function $b6c7f0288a15c619$var$P(n, l, u, t, i) {
    var r, o, e, f, c, s = u.length, a = s, h = 0;
    for(n.__k = new Array(i), r = 0; r < i; r++)null != (o = l[r]) && "boolean" != typeof o && "function" != typeof o ? (f = r + h, (o = n.__k[r] = "string" == typeof o || "number" == typeof o || "bigint" == typeof o || o.constructor == String ? $b6c7f0288a15c619$var$m(null, o, null, null, null) : $b6c7f0288a15c619$var$w(o) ? $b6c7f0288a15c619$var$m($b6c7f0288a15c619$export$ffb0004e005737fa, {
        children: o
    }, null, null, null) : null == o.constructor && o.__b > 0 ? $b6c7f0288a15c619$var$m(o.type, o.props, o.key, o.ref ? o.ref : null, o.__v) : o).__ = n, o.__b = n.__b + 1, e = null, -1 != (c = o.__i = $b6c7f0288a15c619$var$L(o, u, f, a)) && (a--, (e = u[c]) && (e.__u |= 2)), null == e || null == e.__v ? (-1 == c && (i > s ? h-- : i < s && h++), "function" != typeof o.type && (o.__u |= 4)) : c != f && (c == f - 1 ? h-- : c == f + 1 ? h++ : (c > f ? h-- : h++, o.__u |= 4))) : n.__k[r] = null;
    if (a) for(r = 0; r < s; r++)null != (e = u[r]) && 0 == (2 & e.__u) && (e.__e == t && (t = $b6c7f0288a15c619$var$S(e)), $b6c7f0288a15c619$var$B(e, e));
    return t;
}
function $b6c7f0288a15c619$var$A(n, l, u) {
    var t, i;
    if ("function" == typeof n.type) {
        for(t = n.__k, i = 0; t && i < t.length; i++)t[i] && (t[i].__ = n, l = $b6c7f0288a15c619$var$A(t[i], l, u));
        return l;
    }
    n.__e != l && (l && n.type && !u.contains(l) && (l = $b6c7f0288a15c619$var$S(n)), u.insertBefore(n.__e, l || null), l = n.__e);
    do l = l && l.nextSibling;
    while (null != l && 8 == l.nodeType);
    return l;
}
function $b6c7f0288a15c619$export$47e4c5b300681277(n, l) {
    return l = l || [], null == n || "boolean" == typeof n || ($b6c7f0288a15c619$var$w(n) ? n.some(function(n) {
        $b6c7f0288a15c619$export$47e4c5b300681277(n, l);
    }) : l.push(n)), l;
}
function $b6c7f0288a15c619$var$L(n, l, u, t) {
    var i, r, o = n.key, e = n.type, f = l[u];
    if (null === f && null == n.key || f && o == f.key && e == f.type && 0 == (2 & f.__u)) return u;
    if (t > (null != f && 0 == (2 & f.__u) ? 1 : 0)) for(i = u - 1, r = u + 1; i >= 0 || r < l.length;){
        if (i >= 0) {
            if ((f = l[i]) && 0 == (2 & f.__u) && o == f.key && e == f.type) return i;
            i--;
        }
        if (r < l.length) {
            if ((f = l[r]) && 0 == (2 & f.__u) && o == f.key && e == f.type) return r;
            r++;
        }
    }
    return -1;
}
function $b6c7f0288a15c619$var$T(n, l, u) {
    "-" == l[0] ? n.setProperty(l, null == u ? "" : u) : n[l] = null == u ? "" : "number" != typeof u || $b6c7f0288a15c619$var$v.test(l) ? u : u + "px";
}
function $b6c7f0288a15c619$var$j(n, l, u, t, i) {
    var r;
    n: if ("style" == l) {
        if ("string" == typeof u) n.style.cssText = u;
        else {
            if ("string" == typeof t && (n.style.cssText = t = ""), t) for(l in t)u && l in u || $b6c7f0288a15c619$var$T(n.style, l, "");
            if (u) for(l in u)t && u[l] == t[l] || $b6c7f0288a15c619$var$T(n.style, l, u[l]);
        }
    } else if ("o" == l[0] && "n" == l[1]) r = l != (l = l.replace($b6c7f0288a15c619$var$f, "$1")), l = l.toLowerCase() in n || "onFocusOut" == l || "onFocusIn" == l ? l.toLowerCase().slice(2) : l.slice(2), n.l || (n.l = {}), n.l[l + r] = u, u ? t ? u.u = t.u : (u.u = $b6c7f0288a15c619$var$c, n.addEventListener(l, r ? $b6c7f0288a15c619$var$a : $b6c7f0288a15c619$var$s, r)) : n.removeEventListener(l, r ? $b6c7f0288a15c619$var$a : $b6c7f0288a15c619$var$s, r);
    else {
        if ("http://www.w3.org/2000/svg" == i) l = l.replace(/xlink(H|:h)/, "h").replace(/sName$/, "s");
        else if ("width" != l && "height" != l && "href" != l && "list" != l && "form" != l && "tabIndex" != l && "download" != l && "rowSpan" != l && "colSpan" != l && "role" != l && "popover" != l && l in n) try {
            n[l] = null == u ? "" : u;
            break n;
        } catch (n) {}
        "function" == typeof u || (null == u || !1 === u && "-" != l[4] ? n.removeAttribute(l) : n.setAttribute(l, "popover" == l && 1 == u ? "" : u));
    }
}
function $b6c7f0288a15c619$var$F(n) {
    return function(u) {
        if (this.l) {
            var t = this.l[u.type + n];
            if (null == u.t) u.t = $b6c7f0288a15c619$var$c++;
            else if (u.t < t.u) return;
            return t($b6c7f0288a15c619$export$41c562ebe57d11e2.event ? $b6c7f0288a15c619$export$41c562ebe57d11e2.event(u) : u);
        }
    };
}
function $b6c7f0288a15c619$var$O(n, u, t, i, r, o, e, f, c, s) {
    var a, h, p, y, v, _, m, b, S, C, M, $, P, A, H, L, T, j = u.type;
    if (null != u.constructor) return null;
    128 & t.__u && (c = !!(32 & t.__u), o = [
        f = u.__e = t.__e
    ]), (a = $b6c7f0288a15c619$export$41c562ebe57d11e2.__b) && a(u);
    n: if ("function" == typeof j) try {
        if (b = u.props, S = "prototype" in j && j.prototype.render, C = (a = j.contextType) && i[a.__c], M = a ? C ? C.props.value : a.__ : i, t.__c ? m = (h = u.__c = t.__c).__ = h.__E : (S ? u.__c = h = new j(b, M) : (u.__c = h = new $b6c7f0288a15c619$export$16fa2f45be04daa8(b, M), h.constructor = j, h.render = $b6c7f0288a15c619$var$D), C && C.sub(h), h.props = b, h.state || (h.state = {}), h.context = M, h.__n = i, p = h.__d = !0, h.__h = [], h._sb = []), S && null == h.__s && (h.__s = h.state), S && null != j.getDerivedStateFromProps && (h.__s == h.state && (h.__s = $b6c7f0288a15c619$var$d({}, h.__s)), $b6c7f0288a15c619$var$d(h.__s, j.getDerivedStateFromProps(b, h.__s))), y = h.props, v = h.state, h.__v = u, p) S && null == j.getDerivedStateFromProps && null != h.componentWillMount && h.componentWillMount(), S && null != h.componentDidMount && h.__h.push(h.componentDidMount);
        else {
            if (S && null == j.getDerivedStateFromProps && b !== y && null != h.componentWillReceiveProps && h.componentWillReceiveProps(b, M), !h.__e && null != h.shouldComponentUpdate && !1 === h.shouldComponentUpdate(b, h.__s, M) || u.__v == t.__v) {
                for(u.__v != t.__v && (h.props = b, h.state = h.__s, h.__d = !1), u.__e = t.__e, u.__k = t.__k, u.__k.some(function(n) {
                    n && (n.__ = u);
                }), $ = 0; $ < h._sb.length; $++)h.__h.push(h._sb[$]);
                h._sb = [], h.__h.length && e.push(h);
                break n;
            }
            null != h.componentWillUpdate && h.componentWillUpdate(b, h.__s, M), S && null != h.componentDidUpdate && h.__h.push(function() {
                h.componentDidUpdate(y, v, _);
            });
        }
        if (h.context = M, h.props = b, h.__P = n, h.__e = !1, P = $b6c7f0288a15c619$export$41c562ebe57d11e2.__r, A = 0, S) {
            for(h.state = h.__s, h.__d = !1, P && P(u), a = h.render(h.props, h.state, h.context), H = 0; H < h._sb.length; H++)h.__h.push(h._sb[H]);
            h._sb = [];
        } else do h.__d = !1, P && P(u), a = h.render(h.props, h.state, h.context), h.state = h.__s;
        while (h.__d && ++A < 25);
        h.state = h.__s, null != h.getChildContext && (i = $b6c7f0288a15c619$var$d($b6c7f0288a15c619$var$d({}, i), h.getChildContext())), S && !p && null != h.getSnapshotBeforeUpdate && (_ = h.getSnapshotBeforeUpdate(y, v)), L = a, null != a && a.type === $b6c7f0288a15c619$export$ffb0004e005737fa && null == a.key && (L = $b6c7f0288a15c619$var$N(a.props.children)), f = $b6c7f0288a15c619$var$I(n, $b6c7f0288a15c619$var$w(L) ? L : [
            L
        ], u, t, i, r, o, e, f, c, s), h.base = u.__e, u.__u &= -161, h.__h.length && e.push(h), m && (h.__E = h.__ = null);
    } catch (n) {
        if (u.__v = null, c || null != o) {
            if (n.then) {
                for(u.__u |= c ? 160 : 128; f && 8 == f.nodeType && f.nextSibling;)f = f.nextSibling;
                o[o.indexOf(f)] = null, u.__e = f;
            } else for(T = o.length; T--;)$b6c7f0288a15c619$var$g(o[T]);
        } else u.__e = t.__e, u.__k = t.__k;
        $b6c7f0288a15c619$export$41c562ebe57d11e2.__e(n, u, t);
    }
    else null == o && u.__v == t.__v ? (u.__k = t.__k, u.__e = t.__e) : f = u.__e = $b6c7f0288a15c619$var$V(t.__e, u, t, i, r, o, e, c, s);
    return (a = $b6c7f0288a15c619$export$41c562ebe57d11e2.diffed) && a(u), 128 & u.__u ? void 0 : f;
}
function $b6c7f0288a15c619$var$z(n, u, t) {
    for(var i = 0; i < t.length; i++)$b6c7f0288a15c619$var$q(t[i], t[++i], t[++i]);
    $b6c7f0288a15c619$export$41c562ebe57d11e2.__c && $b6c7f0288a15c619$export$41c562ebe57d11e2.__c(u, n), n.some(function(u) {
        try {
            n = u.__h, u.__h = [], n.some(function(n) {
                n.call(u);
            });
        } catch (n) {
            $b6c7f0288a15c619$export$41c562ebe57d11e2.__e(n, u.__v);
        }
    });
}
function $b6c7f0288a15c619$var$N(n) {
    return "object" != typeof n || null == n || n.__b && n.__b > 0 ? n : $b6c7f0288a15c619$var$w(n) ? n.map($b6c7f0288a15c619$var$N) : $b6c7f0288a15c619$var$d({}, n);
}
function $b6c7f0288a15c619$var$V(u, t, i, r, o, e, f, c, s) {
    var a, h, y, v, d, _, m, b = i.props, k = t.props, x = t.type;
    if ("svg" == x ? o = "http://www.w3.org/2000/svg" : "math" == x ? o = "http://www.w3.org/1998/Math/MathML" : o || (o = "http://www.w3.org/1999/xhtml"), null != e) {
        for(a = 0; a < e.length; a++)if ((d = e[a]) && "setAttribute" in d == !!x && (x ? d.localName == x : 3 == d.nodeType)) {
            u = d, e[a] = null;
            break;
        }
    }
    if (null == u) {
        if (null == x) return document.createTextNode(k);
        u = document.createElementNS(o, x, k.is && k), c && ($b6c7f0288a15c619$export$41c562ebe57d11e2.__m && $b6c7f0288a15c619$export$41c562ebe57d11e2.__m(t, e), c = !1), e = null;
    }
    if (null == x) b === k || c && u.data == k || (u.data = k);
    else {
        if (e = e && $b6c7f0288a15c619$var$n.call(u.childNodes), b = i.props || $b6c7f0288a15c619$var$p, !c && null != e) for(b = {}, a = 0; a < u.attributes.length; a++)b[(d = u.attributes[a]).name] = d.value;
        for(a in b)if (d = b[a], "children" == a) ;
        else if ("dangerouslySetInnerHTML" == a) y = d;
        else if (!(a in k)) {
            if ("value" == a && "defaultValue" in k || "checked" == a && "defaultChecked" in k) continue;
            $b6c7f0288a15c619$var$j(u, a, null, d, o);
        }
        for(a in k)d = k[a], "children" == a ? v = d : "dangerouslySetInnerHTML" == a ? h = d : "value" == a ? _ = d : "checked" == a ? m = d : c && "function" != typeof d || b[a] === d || $b6c7f0288a15c619$var$j(u, a, d, b[a], o);
        if (h) c || y && (h.__html == y.__html || h.__html == u.innerHTML) || (u.innerHTML = h.__html), t.__k = [];
        else if (y && (u.innerHTML = ""), $b6c7f0288a15c619$var$I("template" == t.type ? u.content : u, $b6c7f0288a15c619$var$w(v) ? v : [
            v
        ], t, i, r, "foreignObject" == x ? "http://www.w3.org/1999/xhtml" : o, e, f, e ? e[0] : i.__k && $b6c7f0288a15c619$var$S(i, 0), c, s), null != e) for(a = e.length; a--;)$b6c7f0288a15c619$var$g(e[a]);
        c || (a = "value", "progress" == x && null == _ ? u.removeAttribute("value") : null != _ && (_ !== u[a] || "progress" == x && !_ || "option" == x && _ != b[a]) && $b6c7f0288a15c619$var$j(u, a, _, b[a], o), a = "checked", null != m && m != u[a] && $b6c7f0288a15c619$var$j(u, a, m, b[a], o));
    }
    return u;
}
function $b6c7f0288a15c619$var$q(n, u, t) {
    try {
        if ("function" == typeof n) {
            var i = "function" == typeof n.__u;
            i && n.__u(), i && null == u || (n.__u = n(u));
        } else n.current = u;
    } catch (n) {
        $b6c7f0288a15c619$export$41c562ebe57d11e2.__e(n, t);
    }
}
function $b6c7f0288a15c619$var$B(n, u, t) {
    var i, r;
    if ($b6c7f0288a15c619$export$41c562ebe57d11e2.unmount && $b6c7f0288a15c619$export$41c562ebe57d11e2.unmount(n), (i = n.ref) && (i.current && i.current != n.__e || $b6c7f0288a15c619$var$q(i, null, u)), null != (i = n.__c)) {
        if (i.componentWillUnmount) try {
            i.componentWillUnmount();
        } catch (n) {
            $b6c7f0288a15c619$export$41c562ebe57d11e2.__e(n, u);
        }
        i.base = i.__P = null;
    }
    if (i = n.__k) for(r = 0; r < i.length; r++)i[r] && $b6c7f0288a15c619$var$B(i[r], u, t || "function" != typeof n.type);
    t || $b6c7f0288a15c619$var$g(n.__e), n.__c = n.__ = n.__e = void 0;
}
function $b6c7f0288a15c619$var$D(n, l, u) {
    return this.constructor(n, u);
}
function $b6c7f0288a15c619$export$b3890eb0ae9dca99(u, t, i) {
    var r, o, e, f;
    t == document && (t = document.documentElement), $b6c7f0288a15c619$export$41c562ebe57d11e2.__ && $b6c7f0288a15c619$export$41c562ebe57d11e2.__(u, t), o = (r = "function" == typeof i) ? null : i && i.__k || t.__k, e = [], f = [], $b6c7f0288a15c619$var$O(t, u = (!r && i || t).__k = $b6c7f0288a15c619$export$c8a8987d4410bf2d($b6c7f0288a15c619$export$ffb0004e005737fa, null, [
        u
    ]), o || $b6c7f0288a15c619$var$p, $b6c7f0288a15c619$var$p, t.namespaceURI, !r && i ? [
        i
    ] : o ? null : t.firstChild ? $b6c7f0288a15c619$var$n.call(t.childNodes) : null, e, !r && i ? i : o ? o.__e : t.firstChild, r, f), $b6c7f0288a15c619$var$z(e, u, f);
}
function $b6c7f0288a15c619$export$fa8d919ba61d84db(n, l) {
    $b6c7f0288a15c619$export$b3890eb0ae9dca99(n, l, $b6c7f0288a15c619$export$fa8d919ba61d84db);
}
function $b6c7f0288a15c619$export$e530037191fcd5d7(l, u, t) {
    var i, r, o, e, f = $b6c7f0288a15c619$var$d({}, l.props);
    for(o in l.type && l.type.defaultProps && (e = l.type.defaultProps), u)"key" == o ? i = u[o] : "ref" == o ? r = u[o] : f[o] = null == u[o] && null != e ? e[o] : u[o];
    return arguments.length > 2 && (f.children = arguments.length > 3 ? $b6c7f0288a15c619$var$n.call(arguments, 2) : t), $b6c7f0288a15c619$var$m(l.type, f, i || l.key, r || l.ref, null);
}
function $b6c7f0288a15c619$export$fd42f52fd3ae1109(n) {
    function l(n) {
        var u, t;
        return this.getChildContext || (u = new Set, (t = {})[l.__c] = this, this.getChildContext = function() {
            return t;
        }, this.componentWillUnmount = function() {
            u = null;
        }, this.shouldComponentUpdate = function(n) {
            this.props.value != n.value && u.forEach(function(n) {
                n.__e = !0, $b6c7f0288a15c619$var$M(n);
            });
        }, this.sub = function(n) {
            u.add(n);
            var l = n.componentWillUnmount;
            n.componentWillUnmount = function() {
                u && u.delete(n), l && l.call(n);
            };
        }), n.children;
    }
    return l.__c = "__cC" + $b6c7f0288a15c619$var$h++, l.__ = n, l.Provider = l.__l = (l.Consumer = function(n, l) {
        return n.children(l);
    }).contextType = l, l;
}
$b6c7f0288a15c619$var$n = $b6c7f0288a15c619$var$y.slice, $b6c7f0288a15c619$export$41c562ebe57d11e2 = {
    __e: function(n, l, u, t) {
        for(var i, r, o; l = l.__;)if ((i = l.__c) && !i.__) try {
            if ((r = i.constructor) && null != r.getDerivedStateFromError && (i.setState(r.getDerivedStateFromError(n)), o = i.__d), null != i.componentDidCatch && (i.componentDidCatch(n, t || {}), o = i.__d), o) return i.__E = i;
        } catch (l) {
            n = l;
        }
        throw n;
    }
}, $b6c7f0288a15c619$var$u = 0, $b6c7f0288a15c619$export$a8257692ac88316c = function(n) {
    return null != n && null == n.constructor;
}, $b6c7f0288a15c619$export$16fa2f45be04daa8.prototype.setState = function(n, l) {
    var u;
    u = null != this.__s && this.__s != this.state ? this.__s : this.__s = $b6c7f0288a15c619$var$d({}, this.state), "function" == typeof n && (n = n($b6c7f0288a15c619$var$d({}, u), this.props)), n && $b6c7f0288a15c619$var$d(u, n), null != n && this.__v && (l && this._sb.push(l), $b6c7f0288a15c619$var$M(this));
}, $b6c7f0288a15c619$export$16fa2f45be04daa8.prototype.forceUpdate = function(n) {
    this.__v && (this.__e = !0, n && this.__h.push(n), $b6c7f0288a15c619$var$M(this));
}, $b6c7f0288a15c619$export$16fa2f45be04daa8.prototype.render = $b6c7f0288a15c619$export$ffb0004e005737fa, $b6c7f0288a15c619$var$i = [], $b6c7f0288a15c619$var$o = "function" == typeof Promise ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout, $b6c7f0288a15c619$var$e = function(n, l) {
    return n.__v.__b - l.__v.__b;
}, $b6c7f0288a15c619$var$$.__r = 0, $b6c7f0288a15c619$var$f = /(PointerCapture)$|Capture$/i, $b6c7f0288a15c619$var$c = 0, $b6c7f0288a15c619$var$s = $b6c7f0288a15c619$var$F(!1), $b6c7f0288a15c619$var$a = $b6c7f0288a15c619$var$F(!0), $b6c7f0288a15c619$var$h = 0;
var $23b7c1cb98b19658$var$t = /["&<]/;
function $23b7c1cb98b19658$var$n(r) {
    if (0 === r.length || !1 === $23b7c1cb98b19658$var$t.test(r)) return r;
    for(var e = 0, n = 0, o = "", f = ""; n < r.length; n++){
        switch(r.charCodeAt(n)){
            case 34:
                f = "&quot;";
                break;
            case 38:
                f = "&amp;";
                break;
            case 60:
                f = "&lt;";
                break;
            default:
                continue;
        }
        n !== e && (o += r.slice(e, n)), o += f, e = n + 1;
    }
    return n !== e && (o += r.slice(e, n)), o;
}
var $23b7c1cb98b19658$var$o = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i, $23b7c1cb98b19658$var$f = 0, $23b7c1cb98b19658$var$i = Array.isArray;
function $23b7c1cb98b19658$export$34b9dba7ce09269b(e, t, n, o, i, u) {
    t || (t = {});
    var a, c, p = t;
    if ("ref" in p) for(c in p = {}, t)"ref" == c ? a = t[c] : p[c] = t[c];
    var l = {
        type: e,
        props: p,
        key: n,
        ref: a,
        __k: null,
        __: null,
        __b: 0,
        __e: null,
        __c: null,
        constructor: void 0,
        __v: --$23b7c1cb98b19658$var$f,
        __i: -1,
        __u: 0,
        __source: i,
        __self: u
    };
    if ("function" == typeof e && (a = e.defaultProps)) for(c in a)void 0 === p[c] && (p[c] = a[c]);
    return $b6c7f0288a15c619$export$41c562ebe57d11e2.vnode && $b6c7f0288a15c619$export$41c562ebe57d11e2.vnode(l), l;
}
function $23b7c1cb98b19658$export$45700d561b2268ac(r) {
    var t = $23b7c1cb98b19658$export$34b9dba7ce09269b($b6c7f0288a15c619$export$ffb0004e005737fa, {
        tpl: r,
        exprs: [].slice.call(arguments, 1)
    });
    return t.key = t.__v, t;
}
var $23b7c1cb98b19658$var$c = {}, $23b7c1cb98b19658$var$p = /[A-Z]/g;
function $23b7c1cb98b19658$export$991f6ffe102e5bac(e, t) {
    if ($b6c7f0288a15c619$export$41c562ebe57d11e2.attr) {
        var f = $b6c7f0288a15c619$export$41c562ebe57d11e2.attr(e, t);
        if ("string" == typeof f) return f;
    }
    if ("ref" === e || "key" === e) return "";
    if ("style" === e && "object" == typeof t) {
        var i = "";
        for(var u in t){
            var a = t[u];
            if (null != a && "" !== a) {
                var l = "-" == u[0] ? u : $23b7c1cb98b19658$var$c[u] || ($23b7c1cb98b19658$var$c[u] = u.replace($23b7c1cb98b19658$var$p, "-$&").toLowerCase()), s = ";";
                "number" != typeof a || l.startsWith("--") || $23b7c1cb98b19658$var$o.test(l) || (s = "px;"), i = i + l + ":" + a + s;
            }
        }
        return e + '="' + i + '"';
    }
    return null == t || !1 === t || "function" == typeof t || "object" == typeof t ? "" : !0 === t ? e : e + '="' + $23b7c1cb98b19658$var$n(t) + '"';
}
function $23b7c1cb98b19658$export$40e96e718441efeb(r) {
    if (null == r || "boolean" == typeof r || "function" == typeof r) return null;
    if ("object" == typeof r) {
        if (void 0 === r.constructor) return r;
        if ($23b7c1cb98b19658$var$i(r)) {
            for(var e = 0; e < r.length; e++)r[e] = $23b7c1cb98b19658$export$40e96e718441efeb(r[e]);
            return r;
        }
    }
    return $23b7c1cb98b19658$var$n("" + r);
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /* eslint-env browser */ /**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ let $883a43040cbd0629$var$boundErrorHandler = null;
function $883a43040cbd0629$var$errorHandler(callback, e) {
    // $FlowFixMe
    if (!e.error) return;
    // $FlowFixMe
    const { error: error } = e;
    if (error instanceof Error) callback(error);
    else // Look in your browser's devtools for more information
    callback(new Error(error));
}
function $883a43040cbd0629$export$6503ec6e8aabbaf(target, callback) {
    if ($883a43040cbd0629$var$boundErrorHandler !== null) return;
    $883a43040cbd0629$var$boundErrorHandler = $883a43040cbd0629$var$errorHandler.bind(undefined, callback);
    target.addEventListener('error', $883a43040cbd0629$var$boundErrorHandler);
}
function $883a43040cbd0629$export$d07f55d4c15c0440(target) {
    if ($883a43040cbd0629$var$boundErrorHandler === null) return;
    target.removeEventListener('error', $883a43040cbd0629$var$boundErrorHandler);
    $883a43040cbd0629$var$boundErrorHandler = null;
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ let $900f8c32b7484e20$var$boundRejectionHandler = null;
function $900f8c32b7484e20$var$rejectionHandler(callback, e) {
    if (e == null || e.reason == null) return callback(new Error('Unknown'));
    let { reason: reason } = e;
    if (reason instanceof Error) return callback(reason);
    // A non-error was rejected, we don't have a trace :(
    // Look in your browser's devtools for more information
    return callback(new Error(reason));
}
function $900f8c32b7484e20$export$6503ec6e8aabbaf(target, callback) {
    if ($900f8c32b7484e20$var$boundRejectionHandler !== null) return;
    $900f8c32b7484e20$var$boundRejectionHandler = $900f8c32b7484e20$var$rejectionHandler.bind(undefined, callback);
    // $FlowFixMe
    target.addEventListener('unhandledrejection', $900f8c32b7484e20$var$boundRejectionHandler);
}
function $900f8c32b7484e20$export$d07f55d4c15c0440(target) {
    if ($900f8c32b7484e20$var$boundRejectionHandler === null) return;
    // $FlowFixMe
    target.removeEventListener('unhandledrejection', $900f8c32b7484e20$var$boundRejectionHandler);
    $900f8c32b7484e20$var$boundRejectionHandler = null;
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ let $5f72ade198404e99$var$stackTraceRegistered = false;
// Default: https://docs.microsoft.com/en-us/scripting/javascript/reference/stacktracelimit-property-error-javascript
let $5f72ade198404e99$var$restoreStackTraceValue = 10;
const $5f72ade198404e99$var$MAX_STACK_LENGTH = 50;
function $5f72ade198404e99$export$6503ec6e8aabbaf(limit = $5f72ade198404e99$var$MAX_STACK_LENGTH) {
    if ($5f72ade198404e99$var$stackTraceRegistered) return;
    try {
        $5f72ade198404e99$var$restoreStackTraceValue = Error.stackTraceLimit;
        Error.stackTraceLimit = limit;
        $5f72ade198404e99$var$stackTraceRegistered = true;
    } catch (e) {
    // Not all browsers support this so we don't care if it errors
    }
}
function $5f72ade198404e99$export$d07f55d4c15c0440() {
    if (!$5f72ade198404e99$var$stackTraceRegistered) return;
    try {
        Error.stackTraceLimit = $5f72ade198404e99$var$restoreStackTraceValue;
        $5f72ade198404e99$var$stackTraceRegistered = false;
    } catch (e) {
    // Not all browsers support this so we don't care if it errors
    }
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /**
 * A representation of a stack frame.
 */ class $d35756f426c25812$export$8949fddf10447898 {
    constructor(functionName = null, fileName = null, lineNumber = null, columnNumber = null, scriptCode = null, sourceFunctionName = null, sourceFileName = null, sourceLineNumber = null, sourceColumnNumber = null, sourceScriptCode = null){
        if (functionName && functionName.indexOf('Object.') === 0) functionName = functionName.slice(7);
        if (// https://github.com/facebook/create-react-app/issues/2097
        // Let's ignore a meaningless name we get for top-level modules.
        functionName === 'friendlySyntaxErrorLabel' || functionName === 'exports.__esModule' || functionName === '<anonymous>' || !functionName) functionName = null;
        this.functionName = functionName;
        this.fileName = fileName;
        this.lineNumber = lineNumber;
        this.columnNumber = columnNumber;
        this._originalFunctionName = sourceFunctionName;
        this._originalFileName = sourceFileName;
        this._originalLineNumber = sourceLineNumber;
        this._originalColumnNumber = sourceColumnNumber;
        this._scriptCode = scriptCode;
        this._originalScriptCode = sourceScriptCode;
    }
    /**
   * Returns the name of this function.
   */ getFunctionName() {
        return this.functionName || '(anonymous function)';
    }
    /**
   * Returns the source of the frame.
   * This contains the file name, line number, and column number when available.
   */ getSource() {
        let str = '';
        if (this.fileName != null) str += this.fileName + ':';
        if (this.lineNumber != null) str += this.lineNumber + ':';
        if (this.columnNumber != null) str += this.columnNumber + ':';
        return str.slice(0, -1);
    }
    /**
   * Returns a pretty version of this stack frame.
   */ toString() {
        const functionName = this.getFunctionName();
        const source = this.getSource();
        return `${functionName}${source ? ` (${source})` : ``}`;
    }
}
var $d35756f426c25812$export$2e2bcd8739ae039 = $d35756f426c25812$export$8949fddf10447898;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $865b9ffc545cb441$var$regexExtractLocation = /\(?(.+?)(?::(\d+))?(?::(\d+))?\)?$/;
function $865b9ffc545cb441$var$extractLocation(token) {
    return $865b9ffc545cb441$var$regexExtractLocation.exec(token) // $FlowFixMe
    .slice(1).map((v)=>{
        const p = Number(v);
        if (!isNaN(p)) return p;
        return v;
    });
}
const $865b9ffc545cb441$var$regexValidFrame_Chrome = /^\s*(at|in)\s.+(:\d+)/;
const $865b9ffc545cb441$var$regexValidFrame_FireFox = /(^|@)\S+:\d+|.+line\s+\d+\s+>\s+(eval|Function).+/;
function $865b9ffc545cb441$var$parseStack(stack) {
    let frames = stack.filter((e)=>$865b9ffc545cb441$var$regexValidFrame_Chrome.test(e) || $865b9ffc545cb441$var$regexValidFrame_FireFox.test(e)).map((e)=>{
        if ($865b9ffc545cb441$var$regexValidFrame_FireFox.test(e)) {
            // Strip eval, we don't care about it
            let isEval = false;
            if (/ > (eval|Function)/.test(e)) {
                e = e.replace(/ line (\d+)(?: > eval line \d+)* > (eval|Function):\d+:\d+/g, ':$1');
                isEval = true;
            }
            const data = e.split(/[@]/g);
            const last = data.pop();
            return new $d35756f426c25812$export$2e2bcd8739ae039(data.join('@') || (isEval ? 'eval' : null), ...$865b9ffc545cb441$var$extractLocation(last));
        } else {
            // Strip eval, we don't care about it
            if (e.indexOf('(eval ') !== -1) e = e.replace(/(\(eval at [^()]*)|(\),.*$)/g, '');
            if (e.indexOf('(at ') !== -1) e = e.replace(/\(at /, '(');
            const data = e.trim().split(/\s+/g).slice(1);
            const last = data.pop();
            return new $d35756f426c25812$export$2e2bcd8739ae039(data.join(' ') || null, ...$865b9ffc545cb441$var$extractLocation(last));
        }
    });
    let index = frames.findIndex((frame)=>frame.getFunctionName().includes('react-stack-bottom-frame'));
    if (index >= 0) frames = frames.slice(0, index);
    return frames;
}
/**
 * Turns an <code>Error</code>, or similar object, into a set of <code>StackFrame</code>s.
 * @alias parse
 */ function $865b9ffc545cb441$export$98e6a39c04603d36(error) {
    if (error == null) throw new Error('You cannot pass a null object.');
    if (typeof error === 'string') return $865b9ffc545cb441$var$parseStack(error.split('\n'));
    if (Array.isArray(error)) return $865b9ffc545cb441$var$parseStack(error);
    if (typeof error.stack === 'string') return $865b9ffc545cb441$var$parseStack(error.stack.split('\n'));
    throw new Error('The error you provided does not contain a stack trace.');
}
var $865b9ffc545cb441$export$2e2bcd8739ae039 = $865b9ffc545cb441$export$98e6a39c04603d36;
/**
 * Enhances a set of <code>StackFrame</code>s with their original positions and code (when available).
 * @param {StackFrame[]} frames A set of <code>StackFrame</code>s which contain (generated) code positions.
 * @param {number} [contextLines=3] The number of lines to provide before and after the line specified in the <code>StackFrame</code>.
 */ async function $df495b51087c401c$export$35b6448019ed80b8(error, contextLines = 3) {
    const frames = $865b9ffc545cb441$export$98e6a39c04603d36(error);
    // $FlowFixMe
    let res = await fetch(module.bundle.devServer + '/__parcel_code_frame', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            contextLines: contextLines,
            frames: frames.map((f)=>({
                    fileName: f.fileName,
                    lineNumber: f.lineNumber,
                    columnNumber: f.columnNumber
                }))
        })
    });
    let json = await res.json();
    return json.map((f, i)=>new $d35756f426c25812$export$8949fddf10447898(frames[i].functionName, f.fileName, f.lineNumber, f.columnNumber, f.compiledLines, frames[i].functionName, f.sourceFileName, f.sourceLineNumber, f.sourceColumnNumber, f.sourceLines));
}
var $df495b51087c401c$export$2e2bcd8739ae039 = $df495b51087c401c$export$35b6448019ed80b8;
const $6d40ebe8356580e0$var$CONTEXT_SIZE = 3;
function $6d40ebe8356580e0$export$9123e6c9c0ac21ed(crash) {
    return (error, unhandledRejection = false)=>{
        $df495b51087c401c$export$2e2bcd8739ae039(error, $6d40ebe8356580e0$var$CONTEXT_SIZE).then((stackFrames)=>{
            if (stackFrames == null) return;
            crash({
                error: error,
                unhandledRejection: unhandledRejection,
                contextSize: $6d40ebe8356580e0$var$CONTEXT_SIZE,
                stackFrames: stackFrames
            });
        }).catch((e)=>{
            // eslint-disable-next-line no-console
            console.log('Could not get the stack frames of error:', e);
        });
    };
}
function $6d40ebe8356580e0$var$patchConsole(method, onError) {
    /* eslint-disable no-console */ let original = console[method];
    console[method] = (...args)=>{
        let error = null;
        if (typeof args[0] === 'string') {
            let format = args[0].match(/%[oOdisfc]/g);
            if (format) {
                let errorIndex = format.findIndex((match)=>match === '%o' || match === '%O');
                if (errorIndex < 0) errorIndex = format.findIndex((match)=>match === '%s');
                if (errorIndex >= 0) error = args[errorIndex + 1];
                else error = args[1];
                if (!(error instanceof Error)) {
                    let index = 1;
                    let message = args[0].replace(/%[oOdisfc]/g, (match)=>{
                        switch(match){
                            case '%s':
                                return String(args[index++]);
                            case '%f':
                                return parseFloat(args[index++]);
                            case '%d':
                            case '%i':
                                return parseInt(args[index++], 10);
                            case '%o':
                            case '%O':
                                if (args[index] instanceof Error) return String(args[index++]);
                                else return JSON.stringify(args[index++]);
                            case '%c':
                                index++;
                                return '';
                        }
                    });
                    error = new Error(message);
                }
            } else error = new Error(args[0]);
        } else error = args.find((arg)=>arg instanceof Error);
        if (error && !error.message.includes('[parcel]') && typeof window !== 'undefined' && window.__REACT_DEVTOOLS_GLOBAL_HOOK__) {
            // Attempt to append the React component stack
            // TODO: use React.captureOwnerStack once stable.
            let hook = window.__REACT_DEVTOOLS_GLOBAL_HOOK__;
            if (hook.renderers instanceof Map) {
                for (let renderer of hook.renderers.values())if (typeof renderer?.currentDispatcherRef?.getCurrentStack === 'function') {
                    let stack = renderer.currentDispatcherRef.getCurrentStack();
                    if (stack) {
                        error.stack += stack;
                        break;
                    }
                }
            }
            onError(error);
        }
        original.apply(console, args);
    };
/* eslint-enable no-console */ }
function $6d40ebe8356580e0$export$38ec23daa6e8dcdf(crash) {
    const crashWithFramesRunTime = $6d40ebe8356580e0$export$9123e6c9c0ac21ed(crash);
    $883a43040cbd0629$export$6503ec6e8aabbaf(window, (error)=>crashWithFramesRunTime(error, false));
    $900f8c32b7484e20$export$6503ec6e8aabbaf(window, (error)=>crashWithFramesRunTime(error, true));
    $5f72ade198404e99$export$6503ec6e8aabbaf();
    $6d40ebe8356580e0$var$patchConsole('error', (error)=>crashWithFramesRunTime(error, false));
    return function() {
        $5f72ade198404e99$export$d07f55d4c15c0440();
        $900f8c32b7484e20$export$d07f55d4c15c0440(window);
        $883a43040cbd0629$export$d07f55d4c15c0440(window);
    };
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /* eslint-env browser */ var $10ecac3e4062713a$var$t, $10ecac3e4062713a$var$r, $10ecac3e4062713a$var$u, $10ecac3e4062713a$var$i, $10ecac3e4062713a$var$o = 0, $10ecac3e4062713a$var$f = [], $10ecac3e4062713a$var$c = $b6c7f0288a15c619$export$41c562ebe57d11e2, $10ecac3e4062713a$var$e = $10ecac3e4062713a$var$c.__b, $10ecac3e4062713a$var$a = $10ecac3e4062713a$var$c.__r, $10ecac3e4062713a$var$v = $10ecac3e4062713a$var$c.diffed, $10ecac3e4062713a$var$l = $10ecac3e4062713a$var$c.__c, $10ecac3e4062713a$var$m = $10ecac3e4062713a$var$c.unmount, $10ecac3e4062713a$var$s = $10ecac3e4062713a$var$c.__;
function $10ecac3e4062713a$var$p(n, t) {
    $10ecac3e4062713a$var$c.__h && $10ecac3e4062713a$var$c.__h($10ecac3e4062713a$var$r, n, $10ecac3e4062713a$var$o || t), $10ecac3e4062713a$var$o = 0;
    var u = $10ecac3e4062713a$var$r.__H || ($10ecac3e4062713a$var$r.__H = {
        __: [],
        __h: []
    });
    return n >= u.__.length && u.__.push({}), u.__[n];
}
function $10ecac3e4062713a$export$60241385465d0a34(n) {
    return $10ecac3e4062713a$var$o = 1, $10ecac3e4062713a$export$13e3392192263954($10ecac3e4062713a$var$D, n);
}
function $10ecac3e4062713a$export$13e3392192263954(n, u, i) {
    var o = $10ecac3e4062713a$var$p($10ecac3e4062713a$var$t++, 2);
    if (o.t = n, !o.__c && (o.__ = [
        i ? i(u) : $10ecac3e4062713a$var$D(void 0, u),
        function(n) {
            var t = o.__N ? o.__N[0] : o.__[0], r = o.t(t, n);
            t !== r && (o.__N = [
                r,
                o.__[1]
            ], o.__c.setState({}));
        }
    ], o.__c = $10ecac3e4062713a$var$r, !$10ecac3e4062713a$var$r.__f)) {
        var f = function(n, t, r) {
            if (!o.__c.__H) return !0;
            var u = o.__c.__H.__.filter(function(n) {
                return !!n.__c;
            });
            if (u.every(function(n) {
                return !n.__N;
            })) return !c || c.call(this, n, t, r);
            var i = o.__c.props !== n;
            return u.forEach(function(n) {
                if (n.__N) {
                    var t = n.__[0];
                    n.__ = n.__N, n.__N = void 0, t !== n.__[0] && (i = !0);
                }
            }), c && c.call(this, n, t, r) || i;
        };
        $10ecac3e4062713a$var$r.__f = !0;
        var c = $10ecac3e4062713a$var$r.shouldComponentUpdate, e = $10ecac3e4062713a$var$r.componentWillUpdate;
        $10ecac3e4062713a$var$r.componentWillUpdate = function(n, t, r) {
            if (this.__e) {
                var u = c;
                c = void 0, f(n, t, r), c = u;
            }
            e && e.call(this, n, t, r);
        }, $10ecac3e4062713a$var$r.shouldComponentUpdate = f;
    }
    return o.__N || o.__;
}
function $10ecac3e4062713a$export$6d9c69b0de29b591(n, u) {
    var i = $10ecac3e4062713a$var$p($10ecac3e4062713a$var$t++, 3);
    !$10ecac3e4062713a$var$c.__s && $10ecac3e4062713a$var$C(i.__H, u) && (i.__ = n, i.u = u, $10ecac3e4062713a$var$r.__H.__h.push(i));
}
function $10ecac3e4062713a$export$e5c5a5f917a5871c(n, u) {
    var i = $10ecac3e4062713a$var$p($10ecac3e4062713a$var$t++, 4);
    !$10ecac3e4062713a$var$c.__s && $10ecac3e4062713a$var$C(i.__H, u) && (i.__ = n, i.u = u, $10ecac3e4062713a$var$r.__h.push(i));
}
function $10ecac3e4062713a$export$b8f5890fc79d6aca(n) {
    return $10ecac3e4062713a$var$o = 5, $10ecac3e4062713a$export$1538c33de8887b59(function() {
        return {
            current: n
        };
    }, []);
}
function $10ecac3e4062713a$export$d5a552a76deda3c2(n, t, r) {
    $10ecac3e4062713a$var$o = 6, $10ecac3e4062713a$export$e5c5a5f917a5871c(function() {
        if ("function" == typeof n) {
            var r = n(t());
            return function() {
                n(null), r && "function" == typeof r && r();
            };
        }
        if (n) return n.current = t(), function() {
            return n.current = null;
        };
    }, null == r ? r : r.concat(n));
}
function $10ecac3e4062713a$export$1538c33de8887b59(n, r) {
    var u = $10ecac3e4062713a$var$p($10ecac3e4062713a$var$t++, 7);
    return $10ecac3e4062713a$var$C(u.__H, r) && (u.__ = n(), u.__H = r, u.__h = n), u.__;
}
function $10ecac3e4062713a$export$35808ee640e87ca7(n, t) {
    return $10ecac3e4062713a$var$o = 8, $10ecac3e4062713a$export$1538c33de8887b59(function() {
        return n;
    }, t);
}
function $10ecac3e4062713a$export$fae74005e78b1a27(n) {
    var u = $10ecac3e4062713a$var$r.context[n.__c], i = $10ecac3e4062713a$var$p($10ecac3e4062713a$var$t++, 9);
    return i.c = n, u ? (null == i.__ && (i.__ = !0, u.sub($10ecac3e4062713a$var$r)), u.props.value) : n.__;
}
function $10ecac3e4062713a$export$dc8fbce3eb94dc1e(n, t) {
    $10ecac3e4062713a$var$c.useDebugValue && $10ecac3e4062713a$var$c.useDebugValue(t ? t(n) : n);
}
function $10ecac3e4062713a$export$c052f6604b7d51fe(n) {
    var u = $10ecac3e4062713a$var$p($10ecac3e4062713a$var$t++, 10), i = $10ecac3e4062713a$export$60241385465d0a34();
    return u.__ = n, $10ecac3e4062713a$var$r.componentDidCatch || ($10ecac3e4062713a$var$r.componentDidCatch = function(n, t) {
        u.__ && u.__(n, t), i[1](n);
    }), [
        i[0],
        function() {
            i[1](void 0);
        }
    ];
}
function $10ecac3e4062713a$export$f680877a34711e37() {
    var n = $10ecac3e4062713a$var$p($10ecac3e4062713a$var$t++, 11);
    if (!n.__) {
        for(var u = $10ecac3e4062713a$var$r.__v; null !== u && !u.__m && null !== u.__;)u = u.__;
        var i = u.__m || (u.__m = [
            0,
            0
        ]);
        n.__ = "P" + i[0] + "-" + i[1]++;
    }
    return n.__;
}
function $10ecac3e4062713a$var$j() {
    for(var n; n = $10ecac3e4062713a$var$f.shift();)if (n.__P && n.__H) try {
        n.__H.__h.forEach($10ecac3e4062713a$var$z), n.__H.__h.forEach($10ecac3e4062713a$var$B), n.__H.__h = [];
    } catch (t) {
        n.__H.__h = [], $10ecac3e4062713a$var$c.__e(t, n.__v);
    }
}
$10ecac3e4062713a$var$c.__b = function(n) {
    $10ecac3e4062713a$var$r = null, $10ecac3e4062713a$var$e && $10ecac3e4062713a$var$e(n);
}, $10ecac3e4062713a$var$c.__ = function(n, t) {
    n && t.__k && t.__k.__m && (n.__m = t.__k.__m), $10ecac3e4062713a$var$s && $10ecac3e4062713a$var$s(n, t);
}, $10ecac3e4062713a$var$c.__r = function(n) {
    $10ecac3e4062713a$var$a && $10ecac3e4062713a$var$a(n), $10ecac3e4062713a$var$t = 0;
    var i = ($10ecac3e4062713a$var$r = n.__c).__H;
    i && ($10ecac3e4062713a$var$u === $10ecac3e4062713a$var$r ? (i.__h = [], $10ecac3e4062713a$var$r.__h = [], i.__.forEach(function(n) {
        n.__N && (n.__ = n.__N), n.u = n.__N = void 0;
    })) : (i.__h.forEach($10ecac3e4062713a$var$z), i.__h.forEach($10ecac3e4062713a$var$B), i.__h = [], $10ecac3e4062713a$var$t = 0)), $10ecac3e4062713a$var$u = $10ecac3e4062713a$var$r;
}, $10ecac3e4062713a$var$c.diffed = function(n) {
    $10ecac3e4062713a$var$v && $10ecac3e4062713a$var$v(n);
    var t = n.__c;
    t && t.__H && (t.__H.__h.length && (1 !== $10ecac3e4062713a$var$f.push(t) && $10ecac3e4062713a$var$i === $10ecac3e4062713a$var$c.requestAnimationFrame || (($10ecac3e4062713a$var$i = $10ecac3e4062713a$var$c.requestAnimationFrame) || $10ecac3e4062713a$var$w)($10ecac3e4062713a$var$j)), t.__H.__.forEach(function(n) {
        n.u && (n.__H = n.u), n.u = void 0;
    })), $10ecac3e4062713a$var$u = $10ecac3e4062713a$var$r = null;
}, $10ecac3e4062713a$var$c.__c = function(n, t) {
    t.some(function(n) {
        try {
            n.__h.forEach($10ecac3e4062713a$var$z), n.__h = n.__h.filter(function(n) {
                return !n.__ || $10ecac3e4062713a$var$B(n);
            });
        } catch (r) {
            t.some(function(n) {
                n.__h && (n.__h = []);
            }), t = [], $10ecac3e4062713a$var$c.__e(r, n.__v);
        }
    }), $10ecac3e4062713a$var$l && $10ecac3e4062713a$var$l(n, t);
}, $10ecac3e4062713a$var$c.unmount = function(n) {
    $10ecac3e4062713a$var$m && $10ecac3e4062713a$var$m(n);
    var t, r = n.__c;
    r && r.__H && (r.__H.__.forEach(function(n) {
        try {
            $10ecac3e4062713a$var$z(n);
        } catch (n) {
            t = n;
        }
    }), r.__H = void 0, t && $10ecac3e4062713a$var$c.__e(t, r.__v));
};
var $10ecac3e4062713a$var$k = "function" == typeof requestAnimationFrame;
function $10ecac3e4062713a$var$w(n) {
    var t, r = function() {
        clearTimeout(u), $10ecac3e4062713a$var$k && cancelAnimationFrame(t), setTimeout(n);
    }, u = setTimeout(r, 100);
    $10ecac3e4062713a$var$k && (t = requestAnimationFrame(r));
}
function $10ecac3e4062713a$var$z(n) {
    var t = $10ecac3e4062713a$var$r, u = n.__c;
    "function" == typeof u && (n.__c = void 0, u()), $10ecac3e4062713a$var$r = t;
}
function $10ecac3e4062713a$var$B(n) {
    var t = $10ecac3e4062713a$var$r;
    n.__c = n.__(), $10ecac3e4062713a$var$r = t;
}
function $10ecac3e4062713a$var$C(n, t) {
    return !n || n.length !== t.length || t.some(function(t, r) {
        return t !== n[r];
    });
}
function $10ecac3e4062713a$var$D(n, t) {
    return "function" == typeof t ? t(n) : t;
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $74bb4be6e9b78681$export$f30cb9bc4f736419 = {
    // Colors for components styles
    background: 'white',
    color: 'black',
    headerColor: '#ce1126',
    primaryPreBackground: 'rgba(206, 17, 38, 0.05)',
    primaryPreColor: 'inherit',
    secondaryPreBackground: 'rgba(251, 245, 180, 0.3)',
    secondaryPreColor: 'inherit',
    footer: '#878e91',
    anchorColor: '#878e91',
    toggleBackground: 'transparent',
    toggleColor: '#878e91',
    closeColor: '#293238',
    navBackground: 'rgba(206, 17, 38, 0.05)',
    navArrow: '#ce1126',
    diffAdded: 'green',
    diffRemoved: '#ce1126',
    // Light color scheme inspired by https://chriskempson.github.io/base16/css/base16-github.css
    // base00: '#ffffff',
    base01: '#f5f5f5',
    // base02: '#c8c8fa',
    base03: '#6e6e6e',
    // base04: '#e8e8e8',
    base05: '#333333',
    // base06: '#ffffff',
    // base07: '#ffffff',
    base08: '#881280',
    // base09: '#0086b3',
    // base0A: '#795da3',
    base0B: '#1155cc',
    base0C: '#994500',
    // base0D: '#795da3',
    base0E: '#c80000'
};
const $74bb4be6e9b78681$export$3e936a8db52a10a0 = {
    // Colors for components styles
    background: '#353535',
    color: 'white',
    headerColor: '#e83b46',
    primaryPreBackground: 'rgba(206, 17, 38, 0.1)',
    primaryPreColor: '#fccfcf',
    secondaryPreBackground: 'rgba(251, 245, 180, 0.1)',
    secondaryPreColor: '#fbf5b4',
    footer: '#878e91',
    anchorColor: '#878e91',
    toggleBackground: 'transparent',
    toggleColor: '#878e91',
    closeColor: '#ffffff',
    navBackground: 'rgba(206, 17, 38, 0.2)',
    navArrow: '#ce1126',
    diffAdded: '#85e285',
    diffRemoved: '#ff5459',
    // Dark color scheme inspired by https://github.com/atom/base16-tomorrow-dark-theme/blob/master/styles/colors.less
    // base00: '#1d1f21',
    base01: '#282a2e',
    // base02: '#373b41',
    base03: '#969896',
    // base04: '#b4b7b4',
    base05: '#c5c8c6',
    // base06: '#e0e0e0',
    // base07: '#ffffff',
    base08: '#cc6666',
    // base09: '#de935f',
    // base0A: '#f0c674',
    base0B: '#b5bd68',
    base0C: '#8abeb7',
    // base0D: '#81a2be',
    base0E: '#b294bb'
};
const $74bb4be6e9b78681$export$bca14c5b3b88a9c9 = Object.fromEntries(Object.keys($74bb4be6e9b78681$export$f30cb9bc4f736419).map((key)=>[
        key,
        `light-dark(${$74bb4be6e9b78681$export$f30cb9bc4f736419[key]}, ${$74bb4be6e9b78681$export$3e936a8db52a10a0[key]})`
    ]));
const $74bb4be6e9b78681$export$7ef984671d1853d7 = {
    width: '100vw',
    height: '100vh',
    maxWidth: 'none',
    maxHeight: 'none',
    border: 0,
    margin: 0,
    padding: 0,
    boxSizing: 'border-box',
    textAlign: 'center',
    backgroundColor: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.background,
    outline: 'none',
    colorScheme: 'light dark'
};
const $20d888b381d18c6c$var$overlayStyle = {
    position: 'relative',
    display: 'inline-flex',
    flexDirection: 'column',
    height: '100%',
    width: '1024px',
    maxWidth: '100%',
    overflowX: 'hidden',
    overflowY: 'auto',
    padding: '0.5rem',
    boxSizing: 'border-box',
    textAlign: 'left',
    fontFamily: 'Consolas, Menlo, monospace',
    fontSize: '11px',
    whiteSpace: 'pre-wrap',
    wordBreak: 'break-word',
    lineHeight: 1.5,
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.color
};
function $20d888b381d18c6c$var$ErrorOverlay(props) {
    const { shortcutHandler: shortcutHandler } = props;
    $10ecac3e4062713a$export$6d9c69b0de29b591(()=>{
        const onKeyDown = (e)=>{
            if (shortcutHandler) shortcutHandler(e.key);
        };
        window.addEventListener('keydown', onKeyDown);
        return ()=>{
            window.removeEventListener('keydown', onKeyDown);
        };
    }, [
        shortcutHandler
    ]);
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
        style: $20d888b381d18c6c$var$overlayStyle,
        children: props.children
    });
}
var $20d888b381d18c6c$export$2e2bcd8739ae039 = $20d888b381d18c6c$var$ErrorOverlay;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $7aae0c9ea64fc08c$var$closeButtonStyle = {
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.closeColor,
    lineHeight: '1rem',
    fontSize: '1.5rem',
    padding: '1rem',
    cursor: 'pointer',
    position: 'absolute',
    right: 0,
    top: 0
};
function $7aae0c9ea64fc08c$var$CloseButton({ close: close }) {
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("span", {
        title: "Click or press Escape to dismiss.",
        onClick: close,
        style: $7aae0c9ea64fc08c$var$closeButtonStyle,
        children: "\xd7"
    });
}
var $7aae0c9ea64fc08c$export$2e2bcd8739ae039 = $7aae0c9ea64fc08c$var$CloseButton;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $1adc179a826c5dd2$var$navigationBarStyle = {
    marginBottom: '0.5rem'
};
const $1adc179a826c5dd2$var$buttonContainerStyle = {
    marginRight: '1em'
};
const $1adc179a826c5dd2$var$_navButtonStyle = {
    border: 'none',
    borderRadius: '4px',
    padding: '3px 6px',
    cursor: 'pointer'
};
const $1adc179a826c5dd2$var$leftButtonStyle = {
    ...$1adc179a826c5dd2$var$_navButtonStyle,
    backgroundColor: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.navBackground,
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.navArrow,
    borderTopRightRadius: '0px',
    borderBottomRightRadius: '0px',
    marginRight: '1px'
};
const $1adc179a826c5dd2$var$rightButtonStyle = {
    ...$1adc179a826c5dd2$var$_navButtonStyle,
    backgroundColor: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.navBackground,
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.navArrow,
    borderTopLeftRadius: '0px',
    borderBottomLeftRadius: '0px'
};
function $1adc179a826c5dd2$var$NavigationBar(props) {
    const { currentError: currentError, totalErrors: totalErrors, previous: previous, next: next } = props;
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
        style: $1adc179a826c5dd2$var$navigationBarStyle,
        children: [
            $23b7c1cb98b19658$export$34b9dba7ce09269b("span", {
                style: $1adc179a826c5dd2$var$buttonContainerStyle,
                children: [
                    $23b7c1cb98b19658$export$34b9dba7ce09269b("button", {
                        onClick: previous,
                        style: $1adc179a826c5dd2$var$leftButtonStyle,
                        children: "\u2190"
                    }),
                    $23b7c1cb98b19658$export$34b9dba7ce09269b("button", {
                        onClick: next,
                        style: $1adc179a826c5dd2$var$rightButtonStyle,
                        children: "\u2192"
                    })
                ]
            }),
            `${currentError} of ${totalErrors} errors on the page`
        ]
    });
}
var $1adc179a826c5dd2$export$2e2bcd8739ae039 = $1adc179a826c5dd2$var$NavigationBar;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $c306e3a42547c8c2$var$headerStyle = {
    fontSize: '2em',
    fontFamily: 'sans-serif',
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.headerColor,
    whiteSpace: 'pre-wrap',
    // Top bottom margin spaces header
    // Right margin revents overlap with close button
    margin: '0 2rem 0.75rem 0',
    flex: '0 0 auto'
};
function $c306e3a42547c8c2$var$Header(props) {
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
        style: $c306e3a42547c8c2$var$headerStyle,
        children: props.headerText
    });
}
var $c306e3a42547c8c2$export$2e2bcd8739ae039 = $c306e3a42547c8c2$var$Header;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $97c30df7f5c364f7$var$_preStyle = {
    position: 'relative',
    display: 'block',
    padding: '0.5em',
    marginTop: '0.5em',
    marginBottom: '0.5em',
    overflowX: 'auto',
    whiteSpace: 'pre-wrap',
    borderRadius: '0.25rem'
};
const $97c30df7f5c364f7$var$codeStyle = {
    fontFamily: 'Consolas, Menlo, monospace'
};
function $97c30df7f5c364f7$var$CodeBlock({ main: main, codeHTML: codeHTML }) {
    const primaryPreStyle = {
        ...$97c30df7f5c364f7$var$_preStyle,
        backgroundColor: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.primaryPreBackground,
        color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.primaryPreColor
    };
    const secondaryPreStyle = {
        ...$97c30df7f5c364f7$var$_preStyle,
        backgroundColor: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.secondaryPreBackground,
        color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.secondaryPreColor
    };
    const preStyle = main ? primaryPreStyle : secondaryPreStyle;
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("pre", {
        style: preStyle,
        children: $23b7c1cb98b19658$export$34b9dba7ce09269b("code", {
            style: $97c30df7f5c364f7$var$codeStyle,
            dangerouslySetInnerHTML: {
                __html: codeHTML
            }
        })
    });
}
var $97c30df7f5c364f7$export$2e2bcd8739ae039 = $97c30df7f5c364f7$var$CodeBlock;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ function $f78f50d61026cdc5$export$44b1e5ee7f53eae1(sourceFileName, sourceLineNumber, sourceColumnNumber, fileName, lineNumber, columnNumber, compiled) {
    let prettyURL;
    if (!compiled && sourceFileName && typeof sourceLineNumber === 'number') {
        // Remove everything up to the first /src/ or /node_modules/
        const trimMatch = /^[/|\\].*?[/|\\]((src|node_modules)[/|\\].*)/.exec(sourceFileName);
        if (trimMatch && trimMatch[1]) prettyURL = trimMatch[1];
        else prettyURL = sourceFileName;
        prettyURL += ':' + sourceLineNumber;
        // Note: we intentionally skip 0's because they're produced by cheap webpack maps
        if (sourceColumnNumber) prettyURL += ':' + sourceColumnNumber;
    } else if (fileName && typeof lineNumber === 'number') {
        prettyURL = fileName + ':' + lineNumber;
        // Note: we intentionally skip 0's because they're produced by cheap webpack maps
        if (columnNumber) prettyURL += ':' + columnNumber;
    } else prettyURL = 'unknown';
    return prettyURL.replace('webpack://', '.');
}
var $f78f50d61026cdc5$export$2e2bcd8739ae039 = $f78f50d61026cdc5$export$44b1e5ee7f53eae1;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var $cdea3ae92bef6910$exports = {};
'use strict';
$cdea3ae92bef6910$exports = $cdea3ae92bef6910$var$ansiHTML;
// Reference to https://github.com/sindresorhus/ansi-regex
var $cdea3ae92bef6910$var$_regANSI = /(?:(?:\u001b\[)|\u009b)(?:(?:[0-9]{1,3})?(?:(?:;[0-9]{0,3})*)?[A-M|f-m])|\u001b[A-M]/;
var $cdea3ae92bef6910$var$_defColors = {
    reset: [
        'fff',
        '000'
    ],
    black: '000',
    red: 'ff0000',
    green: '209805',
    yellow: 'e8bf03',
    blue: '0000ff',
    magenta: 'ff00ff',
    cyan: '00ffee',
    lightgrey: 'f0f0f0',
    darkgrey: '888'
};
var $cdea3ae92bef6910$var$_styles = {
    30: 'black',
    31: 'red',
    32: 'green',
    33: 'yellow',
    34: 'blue',
    35: 'magenta',
    36: 'cyan',
    37: 'lightgrey'
};
var $cdea3ae92bef6910$var$_openTags = {
    '1': 'font-weight:bold',
    '2': 'opacity:0.5',
    '3': '<i>',
    '4': '<u>',
    '8': 'display:none',
    '9': '<del>' // delete
};
var $cdea3ae92bef6910$var$_closeTags = {
    '23': '</i>',
    '24': '</u>',
    '29': '</del>' // reset delete
};
[
    0,
    21,
    22,
    27,
    28,
    39,
    49
].forEach(function(n) {
    $cdea3ae92bef6910$var$_closeTags[n] = '</span>';
});
/**
 * Converts text with ANSI color codes to HTML markup.
 * @param {String} text
 * @returns {*}
 */ function $cdea3ae92bef6910$var$ansiHTML(text) {
    // Returns the text if the string has no ANSI escape code.
    if (!$cdea3ae92bef6910$var$_regANSI.test(text)) return text;
    // Cache opened sequence.
    var ansiCodes = [];
    // Replace with markup.
    var ret = text.replace(/\033\[(\d+)m/g, function(match, seq) {
        var ot = $cdea3ae92bef6910$var$_openTags[seq];
        if (ot) {
            // If current sequence has been opened, close it.
            if (!!~ansiCodes.indexOf(seq)) {
                ansiCodes.pop();
                return '</span>';
            }
            // Open tag.
            ansiCodes.push(seq);
            return ot[0] === '<' ? ot : '<span style="' + ot + ';">';
        }
        var ct = $cdea3ae92bef6910$var$_closeTags[seq];
        if (ct) {
            // Pop sequence
            ansiCodes.pop();
            return ct;
        }
        return '';
    });
    // Make sure tags are closed.
    var l = ansiCodes.length;
    l > 0 && (ret += Array(l + 1).join('</span>'));
    return ret;
}
/**
 * Customize colors.
 * @param {Object} colors reference to _defColors
 */ $cdea3ae92bef6910$var$ansiHTML.setColors = function(colors) {
    if (typeof colors !== 'object') throw new Error('`colors` parameter must be an Object.');
    var _finalColors = {};
    for(var key in $cdea3ae92bef6910$var$_defColors){
        var hex = colors.hasOwnProperty(key) ? colors[key] : null;
        if (!hex) {
            _finalColors[key] = $cdea3ae92bef6910$var$_defColors[key];
            continue;
        }
        if ('reset' === key) {
            if (typeof hex === 'string') hex = [
                hex
            ];
            if (!Array.isArray(hex) || hex.length === 0 || hex.some(function(h) {
                return typeof h !== 'string';
            })) throw new Error('The value of `' + key + '` property must be an Array and each item could only be a hex string, e.g.: FF0000');
            var defHexColor = $cdea3ae92bef6910$var$_defColors[key];
            if (!hex[0]) hex[0] = defHexColor[0];
            if (hex.length === 1 || !hex[1]) {
                hex = [
                    hex[0]
                ];
                hex.push(defHexColor[1]);
            }
            hex = hex.slice(0, 2);
        } else if (typeof hex !== 'string') throw new Error('The value of `' + key + '` property must be a hex string, e.g.: FF0000');
        _finalColors[key] = hex;
    }
    $cdea3ae92bef6910$var$_setTags(_finalColors);
};
/**
 * Reset colors.
 */ $cdea3ae92bef6910$var$ansiHTML.reset = function() {
    $cdea3ae92bef6910$var$_setTags($cdea3ae92bef6910$var$_defColors);
};
/**
 * Expose tags, including open and close.
 * @type {Object}
 */ $cdea3ae92bef6910$var$ansiHTML.tags = {};
if (Object.defineProperty) {
    Object.defineProperty($cdea3ae92bef6910$var$ansiHTML.tags, 'open', {
        get: function() {
            return $cdea3ae92bef6910$var$_openTags;
        }
    });
    Object.defineProperty($cdea3ae92bef6910$var$ansiHTML.tags, 'close', {
        get: function() {
            return $cdea3ae92bef6910$var$_closeTags;
        }
    });
} else {
    $cdea3ae92bef6910$var$ansiHTML.tags.open = $cdea3ae92bef6910$var$_openTags;
    $cdea3ae92bef6910$var$ansiHTML.tags.close = $cdea3ae92bef6910$var$_closeTags;
}
function $cdea3ae92bef6910$var$_setTags(colors) {
    // reset all
    $cdea3ae92bef6910$var$_openTags['0'] = 'font-weight:normal;opacity:1;color:#' + colors.reset[0] + ';background:#' + colors.reset[1];
    // inverse
    $cdea3ae92bef6910$var$_openTags['7'] = 'color:#' + colors.reset[1] + ';background:#' + colors.reset[0];
    // dark grey
    $cdea3ae92bef6910$var$_openTags['90'] = 'color:#' + colors.darkgrey;
    for(var code in $cdea3ae92bef6910$var$_styles){
        var color = $cdea3ae92bef6910$var$_styles[code];
        var oriColor = colors[color] || '000';
        $cdea3ae92bef6910$var$_openTags[code] = 'color:#' + oriColor;
        code = parseInt(code);
        $cdea3ae92bef6910$var$_openTags[(code + 10).toString()] = 'background:#' + oriColor;
    }
}
$cdea3ae92bef6910$var$ansiHTML.reset();
// Map ANSI colors from what babel-code-frame uses to base16-github
// See: https://github.com/babel/babel/blob/e86f62b304d280d0bab52c38d61842b853848ba6/packages/babel-code-frame/src/index.js#L9-L22
const $b67e2a05a9c13039$var$colors = {
    reset: [
        $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base05,
        'transparent'
    ],
    black: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base05,
    red: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base08 /* marker, bg-invalid */ ,
    green: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base0B /* string */ ,
    yellow: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base08 /* capitalized, jsx_tag, punctuator */ ,
    blue: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base0C,
    magenta: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base0C /* regex */ ,
    cyan: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base0E /* keyword */ ,
    gray: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base03 /* comment, gutter */ ,
    lightgrey: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base01,
    darkgrey: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base03
};
/*@__PURE__*/ $parcel$interopDefault($cdea3ae92bef6910$exports).setColors($b67e2a05a9c13039$var$colors);
// $FlowFixMe
for(let tag in /*@__PURE__*/ $parcel$interopDefault($cdea3ae92bef6910$exports).tags.open)/*@__PURE__*/ $parcel$interopDefault($cdea3ae92bef6910$exports).tags.open[tag] = /*@__PURE__*/ $parcel$interopDefault($cdea3ae92bef6910$exports).tags.open[tag].replace(/#light-dark/g, 'light-dark');
function $b67e2a05a9c13039$var$generateAnsiHTML(txt) {
    return /*@__PURE__*/ $parcel$interopDefault($cdea3ae92bef6910$exports)(txt.replace(/[&<>"']/g, (c)=>{
        switch(c){
            case '&':
                return '&amp';
            case '<':
                return '&lt;';
            case '>':
                return '&gt';
            case '"':
                return '&quot;';
            case "'":
                return '&#39;';
            default:
                return c;
        }
    }));
}
var $b67e2a05a9c13039$export$2e2bcd8739ae039 = $b67e2a05a9c13039$var$generateAnsiHTML;
const $e0e0fa52b83f95a9$var$linkStyle = {
    fontSize: '0.9em',
    marginBottom: '0.9em'
};
const $e0e0fa52b83f95a9$var$anchorStyle = {
    textDecoration: 'none',
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.anchorColor,
    cursor: 'pointer'
};
const $e0e0fa52b83f95a9$var$codeAnchorStyle = {
    cursor: 'pointer'
};
const $e0e0fa52b83f95a9$var$toggleStyle = {
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.toggleColor,
    cursor: 'pointer',
    border: 'none',
    display: 'block',
    width: '100%',
    textAlign: 'left',
    background: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.toggleBackground,
    fontFamily: 'Consolas, Menlo, monospace',
    fontSize: '1em',
    padding: '0px',
    lineHeight: '1.5'
};
function $e0e0fa52b83f95a9$var$StackFrame(props) {
    const { frame: frame, critical: critical, showCode: showCode } = props;
    const { fileName: fileName, lineNumber: lineNumber, columnNumber: columnNumber, _scriptCode: scriptLines, _originalFileName: sourceFileName, _originalLineNumber: sourceLineNumber, _originalColumnNumber: sourceColumnNumber, _originalScriptCode: sourceLines } = frame;
    const functionName = frame.getFunctionName();
    const [compiled, setCompiled] = $10ecac3e4062713a$export$60241385465d0a34(!sourceLines);
    const getErrorLocation = ()=>{
        const { _originalFileName: fileName, _originalLineNumber: lineNumber } = props.frame;
        // Unknown file
        if (!fileName) return null;
        // e.g. "/path-to-my-app/webpack/bootstrap eaddeb46b67d75e4dfc1"
        const isInternalWebpackBootstrapCode = fileName.trim().indexOf(' ') !== -1;
        if (isInternalWebpackBootstrapCode) return null;
        // Code is in a real file
        return {
            fileName: fileName,
            lineNumber: lineNumber || 1
        };
    };
    const editorHandler = ()=>{
        const errorLoc = getErrorLocation();
        if (!errorLoc) return;
        props.editorHandler?.(errorLoc);
    };
    const url = $f78f50d61026cdc5$export$44b1e5ee7f53eae1(sourceFileName, sourceLineNumber, sourceColumnNumber, fileName, lineNumber, columnNumber, compiled);
    let codeBlockProps = null;
    if (showCode) {
        if (compiled && scriptLines && scriptLines.length !== 0 && lineNumber != null) codeBlockProps = {
            codeHTML: $b67e2a05a9c13039$export$2e2bcd8739ae039(scriptLines),
            main: critical
        };
        else if (!compiled && sourceLines && sourceLines.length !== 0 && sourceLineNumber != null) codeBlockProps = {
            codeHTML: $b67e2a05a9c13039$export$2e2bcd8739ae039(sourceLines),
            main: critical
        };
    }
    const canOpenInEditor = getErrorLocation() !== null && props.editorHandler !== null;
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
        children: [
            $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
                children: functionName
            }),
            $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
                style: $e0e0fa52b83f95a9$var$linkStyle,
                children: $23b7c1cb98b19658$export$34b9dba7ce09269b("span", {
                    role: "link",
                    style: canOpenInEditor ? $e0e0fa52b83f95a9$var$anchorStyle : null,
                    onClick: canOpenInEditor ? editorHandler : null,
                    onKeyDown: canOpenInEditor ? (e)=>{
                        if (e.key === 'Enter') editorHandler();
                    } : null,
                    tabIndex: canOpenInEditor ? '0' : null,
                    children: url
                })
            }),
            codeBlockProps && $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
                style: {
                    marginBottom: '1.5em'
                },
                children: [
                    $23b7c1cb98b19658$export$34b9dba7ce09269b("span", {
                        onClick: canOpenInEditor ? editorHandler : null,
                        style: canOpenInEditor ? $e0e0fa52b83f95a9$var$codeAnchorStyle : null,
                        children: $23b7c1cb98b19658$export$34b9dba7ce09269b($97c30df7f5c364f7$export$2e2bcd8739ae039, {
                            ...codeBlockProps
                        })
                    }),
                    scriptLines && sourceLines && $23b7c1cb98b19658$export$34b9dba7ce09269b("button", {
                        style: $e0e0fa52b83f95a9$var$toggleStyle,
                        onClick: ()=>{
                            setCompiled(!compiled);
                        },
                        children: 'View ' + (compiled ? 'source' : 'compiled')
                    })
                ]
            })
        ]
    });
}
var $e0e0fa52b83f95a9$export$2e2bcd8739ae039 = $e0e0fa52b83f95a9$var$StackFrame;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $9a1abb59f5d10ec8$var$_collapsibleStyle = {
    cursor: 'pointer',
    border: 'none',
    display: 'block',
    width: '100%',
    textAlign: 'left',
    fontFamily: 'Consolas, Menlo, monospace',
    fontSize: '1em',
    padding: '0px',
    lineHeight: '1.5'
};
const $9a1abb59f5d10ec8$var$collapsibleCollapsedStyle = {
    ...$9a1abb59f5d10ec8$var$_collapsibleStyle,
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.color,
    background: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.background,
    marginBottom: '1.5em'
};
const $9a1abb59f5d10ec8$var$collapsibleExpandedStyle = {
    ...$9a1abb59f5d10ec8$var$_collapsibleStyle,
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.color,
    background: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.background,
    marginBottom: '0.6em'
};
function $9a1abb59f5d10ec8$var$Collapsible(props) {
    const [collapsed, setCollapsed] = $10ecac3e4062713a$export$60241385465d0a34(true);
    const toggleCollapsed = ()=>{
        setCollapsed(!collapsed);
    };
    const count = props.children.length;
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("details", {
        open: !collapsed,
        onToggle: toggleCollapsed,
        children: [
            $23b7c1cb98b19658$export$34b9dba7ce09269b("summary", {
                style: collapsed ? $9a1abb59f5d10ec8$var$collapsibleCollapsedStyle : $9a1abb59f5d10ec8$var$collapsibleExpandedStyle,
                children: (collapsed ? "\u25B6" : "\u25BC") + ` ${count} stack frames were ` + (collapsed ? 'collapsed.' : 'expanded.')
            }),
            $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
                children: [
                    props.children,
                    $23b7c1cb98b19658$export$34b9dba7ce09269b("button", {
                        onClick: toggleCollapsed,
                        style: $9a1abb59f5d10ec8$var$collapsibleExpandedStyle,
                        children: `\u{25B2} ${count} stack frames were expanded.`
                    })
                ]
            })
        ]
    });
}
var $9a1abb59f5d10ec8$export$2e2bcd8739ae039 = $9a1abb59f5d10ec8$var$Collapsible;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ function $e95d7084caaf4e6d$export$723fa77eef12dd9f(sourceFileName, fileName) {
    return sourceFileName == null || sourceFileName === '' || sourceFileName.indexOf('~/') !== -1 || sourceFileName.indexOf('node_modules/') !== -1 || sourceFileName.indexOf('error-overlay') !== -1 || sourceFileName.trim().indexOf(' ') !== -1 || fileName == null || fileName === '';
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ function $a5027556d7003a42$export$64794fcb05cf0bcf(errorName) {
    switch(errorName){
        case 'EvalError':
        case 'InternalError':
        case 'RangeError':
        case 'ReferenceError':
        case 'SyntaxError':
        case 'TypeError':
        case 'URIError':
            return true;
        default:
            return false;
    }
}
var $a5027556d7003a42$export$2e2bcd8739ae039 = $a5027556d7003a42$export$64794fcb05cf0bcf;
const $5ee7d2edb790dd06$var$traceStyle = {
    fontSize: '1em',
    flex: '0 1 auto',
    minHeight: '0px',
    overflow: 'auto'
};
function $5ee7d2edb790dd06$var$StackTrace(props) {
    const { stackFrames: stackFrames, errorName: errorName, contextSize: contextSize, editorHandler: editorHandler } = props;
    const renderedFrames = [];
    let hasReachedAppCode = false, currentBundle = [], bundleCount = 0;
    stackFrames.forEach((frame, index)=>{
        const { fileName: fileName, _originalFileName: sourceFileName } = frame;
        const isInternalUrl = $e95d7084caaf4e6d$export$723fa77eef12dd9f(sourceFileName, fileName);
        const isThrownIntentionally = !$a5027556d7003a42$export$64794fcb05cf0bcf(errorName);
        const shouldCollapse = isInternalUrl && (isThrownIntentionally || hasReachedAppCode);
        if (!isInternalUrl) hasReachedAppCode = true;
        const frameEle = $23b7c1cb98b19658$export$34b9dba7ce09269b($e0e0fa52b83f95a9$export$2e2bcd8739ae039, {
            frame: frame,
            contextSize: contextSize,
            critical: index === 0,
            showCode: !shouldCollapse,
            editorHandler: editorHandler
        }, 'frame-' + index);
        const lastElement = index === stackFrames.length - 1;
        if (shouldCollapse) currentBundle.push(frameEle);
        if (!shouldCollapse || lastElement) {
            if (currentBundle.length === 1) renderedFrames.push(currentBundle[0]);
            else if (currentBundle.length > 1) {
                bundleCount++;
                renderedFrames.push($23b7c1cb98b19658$export$34b9dba7ce09269b($9a1abb59f5d10ec8$export$2e2bcd8739ae039, {
                    children: currentBundle
                }, 'bundle-' + bundleCount));
            }
            currentBundle = [];
        }
        if (!shouldCollapse) renderedFrames.push(frameEle);
    });
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
        style: $5ee7d2edb790dd06$var$traceStyle,
        children: renderedFrames
    });
}
var $5ee7d2edb790dd06$export$2e2bcd8739ae039 = $5ee7d2edb790dd06$var$StackTrace;
const $2eeadf2892cff4e4$var$diffStyle = {
    backgroundColor: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.primaryPreBackground,
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.primaryPreColor,
    padding: '0.5em',
    overflowX: 'auto',
    whiteSpace: 'pre-wrap',
    borderRadius: '0.25rem'
};
function $2eeadf2892cff4e4$export$2e2bcd8739ae039({ diff: diff }) {
    let lines = diff.split('\n').flatMap((line, i)=>[
            $2eeadf2892cff4e4$var$formatLine(line, i),
            '\n'
        ]).slice(0, -1);
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("pre", {
        style: $2eeadf2892cff4e4$var$diffStyle,
        children: lines
    });
}
function $2eeadf2892cff4e4$var$formatLine(line, index) {
    if (line.startsWith('+')) return $23b7c1cb98b19658$export$34b9dba7ce09269b("span", {
        style: {
            color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.diffAdded,
            fontWeight: 'bold'
        },
        children: line
    }, index);
    else if (line.startsWith('-') || line.startsWith('>')) return $23b7c1cb98b19658$export$34b9dba7ce09269b("span", {
        style: {
            color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.diffRemoved,
            fontWeight: 'bold'
        },
        children: line
    }, index);
    else return line;
}
const $4baa71cb4cecc0ea$var$wrapperStyle = {
    display: 'flex',
    flexDirection: 'column'
};
function $4baa71cb4cecc0ea$var$RuntimeError({ errorRecord: errorRecord, editorHandler: editorHandler }) {
    const { error: error, unhandledRejection: unhandledRejection, contextSize: contextSize, stackFrames: stackFrames } = errorRecord;
    const errorName = unhandledRejection ? 'Unhandled Rejection (' + error.name + ')' : error.name;
    // Make header prettier
    const message = error.message;
    let headerText = message.match(/^\w*:/) || !errorName ? message : errorName + ': ' + message;
    headerText = headerText // TODO: maybe remove this prefix from fbjs?
    // It's just scaring people
    .replace(/^Invariant Violation:\s*/, '') // This is not helpful either:
    .replace(/^Warning:\s*/, '') // Break the actionable part to the next line.
    // AFAIK React 16+ should already do this.
    .replace(' Check the render method', '\n\nCheck the render method').replace(' Check your code at', '\n\nCheck your code at');
    let link, diff;
    if (headerText.includes('https://react.dev/link/hydration-mismatch')) {
        [headerText, diff] = headerText.split('https://react.dev/link/hydration-mismatch');
        link = 'https://react.dev/link/hydration-mismatch';
    } else if (headerText.includes('This will cause a hydration error.')) {
        [headerText, diff] = headerText.split('This will cause a hydration error.');
        headerText += 'This will cause a hydration error.';
    }
    let lines = headerText.split('\n');
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
        style: $4baa71cb4cecc0ea$var$wrapperStyle,
        children: [
            $23b7c1cb98b19658$export$34b9dba7ce09269b($c306e3a42547c8c2$export$2e2bcd8739ae039, {
                headerText: lines[0]
            }),
            $23b7c1cb98b19658$export$34b9dba7ce09269b("pre", {
                children: lines.slice(1).join('\n').trim()
            }),
            link && $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
                children: $23b7c1cb98b19658$export$34b9dba7ce09269b("a", {
                    href: link,
                    target: "_blank",
                    rel: "noreferrer",
                    children: link
                })
            }),
            diff && $23b7c1cb98b19658$export$34b9dba7ce09269b($2eeadf2892cff4e4$export$2e2bcd8739ae039, {
                diff: diff.trim()
            }),
            $23b7c1cb98b19658$export$34b9dba7ce09269b($5ee7d2edb790dd06$export$2e2bcd8739ae039, {
                stackFrames: stackFrames,
                errorName: errorName,
                contextSize: contextSize,
                editorHandler: editorHandler
            })
        ]
    });
}
var $4baa71cb4cecc0ea$export$2e2bcd8739ae039 = $4baa71cb4cecc0ea$var$RuntimeError;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $7606db210182b733$var$footerStyle = {
    fontFamily: 'sans-serif',
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.footer,
    marginTop: '0.5rem',
    flex: '0 0 auto'
};
function $7606db210182b733$var$Footer(props) {
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
        style: $7606db210182b733$var$footerStyle,
        children: [
            props.line1,
            $23b7c1cb98b19658$export$34b9dba7ce09269b("br", {}),
            props.line2
        ]
    });
}
var $7606db210182b733$export$2e2bcd8739ae039 = $7606db210182b733$var$Footer;
function $d0eac8b125ed15e2$var$RuntimeErrorContainer(props) {
    const { errorRecords: errorRecords, close: close } = props;
    const totalErrors = errorRecords.length;
    let [currentIndex, setCurrentIndex] = $10ecac3e4062713a$export$60241385465d0a34(0);
    let previous = ()=>{
        setCurrentIndex(currentIndex > 0 ? currentIndex - 1 : totalErrors - 1);
    };
    let next = ()=>{
        setCurrentIndex(currentIndex < totalErrors - 1 ? currentIndex + 1 : 0);
    };
    return $23b7c1cb98b19658$export$34b9dba7ce09269b($20d888b381d18c6c$export$2e2bcd8739ae039, {
        shortcutHandler: (key)=>{
            if (key === 'Escape') props.close();
            else if (key === 'ArrowLeft') previous();
            else if (key === 'ArrowRight') next();
        },
        children: [
            $23b7c1cb98b19658$export$34b9dba7ce09269b($7aae0c9ea64fc08c$export$2e2bcd8739ae039, {
                close: close
            }),
            totalErrors > 1 && $23b7c1cb98b19658$export$34b9dba7ce09269b($1adc179a826c5dd2$export$2e2bcd8739ae039, {
                currentError: currentIndex + 1,
                totalErrors: totalErrors,
                previous: previous,
                next: next
            }),
            $23b7c1cb98b19658$export$34b9dba7ce09269b($4baa71cb4cecc0ea$export$2e2bcd8739ae039, {
                errorRecord: errorRecords[currentIndex],
                editorHandler: props.editorHandler
            }),
            $23b7c1cb98b19658$export$34b9dba7ce09269b($7606db210182b733$export$2e2bcd8739ae039, {
                line1: "This screen is visible only in development. It will not appear if the app crashes in production.",
                line2: "Open your browser\u2019s developer console to further inspect this error.  Click the 'X' or hit ESC to dismiss this message."
            })
        ]
    });
}
var $d0eac8b125ed15e2$export$2e2bcd8739ae039 = $d0eac8b125ed15e2$var$RuntimeErrorContainer;
let $da9882e673ac146b$var$iframe = null;
let $da9882e673ac146b$var$editorHandler = null;
let $da9882e673ac146b$var$currentRuntimeErrorRecords = [];
let $da9882e673ac146b$var$stopListeningToRuntimeErrors = null;
function $da9882e673ac146b$export$25a22ac46f1bd016(handler) {
    $da9882e673ac146b$var$editorHandler = handler;
    if ($da9882e673ac146b$var$iframe) $da9882e673ac146b$var$update();
}
function $da9882e673ac146b$export$74e9101ce4078c0(error, options) {
    $6d40ebe8356580e0$export$9123e6c9c0ac21ed($da9882e673ac146b$var$handleRuntimeError(options))(error, false);
}
function $da9882e673ac146b$export$cda2c88a41631c16(options) {
    if ($da9882e673ac146b$var$stopListeningToRuntimeErrors !== null) throw new Error('Already listening');
    $da9882e673ac146b$var$stopListeningToRuntimeErrors = $6d40ebe8356580e0$export$38ec23daa6e8dcdf($da9882e673ac146b$var$handleRuntimeError(options));
}
const $da9882e673ac146b$var$handleRuntimeError = (options)=>(errorRecord)=>{
        try {
            if (typeof options.onError === 'function') options.onError.call(null);
        } finally{
            if ($da9882e673ac146b$var$currentRuntimeErrorRecords.some(({ error: error })=>error === errorRecord.error)) // This fixes https://github.com/facebook/create-react-app/issues/3011.
            // eslint-disable-next-line no-unsafe-finally
            return;
            $da9882e673ac146b$var$currentRuntimeErrorRecords = $da9882e673ac146b$var$currentRuntimeErrorRecords.concat([
                errorRecord
            ]);
            $da9882e673ac146b$var$update();
        }
    };
function $da9882e673ac146b$export$1cfa6d161ca81bd9() {
    $da9882e673ac146b$var$currentRuntimeErrorRecords = [];
    $da9882e673ac146b$var$update();
}
function $da9882e673ac146b$export$25ba7d9a816639e7() {
    if ($da9882e673ac146b$var$stopListeningToRuntimeErrors === null) throw new Error('Not currently listening');
    try {
        $da9882e673ac146b$var$stopListeningToRuntimeErrors();
    } finally{
        $da9882e673ac146b$var$stopListeningToRuntimeErrors = null;
    }
}
let $da9882e673ac146b$var$rootNode, $da9882e673ac146b$var$shadow;
function $da9882e673ac146b$var$update() {
    if (!$da9882e673ac146b$var$rootNode) {
        $da9882e673ac146b$var$rootNode = document.createElement('parcel-error-overlay');
        $da9882e673ac146b$var$shadow = $da9882e673ac146b$var$rootNode.attachShadow({
            mode: 'open'
        });
        if ($da9882e673ac146b$var$rootNode) document.body?.appendChild($da9882e673ac146b$var$rootNode);
    }
    if ($da9882e673ac146b$var$currentRuntimeErrorRecords.length > 0 && $da9882e673ac146b$var$shadow) $b6c7f0288a15c619$export$b3890eb0ae9dca99($23b7c1cb98b19658$export$34b9dba7ce09269b("dialog", {
        ref: (d)=>d?.showModal(),
        style: $74bb4be6e9b78681$export$7ef984671d1853d7,
        onClose: $da9882e673ac146b$export$1cfa6d161ca81bd9,
        children: $23b7c1cb98b19658$export$34b9dba7ce09269b($da9882e673ac146b$var$ErrorOverlay, {})
    }), $da9882e673ac146b$var$shadow);
    else {
        $da9882e673ac146b$var$rootNode?.remove();
        $da9882e673ac146b$var$rootNode = null;
    }
}
function $da9882e673ac146b$var$ErrorOverlay() {
    if ($da9882e673ac146b$var$currentRuntimeErrorRecords.length > 0) return $23b7c1cb98b19658$export$34b9dba7ce09269b($d0eac8b125ed15e2$export$2e2bcd8739ae039, {
        errorRecords: $da9882e673ac146b$var$currentRuntimeErrorRecords,
        close: $da9882e673ac146b$export$1cfa6d161ca81bd9,
        editorHandler: $da9882e673ac146b$var$editorHandler
    });
    return null;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7MkIF":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$e829 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$e829.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$e829.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "RSVPForm", ()=>RSVPForm);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _button = require("./ui/button");
var _input = require("./ui/input");
var _label = require("./ui/label");
var _textarea = require("./ui/textarea");
var _radioGroup = require("./ui/radio-group");
var _checkbox = require("./ui/checkbox");
var _select = require("./ui/select");
var _card = require("./ui/card");
var _lucideReact = require("lucide-react");
var _sonner = require("sonner");
var _s = $RefreshSig$();
function RSVPForm({ api_key }) {
    _s();
    const [formData, setFormData] = (0, _react.useState)({
        firstName: "",
        lastName: "",
        phone: "",
        attendance: "",
        needsAccommodation: "",
        specialMessage: ""
    });
    const [guests, setGuests] = (0, _react.useState)([
        {
            id: Date.now().toString(),
            firstName: "",
            lastName: "",
            isChild: false,
            menuPreference: ""
        }
    ]);
    const [loading, setLoading] = (0, _react.useState)(false);
    const [submitted, setSubmitted] = (0, _react.useState)(false);
    (0, _react.useEffect)(()=>{
        if (formData.attendance === "yes") setGuests((prev)=>prev.map((g, i)=>i === 0 ? {
                    ...g,
                    firstName: formData.firstName,
                    lastName: formData.lastName
                } : g));
    }, [
        formData.firstName,
        formData.lastName,
        formData.attendance
    ]);
    const handleSubmit = (e)=>{
        e.preventDefault();
        if (!formData.firstName || !formData.lastName || !formData.phone || !formData.attendance) {
            (0, _sonner.toast).error("\u041C\u043E\u043B\u044F, \u043F\u043E\u043F\u044A\u043B\u043D\u0435\u0442\u0435 \u0432\u0441\u0438\u0447\u043A\u0438 \u0437\u0430\u0434\u044A\u043B\u0436\u0438\u0442\u0435\u043B\u043D\u0438 \u043F\u043E\u043B\u0435\u0442\u0430");
            return;
        }
        if (formData.attendance === "yes") {
            // Check guests' menuPreference
            for (const guest of guests)if (!guest.menuPreference) {
                (0, _sonner.toast).error("\u041C\u043E\u043B\u044F, \u0438\u0437\u0431\u0435\u0440\u0435\u0442\u0435 \u043F\u0440\u0435\u0434\u043F\u043E\u0447\u0438\u0442\u0430\u043D\u043E \u043C\u0435\u043D\u044E \u0437\u0430 \u0432\u0441\u0435\u043A\u0438 \u0433\u043E\u0441\u0442");
                return;
            }
            // Check accommodation
            if (!formData.needsAccommodation) {
                (0, _sonner.toast).error("\u041C\u043E\u043B\u044F, \u0438\u0437\u0431\u0435\u0440\u0435\u0442\u0435 \u0434\u0430\u043B\u0438 \u0438\u043C\u0430\u0442\u0435 \u043D\u0443\u0436\u0434\u0430 \u043E\u0442 \u043D\u0430\u0441\u0442\u0430\u043D\u044F\u0432\u0430\u043D\u0435");
                return;
            }
        }
        const submission = {
            firstName: formData.firstName,
            lastName: formData.lastName,
            phone: formData.phone,
            attendance: formData.attendance === "yes",
            needsAccommodation: formData.needsAccommodation === "yes",
            specialMessage: formData.specialMessage,
            guests
        };
        setLoading(true);
        fetch(`https://script.google.com/macros/s/AKfycbyeRI0qSb36t0RS-gByBTrey2B7Wx0h8zijIh42pnSIISkZjXYOB7fnN3Nbjgmj8UAjEA/exec?key=${api_key}`, {
            redirect: "follow",
            method: "POST",
            body: JSON.stringify(submission)
        }).then((response)=>{
            (0, _sonner.toast).success("\u0411\u043B\u0430\u0433\u043E\u0434\u0430\u0440\u0438\u043C \u0437\u0430 \u0432\u0430\u0448\u0435\u0442\u043E \u043F\u043E\u0442\u0432\u044A\u0440\u0436\u0434\u0435\u043D\u0438\u0435! \u041E\u0447\u0430\u043A\u0432\u0430\u043C\u0435 \u0441 \u043D\u0435\u0442\u044A\u0440\u043F\u0435\u043D\u0438\u0435 \u0434\u0430 \u043F\u0440\u0430\u0437\u043D\u0443\u0432\u0430\u043C\u0435 \u0437\u0430\u0435\u0434\u043D\u043E!");
            setSubmitted(true);
        }).catch((err)=>{
            console.log("Error submitting RSVP:", err);
            (0, _sonner.toast).error("\u0412\u044A\u0437\u043D\u0438\u043A\u043D\u0430 \u0433\u0440\u0435\u0448\u043A\u0430 \u043F\u0440\u0438 \u0438\u0437\u043F\u0440\u0430\u0449\u0430\u043D\u0435\u0442\u043E. \u041C\u043E\u043B\u044F, \u043E\u043F\u0438\u0442\u0430\u0439\u0442\u0435 \u043E\u0442\u043D\u043E\u0432\u043E.");
        }).finally(()=>{
            setLoading(false);
        });
    };
    const handleFormChange = (field, value)=>{
        setFormData((prev)=>({
                ...prev,
                [field]: value
            }));
    };
    const addGuest = ()=>{
        const newGuest = {
            id: Date.now().toString(),
            firstName: "",
            lastName: "",
            isChild: false,
            menuPreference: ""
        };
        setGuests((prev)=>[
                ...prev,
                newGuest
            ]);
    };
    const removeGuest = (id)=>{
        if (guests.length > 1) setGuests((prev)=>prev.filter((guest)=>guest.id !== id));
    };
    const updateGuest = (id, field, value)=>{
        setGuests((prev)=>prev.map((guest)=>guest.id === id ? {
                    ...guest,
                    [field]: value
                } : guest));
    };
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("section", {
        id: "rsvp",
        className: "py-20 px-6 bg-parchment",
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
            className: "max-w-3xl mx-auto",
            children: [
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    className: "text-center mb-12",
                    children: [
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            className: "flex items-center justify-center mb-6",
                            children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: "w-8 h-8 bg-sage rounded-md flex items-center justify-center",
                                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _lucideReact.Users), {
                                    size: 16,
                                    className: "text-parchment"
                                }, void 0, false, {
                                    fileName: "src/components/RSVPForm.tsx",
                                    lineNumber: 147,
                                    columnNumber: 15
                                }, this)
                            }, void 0, false, {
                                fileName: "src/components/RSVPForm.tsx",
                                lineNumber: 146,
                                columnNumber: 13
                            }, this)
                        }, void 0, false, {
                            fileName: "src/components/RSVPForm.tsx",
                            lineNumber: 145,
                            columnNumber: 11
                        }, this),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("h2", {
                            className: "text-3xl md:text-4xl mb-4 text-olivewood",
                            children: "\u0424\u043E\u0440\u043C\u0430 \u0437\u0430 \u043F\u043E\u0442\u0432\u044A\u0440\u0436\u0434\u0435\u043D\u0438\u0435 \u043D\u0430 \u043F\u0440\u0438\u0441\u044A\u0441\u0442\u0432\u0438\u0435"
                        }, void 0, false, {
                            fileName: "src/components/RSVPForm.tsx",
                            lineNumber: 150,
                            columnNumber: 11
                        }, this),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                            className: "text-lg text-bark",
                            children: "\u041C\u043E\u043B\u044F, \u043E\u0442\u0433\u043E\u0432\u043E\u0440\u0435\u0442\u0435 \u0434\u043E 1 \u043C\u0430\u0439 2024 \u0433."
                        }, void 0, false, {
                            fileName: "src/components/RSVPForm.tsx",
                            lineNumber: 151,
                            columnNumber: 11
                        }, this)
                    ]
                }, void 0, true, {
                    fileName: "src/components/RSVPForm.tsx",
                    lineNumber: 144,
                    columnNumber: 9
                }, this),
                submitted ? /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _card.Card), {
                    className: "p-8 bg-wedding-white border-sand shadow-xl text-center",
                    children: [
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("h3", {
                            className: "text-2xl text-sage mb-4",
                            children: "\u0411\u043B\u0430\u0433\u043E\u0434\u0430\u0440\u0438\u043C \u0437\u0430 \u0432\u0430\u0448\u0435\u0442\u043E \u043F\u043E\u0442\u0432\u044A\u0440\u0436\u0434\u0435\u043D\u0438\u0435!"
                        }, void 0, false, {
                            fileName: "src/components/RSVPForm.tsx",
                            lineNumber: 156,
                            columnNumber: 13
                        }, this),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                            className: "text-bark",
                            children: "\u041E\u0447\u0430\u043A\u0432\u0430\u043C\u0435 \u0441 \u043D\u0435\u0442\u044A\u0440\u043F\u0435\u043D\u0438\u0435 \u0434\u0430 \u043F\u0440\u0430\u0437\u043D\u0443\u0432\u0430\u043C\u0435 \u0437\u0430\u0435\u0434\u043D\u043E!"
                        }, void 0, false, {
                            fileName: "src/components/RSVPForm.tsx",
                            lineNumber: 157,
                            columnNumber: 13
                        }, this)
                    ]
                }, void 0, true, {
                    fileName: "src/components/RSVPForm.tsx",
                    lineNumber: 155,
                    columnNumber: 11
                }, this) : /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _card.Card), {
                    className: "p-8 bg-wedding-white border-sand shadow-xl rounded-md",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("form", {
                        onSubmit: handleSubmit,
                        className: "space-y-8",
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: "grid md:grid-cols-2 gap-6",
                                children: [
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        children: [
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _label.Label), {
                                                htmlFor: "firstName",
                                                className: "text-olivewood",
                                                children: "\u0418\u043C\u0435 *"
                                            }, void 0, false, {
                                                fileName: "src/components/RSVPForm.tsx",
                                                lineNumber: 165,
                                                columnNumber: 19
                                            }, this),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _input.Input), {
                                                id: "firstName",
                                                value: formData.firstName,
                                                onChange: (e)=>handleFormChange("firstName", e.target.value),
                                                className: "mt-2 border-sand focus:border-sage h-12",
                                                required: true,
                                                disabled: loading
                                            }, void 0, false, {
                                                fileName: "src/components/RSVPForm.tsx",
                                                lineNumber: 166,
                                                columnNumber: 19
                                            }, this)
                                        ]
                                    }, void 0, true, {
                                        fileName: "src/components/RSVPForm.tsx",
                                        lineNumber: 164,
                                        columnNumber: 17
                                    }, this),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        children: [
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _label.Label), {
                                                htmlFor: "lastName",
                                                className: "text-olivewood",
                                                children: "\u0424\u0430\u043C\u0438\u043B\u0438\u044F *"
                                            }, void 0, false, {
                                                fileName: "src/components/RSVPForm.tsx",
                                                lineNumber: 177,
                                                columnNumber: 19
                                            }, this),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _input.Input), {
                                                id: "lastName",
                                                value: formData.lastName,
                                                onChange: (e)=>handleFormChange("lastName", e.target.value),
                                                className: "mt-2 border-sand focus:border-sage h-12",
                                                required: true,
                                                disabled: loading
                                            }, void 0, false, {
                                                fileName: "src/components/RSVPForm.tsx",
                                                lineNumber: 178,
                                                columnNumber: 19
                                            }, this)
                                        ]
                                    }, void 0, true, {
                                        fileName: "src/components/RSVPForm.tsx",
                                        lineNumber: 176,
                                        columnNumber: 17
                                    }, this)
                                ]
                            }, void 0, true, {
                                fileName: "src/components/RSVPForm.tsx",
                                lineNumber: 163,
                                columnNumber: 15
                            }, this),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                children: [
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _label.Label), {
                                        htmlFor: "phone",
                                        className: "text-olivewood",
                                        children: "\u0422\u0435\u043B\u0435\u0444\u043E\u043D *"
                                    }, void 0, false, {
                                        fileName: "src/components/RSVPForm.tsx",
                                        lineNumber: 190,
                                        columnNumber: 17
                                    }, this),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _input.Input), {
                                        id: "phone",
                                        type: "tel",
                                        value: formData.phone,
                                        onChange: (e)=>handleFormChange("phone", e.target.value),
                                        className: "mt-2 border-sand focus:border-sage h-12",
                                        pattern: "^[+0-9 ]{8,16}$",
                                        required: true,
                                        disabled: loading
                                    }, void 0, false, {
                                        fileName: "src/components/RSVPForm.tsx",
                                        lineNumber: 191,
                                        columnNumber: 17
                                    }, this)
                                ]
                            }, void 0, true, {
                                fileName: "src/components/RSVPForm.tsx",
                                lineNumber: 189,
                                columnNumber: 15
                            }, this),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                children: [
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _label.Label), {
                                        className: "text-olivewood mb-4 block",
                                        children: "\u0429\u0435 \u043F\u0440\u0438\u0441\u044A\u0441\u0442\u0432\u0430\u0442\u0435 \u043B\u0438? *"
                                    }, void 0, false, {
                                        fileName: "src/components/RSVPForm.tsx",
                                        lineNumber: 205,
                                        columnNumber: 17
                                    }, this),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _radioGroup.RadioGroup), {
                                        value: formData.attendance,
                                        onValueChange: (value)=>handleFormChange("attendance", value),
                                        className: "flex gap-8",
                                        disabled: loading,
                                        children: [
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "flex items-center space-x-3",
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _radioGroup.RadioGroupItem), {
                                                        value: "yes",
                                                        id: "yes",
                                                        className: "border-sage text-sage w-5 h-5"
                                                    }, void 0, false, {
                                                        fileName: "src/components/RSVPForm.tsx",
                                                        lineNumber: 213,
                                                        columnNumber: 21
                                                    }, this),
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _label.Label), {
                                                        htmlFor: "yes",
                                                        className: "text-bark",
                                                        children: "\u0414\u0430, \u0441 \u0443\u0434\u043E\u0432\u043E\u043B\u0441\u0442\u0432\u0438\u0435!"
                                                    }, void 0, false, {
                                                        fileName: "src/components/RSVPForm.tsx",
                                                        lineNumber: 214,
                                                        columnNumber: 21
                                                    }, this)
                                                ]
                                            }, void 0, true, {
                                                fileName: "src/components/RSVPForm.tsx",
                                                lineNumber: 212,
                                                columnNumber: 19
                                            }, this),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "flex items-center space-x-3",
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _radioGroup.RadioGroupItem), {
                                                        value: "no",
                                                        id: "no",
                                                        className: "border-sage text-sage w-5 h-5"
                                                    }, void 0, false, {
                                                        fileName: "src/components/RSVPForm.tsx",
                                                        lineNumber: 217,
                                                        columnNumber: 21
                                                    }, this),
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _label.Label), {
                                                        htmlFor: "no",
                                                        className: "text-bark",
                                                        children: "\u0421\u044A\u0436\u0430\u043B\u044F\u0432\u0430\u043C, \u043D\u044F\u043C\u0430 \u0434\u0430 \u043C\u043E\u0433\u0430 \u0434\u0430 \u043F\u0440\u0438\u0441\u044A\u0441\u0442\u0432\u0430\u043C"
                                                    }, void 0, false, {
                                                        fileName: "src/components/RSVPForm.tsx",
                                                        lineNumber: 218,
                                                        columnNumber: 21
                                                    }, this)
                                                ]
                                            }, void 0, true, {
                                                fileName: "src/components/RSVPForm.tsx",
                                                lineNumber: 216,
                                                columnNumber: 19
                                            }, this)
                                        ]
                                    }, void 0, true, {
                                        fileName: "src/components/RSVPForm.tsx",
                                        lineNumber: 206,
                                        columnNumber: 17
                                    }, this)
                                ]
                            }, void 0, true, {
                                fileName: "src/components/RSVPForm.tsx",
                                lineNumber: 204,
                                columnNumber: 15
                            }, this),
                            formData.attendance === "yes" && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                                children: [
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "border-t border-sand/50 pt-8",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "flex items-center justify-between mb-6",
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                        className: "flex items-center gap-3",
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _lucideReact.Users), {
                                                                size: 20,
                                                                className: "text-sage"
                                                            }, void 0, false, {
                                                                fileName: "src/components/RSVPForm.tsx",
                                                                lineNumber: 229,
                                                                columnNumber: 25
                                                            }, this),
                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _label.Label), {
                                                                className: "text-olivewood text-lg",
                                                                children: "\u0414\u0430\u043D\u043D\u0438 \u0437\u0430 \u0433\u043E\u0441\u0442\u0438"
                                                            }, void 0, false, {
                                                                fileName: "src/components/RSVPForm.tsx",
                                                                lineNumber: 230,
                                                                columnNumber: 25
                                                            }, this)
                                                        ]
                                                    }, void 0, true, {
                                                        fileName: "src/components/RSVPForm.tsx",
                                                        lineNumber: 228,
                                                        columnNumber: 23
                                                    }, this),
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                        className: "flex items-center gap-2",
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _button.Button), {
                                                                type: "button",
                                                                onClick: addGuest,
                                                                size: "sm",
                                                                variant: "outline",
                                                                className: "border-sage text-sage hover:bg-sage hover:text-parchment",
                                                                disabled: loading,
                                                                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _lucideReact.Plus), {
                                                                    size: 16
                                                                }, void 0, false, {
                                                                    fileName: "src/components/RSVPForm.tsx",
                                                                    lineNumber: 241,
                                                                    columnNumber: 27
                                                                }, this)
                                                            }, void 0, false, {
                                                                fileName: "src/components/RSVPForm.tsx",
                                                                lineNumber: 233,
                                                                columnNumber: 25
                                                            }, this),
                                                            guests.length > 1 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _button.Button), {
                                                                type: "button",
                                                                onClick: ()=>removeGuest(guests[guests.length - 1].id),
                                                                size: "sm",
                                                                variant: "outline",
                                                                className: "border-bark text-bark hover:bg-bark hover:text-parchment",
                                                                disabled: loading,
                                                                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _lucideReact.Minus), {
                                                                    size: 16
                                                                }, void 0, false, {
                                                                    fileName: "src/components/RSVPForm.tsx",
                                                                    lineNumber: 252,
                                                                    columnNumber: 29
                                                                }, this)
                                                            }, void 0, false, {
                                                                fileName: "src/components/RSVPForm.tsx",
                                                                lineNumber: 244,
                                                                columnNumber: 27
                                                            }, this)
                                                        ]
                                                    }, void 0, true, {
                                                        fileName: "src/components/RSVPForm.tsx",
                                                        lineNumber: 232,
                                                        columnNumber: 23
                                                    }, this)
                                                ]
                                            }, void 0, true, {
                                                fileName: "src/components/RSVPForm.tsx",
                                                lineNumber: 227,
                                                columnNumber: 21
                                            }, this),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "space-y-6",
                                                children: guests.map((guest, index)=>/*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _card.Card), {
                                                        className: "p-6 bg-sand/20 border-sand/50",
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("h4", {
                                                                className: "text-olivewood mb-4",
                                                                children: [
                                                                    "\u0413\u043E\u0441\u0442 ",
                                                                    index + 1
                                                                ]
                                                            }, void 0, true, {
                                                                fileName: "src/components/RSVPForm.tsx",
                                                                lineNumber: 261,
                                                                columnNumber: 27
                                                            }, this),
                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                className: "grid md:grid-cols-2 gap-4 mb-4",
                                                                children: [
                                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                        children: [
                                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _label.Label), {
                                                                                className: "text-olivewood",
                                                                                children: "\u0418\u043C\u0435 *"
                                                                            }, void 0, false, {
                                                                                fileName: "src/components/RSVPForm.tsx",
                                                                                lineNumber: 265,
                                                                                columnNumber: 31
                                                                            }, this),
                                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _input.Input), {
                                                                                value: guest.firstName,
                                                                                onChange: (e)=>updateGuest(guest.id, "firstName", e.target.value),
                                                                                className: "mt-1 border-sand focus:border-sage",
                                                                                required: formData.attendance === "yes",
                                                                                disabled: index === 0 || loading
                                                                            }, void 0, false, {
                                                                                fileName: "src/components/RSVPForm.tsx",
                                                                                lineNumber: 266,
                                                                                columnNumber: 31
                                                                            }, this)
                                                                        ]
                                                                    }, void 0, true, {
                                                                        fileName: "src/components/RSVPForm.tsx",
                                                                        lineNumber: 264,
                                                                        columnNumber: 29
                                                                    }, this),
                                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                        children: [
                                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _label.Label), {
                                                                                className: "text-olivewood",
                                                                                children: "\u0424\u0430\u043C\u0438\u043B\u0438\u044F *"
                                                                            }, void 0, false, {
                                                                                fileName: "src/components/RSVPForm.tsx",
                                                                                lineNumber: 275,
                                                                                columnNumber: 31
                                                                            }, this),
                                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _input.Input), {
                                                                                value: guest.lastName,
                                                                                onChange: (e)=>updateGuest(guest.id, "lastName", e.target.value),
                                                                                className: "mt-1 border-sand focus:border-sage",
                                                                                required: formData.attendance === "yes",
                                                                                disabled: index === 0 || loading
                                                                            }, void 0, false, {
                                                                                fileName: "src/components/RSVPForm.tsx",
                                                                                lineNumber: 276,
                                                                                columnNumber: 31
                                                                            }, this)
                                                                        ]
                                                                    }, void 0, true, {
                                                                        fileName: "src/components/RSVPForm.tsx",
                                                                        lineNumber: 274,
                                                                        columnNumber: 29
                                                                    }, this)
                                                                ]
                                                            }, void 0, true, {
                                                                fileName: "src/components/RSVPForm.tsx",
                                                                lineNumber: 263,
                                                                columnNumber: 27
                                                            }, this),
                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                className: "flex items-center space-x-3 mb-4",
                                                                children: [
                                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _checkbox.Checkbox), {
                                                                        id: `child-${guest.id}`,
                                                                        checked: guest.isChild,
                                                                        onCheckedChange: (checked)=>updateGuest(guest.id, "isChild", checked),
                                                                        className: "border-sage data-[state=checked]:bg-sage",
                                                                        disabled: loading
                                                                    }, void 0, false, {
                                                                        fileName: "src/components/RSVPForm.tsx",
                                                                        lineNumber: 287,
                                                                        columnNumber: 29
                                                                    }, this),
                                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _label.Label), {
                                                                        htmlFor: `child-${guest.id}`,
                                                                        className: "text-bark",
                                                                        children: "\u0414\u0435\u0442\u0435 (\u043F\u043E\u0434 13 \u0433\u043E\u0434\u0438\u043D\u0438)"
                                                                    }, void 0, false, {
                                                                        fileName: "src/components/RSVPForm.tsx",
                                                                        lineNumber: 294,
                                                                        columnNumber: 29
                                                                    }, this)
                                                                ]
                                                            }, void 0, true, {
                                                                fileName: "src/components/RSVPForm.tsx",
                                                                lineNumber: 286,
                                                                columnNumber: 27
                                                            }, this),
                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                children: [
                                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _label.Label), {
                                                                        className: "text-olivewood mb-2 flex items-center gap-2",
                                                                        children: [
                                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _lucideReact.Utensils), {
                                                                                size: 16
                                                                            }, void 0, false, {
                                                                                fileName: "src/components/RSVPForm.tsx",
                                                                                lineNumber: 299,
                                                                                columnNumber: 31
                                                                            }, this),
                                                                            "\u0418\u0437\u0431\u043E\u0440 \u043D\u0430 \u043C\u0435\u043D\u044E"
                                                                        ]
                                                                    }, void 0, true, {
                                                                        fileName: "src/components/RSVPForm.tsx",
                                                                        lineNumber: 298,
                                                                        columnNumber: 29
                                                                    }, this),
                                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _select.Select), {
                                                                        value: guest.menuPreference,
                                                                        onValueChange: (value)=>updateGuest(guest.id, "menuPreference", value),
                                                                        disabled: loading,
                                                                        children: [
                                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _select.SelectTrigger), {
                                                                                className: "border-sand focus:border-sage bg-white",
                                                                                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _select.SelectValue), {
                                                                                    placeholder: "\u0418\u0437\u0431\u0435\u0440\u0435\u0442\u0435 \u043F\u0440\u0435\u0434\u043F\u043E\u0447\u0438\u0442\u0430\u043D\u043E \u043C\u0435\u043D\u044E *"
                                                                                }, void 0, false, {
                                                                                    fileName: "src/components/RSVPForm.tsx",
                                                                                    lineNumber: 308,
                                                                                    columnNumber: 33
                                                                                }, this)
                                                                            }, void 0, false, {
                                                                                fileName: "src/components/RSVPForm.tsx",
                                                                                lineNumber: 307,
                                                                                columnNumber: 31
                                                                            }, this),
                                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _select.SelectContent), {
                                                                                className: "z-50 bg-white border border-sand shadow-md",
                                                                                children: [
                                                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _select.SelectItem), {
                                                                                        value: "beef",
                                                                                        children: "\u0422\u0435\u043B\u0435\u0448\u043A\u043E \u0444\u0438\u043B\u0435"
                                                                                    }, void 0, false, {
                                                                                        fileName: "src/components/RSVPForm.tsx",
                                                                                        lineNumber: 311,
                                                                                        columnNumber: 33
                                                                                    }, this),
                                                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _select.SelectItem), {
                                                                                        value: "chicken",
                                                                                        children: "\u041F\u0435\u0447\u0435\u043D\u043E \u043F\u0438\u043B\u0435 \u0441 \u0431\u0438\u043B\u043A\u0438"
                                                                                    }, void 0, false, {
                                                                                        fileName: "src/components/RSVPForm.tsx",
                                                                                        lineNumber: 312,
                                                                                        columnNumber: 33
                                                                                    }, this),
                                                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _select.SelectItem), {
                                                                                        value: "salmon",
                                                                                        children: "\u0421\u043A\u0430\u0440\u0430 \u0441\u044C\u043E\u043C\u0433\u0430"
                                                                                    }, void 0, false, {
                                                                                        fileName: "src/components/RSVPForm.tsx",
                                                                                        lineNumber: 313,
                                                                                        columnNumber: 33
                                                                                    }, this),
                                                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _select.SelectItem), {
                                                                                        value: "vegetarian",
                                                                                        children: "\u0412\u0435\u0433\u0435\u0442\u0430\u0440\u0438\u0430\u043D\u0441\u043A\u043E \u043C\u0435\u043D\u044E"
                                                                                    }, void 0, false, {
                                                                                        fileName: "src/components/RSVPForm.tsx",
                                                                                        lineNumber: 314,
                                                                                        columnNumber: 33
                                                                                    }, this),
                                                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _select.SelectItem), {
                                                                                        value: "vegan",
                                                                                        children: "\u0412\u0435\u0433\u0430\u043D \u043C\u0435\u043D\u044E"
                                                                                    }, void 0, false, {
                                                                                        fileName: "src/components/RSVPForm.tsx",
                                                                                        lineNumber: 315,
                                                                                        columnNumber: 33
                                                                                    }, this)
                                                                                ]
                                                                            }, void 0, true, {
                                                                                fileName: "src/components/RSVPForm.tsx",
                                                                                lineNumber: 310,
                                                                                columnNumber: 31
                                                                            }, this)
                                                                        ]
                                                                    }, void 0, true, {
                                                                        fileName: "src/components/RSVPForm.tsx",
                                                                        lineNumber: 302,
                                                                        columnNumber: 29
                                                                    }, this)
                                                                ]
                                                            }, void 0, true, {
                                                                fileName: "src/components/RSVPForm.tsx",
                                                                lineNumber: 297,
                                                                columnNumber: 27
                                                            }, this)
                                                        ]
                                                    }, guest.id, true, {
                                                        fileName: "src/components/RSVPForm.tsx",
                                                        lineNumber: 260,
                                                        columnNumber: 25
                                                    }, this))
                                            }, void 0, false, {
                                                fileName: "src/components/RSVPForm.tsx",
                                                lineNumber: 258,
                                                columnNumber: 21
                                            }, this)
                                        ]
                                    }, void 0, true, {
                                        fileName: "src/components/RSVPForm.tsx",
                                        lineNumber: 226,
                                        columnNumber: 19
                                    }, this),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        children: [
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _label.Label), {
                                                className: "text-olivewood mb-4 block",
                                                children: "\u041D\u0443\u0436\u0434\u0430\u0435\u0442\u0435 \u043B\u0438 \u0441\u0435 \u043E\u0442 \u043D\u0430\u0441\u0442\u0430\u043D\u044F\u0432\u0430\u043D\u0435? *"
                                            }, void 0, false, {
                                                fileName: "src/components/RSVPForm.tsx",
                                                lineNumber: 326,
                                                columnNumber: 21
                                            }, this),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "flex flex-col md:flex-row md:items-center md:justify-between gap-4",
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _radioGroup.RadioGroup), {
                                                        value: formData.needsAccommodation,
                                                        onValueChange: (value)=>handleFormChange("needsAccommodation", value),
                                                        className: "flex gap-8",
                                                        disabled: loading,
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                className: "flex items-center space-x-3",
                                                                children: [
                                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _radioGroup.RadioGroupItem), {
                                                                        value: "yes",
                                                                        className: "border-sage text-sage"
                                                                    }, void 0, false, {
                                                                        fileName: "src/components/RSVPForm.tsx",
                                                                        lineNumber: 335,
                                                                        columnNumber: 25
                                                                    }, this),
                                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _label.Label), {
                                                                        className: "text-bark",
                                                                        children: "\u0414\u0430, \u043C\u043E\u043B\u044F"
                                                                    }, void 0, false, {
                                                                        fileName: "src/components/RSVPForm.tsx",
                                                                        lineNumber: 336,
                                                                        columnNumber: 25
                                                                    }, this)
                                                                ]
                                                            }, void 0, true, {
                                                                fileName: "src/components/RSVPForm.tsx",
                                                                lineNumber: 334,
                                                                columnNumber: 23
                                                            }, this),
                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                className: "flex items-center space-x-3",
                                                                children: [
                                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _radioGroup.RadioGroupItem), {
                                                                        value: "no",
                                                                        className: "border-sage text-sage"
                                                                    }, void 0, false, {
                                                                        fileName: "src/components/RSVPForm.tsx",
                                                                        lineNumber: 339,
                                                                        columnNumber: 25
                                                                    }, this),
                                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _label.Label), {
                                                                        className: "text-bark",
                                                                        children: "\u041D\u0435, \u0431\u043B\u0430\u0433\u043E\u0434\u0430\u0440\u044F"
                                                                    }, void 0, false, {
                                                                        fileName: "src/components/RSVPForm.tsx",
                                                                        lineNumber: 340,
                                                                        columnNumber: 25
                                                                    }, this)
                                                                ]
                                                            }, void 0, true, {
                                                                fileName: "src/components/RSVPForm.tsx",
                                                                lineNumber: 338,
                                                                columnNumber: 23
                                                            }, this)
                                                        ]
                                                    }, void 0, true, {
                                                        fileName: "src/components/RSVPForm.tsx",
                                                        lineNumber: 328,
                                                        columnNumber: 21
                                                    }, this),
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                                        className: "text-sm text-gray-600 max-w-xs md:text-right",
                                                        children: "\u041D\u0430\u0441\u0442\u0430\u043D\u044F\u0432\u0430\u043D\u0435\u0442\u043E \u0435 \u0437\u0430 \u0441\u043C\u0435\u0442\u043A\u0430 \u043D\u0430 \u0433\u043E\u0441\u0442\u0438\u0442\u0435."
                                                    }, void 0, false, {
                                                        fileName: "src/components/RSVPForm.tsx",
                                                        lineNumber: 343,
                                                        columnNumber: 21
                                                    }, this)
                                                ]
                                            }, void 0, true, {
                                                fileName: "src/components/RSVPForm.tsx",
                                                lineNumber: 327,
                                                columnNumber: 19
                                            }, this)
                                        ]
                                    }, void 0, true, {
                                        fileName: "src/components/RSVPForm.tsx",
                                        lineNumber: 325,
                                        columnNumber: 19
                                    }, this)
                                ]
                            }, void 0, true),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                children: [
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _label.Label), {
                                        htmlFor: "specialMessage",
                                        className: "text-olivewood",
                                        children: "\u0421\u043F\u0435\u0446\u0438\u0430\u043B\u043D\u0438 \u0441\u044A\u043E\u0431\u0449\u0435\u043D\u0438\u044F \u0438\u043B\u0438 \u0438\u0437\u0438\u0441\u043A\u0432\u0430\u043D\u0438\u044F"
                                    }, void 0, false, {
                                        fileName: "src/components/RSVPForm.tsx",
                                        lineNumber: 353,
                                        columnNumber: 17
                                    }, this),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _textarea.Textarea), {
                                        id: "specialMessage",
                                        value: formData.specialMessage,
                                        onChange: (e)=>handleFormChange("specialMessage", e.target.value),
                                        className: "mt-2 border-sand focus:border-sage",
                                        placeholder: "\u0421\u043F\u0435\u0446\u0438\u0430\u043B\u043D\u0438 \u043D\u0443\u0436\u0434\u0438, \u0445\u0440\u0430\u043D\u0438\u0442\u0435\u043B\u043D\u0438 \u043E\u0433\u0440\u0430\u043D\u0438\u0447\u0435\u043D\u0438\u044F \u0438\u043B\u0438 \u0441\u044A\u043E\u0431\u0449\u0435\u043D\u0438\u044F \u0437\u0430 \u043C\u043B\u0430\u0434\u043E\u0436\u0435\u043D\u0446\u0438\u0442\u0435?",
                                        rows: 4,
                                        disabled: loading
                                    }, void 0, false, {
                                        fileName: "src/components/RSVPForm.tsx",
                                        lineNumber: 354,
                                        columnNumber: 17
                                    }, this)
                                ]
                            }, void 0, true, {
                                fileName: "src/components/RSVPForm.tsx",
                                lineNumber: 352,
                                columnNumber: 15
                            }, this),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _button.Button), {
                                type: "submit",
                                className: "w-full bg-sage hover:bg-bark text-parchment h-12",
                                size: "lg",
                                disabled: loading,
                                children: [
                                    loading ? /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {}, void 0, false) : /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _lucideReact.Send), {
                                        className: "mr-2",
                                        size: 20
                                    }, void 0, false, {
                                        fileName: "src/components/RSVPForm.tsx",
                                        lineNumber: 370,
                                        columnNumber: 19
                                    }, this),
                                    loading ? "\u0418\u0437\u043F\u0440\u0430\u0449\u0430\u043D\u0435..." : "\u0418\u0437\u043F\u0440\u0430\u0442\u0438 \u043F\u043E\u0442\u0432\u044A\u0440\u0436\u0434\u0435\u043D\u0438\u0435"
                                ]
                            }, void 0, true, {
                                fileName: "src/components/RSVPForm.tsx",
                                lineNumber: 365,
                                columnNumber: 15
                            }, this)
                        ]
                    }, void 0, true, {
                        fileName: "src/components/RSVPForm.tsx",
                        lineNumber: 161,
                        columnNumber: 13
                    }, this)
                }, void 0, false, {
                    fileName: "src/components/RSVPForm.tsx",
                    lineNumber: 160,
                    columnNumber: 11
                }, this)
            ]
        }, void 0, true, {
            fileName: "src/components/RSVPForm.tsx",
            lineNumber: 143,
            columnNumber: 7
        }, this)
    }, void 0, false, {
        fileName: "src/components/RSVPForm.tsx",
        lineNumber: 142,
        columnNumber: 5
    }, this);
}
_s(RSVPForm, "BdOfJK8P2WI0RZ7lH1PGVLeUGeI=");
_c = RSVPForm;
var _c;
$RefreshReg$(_c, "RSVPForm");

  $parcel$ReactRefreshHelpers$e829.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","./ui/button":"d3GZa","./ui/input":"9NbBg","./ui/label":"j23KJ","./ui/textarea":"2ThiZ","./ui/radio-group":"4BwOq","./ui/checkbox":"baFNz","./ui/select":"kWMSB","./ui/card":"d4DfU","lucide-react":"2I7qR","sonner":"kK7Kb","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"d3GZa":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$b71d = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$b71d.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$b71d.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Button", ()=>Button);
parcelHelpers.export(exports, "buttonVariants", ()=>buttonVariants);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactSlot = require("@radix-ui/react-slot");
var _classVarianceAuthority = require("class-variance-authority");
var _utils = require("./utils");
const buttonVariants = (0, _classVarianceAuthority.cva)("inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive", {
    variants: {
        variant: {
            default: "bg-primary text-primary-foreground hover:bg-primary/90",
            destructive: "bg-destructive text-white hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60",
            outline: "border bg-background text-foreground hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50",
            secondary: "bg-secondary text-secondary-foreground hover:bg-secondary/80",
            ghost: "hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50",
            link: "text-primary underline-offset-4 hover:underline"
        },
        size: {
            default: "h-9 px-4 py-2 has-[>svg]:px-3",
            sm: "h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5",
            lg: "h-10 rounded-md px-6 has-[>svg]:px-4",
            icon: "size-9 rounded-md"
        }
    },
    defaultVariants: {
        variant: "default",
        size: "default"
    }
});
function Button({ className, variant, size, asChild = false, ...props }) {
    const Comp = asChild ? (0, _reactSlot.Slot) : "button";
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)(Comp, {
        "data-slot": "button",
        className: (0, _utils.cn)(buttonVariants({
            variant,
            size,
            className
        })),
        ...props
    }, void 0, false, {
        fileName: "src/components/ui/button.tsx",
        lineNumber: 50,
        columnNumber: 5
    }, this);
}
_c = Button;
var _c;
$RefreshReg$(_c, "Button");

  $parcel$ReactRefreshHelpers$b71d.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","@radix-ui/react-slot":"049tr","class-variance-authority":"3GTG2","./utils":"3OSqM","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"049tr":[function(require,module,exports,__globalThis) {
// src/slot.tsx
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Root", ()=>Slot);
parcelHelpers.export(exports, "Slot", ()=>Slot);
parcelHelpers.export(exports, "Slottable", ()=>Slottable);
parcelHelpers.export(exports, "createSlot", ()=>createSlot);
parcelHelpers.export(exports, "createSlottable", ()=>createSlottable);
var _react = require("react");
var _reactComposeRefs = require("@radix-ui/react-compose-refs");
var _jsxRuntime = require("react/jsx-runtime");
// @__NO_SIDE_EFFECTS__
function createSlot(ownerName) {
    const SlotClone = /* @__PURE__ */ createSlotClone(ownerName);
    const Slot2 = _react.forwardRef((props, forwardedRef)=>{
        const { children, ...slotProps } = props;
        const childrenArray = _react.Children.toArray(children);
        const slottable = childrenArray.find(isSlottable);
        if (slottable) {
            const newElement = slottable.props.children;
            const newChildren = childrenArray.map((child)=>{
                if (child === slottable) {
                    if (_react.Children.count(newElement) > 1) return _react.Children.only(null);
                    return _react.isValidElement(newElement) ? newElement.props.children : null;
                } else return child;
            });
            return /* @__PURE__ */ (0, _jsxRuntime.jsx)(SlotClone, {
                ...slotProps,
                ref: forwardedRef,
                children: _react.isValidElement(newElement) ? _react.cloneElement(newElement, void 0, newChildren) : null
            });
        }
        return /* @__PURE__ */ (0, _jsxRuntime.jsx)(SlotClone, {
            ...slotProps,
            ref: forwardedRef,
            children
        });
    });
    Slot2.displayName = `${ownerName}.Slot`;
    return Slot2;
}
var Slot = /* @__PURE__ */ createSlot("Slot");
// @__NO_SIDE_EFFECTS__
function createSlotClone(ownerName) {
    const SlotClone = _react.forwardRef((props, forwardedRef)=>{
        const { children, ...slotProps } = props;
        if (_react.isValidElement(children)) {
            const childrenRef = getElementRef(children);
            const props2 = mergeProps(slotProps, children.props);
            if (children.type !== _react.Fragment) props2.ref = forwardedRef ? (0, _reactComposeRefs.composeRefs)(forwardedRef, childrenRef) : childrenRef;
            return _react.cloneElement(children, props2);
        }
        return _react.Children.count(children) > 1 ? _react.Children.only(null) : null;
    });
    SlotClone.displayName = `${ownerName}.SlotClone`;
    return SlotClone;
}
var SLOTTABLE_IDENTIFIER = Symbol("radix.slottable");
// @__NO_SIDE_EFFECTS__
function createSlottable(ownerName) {
    const Slottable2 = ({ children })=>{
        return /* @__PURE__ */ (0, _jsxRuntime.jsx)((0, _jsxRuntime.Fragment), {
            children
        });
    };
    Slottable2.displayName = `${ownerName}.Slottable`;
    Slottable2.__radixId = SLOTTABLE_IDENTIFIER;
    return Slottable2;
}
var Slottable = /* @__PURE__ */ createSlottable("Slottable");
function isSlottable(child) {
    return _react.isValidElement(child) && typeof child.type === "function" && "__radixId" in child.type && child.type.__radixId === SLOTTABLE_IDENTIFIER;
}
function mergeProps(slotProps, childProps) {
    const overrideProps = {
        ...childProps
    };
    for(const propName in childProps){
        const slotPropValue = slotProps[propName];
        const childPropValue = childProps[propName];
        const isHandler = /^on[A-Z]/.test(propName);
        if (isHandler) {
            if (slotPropValue && childPropValue) overrideProps[propName] = (...args)=>{
                const result = childPropValue(...args);
                slotPropValue(...args);
                return result;
            };
            else if (slotPropValue) overrideProps[propName] = slotPropValue;
        } else if (propName === "style") overrideProps[propName] = {
            ...slotPropValue,
            ...childPropValue
        };
        else if (propName === "className") overrideProps[propName] = [
            slotPropValue,
            childPropValue
        ].filter(Boolean).join(" ");
    }
    return {
        ...slotProps,
        ...overrideProps
    };
}
function getElementRef(element) {
    let getter = Object.getOwnPropertyDescriptor(element.props, "ref")?.get;
    let mayWarn = getter && "isReactWarning" in getter && getter.isReactWarning;
    if (mayWarn) return element.ref;
    getter = Object.getOwnPropertyDescriptor(element, "ref")?.get;
    mayWarn = getter && "isReactWarning" in getter && getter.isReactWarning;
    if (mayWarn) return element.props.ref;
    return element.props.ref || element.ref;
}

},{"react":"jMk1U","@radix-ui/react-compose-refs":"8NEPR","react/jsx-runtime":"05iiF","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8NEPR":[function(require,module,exports,__globalThis) {
// packages/react/compose-refs/src/compose-refs.tsx
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "composeRefs", ()=>composeRefs);
parcelHelpers.export(exports, "useComposedRefs", ()=>useComposedRefs);
var _react = require("react");
function setRef(ref, value) {
    if (typeof ref === "function") return ref(value);
    else if (ref !== null && ref !== void 0) ref.current = value;
}
function composeRefs(...refs) {
    return (node)=>{
        let hasCleanup = false;
        const cleanups = refs.map((ref)=>{
            const cleanup = setRef(ref, node);
            if (!hasCleanup && typeof cleanup == "function") hasCleanup = true;
            return cleanup;
        });
        if (hasCleanup) return ()=>{
            for(let i = 0; i < cleanups.length; i++){
                const cleanup = cleanups[i];
                if (typeof cleanup == "function") cleanup();
                else setRef(refs[i], null);
            }
        };
    };
}
function useComposedRefs(...refs) {
    return _react.useCallback(composeRefs(...refs), refs);
}

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"05iiF":[function(require,module,exports,__globalThis) {
'use strict';
module.exports = require("c4c10cbba9862d5f");

},{"c4c10cbba9862d5f":"gKzlX"}],"gKzlX":[function(require,module,exports,__globalThis) {
/**
 * @license React
 * react-jsx-runtime.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
(function() {
    function getComponentNameFromType(type) {
        if (null == type) return null;
        if ("function" === typeof type) return type.$$typeof === REACT_CLIENT_REFERENCE ? null : type.displayName || type.name || null;
        if ("string" === typeof type) return type;
        switch(type){
            case REACT_FRAGMENT_TYPE:
                return "Fragment";
            case REACT_PROFILER_TYPE:
                return "Profiler";
            case REACT_STRICT_MODE_TYPE:
                return "StrictMode";
            case REACT_SUSPENSE_TYPE:
                return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
                return "SuspenseList";
            case REACT_ACTIVITY_TYPE:
                return "Activity";
        }
        if ("object" === typeof type) switch("number" === typeof type.tag && console.error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), type.$$typeof){
            case REACT_PORTAL_TYPE:
                return "Portal";
            case REACT_CONTEXT_TYPE:
                return (type.displayName || "Context") + ".Provider";
            case REACT_CONSUMER_TYPE:
                return (type._context.displayName || "Context") + ".Consumer";
            case REACT_FORWARD_REF_TYPE:
                var innerType = type.render;
                type = type.displayName;
                type || (type = innerType.displayName || innerType.name || "", type = "" !== type ? "ForwardRef(" + type + ")" : "ForwardRef");
                return type;
            case REACT_MEMO_TYPE:
                return innerType = type.displayName || null, null !== innerType ? innerType : getComponentNameFromType(type.type) || "Memo";
            case REACT_LAZY_TYPE:
                innerType = type._payload;
                type = type._init;
                try {
                    return getComponentNameFromType(type(innerType));
                } catch (x) {}
        }
        return null;
    }
    function testStringCoercion(value) {
        return "" + value;
    }
    function checkKeyStringCoercion(value) {
        try {
            testStringCoercion(value);
            var JSCompiler_inline_result = !1;
        } catch (e) {
            JSCompiler_inline_result = !0;
        }
        if (JSCompiler_inline_result) {
            JSCompiler_inline_result = console;
            var JSCompiler_temp_const = JSCompiler_inline_result.error;
            var JSCompiler_inline_result$jscomp$0 = "function" === typeof Symbol && Symbol.toStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
            JSCompiler_temp_const.call(JSCompiler_inline_result, "The provided key is an unsupported type %s. This value must be coerced to a string before using it here.", JSCompiler_inline_result$jscomp$0);
            return testStringCoercion(value);
        }
    }
    function getTaskName(type) {
        if (type === REACT_FRAGMENT_TYPE) return "<>";
        if ("object" === typeof type && null !== type && type.$$typeof === REACT_LAZY_TYPE) return "<...>";
        try {
            var name = getComponentNameFromType(type);
            return name ? "<" + name + ">" : "<...>";
        } catch (x) {
            return "<...>";
        }
    }
    function getOwner() {
        var dispatcher = ReactSharedInternals.A;
        return null === dispatcher ? null : dispatcher.getOwner();
    }
    function UnknownOwner() {
        return Error("react-stack-top-frame");
    }
    function hasValidKey(config) {
        if (hasOwnProperty.call(config, "key")) {
            var getter = Object.getOwnPropertyDescriptor(config, "key").get;
            if (getter && getter.isReactWarning) return !1;
        }
        return void 0 !== config.key;
    }
    function defineKeyPropWarningGetter(props, displayName) {
        function warnAboutAccessingKey() {
            specialPropKeyWarningShown || (specialPropKeyWarningShown = !0, console.error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)", displayName));
        }
        warnAboutAccessingKey.isReactWarning = !0;
        Object.defineProperty(props, "key", {
            get: warnAboutAccessingKey,
            configurable: !0
        });
    }
    function elementRefGetterWithDeprecationWarning() {
        var componentName = getComponentNameFromType(this.type);
        didWarnAboutElementRef[componentName] || (didWarnAboutElementRef[componentName] = !0, console.error("Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release."));
        componentName = this.props.ref;
        return void 0 !== componentName ? componentName : null;
    }
    function ReactElement(type, key, self, source, owner, props, debugStack, debugTask) {
        self = props.ref;
        type = {
            $$typeof: REACT_ELEMENT_TYPE,
            type: type,
            key: key,
            props: props,
            _owner: owner
        };
        null !== (void 0 !== self ? self : null) ? Object.defineProperty(type, "ref", {
            enumerable: !1,
            get: elementRefGetterWithDeprecationWarning
        }) : Object.defineProperty(type, "ref", {
            enumerable: !1,
            value: null
        });
        type._store = {};
        Object.defineProperty(type._store, "validated", {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: 0
        });
        Object.defineProperty(type, "_debugInfo", {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: null
        });
        Object.defineProperty(type, "_debugStack", {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: debugStack
        });
        Object.defineProperty(type, "_debugTask", {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: debugTask
        });
        Object.freeze && (Object.freeze(type.props), Object.freeze(type));
        return type;
    }
    function jsxDEVImpl(type, config, maybeKey, isStaticChildren, source, self, debugStack, debugTask) {
        var children = config.children;
        if (void 0 !== children) {
            if (isStaticChildren) {
                if (isArrayImpl(children)) {
                    for(isStaticChildren = 0; isStaticChildren < children.length; isStaticChildren++)validateChildKeys(children[isStaticChildren]);
                    Object.freeze && Object.freeze(children);
                } else console.error("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
            } else validateChildKeys(children);
        }
        if (hasOwnProperty.call(config, "key")) {
            children = getComponentNameFromType(type);
            var keys = Object.keys(config).filter(function(k) {
                return "key" !== k;
            });
            isStaticChildren = 0 < keys.length ? "{key: someKey, " + keys.join(": ..., ") + ": ...}" : "{key: someKey}";
            didWarnAboutKeySpread[children + isStaticChildren] || (keys = 0 < keys.length ? "{" + keys.join(": ..., ") + ": ...}" : "{}", console.error('A props object containing a "key" prop is being spread into JSX:\n  let props = %s;\n  <%s {...props} />\nReact keys must be passed directly to JSX without using spread:\n  let props = %s;\n  <%s key={someKey} {...props} />', isStaticChildren, children, keys, children), didWarnAboutKeySpread[children + isStaticChildren] = !0);
        }
        children = null;
        void 0 !== maybeKey && (checkKeyStringCoercion(maybeKey), children = "" + maybeKey);
        hasValidKey(config) && (checkKeyStringCoercion(config.key), children = "" + config.key);
        if ("key" in config) {
            maybeKey = {};
            for(var propName in config)"key" !== propName && (maybeKey[propName] = config[propName]);
        } else maybeKey = config;
        children && defineKeyPropWarningGetter(maybeKey, "function" === typeof type ? type.displayName || type.name || "Unknown" : type);
        return ReactElement(type, children, self, source, getOwner(), maybeKey, debugStack, debugTask);
    }
    function validateChildKeys(node) {
        "object" === typeof node && null !== node && node.$$typeof === REACT_ELEMENT_TYPE && node._store && (node._store.validated = 1);
    }
    var React = require("593632ccebda0d3a"), REACT_ELEMENT_TYPE = Symbol.for("react.transitional.element"), REACT_PORTAL_TYPE = Symbol.for("react.portal"), REACT_FRAGMENT_TYPE = Symbol.for("react.fragment"), REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode"), REACT_PROFILER_TYPE = Symbol.for("react.profiler");
    Symbol.for("react.provider");
    var REACT_CONSUMER_TYPE = Symbol.for("react.consumer"), REACT_CONTEXT_TYPE = Symbol.for("react.context"), REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"), REACT_SUSPENSE_TYPE = Symbol.for("react.suspense"), REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list"), REACT_MEMO_TYPE = Symbol.for("react.memo"), REACT_LAZY_TYPE = Symbol.for("react.lazy"), REACT_ACTIVITY_TYPE = Symbol.for("react.activity"), REACT_CLIENT_REFERENCE = Symbol.for("react.client.reference"), ReactSharedInternals = React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE, hasOwnProperty = Object.prototype.hasOwnProperty, isArrayImpl = Array.isArray, createTask = console.createTask ? console.createTask : function() {
        return null;
    };
    React = {
        react_stack_bottom_frame: function(callStackForError) {
            return callStackForError();
        }
    };
    var specialPropKeyWarningShown;
    var didWarnAboutElementRef = {};
    var unknownOwnerDebugStack = React.react_stack_bottom_frame.bind(React, UnknownOwner)();
    var unknownOwnerDebugTask = createTask(getTaskName(UnknownOwner));
    var didWarnAboutKeySpread = {};
    exports.Fragment = REACT_FRAGMENT_TYPE;
    exports.jsx = function(type, config, maybeKey, source, self) {
        var trackActualOwner = 1e4 > ReactSharedInternals.recentlyCreatedOwnerStacks++;
        return jsxDEVImpl(type, config, maybeKey, !1, source, self, trackActualOwner ? Error("react-stack-top-frame") : unknownOwnerDebugStack, trackActualOwner ? createTask(getTaskName(type)) : unknownOwnerDebugTask);
    };
    exports.jsxs = function(type, config, maybeKey, source, self) {
        var trackActualOwner = 1e4 > ReactSharedInternals.recentlyCreatedOwnerStacks++;
        return jsxDEVImpl(type, config, maybeKey, !0, source, self, trackActualOwner ? Error("react-stack-top-frame") : unknownOwnerDebugStack, trackActualOwner ? createTask(getTaskName(type)) : unknownOwnerDebugTask);
    };
})();

},{"593632ccebda0d3a":"jMk1U"}],"3GTG2":[function(require,module,exports,__globalThis) {
/**
 * Copyright 2022 Joe Bell. All rights reserved.
 *
 * This file is licensed to you under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with the
 * License. You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR REPRESENTATIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "cx", ()=>cx);
parcelHelpers.export(exports, "cva", ()=>cva);
var _clsx = require("clsx");
const falsyToString = (value)=>typeof value === "boolean" ? `${value}` : value === 0 ? "0" : value;
const cx = (0, _clsx.clsx);
const cva = (base, config)=>(props)=>{
        var _config_compoundVariants;
        if ((config === null || config === void 0 ? void 0 : config.variants) == null) return cx(base, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);
        const { variants, defaultVariants } = config;
        const getVariantClassNames = Object.keys(variants).map((variant)=>{
            const variantProp = props === null || props === void 0 ? void 0 : props[variant];
            const defaultVariantProp = defaultVariants === null || defaultVariants === void 0 ? void 0 : defaultVariants[variant];
            if (variantProp === null) return null;
            const variantKey = falsyToString(variantProp) || falsyToString(defaultVariantProp);
            return variants[variant][variantKey];
        });
        const propsWithoutUndefined = props && Object.entries(props).reduce((acc, param)=>{
            let [key, value] = param;
            if (value === undefined) return acc;
            acc[key] = value;
            return acc;
        }, {});
        const getCompoundVariantClassNames = config === null || config === void 0 ? void 0 : (_config_compoundVariants = config.compoundVariants) === null || _config_compoundVariants === void 0 ? void 0 : _config_compoundVariants.reduce((acc, param)=>{
            let { class: cvClass, className: cvClassName, ...compoundVariantOptions } = param;
            return Object.entries(compoundVariantOptions).every((param)=>{
                let [key, value] = param;
                return Array.isArray(value) ? value.includes({
                    ...defaultVariants,
                    ...propsWithoutUndefined
                }[key]) : ({
                    ...defaultVariants,
                    ...propsWithoutUndefined
                })[key] === value;
            }) ? [
                ...acc,
                cvClass,
                cvClassName
            ] : acc;
        }, []);
        return cx(base, getVariantClassNames, getCompoundVariantClassNames, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);
    };

},{"clsx":"dOSJC","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dOSJC":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "clsx", ()=>clsx);
function r(e) {
    var t, f, n = "";
    if ("string" == typeof e || "number" == typeof e) n += e;
    else if ("object" == typeof e) {
        if (Array.isArray(e)) {
            var o = e.length;
            for(t = 0; t < o; t++)e[t] && (f = r(e[t])) && (n && (n += " "), n += f);
        } else for(f in e)e[f] && (n && (n += " "), n += f);
    }
    return n;
}
function clsx() {
    for(var e, t, f = 0, n = "", o = arguments.length; f < o; f++)(e = arguments[f]) && (t = r(e)) && (n && (n += " "), n += t);
    return n;
}
exports.default = clsx;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3OSqM":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "cn", ()=>cn);
var _clsx = require("clsx");
var _tailwindMerge = require("tailwind-merge");
function cn(...inputs) {
    return (0, _tailwindMerge.twMerge)((0, _clsx.clsx)(inputs));
}

},{"clsx":"dOSJC","tailwind-merge":"lpDR8","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lpDR8":[function(require,module,exports,__globalThis) {
'use strict';
Object.defineProperty(exports, Symbol.toStringTag, {
    value: 'Module'
});
const CLASS_PART_SEPARATOR = '-';
const createClassGroupUtils = (config)=>{
    const classMap = createClassMap(config);
    const { conflictingClassGroups, conflictingClassGroupModifiers } = config;
    const getClassGroupId = (className)=>{
        const classParts = className.split(CLASS_PART_SEPARATOR);
        // Classes like `-inset-1` produce an empty string as first classPart. We assume that classes for negative values are used correctly and remove it from classParts.
        if (classParts[0] === '' && classParts.length !== 1) classParts.shift();
        return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className);
    };
    const getConflictingClassGroupIds = (classGroupId, hasPostfixModifier)=>{
        const conflicts = conflictingClassGroups[classGroupId] || [];
        if (hasPostfixModifier && conflictingClassGroupModifiers[classGroupId]) return [
            ...conflicts,
            ...conflictingClassGroupModifiers[classGroupId]
        ];
        return conflicts;
    };
    return {
        getClassGroupId,
        getConflictingClassGroupIds
    };
};
const getGroupRecursive = (classParts, classPartObject)=>{
    if (classParts.length === 0) return classPartObject.classGroupId;
    const currentClassPart = classParts[0];
    const nextClassPartObject = classPartObject.nextPart.get(currentClassPart);
    const classGroupFromNextClassPart = nextClassPartObject ? getGroupRecursive(classParts.slice(1), nextClassPartObject) : undefined;
    if (classGroupFromNextClassPart) return classGroupFromNextClassPart;
    if (classPartObject.validators.length === 0) return undefined;
    const classRest = classParts.join(CLASS_PART_SEPARATOR);
    return classPartObject.validators.find(({ validator })=>validator(classRest))?.classGroupId;
};
const arbitraryPropertyRegex = /^\[(.+)\]$/;
const getGroupIdForArbitraryProperty = (className)=>{
    if (arbitraryPropertyRegex.test(className)) {
        const arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)[1];
        const property = arbitraryPropertyClassName?.substring(0, arbitraryPropertyClassName.indexOf(':'));
        if (property) // I use two dots here because one dot is used as prefix for class groups in plugins
        return 'arbitrary..' + property;
    }
};
/**
 * Exported for testing only
 */ const createClassMap = (config)=>{
    const { theme, classGroups } = config;
    const classMap = {
        nextPart: new Map(),
        validators: []
    };
    for(const classGroupId in classGroups)processClassesRecursively(classGroups[classGroupId], classMap, classGroupId, theme);
    return classMap;
};
const processClassesRecursively = (classGroup, classPartObject, classGroupId, theme)=>{
    classGroup.forEach((classDefinition)=>{
        if (typeof classDefinition === 'string') {
            const classPartObjectToEdit = classDefinition === '' ? classPartObject : getPart(classPartObject, classDefinition);
            classPartObjectToEdit.classGroupId = classGroupId;
            return;
        }
        if (typeof classDefinition === 'function') {
            if (isThemeGetter(classDefinition)) {
                processClassesRecursively(classDefinition(theme), classPartObject, classGroupId, theme);
                return;
            }
            classPartObject.validators.push({
                validator: classDefinition,
                classGroupId
            });
            return;
        }
        Object.entries(classDefinition).forEach(([key, classGroup])=>{
            processClassesRecursively(classGroup, getPart(classPartObject, key), classGroupId, theme);
        });
    });
};
const getPart = (classPartObject, path)=>{
    let currentClassPartObject = classPartObject;
    path.split(CLASS_PART_SEPARATOR).forEach((pathPart)=>{
        if (!currentClassPartObject.nextPart.has(pathPart)) currentClassPartObject.nextPart.set(pathPart, {
            nextPart: new Map(),
            validators: []
        });
        currentClassPartObject = currentClassPartObject.nextPart.get(pathPart);
    });
    return currentClassPartObject;
};
const isThemeGetter = (func)=>func.isThemeGetter;
// LRU cache inspired from hashlru (https://github.com/dominictarr/hashlru/blob/v1.0.4/index.js) but object replaced with Map to improve performance
const createLruCache = (maxCacheSize)=>{
    if (maxCacheSize < 1) return {
        get: ()=>undefined,
        set: ()=>{}
    };
    let cacheSize = 0;
    let cache = new Map();
    let previousCache = new Map();
    const update = (key, value)=>{
        cache.set(key, value);
        cacheSize++;
        if (cacheSize > maxCacheSize) {
            cacheSize = 0;
            previousCache = cache;
            cache = new Map();
        }
    };
    return {
        get (key) {
            let value = cache.get(key);
            if (value !== undefined) return value;
            if ((value = previousCache.get(key)) !== undefined) {
                update(key, value);
                return value;
            }
        },
        set (key, value) {
            if (cache.has(key)) cache.set(key, value);
            else update(key, value);
        }
    };
};
const IMPORTANT_MODIFIER = '!';
const MODIFIER_SEPARATOR = ':';
const MODIFIER_SEPARATOR_LENGTH = MODIFIER_SEPARATOR.length;
const createParseClassName = (config)=>{
    const { prefix, experimentalParseClassName } = config;
    /**
   * Parse class name into parts.
   *
   * Inspired by `splitAtTopLevelOnly` used in Tailwind CSS
   * @see https://github.com/tailwindlabs/tailwindcss/blob/v3.2.2/src/util/splitAtTopLevelOnly.js
   */ let parseClassName = (className)=>{
        const modifiers = [];
        let bracketDepth = 0;
        let parenDepth = 0;
        let modifierStart = 0;
        let postfixModifierPosition;
        for(let index = 0; index < className.length; index++){
            let currentCharacter = className[index];
            if (bracketDepth === 0 && parenDepth === 0) {
                if (currentCharacter === MODIFIER_SEPARATOR) {
                    modifiers.push(className.slice(modifierStart, index));
                    modifierStart = index + MODIFIER_SEPARATOR_LENGTH;
                    continue;
                }
                if (currentCharacter === '/') {
                    postfixModifierPosition = index;
                    continue;
                }
            }
            if (currentCharacter === '[') bracketDepth++;
            else if (currentCharacter === ']') bracketDepth--;
            else if (currentCharacter === '(') parenDepth++;
            else if (currentCharacter === ')') parenDepth--;
        }
        const baseClassNameWithImportantModifier = modifiers.length === 0 ? className : className.substring(modifierStart);
        const baseClassName = stripImportantModifier(baseClassNameWithImportantModifier);
        const hasImportantModifier = baseClassName !== baseClassNameWithImportantModifier;
        const maybePostfixModifierPosition = postfixModifierPosition && postfixModifierPosition > modifierStart ? postfixModifierPosition - modifierStart : undefined;
        return {
            modifiers,
            hasImportantModifier,
            baseClassName,
            maybePostfixModifierPosition
        };
    };
    if (prefix) {
        const fullPrefix = prefix + MODIFIER_SEPARATOR;
        const parseClassNameOriginal = parseClassName;
        parseClassName = (className)=>className.startsWith(fullPrefix) ? parseClassNameOriginal(className.substring(fullPrefix.length)) : {
                isExternal: true,
                modifiers: [],
                hasImportantModifier: false,
                baseClassName: className,
                maybePostfixModifierPosition: undefined
            };
    }
    if (experimentalParseClassName) {
        const parseClassNameOriginal = parseClassName;
        parseClassName = (className)=>experimentalParseClassName({
                className,
                parseClassName: parseClassNameOriginal
            });
    }
    return parseClassName;
};
const stripImportantModifier = (baseClassName)=>{
    if (baseClassName.endsWith(IMPORTANT_MODIFIER)) return baseClassName.substring(0, baseClassName.length - 1);
    /**
   * In Tailwind CSS v3 the important modifier was at the start of the base class name. This is still supported for legacy reasons.
   * @see https://github.com/dcastil/tailwind-merge/issues/513#issuecomment-2614029864
   */ if (baseClassName.startsWith(IMPORTANT_MODIFIER)) return baseClassName.substring(1);
    return baseClassName;
};
/**
 * Sorts modifiers according to following schema:
 * - Predefined modifiers are sorted alphabetically
 * - When an arbitrary variant appears, it must be preserved which modifiers are before and after it
 */ const createSortModifiers = (config)=>{
    const orderSensitiveModifiers = Object.fromEntries(config.orderSensitiveModifiers.map((modifier)=>[
            modifier,
            true
        ]));
    const sortModifiers = (modifiers)=>{
        if (modifiers.length <= 1) return modifiers;
        const sortedModifiers = [];
        let unsortedModifiers = [];
        modifiers.forEach((modifier)=>{
            const isPositionSensitive = modifier[0] === '[' || orderSensitiveModifiers[modifier];
            if (isPositionSensitive) {
                sortedModifiers.push(...unsortedModifiers.sort(), modifier);
                unsortedModifiers = [];
            } else unsortedModifiers.push(modifier);
        });
        sortedModifiers.push(...unsortedModifiers.sort());
        return sortedModifiers;
    };
    return sortModifiers;
};
const createConfigUtils = (config)=>({
        cache: createLruCache(config.cacheSize),
        parseClassName: createParseClassName(config),
        sortModifiers: createSortModifiers(config),
        ...createClassGroupUtils(config)
    });
const SPLIT_CLASSES_REGEX = /\s+/;
const mergeClassList = (classList, configUtils)=>{
    const { parseClassName, getClassGroupId, getConflictingClassGroupIds, sortModifiers } = configUtils;
    /**
   * Set of classGroupIds in following format:
   * `{importantModifier}{variantModifiers}{classGroupId}`
   * @example 'float'
   * @example 'hover:focus:bg-color'
   * @example 'md:!pr'
   */ const classGroupsInConflict = [];
    const classNames = classList.trim().split(SPLIT_CLASSES_REGEX);
    let result = '';
    for(let index = classNames.length - 1; index >= 0; index -= 1){
        const originalClassName = classNames[index];
        const { isExternal, modifiers, hasImportantModifier, baseClassName, maybePostfixModifierPosition } = parseClassName(originalClassName);
        if (isExternal) {
            result = originalClassName + (result.length > 0 ? ' ' + result : result);
            continue;
        }
        let hasPostfixModifier = !!maybePostfixModifierPosition;
        let classGroupId = getClassGroupId(hasPostfixModifier ? baseClassName.substring(0, maybePostfixModifierPosition) : baseClassName);
        if (!classGroupId) {
            if (!hasPostfixModifier) {
                // Not a Tailwind class
                result = originalClassName + (result.length > 0 ? ' ' + result : result);
                continue;
            }
            classGroupId = getClassGroupId(baseClassName);
            if (!classGroupId) {
                // Not a Tailwind class
                result = originalClassName + (result.length > 0 ? ' ' + result : result);
                continue;
            }
            hasPostfixModifier = false;
        }
        const variantModifier = sortModifiers(modifiers).join(':');
        const modifierId = hasImportantModifier ? variantModifier + IMPORTANT_MODIFIER : variantModifier;
        const classId = modifierId + classGroupId;
        if (classGroupsInConflict.includes(classId)) continue;
        classGroupsInConflict.push(classId);
        const conflictGroups = getConflictingClassGroupIds(classGroupId, hasPostfixModifier);
        for(let i = 0; i < conflictGroups.length; ++i){
            const group = conflictGroups[i];
            classGroupsInConflict.push(modifierId + group);
        }
        // Tailwind class not in conflict
        result = originalClassName + (result.length > 0 ? ' ' + result : result);
    }
    return result;
};
/**
 * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.
 *
 * Specifically:
 * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js
 * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts
 *
 * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)
 */ function twJoin() {
    let index = 0;
    let argument;
    let resolvedValue;
    let string = '';
    while(index < arguments.length){
        if (argument = arguments[index++]) {
            if (resolvedValue = toValue(argument)) {
                string && (string += ' ');
                string += resolvedValue;
            }
        }
    }
    return string;
}
const toValue = (mix)=>{
    if (typeof mix === 'string') return mix;
    let resolvedValue;
    let string = '';
    for(let k = 0; k < mix.length; k++){
        if (mix[k]) {
            if (resolvedValue = toValue(mix[k])) {
                string && (string += ' ');
                string += resolvedValue;
            }
        }
    }
    return string;
};
function createTailwindMerge(createConfigFirst, ...createConfigRest) {
    let configUtils;
    let cacheGet;
    let cacheSet;
    let functionToCall = initTailwindMerge;
    function initTailwindMerge(classList) {
        const config = createConfigRest.reduce((previousConfig, createConfigCurrent)=>createConfigCurrent(previousConfig), createConfigFirst());
        configUtils = createConfigUtils(config);
        cacheGet = configUtils.cache.get;
        cacheSet = configUtils.cache.set;
        functionToCall = tailwindMerge;
        return tailwindMerge(classList);
    }
    function tailwindMerge(classList) {
        const cachedResult = cacheGet(classList);
        if (cachedResult) return cachedResult;
        const result = mergeClassList(classList, configUtils);
        cacheSet(classList, result);
        return result;
    }
    return function callTailwindMerge() {
        return functionToCall(twJoin.apply(null, arguments));
    };
}
const fromTheme = (key)=>{
    const themeGetter = (theme)=>theme[key] || [];
    themeGetter.isThemeGetter = true;
    return themeGetter;
};
const arbitraryValueRegex = /^\[(?:(\w[\w-]*):)?(.+)\]$/i;
const arbitraryVariableRegex = /^\((?:(\w[\w-]*):)?(.+)\)$/i;
const fractionRegex = /^\d+\/\d+$/;
const tshirtUnitRegex = /^(\d+(\.\d+)?)?(xs|sm|md|lg|xl)$/;
const lengthUnitRegex = /\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\b(calc|min|max|clamp)\(.+\)|^0$/;
const colorFunctionRegex = /^(rgba?|hsla?|hwb|(ok)?(lab|lch)|color-mix)\(.+\)$/;
// Shadow always begins with x and y offset separated by underscore optionally prepended by inset
const shadowRegex = /^(inset_)?-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/;
const imageRegex = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\(.+\)$/;
const isFraction = (value)=>fractionRegex.test(value);
const isNumber = (value)=>!!value && !Number.isNaN(Number(value));
const isInteger = (value)=>!!value && Number.isInteger(Number(value));
const isPercent = (value)=>value.endsWith('%') && isNumber(value.slice(0, -1));
const isTshirtSize = (value)=>tshirtUnitRegex.test(value);
const isAny = ()=>true;
const isLengthOnly = (value)=>// `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.
    // For example, `hsl(0 0% 0%)` would be classified as a length without this check.
    // I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.
    lengthUnitRegex.test(value) && !colorFunctionRegex.test(value);
const isNever = ()=>false;
const isShadow = (value)=>shadowRegex.test(value);
const isImage = (value)=>imageRegex.test(value);
const isAnyNonArbitrary = (value)=>!isArbitraryValue(value) && !isArbitraryVariable(value);
const isArbitrarySize = (value)=>getIsArbitraryValue(value, isLabelSize, isNever);
const isArbitraryValue = (value)=>arbitraryValueRegex.test(value);
const isArbitraryLength = (value)=>getIsArbitraryValue(value, isLabelLength, isLengthOnly);
const isArbitraryNumber = (value)=>getIsArbitraryValue(value, isLabelNumber, isNumber);
const isArbitraryPosition = (value)=>getIsArbitraryValue(value, isLabelPosition, isNever);
const isArbitraryImage = (value)=>getIsArbitraryValue(value, isLabelImage, isImage);
const isArbitraryShadow = (value)=>getIsArbitraryValue(value, isLabelShadow, isShadow);
const isArbitraryVariable = (value)=>arbitraryVariableRegex.test(value);
const isArbitraryVariableLength = (value)=>getIsArbitraryVariable(value, isLabelLength);
const isArbitraryVariableFamilyName = (value)=>getIsArbitraryVariable(value, isLabelFamilyName);
const isArbitraryVariablePosition = (value)=>getIsArbitraryVariable(value, isLabelPosition);
const isArbitraryVariableSize = (value)=>getIsArbitraryVariable(value, isLabelSize);
const isArbitraryVariableImage = (value)=>getIsArbitraryVariable(value, isLabelImage);
const isArbitraryVariableShadow = (value)=>getIsArbitraryVariable(value, isLabelShadow, true);
// Helpers
const getIsArbitraryValue = (value, testLabel, testValue)=>{
    const result = arbitraryValueRegex.exec(value);
    if (result) {
        if (result[1]) return testLabel(result[1]);
        return testValue(result[2]);
    }
    return false;
};
const getIsArbitraryVariable = (value, testLabel, shouldMatchNoLabel = false)=>{
    const result = arbitraryVariableRegex.exec(value);
    if (result) {
        if (result[1]) return testLabel(result[1]);
        return shouldMatchNoLabel;
    }
    return false;
};
// Labels
const isLabelPosition = (label)=>label === 'position' || label === 'percentage';
const isLabelImage = (label)=>label === 'image' || label === 'url';
const isLabelSize = (label)=>label === 'length' || label === 'size' || label === 'bg-size';
const isLabelLength = (label)=>label === 'length';
const isLabelNumber = (label)=>label === 'number';
const isLabelFamilyName = (label)=>label === 'family-name';
const isLabelShadow = (label)=>label === 'shadow';
const validators = /*#__PURE__*/ Object.defineProperty({
    __proto__: null,
    isAny,
    isAnyNonArbitrary,
    isArbitraryImage,
    isArbitraryLength,
    isArbitraryNumber,
    isArbitraryPosition,
    isArbitraryShadow,
    isArbitrarySize,
    isArbitraryValue,
    isArbitraryVariable,
    isArbitraryVariableFamilyName,
    isArbitraryVariableImage,
    isArbitraryVariableLength,
    isArbitraryVariablePosition,
    isArbitraryVariableShadow,
    isArbitraryVariableSize,
    isFraction,
    isInteger,
    isNumber,
    isPercent,
    isTshirtSize
}, Symbol.toStringTag, {
    value: 'Module'
});
const getDefaultConfig = ()=>{
    /**
   * Theme getters for theme variable namespaces
   * @see https://tailwindcss.com/docs/theme#theme-variable-namespaces
   */ /***/ const themeColor = fromTheme('color');
    const themeFont = fromTheme('font');
    const themeText = fromTheme('text');
    const themeFontWeight = fromTheme('font-weight');
    const themeTracking = fromTheme('tracking');
    const themeLeading = fromTheme('leading');
    const themeBreakpoint = fromTheme('breakpoint');
    const themeContainer = fromTheme('container');
    const themeSpacing = fromTheme('spacing');
    const themeRadius = fromTheme('radius');
    const themeShadow = fromTheme('shadow');
    const themeInsetShadow = fromTheme('inset-shadow');
    const themeTextShadow = fromTheme('text-shadow');
    const themeDropShadow = fromTheme('drop-shadow');
    const themeBlur = fromTheme('blur');
    const themePerspective = fromTheme('perspective');
    const themeAspect = fromTheme('aspect');
    const themeEase = fromTheme('ease');
    const themeAnimate = fromTheme('animate');
    /**
   * Helpers to avoid repeating the same scales
   *
   * We use functions that create a new array every time they're called instead of static arrays.
   * This ensures that users who modify any scale by mutating the array (e.g. with `array.push(element)`) don't accidentally mutate arrays in other parts of the config.
   */ /***/ const scaleBreak = ()=>[
            'auto',
            'avoid',
            'all',
            'avoid-page',
            'page',
            'left',
            'right',
            'column'
        ];
    const scalePosition = ()=>[
            'center',
            'top',
            'bottom',
            'left',
            'right',
            'top-left',
            // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378
            'left-top',
            'top-right',
            // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378
            'right-top',
            'bottom-right',
            // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378
            'right-bottom',
            'bottom-left',
            // Deprecated since Tailwind CSS v4.1.0, see https://github.com/tailwindlabs/tailwindcss/pull/17378
            'left-bottom'
        ];
    const scalePositionWithArbitrary = ()=>[
            ...scalePosition(),
            isArbitraryVariable,
            isArbitraryValue
        ];
    const scaleOverflow = ()=>[
            'auto',
            'hidden',
            'clip',
            'visible',
            'scroll'
        ];
    const scaleOverscroll = ()=>[
            'auto',
            'contain',
            'none'
        ];
    const scaleUnambiguousSpacing = ()=>[
            isArbitraryVariable,
            isArbitraryValue,
            themeSpacing
        ];
    const scaleInset = ()=>[
            isFraction,
            'full',
            'auto',
            ...scaleUnambiguousSpacing()
        ];
    const scaleGridTemplateColsRows = ()=>[
            isInteger,
            'none',
            'subgrid',
            isArbitraryVariable,
            isArbitraryValue
        ];
    const scaleGridColRowStartAndEnd = ()=>[
            'auto',
            {
                span: [
                    'full',
                    isInteger,
                    isArbitraryVariable,
                    isArbitraryValue
                ]
            },
            isInteger,
            isArbitraryVariable,
            isArbitraryValue
        ];
    const scaleGridColRowStartOrEnd = ()=>[
            isInteger,
            'auto',
            isArbitraryVariable,
            isArbitraryValue
        ];
    const scaleGridAutoColsRows = ()=>[
            'auto',
            'min',
            'max',
            'fr',
            isArbitraryVariable,
            isArbitraryValue
        ];
    const scaleAlignPrimaryAxis = ()=>[
            'start',
            'end',
            'center',
            'between',
            'around',
            'evenly',
            'stretch',
            'baseline',
            'center-safe',
            'end-safe'
        ];
    const scaleAlignSecondaryAxis = ()=>[
            'start',
            'end',
            'center',
            'stretch',
            'center-safe',
            'end-safe'
        ];
    const scaleMargin = ()=>[
            'auto',
            ...scaleUnambiguousSpacing()
        ];
    const scaleSizing = ()=>[
            isFraction,
            'auto',
            'full',
            'dvw',
            'dvh',
            'lvw',
            'lvh',
            'svw',
            'svh',
            'min',
            'max',
            'fit',
            ...scaleUnambiguousSpacing()
        ];
    const scaleColor = ()=>[
            themeColor,
            isArbitraryVariable,
            isArbitraryValue
        ];
    const scaleBgPosition = ()=>[
            ...scalePosition(),
            isArbitraryVariablePosition,
            isArbitraryPosition,
            {
                position: [
                    isArbitraryVariable,
                    isArbitraryValue
                ]
            }
        ];
    const scaleBgRepeat = ()=>[
            'no-repeat',
            {
                repeat: [
                    '',
                    'x',
                    'y',
                    'space',
                    'round'
                ]
            }
        ];
    const scaleBgSize = ()=>[
            'auto',
            'cover',
            'contain',
            isArbitraryVariableSize,
            isArbitrarySize,
            {
                size: [
                    isArbitraryVariable,
                    isArbitraryValue
                ]
            }
        ];
    const scaleGradientStopPosition = ()=>[
            isPercent,
            isArbitraryVariableLength,
            isArbitraryLength
        ];
    const scaleRadius = ()=>[
            // Deprecated since Tailwind CSS v4.0.0
            '',
            'none',
            'full',
            themeRadius,
            isArbitraryVariable,
            isArbitraryValue
        ];
    const scaleBorderWidth = ()=>[
            '',
            isNumber,
            isArbitraryVariableLength,
            isArbitraryLength
        ];
    const scaleLineStyle = ()=>[
            'solid',
            'dashed',
            'dotted',
            'double'
        ];
    const scaleBlendMode = ()=>[
            'normal',
            'multiply',
            'screen',
            'overlay',
            'darken',
            'lighten',
            'color-dodge',
            'color-burn',
            'hard-light',
            'soft-light',
            'difference',
            'exclusion',
            'hue',
            'saturation',
            'color',
            'luminosity'
        ];
    const scaleMaskImagePosition = ()=>[
            isNumber,
            isPercent,
            isArbitraryVariablePosition,
            isArbitraryPosition
        ];
    const scaleBlur = ()=>[
            // Deprecated since Tailwind CSS v4.0.0
            '',
            'none',
            themeBlur,
            isArbitraryVariable,
            isArbitraryValue
        ];
    const scaleRotate = ()=>[
            'none',
            isNumber,
            isArbitraryVariable,
            isArbitraryValue
        ];
    const scaleScale = ()=>[
            'none',
            isNumber,
            isArbitraryVariable,
            isArbitraryValue
        ];
    const scaleSkew = ()=>[
            isNumber,
            isArbitraryVariable,
            isArbitraryValue
        ];
    const scaleTranslate = ()=>[
            isFraction,
            'full',
            ...scaleUnambiguousSpacing()
        ];
    return {
        cacheSize: 500,
        theme: {
            animate: [
                'spin',
                'ping',
                'pulse',
                'bounce'
            ],
            aspect: [
                'video'
            ],
            blur: [
                isTshirtSize
            ],
            breakpoint: [
                isTshirtSize
            ],
            color: [
                isAny
            ],
            container: [
                isTshirtSize
            ],
            'drop-shadow': [
                isTshirtSize
            ],
            ease: [
                'in',
                'out',
                'in-out'
            ],
            font: [
                isAnyNonArbitrary
            ],
            'font-weight': [
                'thin',
                'extralight',
                'light',
                'normal',
                'medium',
                'semibold',
                'bold',
                'extrabold',
                'black'
            ],
            'inset-shadow': [
                isTshirtSize
            ],
            leading: [
                'none',
                'tight',
                'snug',
                'normal',
                'relaxed',
                'loose'
            ],
            perspective: [
                'dramatic',
                'near',
                'normal',
                'midrange',
                'distant',
                'none'
            ],
            radius: [
                isTshirtSize
            ],
            shadow: [
                isTshirtSize
            ],
            spacing: [
                'px',
                isNumber
            ],
            text: [
                isTshirtSize
            ],
            'text-shadow': [
                isTshirtSize
            ],
            tracking: [
                'tighter',
                'tight',
                'normal',
                'wide',
                'wider',
                'widest'
            ]
        },
        classGroups: {
            // --------------
            // --- Layout ---
            // --------------
            /**
       * Aspect Ratio
       * @see https://tailwindcss.com/docs/aspect-ratio
       */ aspect: [
                {
                    aspect: [
                        'auto',
                        'square',
                        isFraction,
                        isArbitraryValue,
                        isArbitraryVariable,
                        themeAspect
                    ]
                }
            ],
            /**
       * Container
       * @see https://tailwindcss.com/docs/container
       * @deprecated since Tailwind CSS v4.0.0
       */ container: [
                'container'
            ],
            /**
       * Columns
       * @see https://tailwindcss.com/docs/columns
       */ columns: [
                {
                    columns: [
                        isNumber,
                        isArbitraryValue,
                        isArbitraryVariable,
                        themeContainer
                    ]
                }
            ],
            /**
       * Break After
       * @see https://tailwindcss.com/docs/break-after
       */ 'break-after': [
                {
                    'break-after': scaleBreak()
                }
            ],
            /**
       * Break Before
       * @see https://tailwindcss.com/docs/break-before
       */ 'break-before': [
                {
                    'break-before': scaleBreak()
                }
            ],
            /**
       * Break Inside
       * @see https://tailwindcss.com/docs/break-inside
       */ 'break-inside': [
                {
                    'break-inside': [
                        'auto',
                        'avoid',
                        'avoid-page',
                        'avoid-column'
                    ]
                }
            ],
            /**
       * Box Decoration Break
       * @see https://tailwindcss.com/docs/box-decoration-break
       */ 'box-decoration': [
                {
                    'box-decoration': [
                        'slice',
                        'clone'
                    ]
                }
            ],
            /**
       * Box Sizing
       * @see https://tailwindcss.com/docs/box-sizing
       */ box: [
                {
                    box: [
                        'border',
                        'content'
                    ]
                }
            ],
            /**
       * Display
       * @see https://tailwindcss.com/docs/display
       */ display: [
                'block',
                'inline-block',
                'inline',
                'flex',
                'inline-flex',
                'table',
                'inline-table',
                'table-caption',
                'table-cell',
                'table-column',
                'table-column-group',
                'table-footer-group',
                'table-header-group',
                'table-row-group',
                'table-row',
                'flow-root',
                'grid',
                'inline-grid',
                'contents',
                'list-item',
                'hidden'
            ],
            /**
       * Screen Reader Only
       * @see https://tailwindcss.com/docs/display#screen-reader-only
       */ sr: [
                'sr-only',
                'not-sr-only'
            ],
            /**
       * Floats
       * @see https://tailwindcss.com/docs/float
       */ float: [
                {
                    float: [
                        'right',
                        'left',
                        'none',
                        'start',
                        'end'
                    ]
                }
            ],
            /**
       * Clear
       * @see https://tailwindcss.com/docs/clear
       */ clear: [
                {
                    clear: [
                        'left',
                        'right',
                        'both',
                        'none',
                        'start',
                        'end'
                    ]
                }
            ],
            /**
       * Isolation
       * @see https://tailwindcss.com/docs/isolation
       */ isolation: [
                'isolate',
                'isolation-auto'
            ],
            /**
       * Object Fit
       * @see https://tailwindcss.com/docs/object-fit
       */ 'object-fit': [
                {
                    object: [
                        'contain',
                        'cover',
                        'fill',
                        'none',
                        'scale-down'
                    ]
                }
            ],
            /**
       * Object Position
       * @see https://tailwindcss.com/docs/object-position
       */ 'object-position': [
                {
                    object: scalePositionWithArbitrary()
                }
            ],
            /**
       * Overflow
       * @see https://tailwindcss.com/docs/overflow
       */ overflow: [
                {
                    overflow: scaleOverflow()
                }
            ],
            /**
       * Overflow X
       * @see https://tailwindcss.com/docs/overflow
       */ 'overflow-x': [
                {
                    'overflow-x': scaleOverflow()
                }
            ],
            /**
       * Overflow Y
       * @see https://tailwindcss.com/docs/overflow
       */ 'overflow-y': [
                {
                    'overflow-y': scaleOverflow()
                }
            ],
            /**
       * Overscroll Behavior
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */ overscroll: [
                {
                    overscroll: scaleOverscroll()
                }
            ],
            /**
       * Overscroll Behavior X
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */ 'overscroll-x': [
                {
                    'overscroll-x': scaleOverscroll()
                }
            ],
            /**
       * Overscroll Behavior Y
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */ 'overscroll-y': [
                {
                    'overscroll-y': scaleOverscroll()
                }
            ],
            /**
       * Position
       * @see https://tailwindcss.com/docs/position
       */ position: [
                'static',
                'fixed',
                'absolute',
                'relative',
                'sticky'
            ],
            /**
       * Top / Right / Bottom / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */ inset: [
                {
                    inset: scaleInset()
                }
            ],
            /**
       * Right / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */ 'inset-x': [
                {
                    'inset-x': scaleInset()
                }
            ],
            /**
       * Top / Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */ 'inset-y': [
                {
                    'inset-y': scaleInset()
                }
            ],
            /**
       * Start
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */ start: [
                {
                    start: scaleInset()
                }
            ],
            /**
       * End
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */ end: [
                {
                    end: scaleInset()
                }
            ],
            /**
       * Top
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */ top: [
                {
                    top: scaleInset()
                }
            ],
            /**
       * Right
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */ right: [
                {
                    right: scaleInset()
                }
            ],
            /**
       * Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */ bottom: [
                {
                    bottom: scaleInset()
                }
            ],
            /**
       * Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */ left: [
                {
                    left: scaleInset()
                }
            ],
            /**
       * Visibility
       * @see https://tailwindcss.com/docs/visibility
       */ visibility: [
                'visible',
                'invisible',
                'collapse'
            ],
            /**
       * Z-Index
       * @see https://tailwindcss.com/docs/z-index
       */ z: [
                {
                    z: [
                        isInteger,
                        'auto',
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            // ------------------------
            // --- Flexbox and Grid ---
            // ------------------------
            /**
       * Flex Basis
       * @see https://tailwindcss.com/docs/flex-basis
       */ basis: [
                {
                    basis: [
                        isFraction,
                        'full',
                        'auto',
                        themeContainer,
                        ...scaleUnambiguousSpacing()
                    ]
                }
            ],
            /**
       * Flex Direction
       * @see https://tailwindcss.com/docs/flex-direction
       */ 'flex-direction': [
                {
                    flex: [
                        'row',
                        'row-reverse',
                        'col',
                        'col-reverse'
                    ]
                }
            ],
            /**
       * Flex Wrap
       * @see https://tailwindcss.com/docs/flex-wrap
       */ 'flex-wrap': [
                {
                    flex: [
                        'nowrap',
                        'wrap',
                        'wrap-reverse'
                    ]
                }
            ],
            /**
       * Flex
       * @see https://tailwindcss.com/docs/flex
       */ flex: [
                {
                    flex: [
                        isNumber,
                        isFraction,
                        'auto',
                        'initial',
                        'none',
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Flex Grow
       * @see https://tailwindcss.com/docs/flex-grow
       */ grow: [
                {
                    grow: [
                        '',
                        isNumber,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Flex Shrink
       * @see https://tailwindcss.com/docs/flex-shrink
       */ shrink: [
                {
                    shrink: [
                        '',
                        isNumber,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Order
       * @see https://tailwindcss.com/docs/order
       */ order: [
                {
                    order: [
                        isInteger,
                        'first',
                        'last',
                        'none',
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Grid Template Columns
       * @see https://tailwindcss.com/docs/grid-template-columns
       */ 'grid-cols': [
                {
                    'grid-cols': scaleGridTemplateColsRows()
                }
            ],
            /**
       * Grid Column Start / End
       * @see https://tailwindcss.com/docs/grid-column
       */ 'col-start-end': [
                {
                    col: scaleGridColRowStartAndEnd()
                }
            ],
            /**
       * Grid Column Start
       * @see https://tailwindcss.com/docs/grid-column
       */ 'col-start': [
                {
                    'col-start': scaleGridColRowStartOrEnd()
                }
            ],
            /**
       * Grid Column End
       * @see https://tailwindcss.com/docs/grid-column
       */ 'col-end': [
                {
                    'col-end': scaleGridColRowStartOrEnd()
                }
            ],
            /**
       * Grid Template Rows
       * @see https://tailwindcss.com/docs/grid-template-rows
       */ 'grid-rows': [
                {
                    'grid-rows': scaleGridTemplateColsRows()
                }
            ],
            /**
       * Grid Row Start / End
       * @see https://tailwindcss.com/docs/grid-row
       */ 'row-start-end': [
                {
                    row: scaleGridColRowStartAndEnd()
                }
            ],
            /**
       * Grid Row Start
       * @see https://tailwindcss.com/docs/grid-row
       */ 'row-start': [
                {
                    'row-start': scaleGridColRowStartOrEnd()
                }
            ],
            /**
       * Grid Row End
       * @see https://tailwindcss.com/docs/grid-row
       */ 'row-end': [
                {
                    'row-end': scaleGridColRowStartOrEnd()
                }
            ],
            /**
       * Grid Auto Flow
       * @see https://tailwindcss.com/docs/grid-auto-flow
       */ 'grid-flow': [
                {
                    'grid-flow': [
                        'row',
                        'col',
                        'dense',
                        'row-dense',
                        'col-dense'
                    ]
                }
            ],
            /**
       * Grid Auto Columns
       * @see https://tailwindcss.com/docs/grid-auto-columns
       */ 'auto-cols': [
                {
                    'auto-cols': scaleGridAutoColsRows()
                }
            ],
            /**
       * Grid Auto Rows
       * @see https://tailwindcss.com/docs/grid-auto-rows
       */ 'auto-rows': [
                {
                    'auto-rows': scaleGridAutoColsRows()
                }
            ],
            /**
       * Gap
       * @see https://tailwindcss.com/docs/gap
       */ gap: [
                {
                    gap: scaleUnambiguousSpacing()
                }
            ],
            /**
       * Gap X
       * @see https://tailwindcss.com/docs/gap
       */ 'gap-x': [
                {
                    'gap-x': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Gap Y
       * @see https://tailwindcss.com/docs/gap
       */ 'gap-y': [
                {
                    'gap-y': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Justify Content
       * @see https://tailwindcss.com/docs/justify-content
       */ 'justify-content': [
                {
                    justify: [
                        ...scaleAlignPrimaryAxis(),
                        'normal'
                    ]
                }
            ],
            /**
       * Justify Items
       * @see https://tailwindcss.com/docs/justify-items
       */ 'justify-items': [
                {
                    'justify-items': [
                        ...scaleAlignSecondaryAxis(),
                        'normal'
                    ]
                }
            ],
            /**
       * Justify Self
       * @see https://tailwindcss.com/docs/justify-self
       */ 'justify-self': [
                {
                    'justify-self': [
                        'auto',
                        ...scaleAlignSecondaryAxis()
                    ]
                }
            ],
            /**
       * Align Content
       * @see https://tailwindcss.com/docs/align-content
       */ 'align-content': [
                {
                    content: [
                        'normal',
                        ...scaleAlignPrimaryAxis()
                    ]
                }
            ],
            /**
       * Align Items
       * @see https://tailwindcss.com/docs/align-items
       */ 'align-items': [
                {
                    items: [
                        ...scaleAlignSecondaryAxis(),
                        {
                            baseline: [
                                '',
                                'last'
                            ]
                        }
                    ]
                }
            ],
            /**
       * Align Self
       * @see https://tailwindcss.com/docs/align-self
       */ 'align-self': [
                {
                    self: [
                        'auto',
                        ...scaleAlignSecondaryAxis(),
                        {
                            baseline: [
                                '',
                                'last'
                            ]
                        }
                    ]
                }
            ],
            /**
       * Place Content
       * @see https://tailwindcss.com/docs/place-content
       */ 'place-content': [
                {
                    'place-content': scaleAlignPrimaryAxis()
                }
            ],
            /**
       * Place Items
       * @see https://tailwindcss.com/docs/place-items
       */ 'place-items': [
                {
                    'place-items': [
                        ...scaleAlignSecondaryAxis(),
                        'baseline'
                    ]
                }
            ],
            /**
       * Place Self
       * @see https://tailwindcss.com/docs/place-self
       */ 'place-self': [
                {
                    'place-self': [
                        'auto',
                        ...scaleAlignSecondaryAxis()
                    ]
                }
            ],
            // Spacing
            /**
       * Padding
       * @see https://tailwindcss.com/docs/padding
       */ p: [
                {
                    p: scaleUnambiguousSpacing()
                }
            ],
            /**
       * Padding X
       * @see https://tailwindcss.com/docs/padding
       */ px: [
                {
                    px: scaleUnambiguousSpacing()
                }
            ],
            /**
       * Padding Y
       * @see https://tailwindcss.com/docs/padding
       */ py: [
                {
                    py: scaleUnambiguousSpacing()
                }
            ],
            /**
       * Padding Start
       * @see https://tailwindcss.com/docs/padding
       */ ps: [
                {
                    ps: scaleUnambiguousSpacing()
                }
            ],
            /**
       * Padding End
       * @see https://tailwindcss.com/docs/padding
       */ pe: [
                {
                    pe: scaleUnambiguousSpacing()
                }
            ],
            /**
       * Padding Top
       * @see https://tailwindcss.com/docs/padding
       */ pt: [
                {
                    pt: scaleUnambiguousSpacing()
                }
            ],
            /**
       * Padding Right
       * @see https://tailwindcss.com/docs/padding
       */ pr: [
                {
                    pr: scaleUnambiguousSpacing()
                }
            ],
            /**
       * Padding Bottom
       * @see https://tailwindcss.com/docs/padding
       */ pb: [
                {
                    pb: scaleUnambiguousSpacing()
                }
            ],
            /**
       * Padding Left
       * @see https://tailwindcss.com/docs/padding
       */ pl: [
                {
                    pl: scaleUnambiguousSpacing()
                }
            ],
            /**
       * Margin
       * @see https://tailwindcss.com/docs/margin
       */ m: [
                {
                    m: scaleMargin()
                }
            ],
            /**
       * Margin X
       * @see https://tailwindcss.com/docs/margin
       */ mx: [
                {
                    mx: scaleMargin()
                }
            ],
            /**
       * Margin Y
       * @see https://tailwindcss.com/docs/margin
       */ my: [
                {
                    my: scaleMargin()
                }
            ],
            /**
       * Margin Start
       * @see https://tailwindcss.com/docs/margin
       */ ms: [
                {
                    ms: scaleMargin()
                }
            ],
            /**
       * Margin End
       * @see https://tailwindcss.com/docs/margin
       */ me: [
                {
                    me: scaleMargin()
                }
            ],
            /**
       * Margin Top
       * @see https://tailwindcss.com/docs/margin
       */ mt: [
                {
                    mt: scaleMargin()
                }
            ],
            /**
       * Margin Right
       * @see https://tailwindcss.com/docs/margin
       */ mr: [
                {
                    mr: scaleMargin()
                }
            ],
            /**
       * Margin Bottom
       * @see https://tailwindcss.com/docs/margin
       */ mb: [
                {
                    mb: scaleMargin()
                }
            ],
            /**
       * Margin Left
       * @see https://tailwindcss.com/docs/margin
       */ ml: [
                {
                    ml: scaleMargin()
                }
            ],
            /**
       * Space Between X
       * @see https://tailwindcss.com/docs/margin#adding-space-between-children
       */ 'space-x': [
                {
                    'space-x': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Space Between X Reverse
       * @see https://tailwindcss.com/docs/margin#adding-space-between-children
       */ 'space-x-reverse': [
                'space-x-reverse'
            ],
            /**
       * Space Between Y
       * @see https://tailwindcss.com/docs/margin#adding-space-between-children
       */ 'space-y': [
                {
                    'space-y': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Space Between Y Reverse
       * @see https://tailwindcss.com/docs/margin#adding-space-between-children
       */ 'space-y-reverse': [
                'space-y-reverse'
            ],
            // --------------
            // --- Sizing ---
            // --------------
            /**
       * Size
       * @see https://tailwindcss.com/docs/width#setting-both-width-and-height
       */ size: [
                {
                    size: scaleSizing()
                }
            ],
            /**
       * Width
       * @see https://tailwindcss.com/docs/width
       */ w: [
                {
                    w: [
                        themeContainer,
                        'screen',
                        ...scaleSizing()
                    ]
                }
            ],
            /**
       * Min-Width
       * @see https://tailwindcss.com/docs/min-width
       */ 'min-w': [
                {
                    'min-w': [
                        themeContainer,
                        'screen',
                        /** Deprecated. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */ 'none',
                        ...scaleSizing()
                    ]
                }
            ],
            /**
       * Max-Width
       * @see https://tailwindcss.com/docs/max-width
       */ 'max-w': [
                {
                    'max-w': [
                        themeContainer,
                        'screen',
                        'none',
                        /** Deprecated since Tailwind CSS v4.0.0. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */ 'prose',
                        /** Deprecated since Tailwind CSS v4.0.0. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */ {
                            screen: [
                                themeBreakpoint
                            ]
                        },
                        ...scaleSizing()
                    ]
                }
            ],
            /**
       * Height
       * @see https://tailwindcss.com/docs/height
       */ h: [
                {
                    h: [
                        'screen',
                        'lh',
                        ...scaleSizing()
                    ]
                }
            ],
            /**
       * Min-Height
       * @see https://tailwindcss.com/docs/min-height
       */ 'min-h': [
                {
                    'min-h': [
                        'screen',
                        'lh',
                        'none',
                        ...scaleSizing()
                    ]
                }
            ],
            /**
       * Max-Height
       * @see https://tailwindcss.com/docs/max-height
       */ 'max-h': [
                {
                    'max-h': [
                        'screen',
                        'lh',
                        ...scaleSizing()
                    ]
                }
            ],
            // ------------------
            // --- Typography ---
            // ------------------
            /**
       * Font Size
       * @see https://tailwindcss.com/docs/font-size
       */ 'font-size': [
                {
                    text: [
                        'base',
                        themeText,
                        isArbitraryVariableLength,
                        isArbitraryLength
                    ]
                }
            ],
            /**
       * Font Smoothing
       * @see https://tailwindcss.com/docs/font-smoothing
       */ 'font-smoothing': [
                'antialiased',
                'subpixel-antialiased'
            ],
            /**
       * Font Style
       * @see https://tailwindcss.com/docs/font-style
       */ 'font-style': [
                'italic',
                'not-italic'
            ],
            /**
       * Font Weight
       * @see https://tailwindcss.com/docs/font-weight
       */ 'font-weight': [
                {
                    font: [
                        themeFontWeight,
                        isArbitraryVariable,
                        isArbitraryNumber
                    ]
                }
            ],
            /**
       * Font Stretch
       * @see https://tailwindcss.com/docs/font-stretch
       */ 'font-stretch': [
                {
                    'font-stretch': [
                        'ultra-condensed',
                        'extra-condensed',
                        'condensed',
                        'semi-condensed',
                        'normal',
                        'semi-expanded',
                        'expanded',
                        'extra-expanded',
                        'ultra-expanded',
                        isPercent,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Font Family
       * @see https://tailwindcss.com/docs/font-family
       */ 'font-family': [
                {
                    font: [
                        isArbitraryVariableFamilyName,
                        isArbitraryValue,
                        themeFont
                    ]
                }
            ],
            /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */ 'fvn-normal': [
                'normal-nums'
            ],
            /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */ 'fvn-ordinal': [
                'ordinal'
            ],
            /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */ 'fvn-slashed-zero': [
                'slashed-zero'
            ],
            /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */ 'fvn-figure': [
                'lining-nums',
                'oldstyle-nums'
            ],
            /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */ 'fvn-spacing': [
                'proportional-nums',
                'tabular-nums'
            ],
            /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */ 'fvn-fraction': [
                'diagonal-fractions',
                'stacked-fractions'
            ],
            /**
       * Letter Spacing
       * @see https://tailwindcss.com/docs/letter-spacing
       */ tracking: [
                {
                    tracking: [
                        themeTracking,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Line Clamp
       * @see https://tailwindcss.com/docs/line-clamp
       */ 'line-clamp': [
                {
                    'line-clamp': [
                        isNumber,
                        'none',
                        isArbitraryVariable,
                        isArbitraryNumber
                    ]
                }
            ],
            /**
       * Line Height
       * @see https://tailwindcss.com/docs/line-height
       */ leading: [
                {
                    leading: [
                        /** Deprecated since Tailwind CSS v4.0.0. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */ themeLeading,
                        ...scaleUnambiguousSpacing()
                    ]
                }
            ],
            /**
       * List Style Image
       * @see https://tailwindcss.com/docs/list-style-image
       */ 'list-image': [
                {
                    'list-image': [
                        'none',
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * List Style Position
       * @see https://tailwindcss.com/docs/list-style-position
       */ 'list-style-position': [
                {
                    list: [
                        'inside',
                        'outside'
                    ]
                }
            ],
            /**
       * List Style Type
       * @see https://tailwindcss.com/docs/list-style-type
       */ 'list-style-type': [
                {
                    list: [
                        'disc',
                        'decimal',
                        'none',
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Text Alignment
       * @see https://tailwindcss.com/docs/text-align
       */ 'text-alignment': [
                {
                    text: [
                        'left',
                        'center',
                        'right',
                        'justify',
                        'start',
                        'end'
                    ]
                }
            ],
            /**
       * Placeholder Color
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://v3.tailwindcss.com/docs/placeholder-color
       */ 'placeholder-color': [
                {
                    placeholder: scaleColor()
                }
            ],
            /**
       * Text Color
       * @see https://tailwindcss.com/docs/text-color
       */ 'text-color': [
                {
                    text: scaleColor()
                }
            ],
            /**
       * Text Decoration
       * @see https://tailwindcss.com/docs/text-decoration
       */ 'text-decoration': [
                'underline',
                'overline',
                'line-through',
                'no-underline'
            ],
            /**
       * Text Decoration Style
       * @see https://tailwindcss.com/docs/text-decoration-style
       */ 'text-decoration-style': [
                {
                    decoration: [
                        ...scaleLineStyle(),
                        'wavy'
                    ]
                }
            ],
            /**
       * Text Decoration Thickness
       * @see https://tailwindcss.com/docs/text-decoration-thickness
       */ 'text-decoration-thickness': [
                {
                    decoration: [
                        isNumber,
                        'from-font',
                        'auto',
                        isArbitraryVariable,
                        isArbitraryLength
                    ]
                }
            ],
            /**
       * Text Decoration Color
       * @see https://tailwindcss.com/docs/text-decoration-color
       */ 'text-decoration-color': [
                {
                    decoration: scaleColor()
                }
            ],
            /**
       * Text Underline Offset
       * @see https://tailwindcss.com/docs/text-underline-offset
       */ 'underline-offset': [
                {
                    'underline-offset': [
                        isNumber,
                        'auto',
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Text Transform
       * @see https://tailwindcss.com/docs/text-transform
       */ 'text-transform': [
                'uppercase',
                'lowercase',
                'capitalize',
                'normal-case'
            ],
            /**
       * Text Overflow
       * @see https://tailwindcss.com/docs/text-overflow
       */ 'text-overflow': [
                'truncate',
                'text-ellipsis',
                'text-clip'
            ],
            /**
       * Text Wrap
       * @see https://tailwindcss.com/docs/text-wrap
       */ 'text-wrap': [
                {
                    text: [
                        'wrap',
                        'nowrap',
                        'balance',
                        'pretty'
                    ]
                }
            ],
            /**
       * Text Indent
       * @see https://tailwindcss.com/docs/text-indent
       */ indent: [
                {
                    indent: scaleUnambiguousSpacing()
                }
            ],
            /**
       * Vertical Alignment
       * @see https://tailwindcss.com/docs/vertical-align
       */ 'vertical-align': [
                {
                    align: [
                        'baseline',
                        'top',
                        'middle',
                        'bottom',
                        'text-top',
                        'text-bottom',
                        'sub',
                        'super',
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Whitespace
       * @see https://tailwindcss.com/docs/whitespace
       */ whitespace: [
                {
                    whitespace: [
                        'normal',
                        'nowrap',
                        'pre',
                        'pre-line',
                        'pre-wrap',
                        'break-spaces'
                    ]
                }
            ],
            /**
       * Word Break
       * @see https://tailwindcss.com/docs/word-break
       */ break: [
                {
                    break: [
                        'normal',
                        'words',
                        'all',
                        'keep'
                    ]
                }
            ],
            /**
       * Overflow Wrap
       * @see https://tailwindcss.com/docs/overflow-wrap
       */ wrap: [
                {
                    wrap: [
                        'break-word',
                        'anywhere',
                        'normal'
                    ]
                }
            ],
            /**
       * Hyphens
       * @see https://tailwindcss.com/docs/hyphens
       */ hyphens: [
                {
                    hyphens: [
                        'none',
                        'manual',
                        'auto'
                    ]
                }
            ],
            /**
       * Content
       * @see https://tailwindcss.com/docs/content
       */ content: [
                {
                    content: [
                        'none',
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            // -------------------
            // --- Backgrounds ---
            // -------------------
            /**
       * Background Attachment
       * @see https://tailwindcss.com/docs/background-attachment
       */ 'bg-attachment': [
                {
                    bg: [
                        'fixed',
                        'local',
                        'scroll'
                    ]
                }
            ],
            /**
       * Background Clip
       * @see https://tailwindcss.com/docs/background-clip
       */ 'bg-clip': [
                {
                    'bg-clip': [
                        'border',
                        'padding',
                        'content',
                        'text'
                    ]
                }
            ],
            /**
       * Background Origin
       * @see https://tailwindcss.com/docs/background-origin
       */ 'bg-origin': [
                {
                    'bg-origin': [
                        'border',
                        'padding',
                        'content'
                    ]
                }
            ],
            /**
       * Background Position
       * @see https://tailwindcss.com/docs/background-position
       */ 'bg-position': [
                {
                    bg: scaleBgPosition()
                }
            ],
            /**
       * Background Repeat
       * @see https://tailwindcss.com/docs/background-repeat
       */ 'bg-repeat': [
                {
                    bg: scaleBgRepeat()
                }
            ],
            /**
       * Background Size
       * @see https://tailwindcss.com/docs/background-size
       */ 'bg-size': [
                {
                    bg: scaleBgSize()
                }
            ],
            /**
       * Background Image
       * @see https://tailwindcss.com/docs/background-image
       */ 'bg-image': [
                {
                    bg: [
                        'none',
                        {
                            linear: [
                                {
                                    to: [
                                        't',
                                        'tr',
                                        'r',
                                        'br',
                                        'b',
                                        'bl',
                                        'l',
                                        'tl'
                                    ]
                                },
                                isInteger,
                                isArbitraryVariable,
                                isArbitraryValue
                            ],
                            radial: [
                                '',
                                isArbitraryVariable,
                                isArbitraryValue
                            ],
                            conic: [
                                isInteger,
                                isArbitraryVariable,
                                isArbitraryValue
                            ]
                        },
                        isArbitraryVariableImage,
                        isArbitraryImage
                    ]
                }
            ],
            /**
       * Background Color
       * @see https://tailwindcss.com/docs/background-color
       */ 'bg-color': [
                {
                    bg: scaleColor()
                }
            ],
            /**
       * Gradient Color Stops From Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */ 'gradient-from-pos': [
                {
                    from: scaleGradientStopPosition()
                }
            ],
            /**
       * Gradient Color Stops Via Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */ 'gradient-via-pos': [
                {
                    via: scaleGradientStopPosition()
                }
            ],
            /**
       * Gradient Color Stops To Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */ 'gradient-to-pos': [
                {
                    to: scaleGradientStopPosition()
                }
            ],
            /**
       * Gradient Color Stops From
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */ 'gradient-from': [
                {
                    from: scaleColor()
                }
            ],
            /**
       * Gradient Color Stops Via
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */ 'gradient-via': [
                {
                    via: scaleColor()
                }
            ],
            /**
       * Gradient Color Stops To
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */ 'gradient-to': [
                {
                    to: scaleColor()
                }
            ],
            // ---------------
            // --- Borders ---
            // ---------------
            /**
       * Border Radius
       * @see https://tailwindcss.com/docs/border-radius
       */ rounded: [
                {
                    rounded: scaleRadius()
                }
            ],
            /**
       * Border Radius Start
       * @see https://tailwindcss.com/docs/border-radius
       */ 'rounded-s': [
                {
                    'rounded-s': scaleRadius()
                }
            ],
            /**
       * Border Radius End
       * @see https://tailwindcss.com/docs/border-radius
       */ 'rounded-e': [
                {
                    'rounded-e': scaleRadius()
                }
            ],
            /**
       * Border Radius Top
       * @see https://tailwindcss.com/docs/border-radius
       */ 'rounded-t': [
                {
                    'rounded-t': scaleRadius()
                }
            ],
            /**
       * Border Radius Right
       * @see https://tailwindcss.com/docs/border-radius
       */ 'rounded-r': [
                {
                    'rounded-r': scaleRadius()
                }
            ],
            /**
       * Border Radius Bottom
       * @see https://tailwindcss.com/docs/border-radius
       */ 'rounded-b': [
                {
                    'rounded-b': scaleRadius()
                }
            ],
            /**
       * Border Radius Left
       * @see https://tailwindcss.com/docs/border-radius
       */ 'rounded-l': [
                {
                    'rounded-l': scaleRadius()
                }
            ],
            /**
       * Border Radius Start Start
       * @see https://tailwindcss.com/docs/border-radius
       */ 'rounded-ss': [
                {
                    'rounded-ss': scaleRadius()
                }
            ],
            /**
       * Border Radius Start End
       * @see https://tailwindcss.com/docs/border-radius
       */ 'rounded-se': [
                {
                    'rounded-se': scaleRadius()
                }
            ],
            /**
       * Border Radius End End
       * @see https://tailwindcss.com/docs/border-radius
       */ 'rounded-ee': [
                {
                    'rounded-ee': scaleRadius()
                }
            ],
            /**
       * Border Radius End Start
       * @see https://tailwindcss.com/docs/border-radius
       */ 'rounded-es': [
                {
                    'rounded-es': scaleRadius()
                }
            ],
            /**
       * Border Radius Top Left
       * @see https://tailwindcss.com/docs/border-radius
       */ 'rounded-tl': [
                {
                    'rounded-tl': scaleRadius()
                }
            ],
            /**
       * Border Radius Top Right
       * @see https://tailwindcss.com/docs/border-radius
       */ 'rounded-tr': [
                {
                    'rounded-tr': scaleRadius()
                }
            ],
            /**
       * Border Radius Bottom Right
       * @see https://tailwindcss.com/docs/border-radius
       */ 'rounded-br': [
                {
                    'rounded-br': scaleRadius()
                }
            ],
            /**
       * Border Radius Bottom Left
       * @see https://tailwindcss.com/docs/border-radius
       */ 'rounded-bl': [
                {
                    'rounded-bl': scaleRadius()
                }
            ],
            /**
       * Border Width
       * @see https://tailwindcss.com/docs/border-width
       */ 'border-w': [
                {
                    border: scaleBorderWidth()
                }
            ],
            /**
       * Border Width X
       * @see https://tailwindcss.com/docs/border-width
       */ 'border-w-x': [
                {
                    'border-x': scaleBorderWidth()
                }
            ],
            /**
       * Border Width Y
       * @see https://tailwindcss.com/docs/border-width
       */ 'border-w-y': [
                {
                    'border-y': scaleBorderWidth()
                }
            ],
            /**
       * Border Width Start
       * @see https://tailwindcss.com/docs/border-width
       */ 'border-w-s': [
                {
                    'border-s': scaleBorderWidth()
                }
            ],
            /**
       * Border Width End
       * @see https://tailwindcss.com/docs/border-width
       */ 'border-w-e': [
                {
                    'border-e': scaleBorderWidth()
                }
            ],
            /**
       * Border Width Top
       * @see https://tailwindcss.com/docs/border-width
       */ 'border-w-t': [
                {
                    'border-t': scaleBorderWidth()
                }
            ],
            /**
       * Border Width Right
       * @see https://tailwindcss.com/docs/border-width
       */ 'border-w-r': [
                {
                    'border-r': scaleBorderWidth()
                }
            ],
            /**
       * Border Width Bottom
       * @see https://tailwindcss.com/docs/border-width
       */ 'border-w-b': [
                {
                    'border-b': scaleBorderWidth()
                }
            ],
            /**
       * Border Width Left
       * @see https://tailwindcss.com/docs/border-width
       */ 'border-w-l': [
                {
                    'border-l': scaleBorderWidth()
                }
            ],
            /**
       * Divide Width X
       * @see https://tailwindcss.com/docs/border-width#between-children
       */ 'divide-x': [
                {
                    'divide-x': scaleBorderWidth()
                }
            ],
            /**
       * Divide Width X Reverse
       * @see https://tailwindcss.com/docs/border-width#between-children
       */ 'divide-x-reverse': [
                'divide-x-reverse'
            ],
            /**
       * Divide Width Y
       * @see https://tailwindcss.com/docs/border-width#between-children
       */ 'divide-y': [
                {
                    'divide-y': scaleBorderWidth()
                }
            ],
            /**
       * Divide Width Y Reverse
       * @see https://tailwindcss.com/docs/border-width#between-children
       */ 'divide-y-reverse': [
                'divide-y-reverse'
            ],
            /**
       * Border Style
       * @see https://tailwindcss.com/docs/border-style
       */ 'border-style': [
                {
                    border: [
                        ...scaleLineStyle(),
                        'hidden',
                        'none'
                    ]
                }
            ],
            /**
       * Divide Style
       * @see https://tailwindcss.com/docs/border-style#setting-the-divider-style
       */ 'divide-style': [
                {
                    divide: [
                        ...scaleLineStyle(),
                        'hidden',
                        'none'
                    ]
                }
            ],
            /**
       * Border Color
       * @see https://tailwindcss.com/docs/border-color
       */ 'border-color': [
                {
                    border: scaleColor()
                }
            ],
            /**
       * Border Color X
       * @see https://tailwindcss.com/docs/border-color
       */ 'border-color-x': [
                {
                    'border-x': scaleColor()
                }
            ],
            /**
       * Border Color Y
       * @see https://tailwindcss.com/docs/border-color
       */ 'border-color-y': [
                {
                    'border-y': scaleColor()
                }
            ],
            /**
       * Border Color S
       * @see https://tailwindcss.com/docs/border-color
       */ 'border-color-s': [
                {
                    'border-s': scaleColor()
                }
            ],
            /**
       * Border Color E
       * @see https://tailwindcss.com/docs/border-color
       */ 'border-color-e': [
                {
                    'border-e': scaleColor()
                }
            ],
            /**
       * Border Color Top
       * @see https://tailwindcss.com/docs/border-color
       */ 'border-color-t': [
                {
                    'border-t': scaleColor()
                }
            ],
            /**
       * Border Color Right
       * @see https://tailwindcss.com/docs/border-color
       */ 'border-color-r': [
                {
                    'border-r': scaleColor()
                }
            ],
            /**
       * Border Color Bottom
       * @see https://tailwindcss.com/docs/border-color
       */ 'border-color-b': [
                {
                    'border-b': scaleColor()
                }
            ],
            /**
       * Border Color Left
       * @see https://tailwindcss.com/docs/border-color
       */ 'border-color-l': [
                {
                    'border-l': scaleColor()
                }
            ],
            /**
       * Divide Color
       * @see https://tailwindcss.com/docs/divide-color
       */ 'divide-color': [
                {
                    divide: scaleColor()
                }
            ],
            /**
       * Outline Style
       * @see https://tailwindcss.com/docs/outline-style
       */ 'outline-style': [
                {
                    outline: [
                        ...scaleLineStyle(),
                        'none',
                        'hidden'
                    ]
                }
            ],
            /**
       * Outline Offset
       * @see https://tailwindcss.com/docs/outline-offset
       */ 'outline-offset': [
                {
                    'outline-offset': [
                        isNumber,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Outline Width
       * @see https://tailwindcss.com/docs/outline-width
       */ 'outline-w': [
                {
                    outline: [
                        '',
                        isNumber,
                        isArbitraryVariableLength,
                        isArbitraryLength
                    ]
                }
            ],
            /**
       * Outline Color
       * @see https://tailwindcss.com/docs/outline-color
       */ 'outline-color': [
                {
                    outline: scaleColor()
                }
            ],
            // ---------------
            // --- Effects ---
            // ---------------
            /**
       * Box Shadow
       * @see https://tailwindcss.com/docs/box-shadow
       */ shadow: [
                {
                    shadow: [
                        // Deprecated since Tailwind CSS v4.0.0
                        '',
                        'none',
                        themeShadow,
                        isArbitraryVariableShadow,
                        isArbitraryShadow
                    ]
                }
            ],
            /**
       * Box Shadow Color
       * @see https://tailwindcss.com/docs/box-shadow#setting-the-shadow-color
       */ 'shadow-color': [
                {
                    shadow: scaleColor()
                }
            ],
            /**
       * Inset Box Shadow
       * @see https://tailwindcss.com/docs/box-shadow#adding-an-inset-shadow
       */ 'inset-shadow': [
                {
                    'inset-shadow': [
                        'none',
                        themeInsetShadow,
                        isArbitraryVariableShadow,
                        isArbitraryShadow
                    ]
                }
            ],
            /**
       * Inset Box Shadow Color
       * @see https://tailwindcss.com/docs/box-shadow#setting-the-inset-shadow-color
       */ 'inset-shadow-color': [
                {
                    'inset-shadow': scaleColor()
                }
            ],
            /**
       * Ring Width
       * @see https://tailwindcss.com/docs/box-shadow#adding-a-ring
       */ 'ring-w': [
                {
                    ring: scaleBorderWidth()
                }
            ],
            /**
       * Ring Width Inset
       * @see https://v3.tailwindcss.com/docs/ring-width#inset-rings
       * @deprecated since Tailwind CSS v4.0.0
       * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158
       */ 'ring-w-inset': [
                'ring-inset'
            ],
            /**
       * Ring Color
       * @see https://tailwindcss.com/docs/box-shadow#setting-the-ring-color
       */ 'ring-color': [
                {
                    ring: scaleColor()
                }
            ],
            /**
       * Ring Offset Width
       * @see https://v3.tailwindcss.com/docs/ring-offset-width
       * @deprecated since Tailwind CSS v4.0.0
       * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158
       */ 'ring-offset-w': [
                {
                    'ring-offset': [
                        isNumber,
                        isArbitraryLength
                    ]
                }
            ],
            /**
       * Ring Offset Color
       * @see https://v3.tailwindcss.com/docs/ring-offset-color
       * @deprecated since Tailwind CSS v4.0.0
       * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158
       */ 'ring-offset-color': [
                {
                    'ring-offset': scaleColor()
                }
            ],
            /**
       * Inset Ring Width
       * @see https://tailwindcss.com/docs/box-shadow#adding-an-inset-ring
       */ 'inset-ring-w': [
                {
                    'inset-ring': scaleBorderWidth()
                }
            ],
            /**
       * Inset Ring Color
       * @see https://tailwindcss.com/docs/box-shadow#setting-the-inset-ring-color
       */ 'inset-ring-color': [
                {
                    'inset-ring': scaleColor()
                }
            ],
            /**
       * Text Shadow
       * @see https://tailwindcss.com/docs/text-shadow
       */ 'text-shadow': [
                {
                    'text-shadow': [
                        'none',
                        themeTextShadow,
                        isArbitraryVariableShadow,
                        isArbitraryShadow
                    ]
                }
            ],
            /**
       * Text Shadow Color
       * @see https://tailwindcss.com/docs/text-shadow#setting-the-shadow-color
       */ 'text-shadow-color': [
                {
                    'text-shadow': scaleColor()
                }
            ],
            /**
       * Opacity
       * @see https://tailwindcss.com/docs/opacity
       */ opacity: [
                {
                    opacity: [
                        isNumber,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Mix Blend Mode
       * @see https://tailwindcss.com/docs/mix-blend-mode
       */ 'mix-blend': [
                {
                    'mix-blend': [
                        ...scaleBlendMode(),
                        'plus-darker',
                        'plus-lighter'
                    ]
                }
            ],
            /**
       * Background Blend Mode
       * @see https://tailwindcss.com/docs/background-blend-mode
       */ 'bg-blend': [
                {
                    'bg-blend': scaleBlendMode()
                }
            ],
            /**
       * Mask Clip
       * @see https://tailwindcss.com/docs/mask-clip
       */ 'mask-clip': [
                {
                    'mask-clip': [
                        'border',
                        'padding',
                        'content',
                        'fill',
                        'stroke',
                        'view'
                    ]
                },
                'mask-no-clip'
            ],
            /**
       * Mask Composite
       * @see https://tailwindcss.com/docs/mask-composite
       */ 'mask-composite': [
                {
                    mask: [
                        'add',
                        'subtract',
                        'intersect',
                        'exclude'
                    ]
                }
            ],
            /**
       * Mask Image
       * @see https://tailwindcss.com/docs/mask-image
       */ 'mask-image-linear-pos': [
                {
                    'mask-linear': [
                        isNumber
                    ]
                }
            ],
            'mask-image-linear-from-pos': [
                {
                    'mask-linear-from': scaleMaskImagePosition()
                }
            ],
            'mask-image-linear-to-pos': [
                {
                    'mask-linear-to': scaleMaskImagePosition()
                }
            ],
            'mask-image-linear-from-color': [
                {
                    'mask-linear-from': scaleColor()
                }
            ],
            'mask-image-linear-to-color': [
                {
                    'mask-linear-to': scaleColor()
                }
            ],
            'mask-image-t-from-pos': [
                {
                    'mask-t-from': scaleMaskImagePosition()
                }
            ],
            'mask-image-t-to-pos': [
                {
                    'mask-t-to': scaleMaskImagePosition()
                }
            ],
            'mask-image-t-from-color': [
                {
                    'mask-t-from': scaleColor()
                }
            ],
            'mask-image-t-to-color': [
                {
                    'mask-t-to': scaleColor()
                }
            ],
            'mask-image-r-from-pos': [
                {
                    'mask-r-from': scaleMaskImagePosition()
                }
            ],
            'mask-image-r-to-pos': [
                {
                    'mask-r-to': scaleMaskImagePosition()
                }
            ],
            'mask-image-r-from-color': [
                {
                    'mask-r-from': scaleColor()
                }
            ],
            'mask-image-r-to-color': [
                {
                    'mask-r-to': scaleColor()
                }
            ],
            'mask-image-b-from-pos': [
                {
                    'mask-b-from': scaleMaskImagePosition()
                }
            ],
            'mask-image-b-to-pos': [
                {
                    'mask-b-to': scaleMaskImagePosition()
                }
            ],
            'mask-image-b-from-color': [
                {
                    'mask-b-from': scaleColor()
                }
            ],
            'mask-image-b-to-color': [
                {
                    'mask-b-to': scaleColor()
                }
            ],
            'mask-image-l-from-pos': [
                {
                    'mask-l-from': scaleMaskImagePosition()
                }
            ],
            'mask-image-l-to-pos': [
                {
                    'mask-l-to': scaleMaskImagePosition()
                }
            ],
            'mask-image-l-from-color': [
                {
                    'mask-l-from': scaleColor()
                }
            ],
            'mask-image-l-to-color': [
                {
                    'mask-l-to': scaleColor()
                }
            ],
            'mask-image-x-from-pos': [
                {
                    'mask-x-from': scaleMaskImagePosition()
                }
            ],
            'mask-image-x-to-pos': [
                {
                    'mask-x-to': scaleMaskImagePosition()
                }
            ],
            'mask-image-x-from-color': [
                {
                    'mask-x-from': scaleColor()
                }
            ],
            'mask-image-x-to-color': [
                {
                    'mask-x-to': scaleColor()
                }
            ],
            'mask-image-y-from-pos': [
                {
                    'mask-y-from': scaleMaskImagePosition()
                }
            ],
            'mask-image-y-to-pos': [
                {
                    'mask-y-to': scaleMaskImagePosition()
                }
            ],
            'mask-image-y-from-color': [
                {
                    'mask-y-from': scaleColor()
                }
            ],
            'mask-image-y-to-color': [
                {
                    'mask-y-to': scaleColor()
                }
            ],
            'mask-image-radial': [
                {
                    'mask-radial': [
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            'mask-image-radial-from-pos': [
                {
                    'mask-radial-from': scaleMaskImagePosition()
                }
            ],
            'mask-image-radial-to-pos': [
                {
                    'mask-radial-to': scaleMaskImagePosition()
                }
            ],
            'mask-image-radial-from-color': [
                {
                    'mask-radial-from': scaleColor()
                }
            ],
            'mask-image-radial-to-color': [
                {
                    'mask-radial-to': scaleColor()
                }
            ],
            'mask-image-radial-shape': [
                {
                    'mask-radial': [
                        'circle',
                        'ellipse'
                    ]
                }
            ],
            'mask-image-radial-size': [
                {
                    'mask-radial': [
                        {
                            closest: [
                                'side',
                                'corner'
                            ],
                            farthest: [
                                'side',
                                'corner'
                            ]
                        }
                    ]
                }
            ],
            'mask-image-radial-pos': [
                {
                    'mask-radial-at': scalePosition()
                }
            ],
            'mask-image-conic-pos': [
                {
                    'mask-conic': [
                        isNumber
                    ]
                }
            ],
            'mask-image-conic-from-pos': [
                {
                    'mask-conic-from': scaleMaskImagePosition()
                }
            ],
            'mask-image-conic-to-pos': [
                {
                    'mask-conic-to': scaleMaskImagePosition()
                }
            ],
            'mask-image-conic-from-color': [
                {
                    'mask-conic-from': scaleColor()
                }
            ],
            'mask-image-conic-to-color': [
                {
                    'mask-conic-to': scaleColor()
                }
            ],
            /**
       * Mask Mode
       * @see https://tailwindcss.com/docs/mask-mode
       */ 'mask-mode': [
                {
                    mask: [
                        'alpha',
                        'luminance',
                        'match'
                    ]
                }
            ],
            /**
       * Mask Origin
       * @see https://tailwindcss.com/docs/mask-origin
       */ 'mask-origin': [
                {
                    'mask-origin': [
                        'border',
                        'padding',
                        'content',
                        'fill',
                        'stroke',
                        'view'
                    ]
                }
            ],
            /**
       * Mask Position
       * @see https://tailwindcss.com/docs/mask-position
       */ 'mask-position': [
                {
                    mask: scaleBgPosition()
                }
            ],
            /**
       * Mask Repeat
       * @see https://tailwindcss.com/docs/mask-repeat
       */ 'mask-repeat': [
                {
                    mask: scaleBgRepeat()
                }
            ],
            /**
       * Mask Size
       * @see https://tailwindcss.com/docs/mask-size
       */ 'mask-size': [
                {
                    mask: scaleBgSize()
                }
            ],
            /**
       * Mask Type
       * @see https://tailwindcss.com/docs/mask-type
       */ 'mask-type': [
                {
                    'mask-type': [
                        'alpha',
                        'luminance'
                    ]
                }
            ],
            /**
       * Mask Image
       * @see https://tailwindcss.com/docs/mask-image
       */ 'mask-image': [
                {
                    mask: [
                        'none',
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            // ---------------
            // --- Filters ---
            // ---------------
            /**
       * Filter
       * @see https://tailwindcss.com/docs/filter
       */ filter: [
                {
                    filter: [
                        // Deprecated since Tailwind CSS v3.0.0
                        '',
                        'none',
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Blur
       * @see https://tailwindcss.com/docs/blur
       */ blur: [
                {
                    blur: scaleBlur()
                }
            ],
            /**
       * Brightness
       * @see https://tailwindcss.com/docs/brightness
       */ brightness: [
                {
                    brightness: [
                        isNumber,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Contrast
       * @see https://tailwindcss.com/docs/contrast
       */ contrast: [
                {
                    contrast: [
                        isNumber,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Drop Shadow
       * @see https://tailwindcss.com/docs/drop-shadow
       */ 'drop-shadow': [
                {
                    'drop-shadow': [
                        // Deprecated since Tailwind CSS v4.0.0
                        '',
                        'none',
                        themeDropShadow,
                        isArbitraryVariableShadow,
                        isArbitraryShadow
                    ]
                }
            ],
            /**
       * Drop Shadow Color
       * @see https://tailwindcss.com/docs/filter-drop-shadow#setting-the-shadow-color
       */ 'drop-shadow-color': [
                {
                    'drop-shadow': scaleColor()
                }
            ],
            /**
       * Grayscale
       * @see https://tailwindcss.com/docs/grayscale
       */ grayscale: [
                {
                    grayscale: [
                        '',
                        isNumber,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Hue Rotate
       * @see https://tailwindcss.com/docs/hue-rotate
       */ 'hue-rotate': [
                {
                    'hue-rotate': [
                        isNumber,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Invert
       * @see https://tailwindcss.com/docs/invert
       */ invert: [
                {
                    invert: [
                        '',
                        isNumber,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Saturate
       * @see https://tailwindcss.com/docs/saturate
       */ saturate: [
                {
                    saturate: [
                        isNumber,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Sepia
       * @see https://tailwindcss.com/docs/sepia
       */ sepia: [
                {
                    sepia: [
                        '',
                        isNumber,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Backdrop Filter
       * @see https://tailwindcss.com/docs/backdrop-filter
       */ 'backdrop-filter': [
                {
                    'backdrop-filter': [
                        // Deprecated since Tailwind CSS v3.0.0
                        '',
                        'none',
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Backdrop Blur
       * @see https://tailwindcss.com/docs/backdrop-blur
       */ 'backdrop-blur': [
                {
                    'backdrop-blur': scaleBlur()
                }
            ],
            /**
       * Backdrop Brightness
       * @see https://tailwindcss.com/docs/backdrop-brightness
       */ 'backdrop-brightness': [
                {
                    'backdrop-brightness': [
                        isNumber,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Backdrop Contrast
       * @see https://tailwindcss.com/docs/backdrop-contrast
       */ 'backdrop-contrast': [
                {
                    'backdrop-contrast': [
                        isNumber,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Backdrop Grayscale
       * @see https://tailwindcss.com/docs/backdrop-grayscale
       */ 'backdrop-grayscale': [
                {
                    'backdrop-grayscale': [
                        '',
                        isNumber,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Backdrop Hue Rotate
       * @see https://tailwindcss.com/docs/backdrop-hue-rotate
       */ 'backdrop-hue-rotate': [
                {
                    'backdrop-hue-rotate': [
                        isNumber,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Backdrop Invert
       * @see https://tailwindcss.com/docs/backdrop-invert
       */ 'backdrop-invert': [
                {
                    'backdrop-invert': [
                        '',
                        isNumber,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Backdrop Opacity
       * @see https://tailwindcss.com/docs/backdrop-opacity
       */ 'backdrop-opacity': [
                {
                    'backdrop-opacity': [
                        isNumber,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Backdrop Saturate
       * @see https://tailwindcss.com/docs/backdrop-saturate
       */ 'backdrop-saturate': [
                {
                    'backdrop-saturate': [
                        isNumber,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Backdrop Sepia
       * @see https://tailwindcss.com/docs/backdrop-sepia
       */ 'backdrop-sepia': [
                {
                    'backdrop-sepia': [
                        '',
                        isNumber,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            // --------------
            // --- Tables ---
            // --------------
            /**
       * Border Collapse
       * @see https://tailwindcss.com/docs/border-collapse
       */ 'border-collapse': [
                {
                    border: [
                        'collapse',
                        'separate'
                    ]
                }
            ],
            /**
       * Border Spacing
       * @see https://tailwindcss.com/docs/border-spacing
       */ 'border-spacing': [
                {
                    'border-spacing': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Border Spacing X
       * @see https://tailwindcss.com/docs/border-spacing
       */ 'border-spacing-x': [
                {
                    'border-spacing-x': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Border Spacing Y
       * @see https://tailwindcss.com/docs/border-spacing
       */ 'border-spacing-y': [
                {
                    'border-spacing-y': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Table Layout
       * @see https://tailwindcss.com/docs/table-layout
       */ 'table-layout': [
                {
                    table: [
                        'auto',
                        'fixed'
                    ]
                }
            ],
            /**
       * Caption Side
       * @see https://tailwindcss.com/docs/caption-side
       */ caption: [
                {
                    caption: [
                        'top',
                        'bottom'
                    ]
                }
            ],
            // ---------------------------------
            // --- Transitions and Animation ---
            // ---------------------------------
            /**
       * Transition Property
       * @see https://tailwindcss.com/docs/transition-property
       */ transition: [
                {
                    transition: [
                        '',
                        'all',
                        'colors',
                        'opacity',
                        'shadow',
                        'transform',
                        'none',
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Transition Behavior
       * @see https://tailwindcss.com/docs/transition-behavior
       */ 'transition-behavior': [
                {
                    transition: [
                        'normal',
                        'discrete'
                    ]
                }
            ],
            /**
       * Transition Duration
       * @see https://tailwindcss.com/docs/transition-duration
       */ duration: [
                {
                    duration: [
                        isNumber,
                        'initial',
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Transition Timing Function
       * @see https://tailwindcss.com/docs/transition-timing-function
       */ ease: [
                {
                    ease: [
                        'linear',
                        'initial',
                        themeEase,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Transition Delay
       * @see https://tailwindcss.com/docs/transition-delay
       */ delay: [
                {
                    delay: [
                        isNumber,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Animation
       * @see https://tailwindcss.com/docs/animation
       */ animate: [
                {
                    animate: [
                        'none',
                        themeAnimate,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            // ------------------
            // --- Transforms ---
            // ------------------
            /**
       * Backface Visibility
       * @see https://tailwindcss.com/docs/backface-visibility
       */ backface: [
                {
                    backface: [
                        'hidden',
                        'visible'
                    ]
                }
            ],
            /**
       * Perspective
       * @see https://tailwindcss.com/docs/perspective
       */ perspective: [
                {
                    perspective: [
                        themePerspective,
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Perspective Origin
       * @see https://tailwindcss.com/docs/perspective-origin
       */ 'perspective-origin': [
                {
                    'perspective-origin': scalePositionWithArbitrary()
                }
            ],
            /**
       * Rotate
       * @see https://tailwindcss.com/docs/rotate
       */ rotate: [
                {
                    rotate: scaleRotate()
                }
            ],
            /**
       * Rotate X
       * @see https://tailwindcss.com/docs/rotate
       */ 'rotate-x': [
                {
                    'rotate-x': scaleRotate()
                }
            ],
            /**
       * Rotate Y
       * @see https://tailwindcss.com/docs/rotate
       */ 'rotate-y': [
                {
                    'rotate-y': scaleRotate()
                }
            ],
            /**
       * Rotate Z
       * @see https://tailwindcss.com/docs/rotate
       */ 'rotate-z': [
                {
                    'rotate-z': scaleRotate()
                }
            ],
            /**
       * Scale
       * @see https://tailwindcss.com/docs/scale
       */ scale: [
                {
                    scale: scaleScale()
                }
            ],
            /**
       * Scale X
       * @see https://tailwindcss.com/docs/scale
       */ 'scale-x': [
                {
                    'scale-x': scaleScale()
                }
            ],
            /**
       * Scale Y
       * @see https://tailwindcss.com/docs/scale
       */ 'scale-y': [
                {
                    'scale-y': scaleScale()
                }
            ],
            /**
       * Scale Z
       * @see https://tailwindcss.com/docs/scale
       */ 'scale-z': [
                {
                    'scale-z': scaleScale()
                }
            ],
            /**
       * Scale 3D
       * @see https://tailwindcss.com/docs/scale
       */ 'scale-3d': [
                'scale-3d'
            ],
            /**
       * Skew
       * @see https://tailwindcss.com/docs/skew
       */ skew: [
                {
                    skew: scaleSkew()
                }
            ],
            /**
       * Skew X
       * @see https://tailwindcss.com/docs/skew
       */ 'skew-x': [
                {
                    'skew-x': scaleSkew()
                }
            ],
            /**
       * Skew Y
       * @see https://tailwindcss.com/docs/skew
       */ 'skew-y': [
                {
                    'skew-y': scaleSkew()
                }
            ],
            /**
       * Transform
       * @see https://tailwindcss.com/docs/transform
       */ transform: [
                {
                    transform: [
                        isArbitraryVariable,
                        isArbitraryValue,
                        '',
                        'none',
                        'gpu',
                        'cpu'
                    ]
                }
            ],
            /**
       * Transform Origin
       * @see https://tailwindcss.com/docs/transform-origin
       */ 'transform-origin': [
                {
                    origin: scalePositionWithArbitrary()
                }
            ],
            /**
       * Transform Style
       * @see https://tailwindcss.com/docs/transform-style
       */ 'transform-style': [
                {
                    transform: [
                        '3d',
                        'flat'
                    ]
                }
            ],
            /**
       * Translate
       * @see https://tailwindcss.com/docs/translate
       */ translate: [
                {
                    translate: scaleTranslate()
                }
            ],
            /**
       * Translate X
       * @see https://tailwindcss.com/docs/translate
       */ 'translate-x': [
                {
                    'translate-x': scaleTranslate()
                }
            ],
            /**
       * Translate Y
       * @see https://tailwindcss.com/docs/translate
       */ 'translate-y': [
                {
                    'translate-y': scaleTranslate()
                }
            ],
            /**
       * Translate Z
       * @see https://tailwindcss.com/docs/translate
       */ 'translate-z': [
                {
                    'translate-z': scaleTranslate()
                }
            ],
            /**
       * Translate None
       * @see https://tailwindcss.com/docs/translate
       */ 'translate-none': [
                'translate-none'
            ],
            // ---------------------
            // --- Interactivity ---
            // ---------------------
            /**
       * Accent Color
       * @see https://tailwindcss.com/docs/accent-color
       */ accent: [
                {
                    accent: scaleColor()
                }
            ],
            /**
       * Appearance
       * @see https://tailwindcss.com/docs/appearance
       */ appearance: [
                {
                    appearance: [
                        'none',
                        'auto'
                    ]
                }
            ],
            /**
       * Caret Color
       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities
       */ 'caret-color': [
                {
                    caret: scaleColor()
                }
            ],
            /**
       * Color Scheme
       * @see https://tailwindcss.com/docs/color-scheme
       */ 'color-scheme': [
                {
                    scheme: [
                        'normal',
                        'dark',
                        'light',
                        'light-dark',
                        'only-dark',
                        'only-light'
                    ]
                }
            ],
            /**
       * Cursor
       * @see https://tailwindcss.com/docs/cursor
       */ cursor: [
                {
                    cursor: [
                        'auto',
                        'default',
                        'pointer',
                        'wait',
                        'text',
                        'move',
                        'help',
                        'not-allowed',
                        'none',
                        'context-menu',
                        'progress',
                        'cell',
                        'crosshair',
                        'vertical-text',
                        'alias',
                        'copy',
                        'no-drop',
                        'grab',
                        'grabbing',
                        'all-scroll',
                        'col-resize',
                        'row-resize',
                        'n-resize',
                        'e-resize',
                        's-resize',
                        'w-resize',
                        'ne-resize',
                        'nw-resize',
                        'se-resize',
                        'sw-resize',
                        'ew-resize',
                        'ns-resize',
                        'nesw-resize',
                        'nwse-resize',
                        'zoom-in',
                        'zoom-out',
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            /**
       * Field Sizing
       * @see https://tailwindcss.com/docs/field-sizing
       */ 'field-sizing': [
                {
                    'field-sizing': [
                        'fixed',
                        'content'
                    ]
                }
            ],
            /**
       * Pointer Events
       * @see https://tailwindcss.com/docs/pointer-events
       */ 'pointer-events': [
                {
                    'pointer-events': [
                        'auto',
                        'none'
                    ]
                }
            ],
            /**
       * Resize
       * @see https://tailwindcss.com/docs/resize
       */ resize: [
                {
                    resize: [
                        'none',
                        '',
                        'y',
                        'x'
                    ]
                }
            ],
            /**
       * Scroll Behavior
       * @see https://tailwindcss.com/docs/scroll-behavior
       */ 'scroll-behavior': [
                {
                    scroll: [
                        'auto',
                        'smooth'
                    ]
                }
            ],
            /**
       * Scroll Margin
       * @see https://tailwindcss.com/docs/scroll-margin
       */ 'scroll-m': [
                {
                    'scroll-m': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Scroll Margin X
       * @see https://tailwindcss.com/docs/scroll-margin
       */ 'scroll-mx': [
                {
                    'scroll-mx': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Scroll Margin Y
       * @see https://tailwindcss.com/docs/scroll-margin
       */ 'scroll-my': [
                {
                    'scroll-my': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Scroll Margin Start
       * @see https://tailwindcss.com/docs/scroll-margin
       */ 'scroll-ms': [
                {
                    'scroll-ms': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Scroll Margin End
       * @see https://tailwindcss.com/docs/scroll-margin
       */ 'scroll-me': [
                {
                    'scroll-me': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Scroll Margin Top
       * @see https://tailwindcss.com/docs/scroll-margin
       */ 'scroll-mt': [
                {
                    'scroll-mt': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Scroll Margin Right
       * @see https://tailwindcss.com/docs/scroll-margin
       */ 'scroll-mr': [
                {
                    'scroll-mr': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Scroll Margin Bottom
       * @see https://tailwindcss.com/docs/scroll-margin
       */ 'scroll-mb': [
                {
                    'scroll-mb': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Scroll Margin Left
       * @see https://tailwindcss.com/docs/scroll-margin
       */ 'scroll-ml': [
                {
                    'scroll-ml': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Scroll Padding
       * @see https://tailwindcss.com/docs/scroll-padding
       */ 'scroll-p': [
                {
                    'scroll-p': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Scroll Padding X
       * @see https://tailwindcss.com/docs/scroll-padding
       */ 'scroll-px': [
                {
                    'scroll-px': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Scroll Padding Y
       * @see https://tailwindcss.com/docs/scroll-padding
       */ 'scroll-py': [
                {
                    'scroll-py': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Scroll Padding Start
       * @see https://tailwindcss.com/docs/scroll-padding
       */ 'scroll-ps': [
                {
                    'scroll-ps': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Scroll Padding End
       * @see https://tailwindcss.com/docs/scroll-padding
       */ 'scroll-pe': [
                {
                    'scroll-pe': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Scroll Padding Top
       * @see https://tailwindcss.com/docs/scroll-padding
       */ 'scroll-pt': [
                {
                    'scroll-pt': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Scroll Padding Right
       * @see https://tailwindcss.com/docs/scroll-padding
       */ 'scroll-pr': [
                {
                    'scroll-pr': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Scroll Padding Bottom
       * @see https://tailwindcss.com/docs/scroll-padding
       */ 'scroll-pb': [
                {
                    'scroll-pb': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Scroll Padding Left
       * @see https://tailwindcss.com/docs/scroll-padding
       */ 'scroll-pl': [
                {
                    'scroll-pl': scaleUnambiguousSpacing()
                }
            ],
            /**
       * Scroll Snap Align
       * @see https://tailwindcss.com/docs/scroll-snap-align
       */ 'snap-align': [
                {
                    snap: [
                        'start',
                        'end',
                        'center',
                        'align-none'
                    ]
                }
            ],
            /**
       * Scroll Snap Stop
       * @see https://tailwindcss.com/docs/scroll-snap-stop
       */ 'snap-stop': [
                {
                    snap: [
                        'normal',
                        'always'
                    ]
                }
            ],
            /**
       * Scroll Snap Type
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */ 'snap-type': [
                {
                    snap: [
                        'none',
                        'x',
                        'y',
                        'both'
                    ]
                }
            ],
            /**
       * Scroll Snap Type Strictness
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */ 'snap-strictness': [
                {
                    snap: [
                        'mandatory',
                        'proximity'
                    ]
                }
            ],
            /**
       * Touch Action
       * @see https://tailwindcss.com/docs/touch-action
       */ touch: [
                {
                    touch: [
                        'auto',
                        'none',
                        'manipulation'
                    ]
                }
            ],
            /**
       * Touch Action X
       * @see https://tailwindcss.com/docs/touch-action
       */ 'touch-x': [
                {
                    'touch-pan': [
                        'x',
                        'left',
                        'right'
                    ]
                }
            ],
            /**
       * Touch Action Y
       * @see https://tailwindcss.com/docs/touch-action
       */ 'touch-y': [
                {
                    'touch-pan': [
                        'y',
                        'up',
                        'down'
                    ]
                }
            ],
            /**
       * Touch Action Pinch Zoom
       * @see https://tailwindcss.com/docs/touch-action
       */ 'touch-pz': [
                'touch-pinch-zoom'
            ],
            /**
       * User Select
       * @see https://tailwindcss.com/docs/user-select
       */ select: [
                {
                    select: [
                        'none',
                        'text',
                        'all',
                        'auto'
                    ]
                }
            ],
            /**
       * Will Change
       * @see https://tailwindcss.com/docs/will-change
       */ 'will-change': [
                {
                    'will-change': [
                        'auto',
                        'scroll',
                        'contents',
                        'transform',
                        isArbitraryVariable,
                        isArbitraryValue
                    ]
                }
            ],
            // -----------
            // --- SVG ---
            // -----------
            /**
       * Fill
       * @see https://tailwindcss.com/docs/fill
       */ fill: [
                {
                    fill: [
                        'none',
                        ...scaleColor()
                    ]
                }
            ],
            /**
       * Stroke Width
       * @see https://tailwindcss.com/docs/stroke-width
       */ 'stroke-w': [
                {
                    stroke: [
                        isNumber,
                        isArbitraryVariableLength,
                        isArbitraryLength,
                        isArbitraryNumber
                    ]
                }
            ],
            /**
       * Stroke
       * @see https://tailwindcss.com/docs/stroke
       */ stroke: [
                {
                    stroke: [
                        'none',
                        ...scaleColor()
                    ]
                }
            ],
            // ---------------------
            // --- Accessibility ---
            // ---------------------
            /**
       * Forced Color Adjust
       * @see https://tailwindcss.com/docs/forced-color-adjust
       */ 'forced-color-adjust': [
                {
                    'forced-color-adjust': [
                        'auto',
                        'none'
                    ]
                }
            ]
        },
        conflictingClassGroups: {
            overflow: [
                'overflow-x',
                'overflow-y'
            ],
            overscroll: [
                'overscroll-x',
                'overscroll-y'
            ],
            inset: [
                'inset-x',
                'inset-y',
                'start',
                'end',
                'top',
                'right',
                'bottom',
                'left'
            ],
            'inset-x': [
                'right',
                'left'
            ],
            'inset-y': [
                'top',
                'bottom'
            ],
            flex: [
                'basis',
                'grow',
                'shrink'
            ],
            gap: [
                'gap-x',
                'gap-y'
            ],
            p: [
                'px',
                'py',
                'ps',
                'pe',
                'pt',
                'pr',
                'pb',
                'pl'
            ],
            px: [
                'pr',
                'pl'
            ],
            py: [
                'pt',
                'pb'
            ],
            m: [
                'mx',
                'my',
                'ms',
                'me',
                'mt',
                'mr',
                'mb',
                'ml'
            ],
            mx: [
                'mr',
                'ml'
            ],
            my: [
                'mt',
                'mb'
            ],
            size: [
                'w',
                'h'
            ],
            'font-size': [
                'leading'
            ],
            'fvn-normal': [
                'fvn-ordinal',
                'fvn-slashed-zero',
                'fvn-figure',
                'fvn-spacing',
                'fvn-fraction'
            ],
            'fvn-ordinal': [
                'fvn-normal'
            ],
            'fvn-slashed-zero': [
                'fvn-normal'
            ],
            'fvn-figure': [
                'fvn-normal'
            ],
            'fvn-spacing': [
                'fvn-normal'
            ],
            'fvn-fraction': [
                'fvn-normal'
            ],
            'line-clamp': [
                'display',
                'overflow'
            ],
            rounded: [
                'rounded-s',
                'rounded-e',
                'rounded-t',
                'rounded-r',
                'rounded-b',
                'rounded-l',
                'rounded-ss',
                'rounded-se',
                'rounded-ee',
                'rounded-es',
                'rounded-tl',
                'rounded-tr',
                'rounded-br',
                'rounded-bl'
            ],
            'rounded-s': [
                'rounded-ss',
                'rounded-es'
            ],
            'rounded-e': [
                'rounded-se',
                'rounded-ee'
            ],
            'rounded-t': [
                'rounded-tl',
                'rounded-tr'
            ],
            'rounded-r': [
                'rounded-tr',
                'rounded-br'
            ],
            'rounded-b': [
                'rounded-br',
                'rounded-bl'
            ],
            'rounded-l': [
                'rounded-tl',
                'rounded-bl'
            ],
            'border-spacing': [
                'border-spacing-x',
                'border-spacing-y'
            ],
            'border-w': [
                'border-w-x',
                'border-w-y',
                'border-w-s',
                'border-w-e',
                'border-w-t',
                'border-w-r',
                'border-w-b',
                'border-w-l'
            ],
            'border-w-x': [
                'border-w-r',
                'border-w-l'
            ],
            'border-w-y': [
                'border-w-t',
                'border-w-b'
            ],
            'border-color': [
                'border-color-x',
                'border-color-y',
                'border-color-s',
                'border-color-e',
                'border-color-t',
                'border-color-r',
                'border-color-b',
                'border-color-l'
            ],
            'border-color-x': [
                'border-color-r',
                'border-color-l'
            ],
            'border-color-y': [
                'border-color-t',
                'border-color-b'
            ],
            translate: [
                'translate-x',
                'translate-y',
                'translate-none'
            ],
            'translate-none': [
                'translate',
                'translate-x',
                'translate-y',
                'translate-z'
            ],
            'scroll-m': [
                'scroll-mx',
                'scroll-my',
                'scroll-ms',
                'scroll-me',
                'scroll-mt',
                'scroll-mr',
                'scroll-mb',
                'scroll-ml'
            ],
            'scroll-mx': [
                'scroll-mr',
                'scroll-ml'
            ],
            'scroll-my': [
                'scroll-mt',
                'scroll-mb'
            ],
            'scroll-p': [
                'scroll-px',
                'scroll-py',
                'scroll-ps',
                'scroll-pe',
                'scroll-pt',
                'scroll-pr',
                'scroll-pb',
                'scroll-pl'
            ],
            'scroll-px': [
                'scroll-pr',
                'scroll-pl'
            ],
            'scroll-py': [
                'scroll-pt',
                'scroll-pb'
            ],
            touch: [
                'touch-x',
                'touch-y',
                'touch-pz'
            ],
            'touch-x': [
                'touch'
            ],
            'touch-y': [
                'touch'
            ],
            'touch-pz': [
                'touch'
            ]
        },
        conflictingClassGroupModifiers: {
            'font-size': [
                'leading'
            ]
        },
        orderSensitiveModifiers: [
            '*',
            '**',
            'after',
            'backdrop',
            'before',
            'details-content',
            'file',
            'first-letter',
            'first-line',
            'marker',
            'placeholder',
            'selection'
        ]
    };
};
/**
 * @param baseConfig Config where other config will be merged into. This object will be mutated.
 * @param configExtension Partial config to merge into the `baseConfig`.
 */ const mergeConfigs = (baseConfig, { cacheSize, prefix, experimentalParseClassName, extend = {}, override = {} })=>{
    overrideProperty(baseConfig, 'cacheSize', cacheSize);
    overrideProperty(baseConfig, 'prefix', prefix);
    overrideProperty(baseConfig, 'experimentalParseClassName', experimentalParseClassName);
    overrideConfigProperties(baseConfig.theme, override.theme);
    overrideConfigProperties(baseConfig.classGroups, override.classGroups);
    overrideConfigProperties(baseConfig.conflictingClassGroups, override.conflictingClassGroups);
    overrideConfigProperties(baseConfig.conflictingClassGroupModifiers, override.conflictingClassGroupModifiers);
    overrideProperty(baseConfig, 'orderSensitiveModifiers', override.orderSensitiveModifiers);
    mergeConfigProperties(baseConfig.theme, extend.theme);
    mergeConfigProperties(baseConfig.classGroups, extend.classGroups);
    mergeConfigProperties(baseConfig.conflictingClassGroups, extend.conflictingClassGroups);
    mergeConfigProperties(baseConfig.conflictingClassGroupModifiers, extend.conflictingClassGroupModifiers);
    mergeArrayProperties(baseConfig, extend, 'orderSensitiveModifiers');
    return baseConfig;
};
const overrideProperty = (baseObject, overrideKey, overrideValue)=>{
    if (overrideValue !== undefined) baseObject[overrideKey] = overrideValue;
};
const overrideConfigProperties = (baseObject, overrideObject)=>{
    if (overrideObject) for(const key in overrideObject)overrideProperty(baseObject, key, overrideObject[key]);
};
const mergeConfigProperties = (baseObject, mergeObject)=>{
    if (mergeObject) for(const key in mergeObject)mergeArrayProperties(baseObject, mergeObject, key);
};
const mergeArrayProperties = (baseObject, mergeObject, key)=>{
    const mergeValue = mergeObject[key];
    if (mergeValue !== undefined) baseObject[key] = baseObject[key] ? baseObject[key].concat(mergeValue) : mergeValue;
};
const extendTailwindMerge = (configExtension, ...createConfig)=>typeof configExtension === 'function' ? createTailwindMerge(getDefaultConfig, configExtension, ...createConfig) : createTailwindMerge(()=>mergeConfigs(getDefaultConfig(), configExtension), ...createConfig);
const twMerge = /*#__PURE__*/ createTailwindMerge(getDefaultConfig);
exports.createTailwindMerge = createTailwindMerge;
exports.extendTailwindMerge = extendTailwindMerge;
exports.fromTheme = fromTheme;
exports.getDefaultConfig = getDefaultConfig;
exports.mergeConfigs = mergeConfigs;
exports.twJoin = twJoin;
exports.twMerge = twMerge;
exports.validators = validators;

},{}],"9NbBg":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$8d3b = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$8d3b.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$8d3b.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Input", ()=>Input);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _utils = require("./utils");
function Input({ className, type, ...props }) {
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
        type: type,
        "data-slot": "input",
        className: (0, _utils.cn)("file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border px-3 py-1 text-base bg-input-background transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm", "focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]", "aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive", className),
        ...props
    }, void 0, false, {
        fileName: "src/components/ui/input.tsx",
        lineNumber: 7,
        columnNumber: 5
    }, this);
}
_c = Input;
var _c;
$RefreshReg$(_c, "Input");

  $parcel$ReactRefreshHelpers$8d3b.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","./utils":"3OSqM","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"j23KJ":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$520a = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$520a.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$520a.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Label", ()=>Label);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactLabel = require("@radix-ui/react-label");
var _utils = require("./utils");
"use client";
function Label({ className, ...props }) {
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)(_reactLabel.Root, {
        "data-slot": "label",
        className: (0, _utils.cn)("flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50", className),
        ...props
    }, void 0, false, {
        fileName: "src/components/ui/label.tsx",
        lineNumber: 13,
        columnNumber: 5
    }, this);
}
_c = Label;
var _c;
$RefreshReg$(_c, "Label");

  $parcel$ReactRefreshHelpers$520a.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","@radix-ui/react-label":"D3pBc","./utils":"3OSqM","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"D3pBc":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Label", ()=>Label);
parcelHelpers.export(exports, "Root", ()=>Root);
// src/label.tsx
var _react = require("react");
var _reactPrimitive = require("@radix-ui/react-primitive");
var _jsxRuntime = require("react/jsx-runtime");
"use client";
var NAME = "Label";
var Label = _react.forwardRef((props, forwardedRef)=>{
    return /* @__PURE__ */ (0, _jsxRuntime.jsx)((0, _reactPrimitive.Primitive).label, {
        ...props,
        ref: forwardedRef,
        onMouseDown: (event)=>{
            const target = event.target;
            if (target.closest("button, input, select, textarea")) return;
            props.onMouseDown?.(event);
            if (!event.defaultPrevented && event.detail > 1) event.preventDefault();
        }
    });
});
Label.displayName = NAME;
var Root = Label;

},{"react":"jMk1U","@radix-ui/react-primitive":"i0I8C","react/jsx-runtime":"05iiF","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"i0I8C":[function(require,module,exports,__globalThis) {
// src/primitive.tsx
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Primitive", ()=>Primitive);
parcelHelpers.export(exports, "Root", ()=>Root);
parcelHelpers.export(exports, "dispatchDiscreteCustomEvent", ()=>dispatchDiscreteCustomEvent);
var _react = require("react");
var _reactDom = require("react-dom");
var _reactSlot = require("@radix-ui/react-slot");
var _jsxRuntime = require("react/jsx-runtime");
var NODES = [
    "a",
    "button",
    "div",
    "form",
    "h2",
    "h3",
    "img",
    "input",
    "label",
    "li",
    "nav",
    "ol",
    "p",
    "select",
    "span",
    "svg",
    "ul"
];
var Primitive = NODES.reduce((primitive, node)=>{
    const Slot = (0, _reactSlot.createSlot)(`Primitive.${node}`);
    const Node = _react.forwardRef((props, forwardedRef)=>{
        const { asChild, ...primitiveProps } = props;
        const Comp = asChild ? Slot : node;
        if (typeof window !== "undefined") window[Symbol.for("radix-ui")] = true;
        return /* @__PURE__ */ (0, _jsxRuntime.jsx)(Comp, {
            ...primitiveProps,
            ref: forwardedRef
        });
    });
    Node.displayName = `Primitive.${node}`;
    return {
        ...primitive,
        [node]: Node
    };
}, {});
function dispatchDiscreteCustomEvent(target, event) {
    if (target) _reactDom.flushSync(()=>target.dispatchEvent(event));
}
var Root = Primitive;

},{"react":"jMk1U","react-dom":"i4X7T","@radix-ui/react-slot":"049tr","react/jsx-runtime":"05iiF","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2ThiZ":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$ffed = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$ffed.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$ffed.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Textarea", ()=>Textarea);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _utils = require("./utils");
function Textarea({ className, ...props }) {
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("textarea", {
        "data-slot": "textarea",
        className: (0, _utils.cn)("resize-none border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-input-background px-3 py-2 text-base transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm", className),
        ...props
    }, void 0, false, {
        fileName: "src/components/ui/textarea.tsx",
        lineNumber: 7,
        columnNumber: 5
    }, this);
}
_c = Textarea;
var _c;
$RefreshReg$(_c, "Textarea");

  $parcel$ReactRefreshHelpers$ffed.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","./utils":"3OSqM","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"4BwOq":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$c580 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$c580.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$c580.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "RadioGroup", ()=>RadioGroup);
parcelHelpers.export(exports, "RadioGroupItem", ()=>RadioGroupItem);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactRadioGroup = require("@radix-ui/react-radio-group");
var _lucideReact = require("lucide-react");
var _utils = require("./utils");
"use client";
function RadioGroup({ className, ...props }) {
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)(_reactRadioGroup.Root, {
        "data-slot": "radio-group",
        className: (0, _utils.cn)("grid gap-3", className),
        ...props
    }, void 0, false, {
        fileName: "src/components/ui/radio-group.tsx",
        lineNumber: 14,
        columnNumber: 5
    }, this);
}
_c = RadioGroup;
function RadioGroupItem({ className, ...props }) {
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)(_reactRadioGroup.Item, {
        "data-slot": "radio-group-item",
        className: (0, _utils.cn)("border-input text-primary focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 aspect-square size-4 shrink-0 rounded-full border shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50", className),
        ...props,
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)(_reactRadioGroup.Indicator, {
            "data-slot": "radio-group-indicator",
            className: "relative flex items-center justify-center",
            children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _lucideReact.CircleIcon), {
                className: "fill-primary absolute top-1/2 left-1/2 size-2 -translate-x-1/2 -translate-y-1/2"
            }, void 0, false, {
                fileName: "src/components/ui/radio-group.tsx",
                lineNumber: 39,
                columnNumber: 9
            }, this)
        }, void 0, false, {
            fileName: "src/components/ui/radio-group.tsx",
            lineNumber: 35,
            columnNumber: 7
        }, this)
    }, void 0, false, {
        fileName: "src/components/ui/radio-group.tsx",
        lineNumber: 27,
        columnNumber: 5
    }, this);
}
_c1 = RadioGroupItem;
var _c, _c1;
$RefreshReg$(_c, "RadioGroup");
$RefreshReg$(_c1, "RadioGroupItem");

  $parcel$ReactRefreshHelpers$c580.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","@radix-ui/react-radio-group":"lMcrT","lucide-react":"2I7qR","./utils":"3OSqM","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"lMcrT":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Indicator", ()=>Indicator);
parcelHelpers.export(exports, "Item", ()=>Item2);
parcelHelpers.export(exports, "RadioGroup", ()=>RadioGroup);
parcelHelpers.export(exports, "RadioGroupIndicator", ()=>RadioGroupIndicator);
parcelHelpers.export(exports, "RadioGroupItem", ()=>RadioGroupItem);
parcelHelpers.export(exports, "Root", ()=>Root2);
parcelHelpers.export(exports, "createRadioGroupScope", ()=>createRadioGroupScope);
// src/radio-group.tsx
var _react = require("react");
var _primitive = require("@radix-ui/primitive");
var _reactComposeRefs = require("@radix-ui/react-compose-refs");
var _reactContext = require("@radix-ui/react-context");
var _reactPrimitive = require("@radix-ui/react-primitive");
var _reactRovingFocus = require("@radix-ui/react-roving-focus");
var _reactUseControllableState = require("@radix-ui/react-use-controllable-state");
var _reactDirection = require("@radix-ui/react-direction");
var _reactUseSize = require("@radix-ui/react-use-size");
var _reactUsePrevious = require("@radix-ui/react-use-previous");
var _reactPresence = require("@radix-ui/react-presence");
var _jsxRuntime = require("react/jsx-runtime");
"use client";
var RADIO_NAME = "Radio";
var [createRadioContext, createRadioScope] = (0, _reactContext.createContextScope)(RADIO_NAME);
var [RadioProvider, useRadioContext] = createRadioContext(RADIO_NAME);
var Radio = _react.forwardRef((props, forwardedRef)=>{
    const { __scopeRadio, name, checked = false, required, disabled, value = "on", onCheck, form, ...radioProps } = props;
    const [button, setButton] = _react.useState(null);
    const composedRefs = (0, _reactComposeRefs.useComposedRefs)(forwardedRef, (node)=>setButton(node));
    const hasConsumerStoppedPropagationRef = _react.useRef(false);
    const isFormControl = button ? form || !!button.closest("form") : true;
    return /* @__PURE__ */ (0, _jsxRuntime.jsxs)(RadioProvider, {
        scope: __scopeRadio,
        checked,
        disabled,
        children: [
            /* @__PURE__ */ (0, _jsxRuntime.jsx)((0, _reactPrimitive.Primitive).button, {
                type: "button",
                role: "radio",
                "aria-checked": checked,
                "data-state": getState(checked),
                "data-disabled": disabled ? "" : void 0,
                disabled,
                value,
                ...radioProps,
                ref: composedRefs,
                onClick: (0, _primitive.composeEventHandlers)(props.onClick, (event)=>{
                    if (!checked) onCheck?.();
                    if (isFormControl) {
                        hasConsumerStoppedPropagationRef.current = event.isPropagationStopped();
                        if (!hasConsumerStoppedPropagationRef.current) event.stopPropagation();
                    }
                })
            }),
            isFormControl && /* @__PURE__ */ (0, _jsxRuntime.jsx)(RadioBubbleInput, {
                control: button,
                bubbles: !hasConsumerStoppedPropagationRef.current,
                name,
                value,
                checked,
                required,
                disabled,
                form,
                style: {
                    transform: "translateX(-100%)"
                }
            })
        ]
    });
});
Radio.displayName = RADIO_NAME;
var INDICATOR_NAME = "RadioIndicator";
var RadioIndicator = _react.forwardRef((props, forwardedRef)=>{
    const { __scopeRadio, forceMount, ...indicatorProps } = props;
    const context = useRadioContext(INDICATOR_NAME, __scopeRadio);
    return /* @__PURE__ */ (0, _jsxRuntime.jsx)((0, _reactPresence.Presence), {
        present: forceMount || context.checked,
        children: /* @__PURE__ */ (0, _jsxRuntime.jsx)((0, _reactPrimitive.Primitive).span, {
            "data-state": getState(context.checked),
            "data-disabled": context.disabled ? "" : void 0,
            ...indicatorProps,
            ref: forwardedRef
        })
    });
});
RadioIndicator.displayName = INDICATOR_NAME;
var BUBBLE_INPUT_NAME = "RadioBubbleInput";
var RadioBubbleInput = _react.forwardRef(({ __scopeRadio, control, checked, bubbles = true, ...props }, forwardedRef)=>{
    const ref = _react.useRef(null);
    const composedRefs = (0, _reactComposeRefs.useComposedRefs)(ref, forwardedRef);
    const prevChecked = (0, _reactUsePrevious.usePrevious)(checked);
    const controlSize = (0, _reactUseSize.useSize)(control);
    _react.useEffect(()=>{
        const input = ref.current;
        if (!input) return;
        const inputProto = window.HTMLInputElement.prototype;
        const descriptor = Object.getOwnPropertyDescriptor(inputProto, "checked");
        const setChecked = descriptor.set;
        if (prevChecked !== checked && setChecked) {
            const event = new Event("click", {
                bubbles
            });
            setChecked.call(input, checked);
            input.dispatchEvent(event);
        }
    }, [
        prevChecked,
        checked,
        bubbles
    ]);
    return /* @__PURE__ */ (0, _jsxRuntime.jsx)((0, _reactPrimitive.Primitive).input, {
        type: "radio",
        "aria-hidden": true,
        defaultChecked: checked,
        ...props,
        tabIndex: -1,
        ref: composedRefs,
        style: {
            ...props.style,
            ...controlSize,
            position: "absolute",
            pointerEvents: "none",
            opacity: 0,
            margin: 0
        }
    });
});
RadioBubbleInput.displayName = BUBBLE_INPUT_NAME;
function getState(checked) {
    return checked ? "checked" : "unchecked";
}
var ARROW_KEYS = [
    "ArrowUp",
    "ArrowDown",
    "ArrowLeft",
    "ArrowRight"
];
var RADIO_GROUP_NAME = "RadioGroup";
var [createRadioGroupContext, createRadioGroupScope] = (0, _reactContext.createContextScope)(RADIO_GROUP_NAME, [
    (0, _reactRovingFocus.createRovingFocusGroupScope),
    createRadioScope
]);
var useRovingFocusGroupScope = (0, _reactRovingFocus.createRovingFocusGroupScope)();
var useRadioScope = createRadioScope();
var [RadioGroupProvider, useRadioGroupContext] = createRadioGroupContext(RADIO_GROUP_NAME);
var RadioGroup = _react.forwardRef((props, forwardedRef)=>{
    const { __scopeRadioGroup, name, defaultValue, value: valueProp, required = false, disabled = false, orientation, dir, loop = true, onValueChange, ...groupProps } = props;
    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeRadioGroup);
    const direction = (0, _reactDirection.useDirection)(dir);
    const [value, setValue] = (0, _reactUseControllableState.useControllableState)({
        prop: valueProp,
        defaultProp: defaultValue ?? null,
        onChange: onValueChange,
        caller: RADIO_GROUP_NAME
    });
    return /* @__PURE__ */ (0, _jsxRuntime.jsx)(RadioGroupProvider, {
        scope: __scopeRadioGroup,
        name,
        required,
        disabled,
        value,
        onValueChange: setValue,
        children: /* @__PURE__ */ (0, _jsxRuntime.jsx)(_reactRovingFocus.Root, {
            asChild: true,
            ...rovingFocusGroupScope,
            orientation,
            dir: direction,
            loop,
            children: /* @__PURE__ */ (0, _jsxRuntime.jsx)((0, _reactPrimitive.Primitive).div, {
                role: "radiogroup",
                "aria-required": required,
                "aria-orientation": orientation,
                "data-disabled": disabled ? "" : void 0,
                dir: direction,
                ...groupProps,
                ref: forwardedRef
            })
        })
    });
});
RadioGroup.displayName = RADIO_GROUP_NAME;
var ITEM_NAME = "RadioGroupItem";
var RadioGroupItem = _react.forwardRef((props, forwardedRef)=>{
    const { __scopeRadioGroup, disabled, ...itemProps } = props;
    const context = useRadioGroupContext(ITEM_NAME, __scopeRadioGroup);
    const isDisabled = context.disabled || disabled;
    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeRadioGroup);
    const radioScope = useRadioScope(__scopeRadioGroup);
    const ref = _react.useRef(null);
    const composedRefs = (0, _reactComposeRefs.useComposedRefs)(forwardedRef, ref);
    const checked = context.value === itemProps.value;
    const isArrowKeyPressedRef = _react.useRef(false);
    _react.useEffect(()=>{
        const handleKeyDown = (event)=>{
            if (ARROW_KEYS.includes(event.key)) isArrowKeyPressedRef.current = true;
        };
        const handleKeyUp = ()=>isArrowKeyPressedRef.current = false;
        document.addEventListener("keydown", handleKeyDown);
        document.addEventListener("keyup", handleKeyUp);
        return ()=>{
            document.removeEventListener("keydown", handleKeyDown);
            document.removeEventListener("keyup", handleKeyUp);
        };
    }, []);
    return /* @__PURE__ */ (0, _jsxRuntime.jsx)(_reactRovingFocus.Item, {
        asChild: true,
        ...rovingFocusGroupScope,
        focusable: !isDisabled,
        active: checked,
        children: /* @__PURE__ */ (0, _jsxRuntime.jsx)(Radio, {
            disabled: isDisabled,
            required: context.required,
            checked,
            ...radioScope,
            ...itemProps,
            name: context.name,
            ref: composedRefs,
            onCheck: ()=>context.onValueChange(itemProps.value),
            onKeyDown: (0, _primitive.composeEventHandlers)((event)=>{
                if (event.key === "Enter") event.preventDefault();
            }),
            onFocus: (0, _primitive.composeEventHandlers)(itemProps.onFocus, ()=>{
                if (isArrowKeyPressedRef.current) ref.current?.click();
            })
        })
    });
});
RadioGroupItem.displayName = ITEM_NAME;
var INDICATOR_NAME2 = "RadioGroupIndicator";
var RadioGroupIndicator = _react.forwardRef((props, forwardedRef)=>{
    const { __scopeRadioGroup, ...indicatorProps } = props;
    const radioScope = useRadioScope(__scopeRadioGroup);
    return /* @__PURE__ */ (0, _jsxRuntime.jsx)(RadioIndicator, {
        ...radioScope,
        ...indicatorProps,
        ref: forwardedRef
    });
});
RadioGroupIndicator.displayName = INDICATOR_NAME2;
var Root2 = RadioGroup;
var Item2 = RadioGroupItem;
var Indicator = RadioGroupIndicator;

},{"react":"jMk1U","@radix-ui/primitive":"jakGl","@radix-ui/react-compose-refs":"8NEPR","@radix-ui/react-context":"aRUGq","@radix-ui/react-primitive":"i0I8C","@radix-ui/react-roving-focus":"atEM3","@radix-ui/react-use-controllable-state":"59sI3","@radix-ui/react-direction":"cmpkM","@radix-ui/react-use-size":"kuUSP","@radix-ui/react-use-previous":"9OYXJ","@radix-ui/react-presence":"5MpGF","react/jsx-runtime":"05iiF","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jakGl":[function(require,module,exports,__globalThis) {
// src/primitive.tsx
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "canUseDOM", ()=>canUseDOM);
parcelHelpers.export(exports, "composeEventHandlers", ()=>composeEventHandlers);
parcelHelpers.export(exports, "getActiveElement", ()=>getActiveElement);
parcelHelpers.export(exports, "getOwnerDocument", ()=>getOwnerDocument);
parcelHelpers.export(exports, "getOwnerWindow", ()=>getOwnerWindow);
parcelHelpers.export(exports, "isFrame", ()=>isFrame);
var canUseDOM = !!(typeof window !== "undefined" && window.document && window.document.createElement);
function composeEventHandlers(originalEventHandler, ourEventHandler, { checkForDefaultPrevented = true } = {}) {
    return function handleEvent(event) {
        originalEventHandler?.(event);
        if (checkForDefaultPrevented === false || !event.defaultPrevented) return ourEventHandler?.(event);
    };
}
function getOwnerWindow(element) {
    if (!canUseDOM) throw new Error("Cannot access window outside of the DOM");
    return element?.ownerDocument?.defaultView ?? window;
}
function getOwnerDocument(element) {
    if (!canUseDOM) throw new Error("Cannot access document outside of the DOM");
    return element?.ownerDocument ?? document;
}
function getActiveElement(node, activeDescendant = false) {
    const { activeElement } = getOwnerDocument(node);
    if (!activeElement?.nodeName) return null;
    if (isFrame(activeElement) && activeElement.contentDocument) return getActiveElement(activeElement.contentDocument.body, activeDescendant);
    if (activeDescendant) {
        const id = activeElement.getAttribute("aria-activedescendant");
        if (id) {
            const element = getOwnerDocument(activeElement).getElementById(id);
            if (element) return element;
        }
    }
    return activeElement;
}
function isFrame(element) {
    return element.tagName === "IFRAME";
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aRUGq":[function(require,module,exports,__globalThis) {
// packages/react/context/src/create-context.tsx
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createContext", ()=>createContext2);
parcelHelpers.export(exports, "createContextScope", ()=>createContextScope);
var _react = require("react");
var _jsxRuntime = require("react/jsx-runtime");
function createContext2(rootComponentName, defaultContext) {
    const Context = _react.createContext(defaultContext);
    const Provider = (props)=>{
        const { children, ...context } = props;
        const value = _react.useMemo(()=>context, Object.values(context));
        return /* @__PURE__ */ (0, _jsxRuntime.jsx)(Context.Provider, {
            value,
            children
        });
    };
    Provider.displayName = rootComponentName + "Provider";
    function useContext2(consumerName) {
        const context = _react.useContext(Context);
        if (context) return context;
        if (defaultContext !== void 0) return defaultContext;
        throw new Error(`\`${consumerName}\` must be used within \`${rootComponentName}\``);
    }
    return [
        Provider,
        useContext2
    ];
}
function createContextScope(scopeName, createContextScopeDeps = []) {
    let defaultContexts = [];
    function createContext3(rootComponentName, defaultContext) {
        const BaseContext = _react.createContext(defaultContext);
        const index = defaultContexts.length;
        defaultContexts = [
            ...defaultContexts,
            defaultContext
        ];
        const Provider = (props)=>{
            const { scope, children, ...context } = props;
            const Context = scope?.[scopeName]?.[index] || BaseContext;
            const value = _react.useMemo(()=>context, Object.values(context));
            return /* @__PURE__ */ (0, _jsxRuntime.jsx)(Context.Provider, {
                value,
                children
            });
        };
        Provider.displayName = rootComponentName + "Provider";
        function useContext2(consumerName, scope) {
            const Context = scope?.[scopeName]?.[index] || BaseContext;
            const context = _react.useContext(Context);
            if (context) return context;
            if (defaultContext !== void 0) return defaultContext;
            throw new Error(`\`${consumerName}\` must be used within \`${rootComponentName}\``);
        }
        return [
            Provider,
            useContext2
        ];
    }
    const createScope = ()=>{
        const scopeContexts = defaultContexts.map((defaultContext)=>{
            return _react.createContext(defaultContext);
        });
        return function useScope(scope) {
            const contexts = scope?.[scopeName] || scopeContexts;
            return _react.useMemo(()=>({
                    [`__scope${scopeName}`]: {
                        ...scope,
                        [scopeName]: contexts
                    }
                }), [
                scope,
                contexts
            ]);
        };
    };
    createScope.scopeName = scopeName;
    return [
        createContext3,
        composeContextScopes(createScope, ...createContextScopeDeps)
    ];
}
function composeContextScopes(...scopes) {
    const baseScope = scopes[0];
    if (scopes.length === 1) return baseScope;
    const createScope = ()=>{
        const scopeHooks = scopes.map((createScope2)=>({
                useScope: createScope2(),
                scopeName: createScope2.scopeName
            }));
        return function useComposedScopes(overrideScopes) {
            const nextScopes = scopeHooks.reduce((nextScopes2, { useScope, scopeName })=>{
                const scopeProps = useScope(overrideScopes);
                const currentScope = scopeProps[`__scope${scopeName}`];
                return {
                    ...nextScopes2,
                    ...currentScope
                };
            }, {});
            return _react.useMemo(()=>({
                    [`__scope${baseScope.scopeName}`]: nextScopes
                }), [
                nextScopes
            ]);
        };
    };
    createScope.scopeName = baseScope.scopeName;
    return createScope;
}

},{"react":"jMk1U","react/jsx-runtime":"05iiF","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"atEM3":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Item", ()=>Item);
parcelHelpers.export(exports, "Root", ()=>Root);
parcelHelpers.export(exports, "RovingFocusGroup", ()=>RovingFocusGroup);
parcelHelpers.export(exports, "RovingFocusGroupItem", ()=>RovingFocusGroupItem);
parcelHelpers.export(exports, "createRovingFocusGroupScope", ()=>createRovingFocusGroupScope);
// src/roving-focus-group.tsx
var _react = require("react");
var _primitive = require("@radix-ui/primitive");
var _reactCollection = require("@radix-ui/react-collection");
var _reactComposeRefs = require("@radix-ui/react-compose-refs");
var _reactContext = require("@radix-ui/react-context");
var _reactId = require("@radix-ui/react-id");
var _reactPrimitive = require("@radix-ui/react-primitive");
var _reactUseCallbackRef = require("@radix-ui/react-use-callback-ref");
var _reactUseControllableState = require("@radix-ui/react-use-controllable-state");
var _reactDirection = require("@radix-ui/react-direction");
var _jsxRuntime = require("react/jsx-runtime");
"use client";
var ENTRY_FOCUS = "rovingFocusGroup.onEntryFocus";
var EVENT_OPTIONS = {
    bubbles: false,
    cancelable: true
};
var GROUP_NAME = "RovingFocusGroup";
var [Collection, useCollection, createCollectionScope] = (0, _reactCollection.createCollection)(GROUP_NAME);
var [createRovingFocusGroupContext, createRovingFocusGroupScope] = (0, _reactContext.createContextScope)(GROUP_NAME, [
    createCollectionScope
]);
var [RovingFocusProvider, useRovingFocusContext] = createRovingFocusGroupContext(GROUP_NAME);
var RovingFocusGroup = _react.forwardRef((props, forwardedRef)=>{
    return /* @__PURE__ */ (0, _jsxRuntime.jsx)(Collection.Provider, {
        scope: props.__scopeRovingFocusGroup,
        children: /* @__PURE__ */ (0, _jsxRuntime.jsx)(Collection.Slot, {
            scope: props.__scopeRovingFocusGroup,
            children: /* @__PURE__ */ (0, _jsxRuntime.jsx)(RovingFocusGroupImpl, {
                ...props,
                ref: forwardedRef
            })
        })
    });
});
RovingFocusGroup.displayName = GROUP_NAME;
var RovingFocusGroupImpl = _react.forwardRef((props, forwardedRef)=>{
    const { __scopeRovingFocusGroup, orientation, loop = false, dir, currentTabStopId: currentTabStopIdProp, defaultCurrentTabStopId, onCurrentTabStopIdChange, onEntryFocus, preventScrollOnEntryFocus = false, ...groupProps } = props;
    const ref = _react.useRef(null);
    const composedRefs = (0, _reactComposeRefs.useComposedRefs)(forwardedRef, ref);
    const direction = (0, _reactDirection.useDirection)(dir);
    const [currentTabStopId, setCurrentTabStopId] = (0, _reactUseControllableState.useControllableState)({
        prop: currentTabStopIdProp,
        defaultProp: defaultCurrentTabStopId ?? null,
        onChange: onCurrentTabStopIdChange,
        caller: GROUP_NAME
    });
    const [isTabbingBackOut, setIsTabbingBackOut] = _react.useState(false);
    const handleEntryFocus = (0, _reactUseCallbackRef.useCallbackRef)(onEntryFocus);
    const getItems = useCollection(__scopeRovingFocusGroup);
    const isClickFocusRef = _react.useRef(false);
    const [focusableItemsCount, setFocusableItemsCount] = _react.useState(0);
    _react.useEffect(()=>{
        const node = ref.current;
        if (node) {
            node.addEventListener(ENTRY_FOCUS, handleEntryFocus);
            return ()=>node.removeEventListener(ENTRY_FOCUS, handleEntryFocus);
        }
    }, [
        handleEntryFocus
    ]);
    return /* @__PURE__ */ (0, _jsxRuntime.jsx)(RovingFocusProvider, {
        scope: __scopeRovingFocusGroup,
        orientation,
        dir: direction,
        loop,
        currentTabStopId,
        onItemFocus: _react.useCallback((tabStopId)=>setCurrentTabStopId(tabStopId), [
            setCurrentTabStopId
        ]),
        onItemShiftTab: _react.useCallback(()=>setIsTabbingBackOut(true), []),
        onFocusableItemAdd: _react.useCallback(()=>setFocusableItemsCount((prevCount)=>prevCount + 1), []),
        onFocusableItemRemove: _react.useCallback(()=>setFocusableItemsCount((prevCount)=>prevCount - 1), []),
        children: /* @__PURE__ */ (0, _jsxRuntime.jsx)((0, _reactPrimitive.Primitive).div, {
            tabIndex: isTabbingBackOut || focusableItemsCount === 0 ? -1 : 0,
            "data-orientation": orientation,
            ...groupProps,
            ref: composedRefs,
            style: {
                outline: "none",
                ...props.style
            },
            onMouseDown: (0, _primitive.composeEventHandlers)(props.onMouseDown, ()=>{
                isClickFocusRef.current = true;
            }),
            onFocus: (0, _primitive.composeEventHandlers)(props.onFocus, (event)=>{
                const isKeyboardFocus = !isClickFocusRef.current;
                if (event.target === event.currentTarget && isKeyboardFocus && !isTabbingBackOut) {
                    const entryFocusEvent = new CustomEvent(ENTRY_FOCUS, EVENT_OPTIONS);
                    event.currentTarget.dispatchEvent(entryFocusEvent);
                    if (!entryFocusEvent.defaultPrevented) {
                        const items = getItems().filter((item)=>item.focusable);
                        const activeItem = items.find((item)=>item.active);
                        const currentItem = items.find((item)=>item.id === currentTabStopId);
                        const candidateItems = [
                            activeItem,
                            currentItem,
                            ...items
                        ].filter(Boolean);
                        const candidateNodes = candidateItems.map((item)=>item.ref.current);
                        focusFirst(candidateNodes, preventScrollOnEntryFocus);
                    }
                }
                isClickFocusRef.current = false;
            }),
            onBlur: (0, _primitive.composeEventHandlers)(props.onBlur, ()=>setIsTabbingBackOut(false))
        })
    });
});
var ITEM_NAME = "RovingFocusGroupItem";
var RovingFocusGroupItem = _react.forwardRef((props, forwardedRef)=>{
    const { __scopeRovingFocusGroup, focusable = true, active = false, tabStopId, children, ...itemProps } = props;
    const autoId = (0, _reactId.useId)();
    const id = tabStopId || autoId;
    const context = useRovingFocusContext(ITEM_NAME, __scopeRovingFocusGroup);
    const isCurrentTabStop = context.currentTabStopId === id;
    const getItems = useCollection(__scopeRovingFocusGroup);
    const { onFocusableItemAdd, onFocusableItemRemove, currentTabStopId } = context;
    _react.useEffect(()=>{
        if (focusable) {
            onFocusableItemAdd();
            return ()=>onFocusableItemRemove();
        }
    }, [
        focusable,
        onFocusableItemAdd,
        onFocusableItemRemove
    ]);
    return /* @__PURE__ */ (0, _jsxRuntime.jsx)(Collection.ItemSlot, {
        scope: __scopeRovingFocusGroup,
        id,
        focusable,
        active,
        children: /* @__PURE__ */ (0, _jsxRuntime.jsx)((0, _reactPrimitive.Primitive).span, {
            tabIndex: isCurrentTabStop ? 0 : -1,
            "data-orientation": context.orientation,
            ...itemProps,
            ref: forwardedRef,
            onMouseDown: (0, _primitive.composeEventHandlers)(props.onMouseDown, (event)=>{
                if (!focusable) event.preventDefault();
                else context.onItemFocus(id);
            }),
            onFocus: (0, _primitive.composeEventHandlers)(props.onFocus, ()=>context.onItemFocus(id)),
            onKeyDown: (0, _primitive.composeEventHandlers)(props.onKeyDown, (event)=>{
                if (event.key === "Tab" && event.shiftKey) {
                    context.onItemShiftTab();
                    return;
                }
                if (event.target !== event.currentTarget) return;
                const focusIntent = getFocusIntent(event, context.orientation, context.dir);
                if (focusIntent !== void 0) {
                    if (event.metaKey || event.ctrlKey || event.altKey || event.shiftKey) return;
                    event.preventDefault();
                    const items = getItems().filter((item)=>item.focusable);
                    let candidateNodes = items.map((item)=>item.ref.current);
                    if (focusIntent === "last") candidateNodes.reverse();
                    else if (focusIntent === "prev" || focusIntent === "next") {
                        if (focusIntent === "prev") candidateNodes.reverse();
                        const currentIndex = candidateNodes.indexOf(event.currentTarget);
                        candidateNodes = context.loop ? wrapArray(candidateNodes, currentIndex + 1) : candidateNodes.slice(currentIndex + 1);
                    }
                    setTimeout(()=>focusFirst(candidateNodes));
                }
            }),
            children: typeof children === "function" ? children({
                isCurrentTabStop,
                hasTabStop: currentTabStopId != null
            }) : children
        })
    });
});
RovingFocusGroupItem.displayName = ITEM_NAME;
var MAP_KEY_TO_FOCUS_INTENT = {
    ArrowLeft: "prev",
    ArrowUp: "prev",
    ArrowRight: "next",
    ArrowDown: "next",
    PageUp: "first",
    Home: "first",
    PageDown: "last",
    End: "last"
};
function getDirectionAwareKey(key, dir) {
    if (dir !== "rtl") return key;
    return key === "ArrowLeft" ? "ArrowRight" : key === "ArrowRight" ? "ArrowLeft" : key;
}
function getFocusIntent(event, orientation, dir) {
    const key = getDirectionAwareKey(event.key, dir);
    if (orientation === "vertical" && [
        "ArrowLeft",
        "ArrowRight"
    ].includes(key)) return void 0;
    if (orientation === "horizontal" && [
        "ArrowUp",
        "ArrowDown"
    ].includes(key)) return void 0;
    return MAP_KEY_TO_FOCUS_INTENT[key];
}
function focusFirst(candidates, preventScroll = false) {
    const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;
    for (const candidate of candidates){
        if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;
        candidate.focus({
            preventScroll
        });
        if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;
    }
}
function wrapArray(array, startIndex) {
    return array.map((_, index)=>array[(startIndex + index) % array.length]);
}
var Root = RovingFocusGroup;
var Item = RovingFocusGroupItem;

},{"react":"jMk1U","@radix-ui/primitive":"jakGl","@radix-ui/react-collection":"ke1La","@radix-ui/react-compose-refs":"8NEPR","@radix-ui/react-context":"aRUGq","@radix-ui/react-id":"SmdnD","@radix-ui/react-primitive":"i0I8C","@radix-ui/react-use-callback-ref":"92pad","@radix-ui/react-use-controllable-state":"59sI3","@radix-ui/react-direction":"cmpkM","react/jsx-runtime":"05iiF","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ke1La":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createCollection", ()=>createCollection);
parcelHelpers.export(exports, "unstable_createCollection", ()=>createCollection2);
// src/collection-legacy.tsx
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _reactContext = require("@radix-ui/react-context");
var _reactComposeRefs = require("@radix-ui/react-compose-refs");
var _reactSlot = require("@radix-ui/react-slot");
var _jsxRuntime = require("react/jsx-runtime");
"use client";
function createCollection(name) {
    const PROVIDER_NAME = name + "CollectionProvider";
    const [createCollectionContext, createCollectionScope] = (0, _reactContext.createContextScope)(PROVIDER_NAME);
    const [CollectionProviderImpl, useCollectionContext] = createCollectionContext(PROVIDER_NAME, {
        collectionRef: {
            current: null
        },
        itemMap: /* @__PURE__ */ new Map()
    });
    const CollectionProvider = (props)=>{
        const { scope, children } = props;
        const ref = (0, _reactDefault.default).useRef(null);
        const itemMap = (0, _reactDefault.default).useRef(/* @__PURE__ */ new Map()).current;
        return /* @__PURE__ */ (0, _jsxRuntime.jsx)(CollectionProviderImpl, {
            scope,
            itemMap,
            collectionRef: ref,
            children
        });
    };
    CollectionProvider.displayName = PROVIDER_NAME;
    const COLLECTION_SLOT_NAME = name + "CollectionSlot";
    const CollectionSlotImpl = (0, _reactSlot.createSlot)(COLLECTION_SLOT_NAME);
    const CollectionSlot = (0, _reactDefault.default).forwardRef((props, forwardedRef)=>{
        const { scope, children } = props;
        const context = useCollectionContext(COLLECTION_SLOT_NAME, scope);
        const composedRefs = (0, _reactComposeRefs.useComposedRefs)(forwardedRef, context.collectionRef);
        return /* @__PURE__ */ (0, _jsxRuntime.jsx)(CollectionSlotImpl, {
            ref: composedRefs,
            children
        });
    });
    CollectionSlot.displayName = COLLECTION_SLOT_NAME;
    const ITEM_SLOT_NAME = name + "CollectionItemSlot";
    const ITEM_DATA_ATTR = "data-radix-collection-item";
    const CollectionItemSlotImpl = (0, _reactSlot.createSlot)(ITEM_SLOT_NAME);
    const CollectionItemSlot = (0, _reactDefault.default).forwardRef((props, forwardedRef)=>{
        const { scope, children, ...itemData } = props;
        const ref = (0, _reactDefault.default).useRef(null);
        const composedRefs = (0, _reactComposeRefs.useComposedRefs)(forwardedRef, ref);
        const context = useCollectionContext(ITEM_SLOT_NAME, scope);
        (0, _reactDefault.default).useEffect(()=>{
            context.itemMap.set(ref, {
                ref,
                ...itemData
            });
            return ()=>void context.itemMap.delete(ref);
        });
        return /* @__PURE__ */ (0, _jsxRuntime.jsx)(CollectionItemSlotImpl, {
            [ITEM_DATA_ATTR]: "",
            ref: composedRefs,
            children
        });
    });
    CollectionItemSlot.displayName = ITEM_SLOT_NAME;
    function useCollection(scope) {
        const context = useCollectionContext(name + "CollectionConsumer", scope);
        const getItems = (0, _reactDefault.default).useCallback(()=>{
            const collectionNode = context.collectionRef.current;
            if (!collectionNode) return [];
            const orderedNodes = Array.from(collectionNode.querySelectorAll(`[${ITEM_DATA_ATTR}]`));
            const items = Array.from(context.itemMap.values());
            const orderedItems = items.sort((a, b)=>orderedNodes.indexOf(a.ref.current) - orderedNodes.indexOf(b.ref.current));
            return orderedItems;
        }, [
            context.collectionRef,
            context.itemMap
        ]);
        return getItems;
    }
    return [
        {
            Provider: CollectionProvider,
            Slot: CollectionSlot,
            ItemSlot: CollectionItemSlot
        },
        useCollection,
        createCollectionScope
    ];
}
// src/ordered-dictionary.ts
var __instanciated = /* @__PURE__ */ new WeakMap();
var OrderedDict = class _OrderedDict extends Map {
    #keys;
    constructor(entries){
        super(entries);
        this.#keys = [
            ...super.keys()
        ];
        __instanciated.set(this, true);
    }
    set(key, value) {
        if (__instanciated.get(this)) {
            if (this.has(key)) this.#keys[this.#keys.indexOf(key)] = key;
            else this.#keys.push(key);
        }
        super.set(key, value);
        return this;
    }
    insert(index, key, value) {
        const has = this.has(key);
        const length = this.#keys.length;
        const relativeIndex = toSafeInteger(index);
        let actualIndex = relativeIndex >= 0 ? relativeIndex : length + relativeIndex;
        const safeIndex = actualIndex < 0 || actualIndex >= length ? -1 : actualIndex;
        if (safeIndex === this.size || has && safeIndex === this.size - 1 || safeIndex === -1) {
            this.set(key, value);
            return this;
        }
        const size = this.size + (has ? 0 : 1);
        if (relativeIndex < 0) actualIndex++;
        const keys = [
            ...this.#keys
        ];
        let nextValue;
        let shouldSkip = false;
        for(let i = actualIndex; i < size; i++)if (actualIndex === i) {
            let nextKey = keys[i];
            if (keys[i] === key) nextKey = keys[i + 1];
            if (has) this.delete(key);
            nextValue = this.get(nextKey);
            this.set(key, value);
        } else {
            if (!shouldSkip && keys[i - 1] === key) shouldSkip = true;
            const currentKey = keys[shouldSkip ? i : i - 1];
            const currentValue = nextValue;
            nextValue = this.get(currentKey);
            this.delete(currentKey);
            this.set(currentKey, currentValue);
        }
        return this;
    }
    with(index, key, value) {
        const copy = new _OrderedDict(this);
        copy.insert(index, key, value);
        return copy;
    }
    before(key) {
        const index = this.#keys.indexOf(key) - 1;
        if (index < 0) return void 0;
        return this.entryAt(index);
    }
    /**
   * Sets a new key-value pair at the position before the given key.
   */ setBefore(key, newKey, value) {
        const index = this.#keys.indexOf(key);
        if (index === -1) return this;
        return this.insert(index, newKey, value);
    }
    after(key) {
        let index = this.#keys.indexOf(key);
        index = index === -1 || index === this.size - 1 ? -1 : index + 1;
        if (index === -1) return void 0;
        return this.entryAt(index);
    }
    /**
   * Sets a new key-value pair at the position after the given key.
   */ setAfter(key, newKey, value) {
        const index = this.#keys.indexOf(key);
        if (index === -1) return this;
        return this.insert(index + 1, newKey, value);
    }
    first() {
        return this.entryAt(0);
    }
    last() {
        return this.entryAt(-1);
    }
    clear() {
        this.#keys = [];
        return super.clear();
    }
    delete(key) {
        const deleted = super.delete(key);
        if (deleted) this.#keys.splice(this.#keys.indexOf(key), 1);
        return deleted;
    }
    deleteAt(index) {
        const key = this.keyAt(index);
        if (key !== void 0) return this.delete(key);
        return false;
    }
    at(index) {
        const key = at(this.#keys, index);
        if (key !== void 0) return this.get(key);
    }
    entryAt(index) {
        const key = at(this.#keys, index);
        if (key !== void 0) return [
            key,
            this.get(key)
        ];
    }
    indexOf(key) {
        return this.#keys.indexOf(key);
    }
    keyAt(index) {
        return at(this.#keys, index);
    }
    from(key, offset) {
        const index = this.indexOf(key);
        if (index === -1) return void 0;
        let dest = index + offset;
        if (dest < 0) dest = 0;
        if (dest >= this.size) dest = this.size - 1;
        return this.at(dest);
    }
    keyFrom(key, offset) {
        const index = this.indexOf(key);
        if (index === -1) return void 0;
        let dest = index + offset;
        if (dest < 0) dest = 0;
        if (dest >= this.size) dest = this.size - 1;
        return this.keyAt(dest);
    }
    find(predicate, thisArg) {
        let index = 0;
        for (const entry of this){
            if (Reflect.apply(predicate, thisArg, [
                entry,
                index,
                this
            ])) return entry;
            index++;
        }
        return void 0;
    }
    findIndex(predicate, thisArg) {
        let index = 0;
        for (const entry of this){
            if (Reflect.apply(predicate, thisArg, [
                entry,
                index,
                this
            ])) return index;
            index++;
        }
        return -1;
    }
    filter(predicate, thisArg) {
        const entries = [];
        let index = 0;
        for (const entry of this){
            if (Reflect.apply(predicate, thisArg, [
                entry,
                index,
                this
            ])) entries.push(entry);
            index++;
        }
        return new _OrderedDict(entries);
    }
    map(callbackfn, thisArg) {
        const entries = [];
        let index = 0;
        for (const entry of this){
            entries.push([
                entry[0],
                Reflect.apply(callbackfn, thisArg, [
                    entry,
                    index,
                    this
                ])
            ]);
            index++;
        }
        return new _OrderedDict(entries);
    }
    reduce(...args) {
        const [callbackfn, initialValue] = args;
        let index = 0;
        let accumulator = initialValue ?? this.at(0);
        for (const entry of this){
            if (index === 0 && args.length === 1) accumulator = entry;
            else accumulator = Reflect.apply(callbackfn, this, [
                accumulator,
                entry,
                index,
                this
            ]);
            index++;
        }
        return accumulator;
    }
    reduceRight(...args) {
        const [callbackfn, initialValue] = args;
        let accumulator = initialValue ?? this.at(-1);
        for(let index = this.size - 1; index >= 0; index--){
            const entry = this.at(index);
            if (index === this.size - 1 && args.length === 1) accumulator = entry;
            else accumulator = Reflect.apply(callbackfn, this, [
                accumulator,
                entry,
                index,
                this
            ]);
        }
        return accumulator;
    }
    toSorted(compareFn) {
        const entries = [
            ...this.entries()
        ].sort(compareFn);
        return new _OrderedDict(entries);
    }
    toReversed() {
        const reversed = new _OrderedDict();
        for(let index = this.size - 1; index >= 0; index--){
            const key = this.keyAt(index);
            const element = this.get(key);
            reversed.set(key, element);
        }
        return reversed;
    }
    toSpliced(...args) {
        const entries = [
            ...this.entries()
        ];
        entries.splice(...args);
        return new _OrderedDict(entries);
    }
    slice(start, end) {
        const result = new _OrderedDict();
        let stop = this.size - 1;
        if (start === void 0) return result;
        if (start < 0) start = start + this.size;
        if (end !== void 0 && end > 0) stop = end - 1;
        for(let index = start; index <= stop; index++){
            const key = this.keyAt(index);
            const element = this.get(key);
            result.set(key, element);
        }
        return result;
    }
    every(predicate, thisArg) {
        let index = 0;
        for (const entry of this){
            if (!Reflect.apply(predicate, thisArg, [
                entry,
                index,
                this
            ])) return false;
            index++;
        }
        return true;
    }
    some(predicate, thisArg) {
        let index = 0;
        for (const entry of this){
            if (Reflect.apply(predicate, thisArg, [
                entry,
                index,
                this
            ])) return true;
            index++;
        }
        return false;
    }
};
function at(array, index) {
    if ("at" in Array.prototype) return Array.prototype.at.call(array, index);
    const actualIndex = toSafeIndex(array, index);
    return actualIndex === -1 ? void 0 : array[actualIndex];
}
function toSafeIndex(array, index) {
    const length = array.length;
    const relativeIndex = toSafeInteger(index);
    const actualIndex = relativeIndex >= 0 ? relativeIndex : length + relativeIndex;
    return actualIndex < 0 || actualIndex >= length ? -1 : actualIndex;
}
function toSafeInteger(number) {
    return number !== number || number === 0 ? 0 : Math.trunc(number);
}
function createCollection2(name) {
    const PROVIDER_NAME = name + "CollectionProvider";
    const [createCollectionContext, createCollectionScope] = (0, _reactContext.createContextScope)(PROVIDER_NAME);
    const [CollectionContextProvider, useCollectionContext] = createCollectionContext(PROVIDER_NAME, {
        collectionElement: null,
        collectionRef: {
            current: null
        },
        collectionRefObject: {
            current: null
        },
        itemMap: new OrderedDict(),
        setItemMap: ()=>void 0
    });
    const CollectionProvider = ({ state, ...props })=>{
        return state ? /* @__PURE__ */ (0, _jsxRuntime.jsx)(CollectionProviderImpl, {
            ...props,
            state
        }) : /* @__PURE__ */ (0, _jsxRuntime.jsx)(CollectionInit, {
            ...props
        });
    };
    CollectionProvider.displayName = PROVIDER_NAME;
    const CollectionInit = (props)=>{
        const state = useInitCollection();
        return /* @__PURE__ */ (0, _jsxRuntime.jsx)(CollectionProviderImpl, {
            ...props,
            state
        });
    };
    CollectionInit.displayName = PROVIDER_NAME + "Init";
    const CollectionProviderImpl = (props)=>{
        const { scope, children, state } = props;
        const ref = (0, _reactDefault.default).useRef(null);
        const [collectionElement, setCollectionElement] = (0, _reactDefault.default).useState(null);
        const composeRefs = (0, _reactComposeRefs.useComposedRefs)(ref, setCollectionElement);
        const [itemMap, setItemMap] = state;
        (0, _reactDefault.default).useEffect(()=>{
            if (!collectionElement) return;
            const observer = getChildListObserver(()=>{});
            observer.observe(collectionElement, {
                childList: true,
                subtree: true
            });
            return ()=>{
                observer.disconnect();
            };
        }, [
            collectionElement
        ]);
        return /* @__PURE__ */ (0, _jsxRuntime.jsx)(CollectionContextProvider, {
            scope,
            itemMap,
            setItemMap,
            collectionRef: composeRefs,
            collectionRefObject: ref,
            collectionElement,
            children
        });
    };
    CollectionProviderImpl.displayName = PROVIDER_NAME + "Impl";
    const COLLECTION_SLOT_NAME = name + "CollectionSlot";
    const CollectionSlotImpl = (0, _reactSlot.createSlot)(COLLECTION_SLOT_NAME);
    const CollectionSlot = (0, _reactDefault.default).forwardRef((props, forwardedRef)=>{
        const { scope, children } = props;
        const context = useCollectionContext(COLLECTION_SLOT_NAME, scope);
        const composedRefs = (0, _reactComposeRefs.useComposedRefs)(forwardedRef, context.collectionRef);
        return /* @__PURE__ */ (0, _jsxRuntime.jsx)(CollectionSlotImpl, {
            ref: composedRefs,
            children
        });
    });
    CollectionSlot.displayName = COLLECTION_SLOT_NAME;
    const ITEM_SLOT_NAME = name + "CollectionItemSlot";
    const ITEM_DATA_ATTR = "data-radix-collection-item";
    const CollectionItemSlotImpl = (0, _reactSlot.createSlot)(ITEM_SLOT_NAME);
    const CollectionItemSlot = (0, _reactDefault.default).forwardRef((props, forwardedRef)=>{
        const { scope, children, ...itemData } = props;
        const ref = (0, _reactDefault.default).useRef(null);
        const [element, setElement] = (0, _reactDefault.default).useState(null);
        const composedRefs = (0, _reactComposeRefs.useComposedRefs)(forwardedRef, ref, setElement);
        const context = useCollectionContext(ITEM_SLOT_NAME, scope);
        const { setItemMap } = context;
        const itemDataRef = (0, _reactDefault.default).useRef(itemData);
        if (!shallowEqual(itemDataRef.current, itemData)) itemDataRef.current = itemData;
        const memoizedItemData = itemDataRef.current;
        (0, _reactDefault.default).useEffect(()=>{
            const itemData2 = memoizedItemData;
            setItemMap((map)=>{
                if (!element) return map;
                if (!map.has(element)) {
                    map.set(element, {
                        ...itemData2,
                        element
                    });
                    return map.toSorted(sortByDocumentPosition);
                }
                return map.set(element, {
                    ...itemData2,
                    element
                }).toSorted(sortByDocumentPosition);
            });
            return ()=>{
                setItemMap((map)=>{
                    if (!element || !map.has(element)) return map;
                    map.delete(element);
                    return new OrderedDict(map);
                });
            };
        }, [
            element,
            memoizedItemData,
            setItemMap
        ]);
        return /* @__PURE__ */ (0, _jsxRuntime.jsx)(CollectionItemSlotImpl, {
            [ITEM_DATA_ATTR]: "",
            ref: composedRefs,
            children
        });
    });
    CollectionItemSlot.displayName = ITEM_SLOT_NAME;
    function useInitCollection() {
        return (0, _reactDefault.default).useState(new OrderedDict());
    }
    function useCollection(scope) {
        const { itemMap } = useCollectionContext(name + "CollectionConsumer", scope);
        return itemMap;
    }
    const functions = {
        createCollectionScope,
        useCollection,
        useInitCollection
    };
    return [
        {
            Provider: CollectionProvider,
            Slot: CollectionSlot,
            ItemSlot: CollectionItemSlot
        },
        functions
    ];
}
function shallowEqual(a, b) {
    if (a === b) return true;
    if (typeof a !== "object" || typeof b !== "object") return false;
    if (a == null || b == null) return false;
    const keysA = Object.keys(a);
    const keysB = Object.keys(b);
    if (keysA.length !== keysB.length) return false;
    for (const key of keysA){
        if (!Object.prototype.hasOwnProperty.call(b, key)) return false;
        if (a[key] !== b[key]) return false;
    }
    return true;
}
function isElementPreceding(a, b) {
    return !!(b.compareDocumentPosition(a) & Node.DOCUMENT_POSITION_PRECEDING);
}
function sortByDocumentPosition(a, b) {
    return !a[1].element || !b[1].element ? 0 : isElementPreceding(a[1].element, b[1].element) ? -1 : 1;
}
function getChildListObserver(callback) {
    const observer = new MutationObserver((mutationsList)=>{
        for (const mutation of mutationsList)if (mutation.type === "childList") {
            callback();
            return;
        }
    });
    return observer;
}

},{"react":"jMk1U","@radix-ui/react-context":"aRUGq","@radix-ui/react-compose-refs":"8NEPR","@radix-ui/react-slot":"049tr","react/jsx-runtime":"05iiF","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"SmdnD":[function(require,module,exports,__globalThis) {
// packages/react/id/src/id.tsx
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useId", ()=>useId);
var _react = require("react");
var _reactUseLayoutEffect = require("@radix-ui/react-use-layout-effect");
var useReactId = _react[" useId ".trim().toString()] || (()=>void 0);
var count = 0;
function useId(deterministicId) {
    const [id, setId] = _react.useState(useReactId());
    (0, _reactUseLayoutEffect.useLayoutEffect)(()=>{
        if (!deterministicId) setId((reactId)=>reactId ?? String(count++));
    }, [
        deterministicId
    ]);
    return deterministicId || (id ? `radix-${id}` : "");
}

},{"react":"jMk1U","@radix-ui/react-use-layout-effect":"enSS6","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"enSS6":[function(require,module,exports,__globalThis) {
// packages/react/use-layout-effect/src/use-layout-effect.tsx
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useLayoutEffect", ()=>useLayoutEffect2);
var _react = require("react");
var useLayoutEffect2 = globalThis?.document ? _react.useLayoutEffect : ()=>{};

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"92pad":[function(require,module,exports,__globalThis) {
// packages/react/use-callback-ref/src/use-callback-ref.tsx
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useCallbackRef", ()=>useCallbackRef);
var _react = require("react");
function useCallbackRef(callback) {
    const callbackRef = _react.useRef(callback);
    _react.useEffect(()=>{
        callbackRef.current = callback;
    });
    return _react.useMemo(()=>(...args)=>callbackRef.current?.(...args), []);
}

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"59sI3":[function(require,module,exports,__globalThis) {
// src/use-controllable-state.tsx
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useControllableState", ()=>useControllableState);
parcelHelpers.export(exports, "useControllableStateReducer", ()=>useControllableStateReducer);
var _react = require("react");
var _reactUseLayoutEffect = require("@radix-ui/react-use-layout-effect");
var _reactUseEffectEvent = require("@radix-ui/react-use-effect-event");
var useInsertionEffect = _react[" useInsertionEffect ".trim().toString()] || (0, _reactUseLayoutEffect.useLayoutEffect);
function useControllableState({ prop, defaultProp, onChange = ()=>{}, caller }) {
    const [uncontrolledProp, setUncontrolledProp, onChangeRef] = useUncontrolledState({
        defaultProp,
        onChange
    });
    const isControlled = prop !== void 0;
    const value = isControlled ? prop : uncontrolledProp;
    {
        const isControlledRef = _react.useRef(prop !== void 0);
        _react.useEffect(()=>{
            const wasControlled = isControlledRef.current;
            if (wasControlled !== isControlled) {
                const from = wasControlled ? "controlled" : "uncontrolled";
                const to = isControlled ? "controlled" : "uncontrolled";
                console.warn(`${caller} is changing from ${from} to ${to}. Components should not switch from controlled to uncontrolled (or vice versa). Decide between using a controlled or uncontrolled value for the lifetime of the component.`);
            }
            isControlledRef.current = isControlled;
        }, [
            isControlled,
            caller
        ]);
    }
    const setValue = _react.useCallback((nextValue)=>{
        if (isControlled) {
            const value2 = isFunction(nextValue) ? nextValue(prop) : nextValue;
            if (value2 !== prop) onChangeRef.current?.(value2);
        } else setUncontrolledProp(nextValue);
    }, [
        isControlled,
        prop,
        setUncontrolledProp,
        onChangeRef
    ]);
    return [
        value,
        setValue
    ];
}
function useUncontrolledState({ defaultProp, onChange }) {
    const [value, setValue] = _react.useState(defaultProp);
    const prevValueRef = _react.useRef(value);
    const onChangeRef = _react.useRef(onChange);
    useInsertionEffect(()=>{
        onChangeRef.current = onChange;
    }, [
        onChange
    ]);
    _react.useEffect(()=>{
        if (prevValueRef.current !== value) {
            onChangeRef.current?.(value);
            prevValueRef.current = value;
        }
    }, [
        value,
        prevValueRef
    ]);
    return [
        value,
        setValue,
        onChangeRef
    ];
}
function isFunction(value) {
    return typeof value === "function";
}
var SYNC_STATE = Symbol("RADIX:SYNC_STATE");
function useControllableStateReducer(reducer, userArgs, initialArg, init) {
    const { prop: controlledState, defaultProp, onChange: onChangeProp, caller } = userArgs;
    const isControlled = controlledState !== void 0;
    const onChange = (0, _reactUseEffectEvent.useEffectEvent)(onChangeProp);
    {
        const isControlledRef = _react.useRef(controlledState !== void 0);
        _react.useEffect(()=>{
            const wasControlled = isControlledRef.current;
            if (wasControlled !== isControlled) {
                const from = wasControlled ? "controlled" : "uncontrolled";
                const to = isControlled ? "controlled" : "uncontrolled";
                console.warn(`${caller} is changing from ${from} to ${to}. Components should not switch from controlled to uncontrolled (or vice versa). Decide between using a controlled or uncontrolled value for the lifetime of the component.`);
            }
            isControlledRef.current = isControlled;
        }, [
            isControlled,
            caller
        ]);
    }
    const args = [
        {
            ...initialArg,
            state: defaultProp
        }
    ];
    if (init) args.push(init);
    const [internalState, dispatch] = _react.useReducer((state2, action)=>{
        if (action.type === SYNC_STATE) return {
            ...state2,
            state: action.state
        };
        const next = reducer(state2, action);
        if (isControlled && !Object.is(next.state, state2.state)) onChange(next.state);
        return next;
    }, ...args);
    const uncontrolledState = internalState.state;
    const prevValueRef = _react.useRef(uncontrolledState);
    _react.useEffect(()=>{
        if (prevValueRef.current !== uncontrolledState) {
            prevValueRef.current = uncontrolledState;
            if (!isControlled) onChange(uncontrolledState);
        }
    }, [
        onChange,
        uncontrolledState,
        prevValueRef,
        isControlled
    ]);
    const state = _react.useMemo(()=>{
        const isControlled2 = controlledState !== void 0;
        if (isControlled2) return {
            ...internalState,
            state: controlledState
        };
        return internalState;
    }, [
        internalState,
        controlledState
    ]);
    _react.useEffect(()=>{
        if (isControlled && !Object.is(controlledState, internalState.state)) dispatch({
            type: SYNC_STATE,
            state: controlledState
        });
    }, [
        controlledState,
        internalState.state,
        isControlled
    ]);
    return [
        state,
        dispatch
    ];
}

},{"react":"jMk1U","@radix-ui/react-use-layout-effect":"enSS6","@radix-ui/react-use-effect-event":"fbd2q","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fbd2q":[function(require,module,exports,__globalThis) {
// src/use-effect-event.tsx
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useEffectEvent", ()=>useEffectEvent);
var _reactUseLayoutEffect = require("@radix-ui/react-use-layout-effect");
var _react = require("react");
var useReactEffectEvent = _react[" useEffectEvent ".trim().toString()];
var useReactInsertionEffect = _react[" useInsertionEffect ".trim().toString()];
function useEffectEvent(callback) {
    if (typeof useReactEffectEvent === "function") return useReactEffectEvent(callback);
    const ref = _react.useRef(()=>{
        throw new Error("Cannot call an event handler while rendering.");
    });
    if (typeof useReactInsertionEffect === "function") useReactInsertionEffect(()=>{
        ref.current = callback;
    });
    else (0, _reactUseLayoutEffect.useLayoutEffect)(()=>{
        ref.current = callback;
    });
    return _react.useMemo(()=>(...args)=>ref.current?.(...args), []);
}

},{"@radix-ui/react-use-layout-effect":"enSS6","react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cmpkM":[function(require,module,exports,__globalThis) {
// packages/react/direction/src/direction.tsx
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "DirectionProvider", ()=>DirectionProvider);
parcelHelpers.export(exports, "Provider", ()=>Provider);
parcelHelpers.export(exports, "useDirection", ()=>useDirection);
var _react = require("react");
var _jsxRuntime = require("react/jsx-runtime");
var DirectionContext = _react.createContext(void 0);
var DirectionProvider = (props)=>{
    const { dir, children } = props;
    return /* @__PURE__ */ (0, _jsxRuntime.jsx)(DirectionContext.Provider, {
        value: dir,
        children
    });
};
function useDirection(localDir) {
    const globalDir = _react.useContext(DirectionContext);
    return localDir || globalDir || "ltr";
}
var Provider = DirectionProvider;

},{"react":"jMk1U","react/jsx-runtime":"05iiF","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"kuUSP":[function(require,module,exports,__globalThis) {
// packages/react/use-size/src/use-size.tsx
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useSize", ()=>useSize);
var _react = require("react");
var _reactUseLayoutEffect = require("@radix-ui/react-use-layout-effect");
function useSize(element) {
    const [size, setSize] = _react.useState(void 0);
    (0, _reactUseLayoutEffect.useLayoutEffect)(()=>{
        if (element) {
            setSize({
                width: element.offsetWidth,
                height: element.offsetHeight
            });
            const resizeObserver = new ResizeObserver((entries)=>{
                if (!Array.isArray(entries)) return;
                if (!entries.length) return;
                const entry = entries[0];
                let width;
                let height;
                if ("borderBoxSize" in entry) {
                    const borderSizeEntry = entry["borderBoxSize"];
                    const borderSize = Array.isArray(borderSizeEntry) ? borderSizeEntry[0] : borderSizeEntry;
                    width = borderSize["inlineSize"];
                    height = borderSize["blockSize"];
                } else {
                    width = element.offsetWidth;
                    height = element.offsetHeight;
                }
                setSize({
                    width,
                    height
                });
            });
            resizeObserver.observe(element, {
                box: "border-box"
            });
            return ()=>resizeObserver.unobserve(element);
        } else setSize(void 0);
    }, [
        element
    ]);
    return size;
}

},{"react":"jMk1U","@radix-ui/react-use-layout-effect":"enSS6","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9OYXJ":[function(require,module,exports,__globalThis) {
// packages/react/use-previous/src/use-previous.tsx
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "usePrevious", ()=>usePrevious);
var _react = require("react");
function usePrevious(value) {
    const ref = _react.useRef({
        value,
        previous: value
    });
    return _react.useMemo(()=>{
        if (ref.current.value !== value) {
            ref.current.previous = ref.current.value;
            ref.current.value = value;
        }
        return ref.current.previous;
    }, [
        value
    ]);
}

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5MpGF":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Presence", ()=>Presence);
parcelHelpers.export(exports, "Root", ()=>Root);
// src/presence.tsx
var _react = require("react");
var _reactComposeRefs = require("@radix-ui/react-compose-refs");
var _reactUseLayoutEffect = require("@radix-ui/react-use-layout-effect");
"use client";
function useStateMachine(initialState, machine) {
    return _react.useReducer((state, event)=>{
        const nextState = machine[state][event];
        return nextState ?? state;
    }, initialState);
}
// src/presence.tsx
var Presence = (props)=>{
    const { present, children } = props;
    const presence = usePresence(present);
    const child = typeof children === "function" ? children({
        present: presence.isPresent
    }) : _react.Children.only(children);
    const ref = (0, _reactComposeRefs.useComposedRefs)(presence.ref, getElementRef(child));
    const forceMount = typeof children === "function";
    return forceMount || presence.isPresent ? _react.cloneElement(child, {
        ref
    }) : null;
};
Presence.displayName = "Presence";
function usePresence(present) {
    const [node, setNode] = _react.useState();
    const stylesRef = _react.useRef(null);
    const prevPresentRef = _react.useRef(present);
    const prevAnimationNameRef = _react.useRef("none");
    const initialState = present ? "mounted" : "unmounted";
    const [state, send] = useStateMachine(initialState, {
        mounted: {
            UNMOUNT: "unmounted",
            ANIMATION_OUT: "unmountSuspended"
        },
        unmountSuspended: {
            MOUNT: "mounted",
            ANIMATION_END: "unmounted"
        },
        unmounted: {
            MOUNT: "mounted"
        }
    });
    _react.useEffect(()=>{
        const currentAnimationName = getAnimationName(stylesRef.current);
        prevAnimationNameRef.current = state === "mounted" ? currentAnimationName : "none";
    }, [
        state
    ]);
    (0, _reactUseLayoutEffect.useLayoutEffect)(()=>{
        const styles = stylesRef.current;
        const wasPresent = prevPresentRef.current;
        const hasPresentChanged = wasPresent !== present;
        if (hasPresentChanged) {
            const prevAnimationName = prevAnimationNameRef.current;
            const currentAnimationName = getAnimationName(styles);
            if (present) send("MOUNT");
            else if (currentAnimationName === "none" || styles?.display === "none") send("UNMOUNT");
            else {
                const isAnimating = prevAnimationName !== currentAnimationName;
                if (wasPresent && isAnimating) send("ANIMATION_OUT");
                else send("UNMOUNT");
            }
            prevPresentRef.current = present;
        }
    }, [
        present,
        send
    ]);
    (0, _reactUseLayoutEffect.useLayoutEffect)(()=>{
        if (node) {
            let timeoutId;
            const ownerWindow = node.ownerDocument.defaultView ?? window;
            const handleAnimationEnd = (event)=>{
                const currentAnimationName = getAnimationName(stylesRef.current);
                const isCurrentAnimation = currentAnimationName.includes(CSS.escape(event.animationName));
                if (event.target === node && isCurrentAnimation) {
                    send("ANIMATION_END");
                    if (!prevPresentRef.current) {
                        const currentFillMode = node.style.animationFillMode;
                        node.style.animationFillMode = "forwards";
                        timeoutId = ownerWindow.setTimeout(()=>{
                            if (node.style.animationFillMode === "forwards") node.style.animationFillMode = currentFillMode;
                        });
                    }
                }
            };
            const handleAnimationStart = (event)=>{
                if (event.target === node) prevAnimationNameRef.current = getAnimationName(stylesRef.current);
            };
            node.addEventListener("animationstart", handleAnimationStart);
            node.addEventListener("animationcancel", handleAnimationEnd);
            node.addEventListener("animationend", handleAnimationEnd);
            return ()=>{
                ownerWindow.clearTimeout(timeoutId);
                node.removeEventListener("animationstart", handleAnimationStart);
                node.removeEventListener("animationcancel", handleAnimationEnd);
                node.removeEventListener("animationend", handleAnimationEnd);
            };
        } else send("ANIMATION_END");
    }, [
        node,
        send
    ]);
    return {
        isPresent: [
            "mounted",
            "unmountSuspended"
        ].includes(state),
        ref: _react.useCallback((node2)=>{
            stylesRef.current = node2 ? getComputedStyle(node2) : null;
            setNode(node2);
        }, [])
    };
}
function getAnimationName(styles) {
    return styles?.animationName || "none";
}
function getElementRef(element) {
    let getter = Object.getOwnPropertyDescriptor(element.props, "ref")?.get;
    let mayWarn = getter && "isReactWarning" in getter && getter.isReactWarning;
    if (mayWarn) return element.ref;
    getter = Object.getOwnPropertyDescriptor(element, "ref")?.get;
    mayWarn = getter && "isReactWarning" in getter && getter.isReactWarning;
    if (mayWarn) return element.props.ref;
    return element.props.ref || element.ref;
}
var Root = Presence;

},{"react":"jMk1U","@radix-ui/react-compose-refs":"8NEPR","@radix-ui/react-use-layout-effect":"enSS6","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2I7qR":[function(require,module,exports,__globalThis) {
/**
 * @license lucide-react v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AlarmClockMinus", ()=>(0, _alarmClockMinusJsDefault.default));
parcelHelpers.export(exports, "AlarmClockMinusIcon", ()=>(0, _alarmClockMinusJsDefault.default));
parcelHelpers.export(exports, "AlarmMinus", ()=>(0, _alarmClockMinusJsDefault.default));
parcelHelpers.export(exports, "AlarmMinusIcon", ()=>(0, _alarmClockMinusJsDefault.default));
parcelHelpers.export(exports, "LucideAlarmClockMinus", ()=>(0, _alarmClockMinusJsDefault.default));
parcelHelpers.export(exports, "LucideAlarmMinus", ()=>(0, _alarmClockMinusJsDefault.default));
parcelHelpers.export(exports, "AlarmCheck", ()=>(0, _alarmClockCheckJsDefault.default));
parcelHelpers.export(exports, "AlarmCheckIcon", ()=>(0, _alarmClockCheckJsDefault.default));
parcelHelpers.export(exports, "AlarmClockCheck", ()=>(0, _alarmClockCheckJsDefault.default));
parcelHelpers.export(exports, "AlarmClockCheckIcon", ()=>(0, _alarmClockCheckJsDefault.default));
parcelHelpers.export(exports, "LucideAlarmCheck", ()=>(0, _alarmClockCheckJsDefault.default));
parcelHelpers.export(exports, "LucideAlarmClockCheck", ()=>(0, _alarmClockCheckJsDefault.default));
parcelHelpers.export(exports, "AlarmClockPlus", ()=>(0, _alarmClockPlusJsDefault.default));
parcelHelpers.export(exports, "AlarmClockPlusIcon", ()=>(0, _alarmClockPlusJsDefault.default));
parcelHelpers.export(exports, "AlarmPlus", ()=>(0, _alarmClockPlusJsDefault.default));
parcelHelpers.export(exports, "AlarmPlusIcon", ()=>(0, _alarmClockPlusJsDefault.default));
parcelHelpers.export(exports, "LucideAlarmClockPlus", ()=>(0, _alarmClockPlusJsDefault.default));
parcelHelpers.export(exports, "LucideAlarmPlus", ()=>(0, _alarmClockPlusJsDefault.default));
parcelHelpers.export(exports, "ArrowDownAZ", ()=>(0, _arrowDownAZJsDefault.default));
parcelHelpers.export(exports, "ArrowDownAZIcon", ()=>(0, _arrowDownAZJsDefault.default));
parcelHelpers.export(exports, "ArrowDownAz", ()=>(0, _arrowDownAZJsDefault.default));
parcelHelpers.export(exports, "ArrowDownAzIcon", ()=>(0, _arrowDownAZJsDefault.default));
parcelHelpers.export(exports, "LucideArrowDownAZ", ()=>(0, _arrowDownAZJsDefault.default));
parcelHelpers.export(exports, "LucideArrowDownAz", ()=>(0, _arrowDownAZJsDefault.default));
parcelHelpers.export(exports, "ArrowDownWideNarrow", ()=>(0, _arrowDownWideNarrowJsDefault.default));
parcelHelpers.export(exports, "ArrowDownWideNarrowIcon", ()=>(0, _arrowDownWideNarrowJsDefault.default));
parcelHelpers.export(exports, "LucideArrowDownWideNarrow", ()=>(0, _arrowDownWideNarrowJsDefault.default));
parcelHelpers.export(exports, "LucideSortDesc", ()=>(0, _arrowDownWideNarrowJsDefault.default));
parcelHelpers.export(exports, "SortDesc", ()=>(0, _arrowDownWideNarrowJsDefault.default));
parcelHelpers.export(exports, "SortDescIcon", ()=>(0, _arrowDownWideNarrowJsDefault.default));
parcelHelpers.export(exports, "ArrowDownZA", ()=>(0, _arrowDownZAJsDefault.default));
parcelHelpers.export(exports, "ArrowDownZAIcon", ()=>(0, _arrowDownZAJsDefault.default));
parcelHelpers.export(exports, "ArrowDownZa", ()=>(0, _arrowDownZAJsDefault.default));
parcelHelpers.export(exports, "ArrowDownZaIcon", ()=>(0, _arrowDownZAJsDefault.default));
parcelHelpers.export(exports, "LucideArrowDownZA", ()=>(0, _arrowDownZAJsDefault.default));
parcelHelpers.export(exports, "LucideArrowDownZa", ()=>(0, _arrowDownZAJsDefault.default));
parcelHelpers.export(exports, "ArrowUpAZ", ()=>(0, _arrowUpAZJsDefault.default));
parcelHelpers.export(exports, "ArrowUpAZIcon", ()=>(0, _arrowUpAZJsDefault.default));
parcelHelpers.export(exports, "ArrowUpAz", ()=>(0, _arrowUpAZJsDefault.default));
parcelHelpers.export(exports, "ArrowUpAzIcon", ()=>(0, _arrowUpAZJsDefault.default));
parcelHelpers.export(exports, "LucideArrowUpAZ", ()=>(0, _arrowUpAZJsDefault.default));
parcelHelpers.export(exports, "LucideArrowUpAz", ()=>(0, _arrowUpAZJsDefault.default));
parcelHelpers.export(exports, "ArrowUpNarrowWide", ()=>(0, _arrowUpNarrowWideJsDefault.default));
parcelHelpers.export(exports, "ArrowUpNarrowWideIcon", ()=>(0, _arrowUpNarrowWideJsDefault.default));
parcelHelpers.export(exports, "LucideArrowUpNarrowWide", ()=>(0, _arrowUpNarrowWideJsDefault.default));
parcelHelpers.export(exports, "LucideSortAsc", ()=>(0, _arrowUpNarrowWideJsDefault.default));
parcelHelpers.export(exports, "SortAsc", ()=>(0, _arrowUpNarrowWideJsDefault.default));
parcelHelpers.export(exports, "SortAscIcon", ()=>(0, _arrowUpNarrowWideJsDefault.default));
parcelHelpers.export(exports, "ArrowUpZA", ()=>(0, _arrowUpZAJsDefault.default));
parcelHelpers.export(exports, "ArrowUpZAIcon", ()=>(0, _arrowUpZAJsDefault.default));
parcelHelpers.export(exports, "ArrowUpZa", ()=>(0, _arrowUpZAJsDefault.default));
parcelHelpers.export(exports, "ArrowUpZaIcon", ()=>(0, _arrowUpZAJsDefault.default));
parcelHelpers.export(exports, "LucideArrowUpZA", ()=>(0, _arrowUpZAJsDefault.default));
parcelHelpers.export(exports, "LucideArrowUpZa", ()=>(0, _arrowUpZAJsDefault.default));
parcelHelpers.export(exports, "Axis3D", ()=>(0, _axis3DJsDefault.default));
parcelHelpers.export(exports, "Axis3DIcon", ()=>(0, _axis3DJsDefault.default));
parcelHelpers.export(exports, "Axis3d", ()=>(0, _axis3DJsDefault.default));
parcelHelpers.export(exports, "Axis3dIcon", ()=>(0, _axis3DJsDefault.default));
parcelHelpers.export(exports, "LucideAxis3D", ()=>(0, _axis3DJsDefault.default));
parcelHelpers.export(exports, "LucideAxis3d", ()=>(0, _axis3DJsDefault.default));
parcelHelpers.export(exports, "BadgeCheck", ()=>(0, _badgeCheckJsDefault.default));
parcelHelpers.export(exports, "BadgeCheckIcon", ()=>(0, _badgeCheckJsDefault.default));
parcelHelpers.export(exports, "LucideBadgeCheck", ()=>(0, _badgeCheckJsDefault.default));
parcelHelpers.export(exports, "LucideVerified", ()=>(0, _badgeCheckJsDefault.default));
parcelHelpers.export(exports, "Verified", ()=>(0, _badgeCheckJsDefault.default));
parcelHelpers.export(exports, "VerifiedIcon", ()=>(0, _badgeCheckJsDefault.default));
parcelHelpers.export(exports, "BadgeHelp", ()=>(0, _badgeQuestionMarkJsDefault.default));
parcelHelpers.export(exports, "BadgeHelpIcon", ()=>(0, _badgeQuestionMarkJsDefault.default));
parcelHelpers.export(exports, "BadgeQuestionMark", ()=>(0, _badgeQuestionMarkJsDefault.default));
parcelHelpers.export(exports, "BadgeQuestionMarkIcon", ()=>(0, _badgeQuestionMarkJsDefault.default));
parcelHelpers.export(exports, "LucideBadgeHelp", ()=>(0, _badgeQuestionMarkJsDefault.default));
parcelHelpers.export(exports, "LucideBadgeQuestionMark", ()=>(0, _badgeQuestionMarkJsDefault.default));
parcelHelpers.export(exports, "BetweenHorizonalEnd", ()=>(0, _betweenHorizontalEndJsDefault.default));
parcelHelpers.export(exports, "BetweenHorizonalEndIcon", ()=>(0, _betweenHorizontalEndJsDefault.default));
parcelHelpers.export(exports, "BetweenHorizontalEnd", ()=>(0, _betweenHorizontalEndJsDefault.default));
parcelHelpers.export(exports, "BetweenHorizontalEndIcon", ()=>(0, _betweenHorizontalEndJsDefault.default));
parcelHelpers.export(exports, "LucideBetweenHorizonalEnd", ()=>(0, _betweenHorizontalEndJsDefault.default));
parcelHelpers.export(exports, "LucideBetweenHorizontalEnd", ()=>(0, _betweenHorizontalEndJsDefault.default));
parcelHelpers.export(exports, "BetweenHorizonalStart", ()=>(0, _betweenHorizontalStartJsDefault.default));
parcelHelpers.export(exports, "BetweenHorizonalStartIcon", ()=>(0, _betweenHorizontalStartJsDefault.default));
parcelHelpers.export(exports, "BetweenHorizontalStart", ()=>(0, _betweenHorizontalStartJsDefault.default));
parcelHelpers.export(exports, "BetweenHorizontalStartIcon", ()=>(0, _betweenHorizontalStartJsDefault.default));
parcelHelpers.export(exports, "LucideBetweenHorizonalStart", ()=>(0, _betweenHorizontalStartJsDefault.default));
parcelHelpers.export(exports, "LucideBetweenHorizontalStart", ()=>(0, _betweenHorizontalStartJsDefault.default));
parcelHelpers.export(exports, "BookDashed", ()=>(0, _bookDashedJsDefault.default));
parcelHelpers.export(exports, "BookDashedIcon", ()=>(0, _bookDashedJsDefault.default));
parcelHelpers.export(exports, "BookTemplate", ()=>(0, _bookDashedJsDefault.default));
parcelHelpers.export(exports, "BookTemplateIcon", ()=>(0, _bookDashedJsDefault.default));
parcelHelpers.export(exports, "LucideBookDashed", ()=>(0, _bookDashedJsDefault.default));
parcelHelpers.export(exports, "LucideBookTemplate", ()=>(0, _bookDashedJsDefault.default));
parcelHelpers.export(exports, "Braces", ()=>(0, _bracesJsDefault.default));
parcelHelpers.export(exports, "BracesIcon", ()=>(0, _bracesJsDefault.default));
parcelHelpers.export(exports, "CurlyBraces", ()=>(0, _bracesJsDefault.default));
parcelHelpers.export(exports, "CurlyBracesIcon", ()=>(0, _bracesJsDefault.default));
parcelHelpers.export(exports, "LucideBraces", ()=>(0, _bracesJsDefault.default));
parcelHelpers.export(exports, "LucideCurlyBraces", ()=>(0, _bracesJsDefault.default));
parcelHelpers.export(exports, "Captions", ()=>(0, _captionsJsDefault.default));
parcelHelpers.export(exports, "CaptionsIcon", ()=>(0, _captionsJsDefault.default));
parcelHelpers.export(exports, "LucideCaptions", ()=>(0, _captionsJsDefault.default));
parcelHelpers.export(exports, "LucideSubtitles", ()=>(0, _captionsJsDefault.default));
parcelHelpers.export(exports, "Subtitles", ()=>(0, _captionsJsDefault.default));
parcelHelpers.export(exports, "SubtitlesIcon", ()=>(0, _captionsJsDefault.default));
parcelHelpers.export(exports, "AreaChart", ()=>(0, _chartAreaJsDefault.default));
parcelHelpers.export(exports, "AreaChartIcon", ()=>(0, _chartAreaJsDefault.default));
parcelHelpers.export(exports, "ChartArea", ()=>(0, _chartAreaJsDefault.default));
parcelHelpers.export(exports, "ChartAreaIcon", ()=>(0, _chartAreaJsDefault.default));
parcelHelpers.export(exports, "LucideAreaChart", ()=>(0, _chartAreaJsDefault.default));
parcelHelpers.export(exports, "LucideChartArea", ()=>(0, _chartAreaJsDefault.default));
parcelHelpers.export(exports, "BarChartHorizontalBig", ()=>(0, _chartBarBigJsDefault.default));
parcelHelpers.export(exports, "BarChartHorizontalBigIcon", ()=>(0, _chartBarBigJsDefault.default));
parcelHelpers.export(exports, "ChartBarBig", ()=>(0, _chartBarBigJsDefault.default));
parcelHelpers.export(exports, "ChartBarBigIcon", ()=>(0, _chartBarBigJsDefault.default));
parcelHelpers.export(exports, "LucideBarChartHorizontalBig", ()=>(0, _chartBarBigJsDefault.default));
parcelHelpers.export(exports, "LucideChartBarBig", ()=>(0, _chartBarBigJsDefault.default));
parcelHelpers.export(exports, "BarChartHorizontal", ()=>(0, _chartBarJsDefault.default));
parcelHelpers.export(exports, "BarChartHorizontalIcon", ()=>(0, _chartBarJsDefault.default));
parcelHelpers.export(exports, "ChartBar", ()=>(0, _chartBarJsDefault.default));
parcelHelpers.export(exports, "ChartBarIcon", ()=>(0, _chartBarJsDefault.default));
parcelHelpers.export(exports, "LucideBarChartHorizontal", ()=>(0, _chartBarJsDefault.default));
parcelHelpers.export(exports, "LucideChartBar", ()=>(0, _chartBarJsDefault.default));
parcelHelpers.export(exports, "CandlestickChart", ()=>(0, _chartCandlestickJsDefault.default));
parcelHelpers.export(exports, "CandlestickChartIcon", ()=>(0, _chartCandlestickJsDefault.default));
parcelHelpers.export(exports, "ChartCandlestick", ()=>(0, _chartCandlestickJsDefault.default));
parcelHelpers.export(exports, "ChartCandlestickIcon", ()=>(0, _chartCandlestickJsDefault.default));
parcelHelpers.export(exports, "LucideCandlestickChart", ()=>(0, _chartCandlestickJsDefault.default));
parcelHelpers.export(exports, "LucideChartCandlestick", ()=>(0, _chartCandlestickJsDefault.default));
parcelHelpers.export(exports, "BarChart4", ()=>(0, _chartColumnIncreasingJsDefault.default));
parcelHelpers.export(exports, "BarChart4Icon", ()=>(0, _chartColumnIncreasingJsDefault.default));
parcelHelpers.export(exports, "ChartColumnIncreasing", ()=>(0, _chartColumnIncreasingJsDefault.default));
parcelHelpers.export(exports, "ChartColumnIncreasingIcon", ()=>(0, _chartColumnIncreasingJsDefault.default));
parcelHelpers.export(exports, "LucideBarChart4", ()=>(0, _chartColumnIncreasingJsDefault.default));
parcelHelpers.export(exports, "LucideChartColumnIncreasing", ()=>(0, _chartColumnIncreasingJsDefault.default));
parcelHelpers.export(exports, "BarChartBig", ()=>(0, _chartColumnBigJsDefault.default));
parcelHelpers.export(exports, "BarChartBigIcon", ()=>(0, _chartColumnBigJsDefault.default));
parcelHelpers.export(exports, "ChartColumnBig", ()=>(0, _chartColumnBigJsDefault.default));
parcelHelpers.export(exports, "ChartColumnBigIcon", ()=>(0, _chartColumnBigJsDefault.default));
parcelHelpers.export(exports, "LucideBarChartBig", ()=>(0, _chartColumnBigJsDefault.default));
parcelHelpers.export(exports, "LucideChartColumnBig", ()=>(0, _chartColumnBigJsDefault.default));
parcelHelpers.export(exports, "BarChart3", ()=>(0, _chartColumnJsDefault.default));
parcelHelpers.export(exports, "BarChart3Icon", ()=>(0, _chartColumnJsDefault.default));
parcelHelpers.export(exports, "ChartColumn", ()=>(0, _chartColumnJsDefault.default));
parcelHelpers.export(exports, "ChartColumnIcon", ()=>(0, _chartColumnJsDefault.default));
parcelHelpers.export(exports, "LucideBarChart3", ()=>(0, _chartColumnJsDefault.default));
parcelHelpers.export(exports, "LucideChartColumn", ()=>(0, _chartColumnJsDefault.default));
parcelHelpers.export(exports, "ChartLine", ()=>(0, _chartLineJsDefault.default));
parcelHelpers.export(exports, "ChartLineIcon", ()=>(0, _chartLineJsDefault.default));
parcelHelpers.export(exports, "LineChart", ()=>(0, _chartLineJsDefault.default));
parcelHelpers.export(exports, "LineChartIcon", ()=>(0, _chartLineJsDefault.default));
parcelHelpers.export(exports, "LucideChartLine", ()=>(0, _chartLineJsDefault.default));
parcelHelpers.export(exports, "LucideLineChart", ()=>(0, _chartLineJsDefault.default));
parcelHelpers.export(exports, "BarChart", ()=>(0, _chartNoAxesColumnIncreasingJsDefault.default));
parcelHelpers.export(exports, "BarChartIcon", ()=>(0, _chartNoAxesColumnIncreasingJsDefault.default));
parcelHelpers.export(exports, "ChartNoAxesColumnIncreasing", ()=>(0, _chartNoAxesColumnIncreasingJsDefault.default));
parcelHelpers.export(exports, "ChartNoAxesColumnIncreasingIcon", ()=>(0, _chartNoAxesColumnIncreasingJsDefault.default));
parcelHelpers.export(exports, "LucideBarChart", ()=>(0, _chartNoAxesColumnIncreasingJsDefault.default));
parcelHelpers.export(exports, "LucideChartNoAxesColumnIncreasing", ()=>(0, _chartNoAxesColumnIncreasingJsDefault.default));
parcelHelpers.export(exports, "BarChart2", ()=>(0, _chartNoAxesColumnJsDefault.default));
parcelHelpers.export(exports, "BarChart2Icon", ()=>(0, _chartNoAxesColumnJsDefault.default));
parcelHelpers.export(exports, "ChartNoAxesColumn", ()=>(0, _chartNoAxesColumnJsDefault.default));
parcelHelpers.export(exports, "ChartNoAxesColumnIcon", ()=>(0, _chartNoAxesColumnJsDefault.default));
parcelHelpers.export(exports, "LucideBarChart2", ()=>(0, _chartNoAxesColumnJsDefault.default));
parcelHelpers.export(exports, "LucideChartNoAxesColumn", ()=>(0, _chartNoAxesColumnJsDefault.default));
parcelHelpers.export(exports, "ChartPie", ()=>(0, _chartPieJsDefault.default));
parcelHelpers.export(exports, "ChartPieIcon", ()=>(0, _chartPieJsDefault.default));
parcelHelpers.export(exports, "LucideChartPie", ()=>(0, _chartPieJsDefault.default));
parcelHelpers.export(exports, "LucidePieChart", ()=>(0, _chartPieJsDefault.default));
parcelHelpers.export(exports, "PieChart", ()=>(0, _chartPieJsDefault.default));
parcelHelpers.export(exports, "PieChartIcon", ()=>(0, _chartPieJsDefault.default));
parcelHelpers.export(exports, "ChartNoAxesGantt", ()=>(0, _chartNoAxesGanttJsDefault.default));
parcelHelpers.export(exports, "ChartNoAxesGanttIcon", ()=>(0, _chartNoAxesGanttJsDefault.default));
parcelHelpers.export(exports, "GanttChart", ()=>(0, _chartNoAxesGanttJsDefault.default));
parcelHelpers.export(exports, "GanttChartIcon", ()=>(0, _chartNoAxesGanttJsDefault.default));
parcelHelpers.export(exports, "LucideChartNoAxesGantt", ()=>(0, _chartNoAxesGanttJsDefault.default));
parcelHelpers.export(exports, "LucideGanttChart", ()=>(0, _chartNoAxesGanttJsDefault.default));
parcelHelpers.export(exports, "ChartScatter", ()=>(0, _chartScatterJsDefault.default));
parcelHelpers.export(exports, "ChartScatterIcon", ()=>(0, _chartScatterJsDefault.default));
parcelHelpers.export(exports, "LucideChartScatter", ()=>(0, _chartScatterJsDefault.default));
parcelHelpers.export(exports, "LucideScatterChart", ()=>(0, _chartScatterJsDefault.default));
parcelHelpers.export(exports, "ScatterChart", ()=>(0, _chartScatterJsDefault.default));
parcelHelpers.export(exports, "ScatterChartIcon", ()=>(0, _chartScatterJsDefault.default));
parcelHelpers.export(exports, "Chrome", ()=>(0, _chromiumJsDefault.default));
parcelHelpers.export(exports, "ChromeIcon", ()=>(0, _chromiumJsDefault.default));
parcelHelpers.export(exports, "Chromium", ()=>(0, _chromiumJsDefault.default));
parcelHelpers.export(exports, "ChromiumIcon", ()=>(0, _chromiumJsDefault.default));
parcelHelpers.export(exports, "LucideChrome", ()=>(0, _chromiumJsDefault.default));
parcelHelpers.export(exports, "LucideChromium", ()=>(0, _chromiumJsDefault.default));
parcelHelpers.export(exports, "AlertCircle", ()=>(0, _circleAlertJsDefault.default));
parcelHelpers.export(exports, "AlertCircleIcon", ()=>(0, _circleAlertJsDefault.default));
parcelHelpers.export(exports, "CircleAlert", ()=>(0, _circleAlertJsDefault.default));
parcelHelpers.export(exports, "CircleAlertIcon", ()=>(0, _circleAlertJsDefault.default));
parcelHelpers.export(exports, "LucideAlertCircle", ()=>(0, _circleAlertJsDefault.default));
parcelHelpers.export(exports, "LucideCircleAlert", ()=>(0, _circleAlertJsDefault.default));
parcelHelpers.export(exports, "ArrowDownCircle", ()=>(0, _circleArrowDownJsDefault.default));
parcelHelpers.export(exports, "ArrowDownCircleIcon", ()=>(0, _circleArrowDownJsDefault.default));
parcelHelpers.export(exports, "CircleArrowDown", ()=>(0, _circleArrowDownJsDefault.default));
parcelHelpers.export(exports, "CircleArrowDownIcon", ()=>(0, _circleArrowDownJsDefault.default));
parcelHelpers.export(exports, "LucideArrowDownCircle", ()=>(0, _circleArrowDownJsDefault.default));
parcelHelpers.export(exports, "LucideCircleArrowDown", ()=>(0, _circleArrowDownJsDefault.default));
parcelHelpers.export(exports, "ArrowLeftCircle", ()=>(0, _circleArrowLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowLeftCircleIcon", ()=>(0, _circleArrowLeftJsDefault.default));
parcelHelpers.export(exports, "CircleArrowLeft", ()=>(0, _circleArrowLeftJsDefault.default));
parcelHelpers.export(exports, "CircleArrowLeftIcon", ()=>(0, _circleArrowLeftJsDefault.default));
parcelHelpers.export(exports, "LucideArrowLeftCircle", ()=>(0, _circleArrowLeftJsDefault.default));
parcelHelpers.export(exports, "LucideCircleArrowLeft", ()=>(0, _circleArrowLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowDownLeftFromCircle", ()=>(0, _circleArrowOutDownLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowDownLeftFromCircleIcon", ()=>(0, _circleArrowOutDownLeftJsDefault.default));
parcelHelpers.export(exports, "CircleArrowOutDownLeft", ()=>(0, _circleArrowOutDownLeftJsDefault.default));
parcelHelpers.export(exports, "CircleArrowOutDownLeftIcon", ()=>(0, _circleArrowOutDownLeftJsDefault.default));
parcelHelpers.export(exports, "LucideArrowDownLeftFromCircle", ()=>(0, _circleArrowOutDownLeftJsDefault.default));
parcelHelpers.export(exports, "LucideCircleArrowOutDownLeft", ()=>(0, _circleArrowOutDownLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowDownRightFromCircle", ()=>(0, _circleArrowOutDownRightJsDefault.default));
parcelHelpers.export(exports, "ArrowDownRightFromCircleIcon", ()=>(0, _circleArrowOutDownRightJsDefault.default));
parcelHelpers.export(exports, "CircleArrowOutDownRight", ()=>(0, _circleArrowOutDownRightJsDefault.default));
parcelHelpers.export(exports, "CircleArrowOutDownRightIcon", ()=>(0, _circleArrowOutDownRightJsDefault.default));
parcelHelpers.export(exports, "LucideArrowDownRightFromCircle", ()=>(0, _circleArrowOutDownRightJsDefault.default));
parcelHelpers.export(exports, "LucideCircleArrowOutDownRight", ()=>(0, _circleArrowOutDownRightJsDefault.default));
parcelHelpers.export(exports, "ArrowUpLeftFromCircle", ()=>(0, _circleArrowOutUpLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowUpLeftFromCircleIcon", ()=>(0, _circleArrowOutUpLeftJsDefault.default));
parcelHelpers.export(exports, "CircleArrowOutUpLeft", ()=>(0, _circleArrowOutUpLeftJsDefault.default));
parcelHelpers.export(exports, "CircleArrowOutUpLeftIcon", ()=>(0, _circleArrowOutUpLeftJsDefault.default));
parcelHelpers.export(exports, "LucideArrowUpLeftFromCircle", ()=>(0, _circleArrowOutUpLeftJsDefault.default));
parcelHelpers.export(exports, "LucideCircleArrowOutUpLeft", ()=>(0, _circleArrowOutUpLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowUpRightFromCircle", ()=>(0, _circleArrowOutUpRightJsDefault.default));
parcelHelpers.export(exports, "ArrowUpRightFromCircleIcon", ()=>(0, _circleArrowOutUpRightJsDefault.default));
parcelHelpers.export(exports, "CircleArrowOutUpRight", ()=>(0, _circleArrowOutUpRightJsDefault.default));
parcelHelpers.export(exports, "CircleArrowOutUpRightIcon", ()=>(0, _circleArrowOutUpRightJsDefault.default));
parcelHelpers.export(exports, "LucideArrowUpRightFromCircle", ()=>(0, _circleArrowOutUpRightJsDefault.default));
parcelHelpers.export(exports, "LucideCircleArrowOutUpRight", ()=>(0, _circleArrowOutUpRightJsDefault.default));
parcelHelpers.export(exports, "ArrowRightCircle", ()=>(0, _circleArrowRightJsDefault.default));
parcelHelpers.export(exports, "ArrowRightCircleIcon", ()=>(0, _circleArrowRightJsDefault.default));
parcelHelpers.export(exports, "CircleArrowRight", ()=>(0, _circleArrowRightJsDefault.default));
parcelHelpers.export(exports, "CircleArrowRightIcon", ()=>(0, _circleArrowRightJsDefault.default));
parcelHelpers.export(exports, "LucideArrowRightCircle", ()=>(0, _circleArrowRightJsDefault.default));
parcelHelpers.export(exports, "LucideCircleArrowRight", ()=>(0, _circleArrowRightJsDefault.default));
parcelHelpers.export(exports, "CheckCircle", ()=>(0, _circleCheckBigJsDefault.default));
parcelHelpers.export(exports, "CheckCircleIcon", ()=>(0, _circleCheckBigJsDefault.default));
parcelHelpers.export(exports, "CircleCheckBig", ()=>(0, _circleCheckBigJsDefault.default));
parcelHelpers.export(exports, "CircleCheckBigIcon", ()=>(0, _circleCheckBigJsDefault.default));
parcelHelpers.export(exports, "LucideCheckCircle", ()=>(0, _circleCheckBigJsDefault.default));
parcelHelpers.export(exports, "LucideCircleCheckBig", ()=>(0, _circleCheckBigJsDefault.default));
parcelHelpers.export(exports, "ArrowUpCircle", ()=>(0, _circleArrowUpJsDefault.default));
parcelHelpers.export(exports, "ArrowUpCircleIcon", ()=>(0, _circleArrowUpJsDefault.default));
parcelHelpers.export(exports, "CircleArrowUp", ()=>(0, _circleArrowUpJsDefault.default));
parcelHelpers.export(exports, "CircleArrowUpIcon", ()=>(0, _circleArrowUpJsDefault.default));
parcelHelpers.export(exports, "LucideArrowUpCircle", ()=>(0, _circleArrowUpJsDefault.default));
parcelHelpers.export(exports, "LucideCircleArrowUp", ()=>(0, _circleArrowUpJsDefault.default));
parcelHelpers.export(exports, "CheckCircle2", ()=>(0, _circleCheckJsDefault.default));
parcelHelpers.export(exports, "CheckCircle2Icon", ()=>(0, _circleCheckJsDefault.default));
parcelHelpers.export(exports, "CircleCheck", ()=>(0, _circleCheckJsDefault.default));
parcelHelpers.export(exports, "CircleCheckIcon", ()=>(0, _circleCheckJsDefault.default));
parcelHelpers.export(exports, "LucideCheckCircle2", ()=>(0, _circleCheckJsDefault.default));
parcelHelpers.export(exports, "LucideCircleCheck", ()=>(0, _circleCheckJsDefault.default));
parcelHelpers.export(exports, "ChevronLeftCircle", ()=>(0, _circleChevronLeftJsDefault.default));
parcelHelpers.export(exports, "ChevronLeftCircleIcon", ()=>(0, _circleChevronLeftJsDefault.default));
parcelHelpers.export(exports, "CircleChevronLeft", ()=>(0, _circleChevronLeftJsDefault.default));
parcelHelpers.export(exports, "CircleChevronLeftIcon", ()=>(0, _circleChevronLeftJsDefault.default));
parcelHelpers.export(exports, "LucideChevronLeftCircle", ()=>(0, _circleChevronLeftJsDefault.default));
parcelHelpers.export(exports, "LucideCircleChevronLeft", ()=>(0, _circleChevronLeftJsDefault.default));
parcelHelpers.export(exports, "ChevronRightCircle", ()=>(0, _circleChevronRightJsDefault.default));
parcelHelpers.export(exports, "ChevronRightCircleIcon", ()=>(0, _circleChevronRightJsDefault.default));
parcelHelpers.export(exports, "CircleChevronRight", ()=>(0, _circleChevronRightJsDefault.default));
parcelHelpers.export(exports, "CircleChevronRightIcon", ()=>(0, _circleChevronRightJsDefault.default));
parcelHelpers.export(exports, "LucideChevronRightCircle", ()=>(0, _circleChevronRightJsDefault.default));
parcelHelpers.export(exports, "LucideCircleChevronRight", ()=>(0, _circleChevronRightJsDefault.default));
parcelHelpers.export(exports, "ChevronDownCircle", ()=>(0, _circleChevronDownJsDefault.default));
parcelHelpers.export(exports, "ChevronDownCircleIcon", ()=>(0, _circleChevronDownJsDefault.default));
parcelHelpers.export(exports, "CircleChevronDown", ()=>(0, _circleChevronDownJsDefault.default));
parcelHelpers.export(exports, "CircleChevronDownIcon", ()=>(0, _circleChevronDownJsDefault.default));
parcelHelpers.export(exports, "LucideChevronDownCircle", ()=>(0, _circleChevronDownJsDefault.default));
parcelHelpers.export(exports, "LucideCircleChevronDown", ()=>(0, _circleChevronDownJsDefault.default));
parcelHelpers.export(exports, "ChevronUpCircle", ()=>(0, _circleChevronUpJsDefault.default));
parcelHelpers.export(exports, "ChevronUpCircleIcon", ()=>(0, _circleChevronUpJsDefault.default));
parcelHelpers.export(exports, "CircleChevronUp", ()=>(0, _circleChevronUpJsDefault.default));
parcelHelpers.export(exports, "CircleChevronUpIcon", ()=>(0, _circleChevronUpJsDefault.default));
parcelHelpers.export(exports, "LucideChevronUpCircle", ()=>(0, _circleChevronUpJsDefault.default));
parcelHelpers.export(exports, "LucideCircleChevronUp", ()=>(0, _circleChevronUpJsDefault.default));
parcelHelpers.export(exports, "CircleDivide", ()=>(0, _circleDivideJsDefault.default));
parcelHelpers.export(exports, "CircleDivideIcon", ()=>(0, _circleDivideJsDefault.default));
parcelHelpers.export(exports, "DivideCircle", ()=>(0, _circleDivideJsDefault.default));
parcelHelpers.export(exports, "DivideCircleIcon", ()=>(0, _circleDivideJsDefault.default));
parcelHelpers.export(exports, "LucideCircleDivide", ()=>(0, _circleDivideJsDefault.default));
parcelHelpers.export(exports, "LucideDivideCircle", ()=>(0, _circleDivideJsDefault.default));
parcelHelpers.export(exports, "CircleGauge", ()=>(0, _circleGaugeJsDefault.default));
parcelHelpers.export(exports, "CircleGaugeIcon", ()=>(0, _circleGaugeJsDefault.default));
parcelHelpers.export(exports, "GaugeCircle", ()=>(0, _circleGaugeJsDefault.default));
parcelHelpers.export(exports, "GaugeCircleIcon", ()=>(0, _circleGaugeJsDefault.default));
parcelHelpers.export(exports, "LucideCircleGauge", ()=>(0, _circleGaugeJsDefault.default));
parcelHelpers.export(exports, "LucideGaugeCircle", ()=>(0, _circleGaugeJsDefault.default));
parcelHelpers.export(exports, "CircleMinus", ()=>(0, _circleMinusJsDefault.default));
parcelHelpers.export(exports, "CircleMinusIcon", ()=>(0, _circleMinusJsDefault.default));
parcelHelpers.export(exports, "LucideCircleMinus", ()=>(0, _circleMinusJsDefault.default));
parcelHelpers.export(exports, "LucideMinusCircle", ()=>(0, _circleMinusJsDefault.default));
parcelHelpers.export(exports, "MinusCircle", ()=>(0, _circleMinusJsDefault.default));
parcelHelpers.export(exports, "MinusCircleIcon", ()=>(0, _circleMinusJsDefault.default));
parcelHelpers.export(exports, "CircleParkingOff", ()=>(0, _circleParkingOffJsDefault.default));
parcelHelpers.export(exports, "CircleParkingOffIcon", ()=>(0, _circleParkingOffJsDefault.default));
parcelHelpers.export(exports, "LucideCircleParkingOff", ()=>(0, _circleParkingOffJsDefault.default));
parcelHelpers.export(exports, "LucideParkingCircleOff", ()=>(0, _circleParkingOffJsDefault.default));
parcelHelpers.export(exports, "ParkingCircleOff", ()=>(0, _circleParkingOffJsDefault.default));
parcelHelpers.export(exports, "ParkingCircleOffIcon", ()=>(0, _circleParkingOffJsDefault.default));
parcelHelpers.export(exports, "CircleParking", ()=>(0, _circleParkingJsDefault.default));
parcelHelpers.export(exports, "CircleParkingIcon", ()=>(0, _circleParkingJsDefault.default));
parcelHelpers.export(exports, "LucideCircleParking", ()=>(0, _circleParkingJsDefault.default));
parcelHelpers.export(exports, "LucideParkingCircle", ()=>(0, _circleParkingJsDefault.default));
parcelHelpers.export(exports, "ParkingCircle", ()=>(0, _circleParkingJsDefault.default));
parcelHelpers.export(exports, "ParkingCircleIcon", ()=>(0, _circleParkingJsDefault.default));
parcelHelpers.export(exports, "CirclePause", ()=>(0, _circlePauseJsDefault.default));
parcelHelpers.export(exports, "CirclePauseIcon", ()=>(0, _circlePauseJsDefault.default));
parcelHelpers.export(exports, "LucideCirclePause", ()=>(0, _circlePauseJsDefault.default));
parcelHelpers.export(exports, "LucidePauseCircle", ()=>(0, _circlePauseJsDefault.default));
parcelHelpers.export(exports, "PauseCircle", ()=>(0, _circlePauseJsDefault.default));
parcelHelpers.export(exports, "PauseCircleIcon", ()=>(0, _circlePauseJsDefault.default));
parcelHelpers.export(exports, "CirclePercent", ()=>(0, _circlePercentJsDefault.default));
parcelHelpers.export(exports, "CirclePercentIcon", ()=>(0, _circlePercentJsDefault.default));
parcelHelpers.export(exports, "LucideCirclePercent", ()=>(0, _circlePercentJsDefault.default));
parcelHelpers.export(exports, "LucidePercentCircle", ()=>(0, _circlePercentJsDefault.default));
parcelHelpers.export(exports, "PercentCircle", ()=>(0, _circlePercentJsDefault.default));
parcelHelpers.export(exports, "PercentCircleIcon", ()=>(0, _circlePercentJsDefault.default));
parcelHelpers.export(exports, "CirclePlay", ()=>(0, _circlePlayJsDefault.default));
parcelHelpers.export(exports, "CirclePlayIcon", ()=>(0, _circlePlayJsDefault.default));
parcelHelpers.export(exports, "LucideCirclePlay", ()=>(0, _circlePlayJsDefault.default));
parcelHelpers.export(exports, "LucidePlayCircle", ()=>(0, _circlePlayJsDefault.default));
parcelHelpers.export(exports, "PlayCircle", ()=>(0, _circlePlayJsDefault.default));
parcelHelpers.export(exports, "PlayCircleIcon", ()=>(0, _circlePlayJsDefault.default));
parcelHelpers.export(exports, "CirclePlus", ()=>(0, _circlePlusJsDefault.default));
parcelHelpers.export(exports, "CirclePlusIcon", ()=>(0, _circlePlusJsDefault.default));
parcelHelpers.export(exports, "LucideCirclePlus", ()=>(0, _circlePlusJsDefault.default));
parcelHelpers.export(exports, "LucidePlusCircle", ()=>(0, _circlePlusJsDefault.default));
parcelHelpers.export(exports, "PlusCircle", ()=>(0, _circlePlusJsDefault.default));
parcelHelpers.export(exports, "PlusCircleIcon", ()=>(0, _circlePlusJsDefault.default));
parcelHelpers.export(exports, "CirclePower", ()=>(0, _circlePowerJsDefault.default));
parcelHelpers.export(exports, "CirclePowerIcon", ()=>(0, _circlePowerJsDefault.default));
parcelHelpers.export(exports, "LucideCirclePower", ()=>(0, _circlePowerJsDefault.default));
parcelHelpers.export(exports, "LucidePowerCircle", ()=>(0, _circlePowerJsDefault.default));
parcelHelpers.export(exports, "PowerCircle", ()=>(0, _circlePowerJsDefault.default));
parcelHelpers.export(exports, "PowerCircleIcon", ()=>(0, _circlePowerJsDefault.default));
parcelHelpers.export(exports, "CircleHelp", ()=>(0, _circleQuestionMarkJsDefault.default));
parcelHelpers.export(exports, "CircleHelpIcon", ()=>(0, _circleQuestionMarkJsDefault.default));
parcelHelpers.export(exports, "CircleQuestionMark", ()=>(0, _circleQuestionMarkJsDefault.default));
parcelHelpers.export(exports, "CircleQuestionMarkIcon", ()=>(0, _circleQuestionMarkJsDefault.default));
parcelHelpers.export(exports, "HelpCircle", ()=>(0, _circleQuestionMarkJsDefault.default));
parcelHelpers.export(exports, "HelpCircleIcon", ()=>(0, _circleQuestionMarkJsDefault.default));
parcelHelpers.export(exports, "LucideCircleHelp", ()=>(0, _circleQuestionMarkJsDefault.default));
parcelHelpers.export(exports, "LucideCircleQuestionMark", ()=>(0, _circleQuestionMarkJsDefault.default));
parcelHelpers.export(exports, "LucideHelpCircle", ()=>(0, _circleQuestionMarkJsDefault.default));
parcelHelpers.export(exports, "CircleSlash2", ()=>(0, _circleSlash2JsDefault.default));
parcelHelpers.export(exports, "CircleSlash2Icon", ()=>(0, _circleSlash2JsDefault.default));
parcelHelpers.export(exports, "CircleSlashed", ()=>(0, _circleSlash2JsDefault.default));
parcelHelpers.export(exports, "CircleSlashedIcon", ()=>(0, _circleSlash2JsDefault.default));
parcelHelpers.export(exports, "LucideCircleSlash2", ()=>(0, _circleSlash2JsDefault.default));
parcelHelpers.export(exports, "LucideCircleSlashed", ()=>(0, _circleSlash2JsDefault.default));
parcelHelpers.export(exports, "CircleStop", ()=>(0, _circleStopJsDefault.default));
parcelHelpers.export(exports, "CircleStopIcon", ()=>(0, _circleStopJsDefault.default));
parcelHelpers.export(exports, "LucideCircleStop", ()=>(0, _circleStopJsDefault.default));
parcelHelpers.export(exports, "LucideStopCircle", ()=>(0, _circleStopJsDefault.default));
parcelHelpers.export(exports, "StopCircle", ()=>(0, _circleStopJsDefault.default));
parcelHelpers.export(exports, "StopCircleIcon", ()=>(0, _circleStopJsDefault.default));
parcelHelpers.export(exports, "CircleUser", ()=>(0, _circleUserJsDefault.default));
parcelHelpers.export(exports, "CircleUserIcon", ()=>(0, _circleUserJsDefault.default));
parcelHelpers.export(exports, "LucideCircleUser", ()=>(0, _circleUserJsDefault.default));
parcelHelpers.export(exports, "LucideUserCircle", ()=>(0, _circleUserJsDefault.default));
parcelHelpers.export(exports, "UserCircle", ()=>(0, _circleUserJsDefault.default));
parcelHelpers.export(exports, "UserCircleIcon", ()=>(0, _circleUserJsDefault.default));
parcelHelpers.export(exports, "CircleX", ()=>(0, _circleXJsDefault.default));
parcelHelpers.export(exports, "CircleXIcon", ()=>(0, _circleXJsDefault.default));
parcelHelpers.export(exports, "LucideCircleX", ()=>(0, _circleXJsDefault.default));
parcelHelpers.export(exports, "LucideXCircle", ()=>(0, _circleXJsDefault.default));
parcelHelpers.export(exports, "XCircle", ()=>(0, _circleXJsDefault.default));
parcelHelpers.export(exports, "XCircleIcon", ()=>(0, _circleXJsDefault.default));
parcelHelpers.export(exports, "CircleUserRound", ()=>(0, _circleUserRoundJsDefault.default));
parcelHelpers.export(exports, "CircleUserRoundIcon", ()=>(0, _circleUserRoundJsDefault.default));
parcelHelpers.export(exports, "LucideCircleUserRound", ()=>(0, _circleUserRoundJsDefault.default));
parcelHelpers.export(exports, "LucideUserCircle2", ()=>(0, _circleUserRoundJsDefault.default));
parcelHelpers.export(exports, "UserCircle2", ()=>(0, _circleUserRoundJsDefault.default));
parcelHelpers.export(exports, "UserCircle2Icon", ()=>(0, _circleUserRoundJsDefault.default));
parcelHelpers.export(exports, "ClipboardPenLine", ()=>(0, _clipboardPenLineJsDefault.default));
parcelHelpers.export(exports, "ClipboardPenLineIcon", ()=>(0, _clipboardPenLineJsDefault.default));
parcelHelpers.export(exports, "ClipboardSignature", ()=>(0, _clipboardPenLineJsDefault.default));
parcelHelpers.export(exports, "ClipboardSignatureIcon", ()=>(0, _clipboardPenLineJsDefault.default));
parcelHelpers.export(exports, "LucideClipboardPenLine", ()=>(0, _clipboardPenLineJsDefault.default));
parcelHelpers.export(exports, "LucideClipboardSignature", ()=>(0, _clipboardPenLineJsDefault.default));
parcelHelpers.export(exports, "ClipboardEdit", ()=>(0, _clipboardPenJsDefault.default));
parcelHelpers.export(exports, "ClipboardEditIcon", ()=>(0, _clipboardPenJsDefault.default));
parcelHelpers.export(exports, "ClipboardPen", ()=>(0, _clipboardPenJsDefault.default));
parcelHelpers.export(exports, "ClipboardPenIcon", ()=>(0, _clipboardPenJsDefault.default));
parcelHelpers.export(exports, "LucideClipboardEdit", ()=>(0, _clipboardPenJsDefault.default));
parcelHelpers.export(exports, "LucideClipboardPen", ()=>(0, _clipboardPenJsDefault.default));
parcelHelpers.export(exports, "CloudDownload", ()=>(0, _cloudDownloadJsDefault.default));
parcelHelpers.export(exports, "CloudDownloadIcon", ()=>(0, _cloudDownloadJsDefault.default));
parcelHelpers.export(exports, "DownloadCloud", ()=>(0, _cloudDownloadJsDefault.default));
parcelHelpers.export(exports, "DownloadCloudIcon", ()=>(0, _cloudDownloadJsDefault.default));
parcelHelpers.export(exports, "LucideCloudDownload", ()=>(0, _cloudDownloadJsDefault.default));
parcelHelpers.export(exports, "LucideDownloadCloud", ()=>(0, _cloudDownloadJsDefault.default));
parcelHelpers.export(exports, "CloudUpload", ()=>(0, _cloudUploadJsDefault.default));
parcelHelpers.export(exports, "CloudUploadIcon", ()=>(0, _cloudUploadJsDefault.default));
parcelHelpers.export(exports, "LucideCloudUpload", ()=>(0, _cloudUploadJsDefault.default));
parcelHelpers.export(exports, "LucideUploadCloud", ()=>(0, _cloudUploadJsDefault.default));
parcelHelpers.export(exports, "UploadCloud", ()=>(0, _cloudUploadJsDefault.default));
parcelHelpers.export(exports, "UploadCloudIcon", ()=>(0, _cloudUploadJsDefault.default));
parcelHelpers.export(exports, "Code2", ()=>(0, _codeXmlJsDefault.default));
parcelHelpers.export(exports, "Code2Icon", ()=>(0, _codeXmlJsDefault.default));
parcelHelpers.export(exports, "CodeXml", ()=>(0, _codeXmlJsDefault.default));
parcelHelpers.export(exports, "CodeXmlIcon", ()=>(0, _codeXmlJsDefault.default));
parcelHelpers.export(exports, "LucideCode2", ()=>(0, _codeXmlJsDefault.default));
parcelHelpers.export(exports, "LucideCodeXml", ()=>(0, _codeXmlJsDefault.default));
parcelHelpers.export(exports, "Columns", ()=>(0, _columns2JsDefault.default));
parcelHelpers.export(exports, "Columns2", ()=>(0, _columns2JsDefault.default));
parcelHelpers.export(exports, "Columns2Icon", ()=>(0, _columns2JsDefault.default));
parcelHelpers.export(exports, "ColumnsIcon", ()=>(0, _columns2JsDefault.default));
parcelHelpers.export(exports, "LucideColumns", ()=>(0, _columns2JsDefault.default));
parcelHelpers.export(exports, "LucideColumns2", ()=>(0, _columns2JsDefault.default));
parcelHelpers.export(exports, "Columns3Cog", ()=>(0, _columns3CogJsDefault.default));
parcelHelpers.export(exports, "Columns3CogIcon", ()=>(0, _columns3CogJsDefault.default));
parcelHelpers.export(exports, "ColumnsSettings", ()=>(0, _columns3CogJsDefault.default));
parcelHelpers.export(exports, "ColumnsSettingsIcon", ()=>(0, _columns3CogJsDefault.default));
parcelHelpers.export(exports, "LucideColumns3Cog", ()=>(0, _columns3CogJsDefault.default));
parcelHelpers.export(exports, "LucideColumnsSettings", ()=>(0, _columns3CogJsDefault.default));
parcelHelpers.export(exports, "LucideTableConfig", ()=>(0, _columns3CogJsDefault.default));
parcelHelpers.export(exports, "TableConfig", ()=>(0, _columns3CogJsDefault.default));
parcelHelpers.export(exports, "TableConfigIcon", ()=>(0, _columns3CogJsDefault.default));
parcelHelpers.export(exports, "Columns3", ()=>(0, _columns3JsDefault.default));
parcelHelpers.export(exports, "Columns3Icon", ()=>(0, _columns3JsDefault.default));
parcelHelpers.export(exports, "LucideColumns3", ()=>(0, _columns3JsDefault.default));
parcelHelpers.export(exports, "LucidePanelsLeftRight", ()=>(0, _columns3JsDefault.default));
parcelHelpers.export(exports, "PanelsLeftRight", ()=>(0, _columns3JsDefault.default));
parcelHelpers.export(exports, "PanelsLeftRightIcon", ()=>(0, _columns3JsDefault.default));
parcelHelpers.export(exports, "Contact2", ()=>(0, _contactRoundJsDefault.default));
parcelHelpers.export(exports, "Contact2Icon", ()=>(0, _contactRoundJsDefault.default));
parcelHelpers.export(exports, "ContactRound", ()=>(0, _contactRoundJsDefault.default));
parcelHelpers.export(exports, "ContactRoundIcon", ()=>(0, _contactRoundJsDefault.default));
parcelHelpers.export(exports, "LucideContact2", ()=>(0, _contactRoundJsDefault.default));
parcelHelpers.export(exports, "LucideContactRound", ()=>(0, _contactRoundJsDefault.default));
parcelHelpers.export(exports, "DiamondPercent", ()=>(0, _diamondPercentJsDefault.default));
parcelHelpers.export(exports, "DiamondPercentIcon", ()=>(0, _diamondPercentJsDefault.default));
parcelHelpers.export(exports, "LucideDiamondPercent", ()=>(0, _diamondPercentJsDefault.default));
parcelHelpers.export(exports, "LucidePercentDiamond", ()=>(0, _diamondPercentJsDefault.default));
parcelHelpers.export(exports, "PercentDiamond", ()=>(0, _diamondPercentJsDefault.default));
parcelHelpers.export(exports, "PercentDiamondIcon", ()=>(0, _diamondPercentJsDefault.default));
parcelHelpers.export(exports, "Earth", ()=>(0, _earthJsDefault.default));
parcelHelpers.export(exports, "EarthIcon", ()=>(0, _earthJsDefault.default));
parcelHelpers.export(exports, "Globe2", ()=>(0, _earthJsDefault.default));
parcelHelpers.export(exports, "Globe2Icon", ()=>(0, _earthJsDefault.default));
parcelHelpers.export(exports, "LucideEarth", ()=>(0, _earthJsDefault.default));
parcelHelpers.export(exports, "LucideGlobe2", ()=>(0, _earthJsDefault.default));
parcelHelpers.export(exports, "EllipsisVertical", ()=>(0, _ellipsisVerticalJsDefault.default));
parcelHelpers.export(exports, "EllipsisVerticalIcon", ()=>(0, _ellipsisVerticalJsDefault.default));
parcelHelpers.export(exports, "LucideEllipsisVertical", ()=>(0, _ellipsisVerticalJsDefault.default));
parcelHelpers.export(exports, "LucideMoreVertical", ()=>(0, _ellipsisVerticalJsDefault.default));
parcelHelpers.export(exports, "MoreVertical", ()=>(0, _ellipsisVerticalJsDefault.default));
parcelHelpers.export(exports, "MoreVerticalIcon", ()=>(0, _ellipsisVerticalJsDefault.default));
parcelHelpers.export(exports, "Ellipsis", ()=>(0, _ellipsisJsDefault.default));
parcelHelpers.export(exports, "EllipsisIcon", ()=>(0, _ellipsisJsDefault.default));
parcelHelpers.export(exports, "LucideEllipsis", ()=>(0, _ellipsisJsDefault.default));
parcelHelpers.export(exports, "LucideMoreHorizontal", ()=>(0, _ellipsisJsDefault.default));
parcelHelpers.export(exports, "MoreHorizontal", ()=>(0, _ellipsisJsDefault.default));
parcelHelpers.export(exports, "MoreHorizontalIcon", ()=>(0, _ellipsisJsDefault.default));
parcelHelpers.export(exports, "FileAxis3D", ()=>(0, _fileAxis3DJsDefault.default));
parcelHelpers.export(exports, "FileAxis3DIcon", ()=>(0, _fileAxis3DJsDefault.default));
parcelHelpers.export(exports, "FileAxis3d", ()=>(0, _fileAxis3DJsDefault.default));
parcelHelpers.export(exports, "FileAxis3dIcon", ()=>(0, _fileAxis3DJsDefault.default));
parcelHelpers.export(exports, "LucideFileAxis3D", ()=>(0, _fileAxis3DJsDefault.default));
parcelHelpers.export(exports, "LucideFileAxis3d", ()=>(0, _fileAxis3DJsDefault.default));
parcelHelpers.export(exports, "FileBarChart", ()=>(0, _fileChartColumnIncreasingJsDefault.default));
parcelHelpers.export(exports, "FileBarChartIcon", ()=>(0, _fileChartColumnIncreasingJsDefault.default));
parcelHelpers.export(exports, "FileChartColumnIncreasing", ()=>(0, _fileChartColumnIncreasingJsDefault.default));
parcelHelpers.export(exports, "FileChartColumnIncreasingIcon", ()=>(0, _fileChartColumnIncreasingJsDefault.default));
parcelHelpers.export(exports, "LucideFileBarChart", ()=>(0, _fileChartColumnIncreasingJsDefault.default));
parcelHelpers.export(exports, "LucideFileChartColumnIncreasing", ()=>(0, _fileChartColumnIncreasingJsDefault.default));
parcelHelpers.export(exports, "FileBarChart2", ()=>(0, _fileChartColumnJsDefault.default));
parcelHelpers.export(exports, "FileBarChart2Icon", ()=>(0, _fileChartColumnJsDefault.default));
parcelHelpers.export(exports, "FileChartColumn", ()=>(0, _fileChartColumnJsDefault.default));
parcelHelpers.export(exports, "FileChartColumnIcon", ()=>(0, _fileChartColumnJsDefault.default));
parcelHelpers.export(exports, "LucideFileBarChart2", ()=>(0, _fileChartColumnJsDefault.default));
parcelHelpers.export(exports, "LucideFileChartColumn", ()=>(0, _fileChartColumnJsDefault.default));
parcelHelpers.export(exports, "FileChartLine", ()=>(0, _fileChartLineJsDefault.default));
parcelHelpers.export(exports, "FileChartLineIcon", ()=>(0, _fileChartLineJsDefault.default));
parcelHelpers.export(exports, "FileLineChart", ()=>(0, _fileChartLineJsDefault.default));
parcelHelpers.export(exports, "FileLineChartIcon", ()=>(0, _fileChartLineJsDefault.default));
parcelHelpers.export(exports, "LucideFileChartLine", ()=>(0, _fileChartLineJsDefault.default));
parcelHelpers.export(exports, "LucideFileLineChart", ()=>(0, _fileChartLineJsDefault.default));
parcelHelpers.export(exports, "FileChartPie", ()=>(0, _fileChartPieJsDefault.default));
parcelHelpers.export(exports, "FileChartPieIcon", ()=>(0, _fileChartPieJsDefault.default));
parcelHelpers.export(exports, "FilePieChart", ()=>(0, _fileChartPieJsDefault.default));
parcelHelpers.export(exports, "FilePieChartIcon", ()=>(0, _fileChartPieJsDefault.default));
parcelHelpers.export(exports, "LucideFileChartPie", ()=>(0, _fileChartPieJsDefault.default));
parcelHelpers.export(exports, "LucideFilePieChart", ()=>(0, _fileChartPieJsDefault.default));
parcelHelpers.export(exports, "FileCog", ()=>(0, _fileCogJsDefault.default));
parcelHelpers.export(exports, "FileCog2", ()=>(0, _fileCogJsDefault.default));
parcelHelpers.export(exports, "FileCog2Icon", ()=>(0, _fileCogJsDefault.default));
parcelHelpers.export(exports, "FileCogIcon", ()=>(0, _fileCogJsDefault.default));
parcelHelpers.export(exports, "LucideFileCog", ()=>(0, _fileCogJsDefault.default));
parcelHelpers.export(exports, "LucideFileCog2", ()=>(0, _fileCogJsDefault.default));
parcelHelpers.export(exports, "FilePenLine", ()=>(0, _filePenLineJsDefault.default));
parcelHelpers.export(exports, "FilePenLineIcon", ()=>(0, _filePenLineJsDefault.default));
parcelHelpers.export(exports, "FileSignature", ()=>(0, _filePenLineJsDefault.default));
parcelHelpers.export(exports, "FileSignatureIcon", ()=>(0, _filePenLineJsDefault.default));
parcelHelpers.export(exports, "LucideFilePenLine", ()=>(0, _filePenLineJsDefault.default));
parcelHelpers.export(exports, "LucideFileSignature", ()=>(0, _filePenLineJsDefault.default));
parcelHelpers.export(exports, "FileEdit", ()=>(0, _filePenJsDefault.default));
parcelHelpers.export(exports, "FileEditIcon", ()=>(0, _filePenJsDefault.default));
parcelHelpers.export(exports, "FilePen", ()=>(0, _filePenJsDefault.default));
parcelHelpers.export(exports, "FilePenIcon", ()=>(0, _filePenJsDefault.default));
parcelHelpers.export(exports, "LucideFileEdit", ()=>(0, _filePenJsDefault.default));
parcelHelpers.export(exports, "LucideFilePen", ()=>(0, _filePenJsDefault.default));
parcelHelpers.export(exports, "FilePlay", ()=>(0, _filePlayJsDefault.default));
parcelHelpers.export(exports, "FilePlayIcon", ()=>(0, _filePlayJsDefault.default));
parcelHelpers.export(exports, "FileVideo", ()=>(0, _filePlayJsDefault.default));
parcelHelpers.export(exports, "FileVideoIcon", ()=>(0, _filePlayJsDefault.default));
parcelHelpers.export(exports, "LucideFilePlay", ()=>(0, _filePlayJsDefault.default));
parcelHelpers.export(exports, "LucideFileVideo", ()=>(0, _filePlayJsDefault.default));
parcelHelpers.export(exports, "FileQuestion", ()=>(0, _fileQuestionMarkJsDefault.default));
parcelHelpers.export(exports, "FileQuestionIcon", ()=>(0, _fileQuestionMarkJsDefault.default));
parcelHelpers.export(exports, "FileQuestionMark", ()=>(0, _fileQuestionMarkJsDefault.default));
parcelHelpers.export(exports, "FileQuestionMarkIcon", ()=>(0, _fileQuestionMarkJsDefault.default));
parcelHelpers.export(exports, "LucideFileQuestion", ()=>(0, _fileQuestionMarkJsDefault.default));
parcelHelpers.export(exports, "LucideFileQuestionMark", ()=>(0, _fileQuestionMarkJsDefault.default));
parcelHelpers.export(exports, "FileVideo2", ()=>(0, _fileVideoCameraJsDefault.default));
parcelHelpers.export(exports, "FileVideo2Icon", ()=>(0, _fileVideoCameraJsDefault.default));
parcelHelpers.export(exports, "FileVideoCamera", ()=>(0, _fileVideoCameraJsDefault.default));
parcelHelpers.export(exports, "FileVideoCameraIcon", ()=>(0, _fileVideoCameraJsDefault.default));
parcelHelpers.export(exports, "LucideFileVideo2", ()=>(0, _fileVideoCameraJsDefault.default));
parcelHelpers.export(exports, "LucideFileVideoCamera", ()=>(0, _fileVideoCameraJsDefault.default));
parcelHelpers.export(exports, "FolderCog", ()=>(0, _folderCogJsDefault.default));
parcelHelpers.export(exports, "FolderCog2", ()=>(0, _folderCogJsDefault.default));
parcelHelpers.export(exports, "FolderCog2Icon", ()=>(0, _folderCogJsDefault.default));
parcelHelpers.export(exports, "FolderCogIcon", ()=>(0, _folderCogJsDefault.default));
parcelHelpers.export(exports, "LucideFolderCog", ()=>(0, _folderCogJsDefault.default));
parcelHelpers.export(exports, "LucideFolderCog2", ()=>(0, _folderCogJsDefault.default));
parcelHelpers.export(exports, "FolderEdit", ()=>(0, _folderPenJsDefault.default));
parcelHelpers.export(exports, "FolderEditIcon", ()=>(0, _folderPenJsDefault.default));
parcelHelpers.export(exports, "FolderPen", ()=>(0, _folderPenJsDefault.default));
parcelHelpers.export(exports, "FolderPenIcon", ()=>(0, _folderPenJsDefault.default));
parcelHelpers.export(exports, "LucideFolderEdit", ()=>(0, _folderPenJsDefault.default));
parcelHelpers.export(exports, "LucideFolderPen", ()=>(0, _folderPenJsDefault.default));
parcelHelpers.export(exports, "FilterX", ()=>(0, _funnelXJsDefault.default));
parcelHelpers.export(exports, "FilterXIcon", ()=>(0, _funnelXJsDefault.default));
parcelHelpers.export(exports, "FunnelX", ()=>(0, _funnelXJsDefault.default));
parcelHelpers.export(exports, "FunnelXIcon", ()=>(0, _funnelXJsDefault.default));
parcelHelpers.export(exports, "LucideFilterX", ()=>(0, _funnelXJsDefault.default));
parcelHelpers.export(exports, "LucideFunnelX", ()=>(0, _funnelXJsDefault.default));
parcelHelpers.export(exports, "Filter", ()=>(0, _funnelJsDefault.default));
parcelHelpers.export(exports, "FilterIcon", ()=>(0, _funnelJsDefault.default));
parcelHelpers.export(exports, "Funnel", ()=>(0, _funnelJsDefault.default));
parcelHelpers.export(exports, "FunnelIcon", ()=>(0, _funnelJsDefault.default));
parcelHelpers.export(exports, "LucideFilter", ()=>(0, _funnelJsDefault.default));
parcelHelpers.export(exports, "LucideFunnel", ()=>(0, _funnelJsDefault.default));
parcelHelpers.export(exports, "GitCommit", ()=>(0, _gitCommitHorizontalJsDefault.default));
parcelHelpers.export(exports, "GitCommitHorizontal", ()=>(0, _gitCommitHorizontalJsDefault.default));
parcelHelpers.export(exports, "GitCommitHorizontalIcon", ()=>(0, _gitCommitHorizontalJsDefault.default));
parcelHelpers.export(exports, "GitCommitIcon", ()=>(0, _gitCommitHorizontalJsDefault.default));
parcelHelpers.export(exports, "LucideGitCommit", ()=>(0, _gitCommitHorizontalJsDefault.default));
parcelHelpers.export(exports, "LucideGitCommitHorizontal", ()=>(0, _gitCommitHorizontalJsDefault.default));
parcelHelpers.export(exports, "Grid2X2Check", ()=>(0, _grid2X2CheckJsDefault.default));
parcelHelpers.export(exports, "Grid2X2CheckIcon", ()=>(0, _grid2X2CheckJsDefault.default));
parcelHelpers.export(exports, "Grid2x2Check", ()=>(0, _grid2X2CheckJsDefault.default));
parcelHelpers.export(exports, "Grid2x2CheckIcon", ()=>(0, _grid2X2CheckJsDefault.default));
parcelHelpers.export(exports, "LucideGrid2X2Check", ()=>(0, _grid2X2CheckJsDefault.default));
parcelHelpers.export(exports, "LucideGrid2x2Check", ()=>(0, _grid2X2CheckJsDefault.default));
parcelHelpers.export(exports, "Grid2X2Plus", ()=>(0, _grid2X2PlusJsDefault.default));
parcelHelpers.export(exports, "Grid2X2PlusIcon", ()=>(0, _grid2X2PlusJsDefault.default));
parcelHelpers.export(exports, "Grid2x2Plus", ()=>(0, _grid2X2PlusJsDefault.default));
parcelHelpers.export(exports, "Grid2x2PlusIcon", ()=>(0, _grid2X2PlusJsDefault.default));
parcelHelpers.export(exports, "LucideGrid2X2Plus", ()=>(0, _grid2X2PlusJsDefault.default));
parcelHelpers.export(exports, "LucideGrid2x2Plus", ()=>(0, _grid2X2PlusJsDefault.default));
parcelHelpers.export(exports, "Grid2X2X", ()=>(0, _grid2X2XJsDefault.default));
parcelHelpers.export(exports, "Grid2X2XIcon", ()=>(0, _grid2X2XJsDefault.default));
parcelHelpers.export(exports, "Grid2x2X", ()=>(0, _grid2X2XJsDefault.default));
parcelHelpers.export(exports, "Grid2x2XIcon", ()=>(0, _grid2X2XJsDefault.default));
parcelHelpers.export(exports, "LucideGrid2X2X", ()=>(0, _grid2X2XJsDefault.default));
parcelHelpers.export(exports, "LucideGrid2x2X", ()=>(0, _grid2X2XJsDefault.default));
parcelHelpers.export(exports, "Grid2X2", ()=>(0, _grid2X2JsDefault.default));
parcelHelpers.export(exports, "Grid2X2Icon", ()=>(0, _grid2X2JsDefault.default));
parcelHelpers.export(exports, "Grid2x2", ()=>(0, _grid2X2JsDefault.default));
parcelHelpers.export(exports, "Grid2x2Icon", ()=>(0, _grid2X2JsDefault.default));
parcelHelpers.export(exports, "LucideGrid2X2", ()=>(0, _grid2X2JsDefault.default));
parcelHelpers.export(exports, "LucideGrid2x2", ()=>(0, _grid2X2JsDefault.default));
parcelHelpers.export(exports, "Grid", ()=>(0, _grid3X3JsDefault.default));
parcelHelpers.export(exports, "Grid3X3", ()=>(0, _grid3X3JsDefault.default));
parcelHelpers.export(exports, "Grid3X3Icon", ()=>(0, _grid3X3JsDefault.default));
parcelHelpers.export(exports, "Grid3x3", ()=>(0, _grid3X3JsDefault.default));
parcelHelpers.export(exports, "Grid3x3Icon", ()=>(0, _grid3X3JsDefault.default));
parcelHelpers.export(exports, "GridIcon", ()=>(0, _grid3X3JsDefault.default));
parcelHelpers.export(exports, "LucideGrid", ()=>(0, _grid3X3JsDefault.default));
parcelHelpers.export(exports, "LucideGrid3X3", ()=>(0, _grid3X3JsDefault.default));
parcelHelpers.export(exports, "LucideGrid3x3", ()=>(0, _grid3X3JsDefault.default));
parcelHelpers.export(exports, "Grab", ()=>(0, _handGrabJsDefault.default));
parcelHelpers.export(exports, "GrabIcon", ()=>(0, _handGrabJsDefault.default));
parcelHelpers.export(exports, "HandGrab", ()=>(0, _handGrabJsDefault.default));
parcelHelpers.export(exports, "HandGrabIcon", ()=>(0, _handGrabJsDefault.default));
parcelHelpers.export(exports, "LucideGrab", ()=>(0, _handGrabJsDefault.default));
parcelHelpers.export(exports, "LucideHandGrab", ()=>(0, _handGrabJsDefault.default));
parcelHelpers.export(exports, "HandHelping", ()=>(0, _handHelpingJsDefault.default));
parcelHelpers.export(exports, "HandHelpingIcon", ()=>(0, _handHelpingJsDefault.default));
parcelHelpers.export(exports, "HelpingHand", ()=>(0, _handHelpingJsDefault.default));
parcelHelpers.export(exports, "HelpingHandIcon", ()=>(0, _handHelpingJsDefault.default));
parcelHelpers.export(exports, "LucideHandHelping", ()=>(0, _handHelpingJsDefault.default));
parcelHelpers.export(exports, "LucideHelpingHand", ()=>(0, _handHelpingJsDefault.default));
parcelHelpers.export(exports, "Home", ()=>(0, _houseJsDefault.default));
parcelHelpers.export(exports, "HomeIcon", ()=>(0, _houseJsDefault.default));
parcelHelpers.export(exports, "House", ()=>(0, _houseJsDefault.default));
parcelHelpers.export(exports, "HouseIcon", ()=>(0, _houseJsDefault.default));
parcelHelpers.export(exports, "LucideHome", ()=>(0, _houseJsDefault.default));
parcelHelpers.export(exports, "LucideHouse", ()=>(0, _houseJsDefault.default));
parcelHelpers.export(exports, "IceCream2", ()=>(0, _iceCreamBowlJsDefault.default));
parcelHelpers.export(exports, "IceCream2Icon", ()=>(0, _iceCreamBowlJsDefault.default));
parcelHelpers.export(exports, "IceCreamBowl", ()=>(0, _iceCreamBowlJsDefault.default));
parcelHelpers.export(exports, "IceCreamBowlIcon", ()=>(0, _iceCreamBowlJsDefault.default));
parcelHelpers.export(exports, "LucideIceCream2", ()=>(0, _iceCreamBowlJsDefault.default));
parcelHelpers.export(exports, "LucideIceCreamBowl", ()=>(0, _iceCreamBowlJsDefault.default));
parcelHelpers.export(exports, "IceCream", ()=>(0, _iceCreamConeJsDefault.default));
parcelHelpers.export(exports, "IceCreamCone", ()=>(0, _iceCreamConeJsDefault.default));
parcelHelpers.export(exports, "IceCreamConeIcon", ()=>(0, _iceCreamConeJsDefault.default));
parcelHelpers.export(exports, "IceCreamIcon", ()=>(0, _iceCreamConeJsDefault.default));
parcelHelpers.export(exports, "LucideIceCream", ()=>(0, _iceCreamConeJsDefault.default));
parcelHelpers.export(exports, "LucideIceCreamCone", ()=>(0, _iceCreamConeJsDefault.default));
parcelHelpers.export(exports, "Laptop2", ()=>(0, _laptopMinimalJsDefault.default));
parcelHelpers.export(exports, "Laptop2Icon", ()=>(0, _laptopMinimalJsDefault.default));
parcelHelpers.export(exports, "LaptopMinimal", ()=>(0, _laptopMinimalJsDefault.default));
parcelHelpers.export(exports, "LaptopMinimalIcon", ()=>(0, _laptopMinimalJsDefault.default));
parcelHelpers.export(exports, "LucideLaptop2", ()=>(0, _laptopMinimalJsDefault.default));
parcelHelpers.export(exports, "LucideLaptopMinimal", ()=>(0, _laptopMinimalJsDefault.default));
parcelHelpers.export(exports, "Layers", ()=>(0, _layersJsDefault.default));
parcelHelpers.export(exports, "Layers3", ()=>(0, _layersJsDefault.default));
parcelHelpers.export(exports, "Layers3Icon", ()=>(0, _layersJsDefault.default));
parcelHelpers.export(exports, "LayersIcon", ()=>(0, _layersJsDefault.default));
parcelHelpers.export(exports, "LucideLayers", ()=>(0, _layersJsDefault.default));
parcelHelpers.export(exports, "LucideLayers3", ()=>(0, _layersJsDefault.default));
parcelHelpers.export(exports, "IndentDecrease", ()=>(0, _listIndentDecreaseJsDefault.default));
parcelHelpers.export(exports, "IndentDecreaseIcon", ()=>(0, _listIndentDecreaseJsDefault.default));
parcelHelpers.export(exports, "ListIndentDecrease", ()=>(0, _listIndentDecreaseJsDefault.default));
parcelHelpers.export(exports, "ListIndentDecreaseIcon", ()=>(0, _listIndentDecreaseJsDefault.default));
parcelHelpers.export(exports, "LucideIndentDecrease", ()=>(0, _listIndentDecreaseJsDefault.default));
parcelHelpers.export(exports, "LucideListIndentDecrease", ()=>(0, _listIndentDecreaseJsDefault.default));
parcelHelpers.export(exports, "LucideOutdent", ()=>(0, _listIndentDecreaseJsDefault.default));
parcelHelpers.export(exports, "Outdent", ()=>(0, _listIndentDecreaseJsDefault.default));
parcelHelpers.export(exports, "OutdentIcon", ()=>(0, _listIndentDecreaseJsDefault.default));
parcelHelpers.export(exports, "Indent", ()=>(0, _listIndentIncreaseJsDefault.default));
parcelHelpers.export(exports, "IndentIcon", ()=>(0, _listIndentIncreaseJsDefault.default));
parcelHelpers.export(exports, "IndentIncrease", ()=>(0, _listIndentIncreaseJsDefault.default));
parcelHelpers.export(exports, "IndentIncreaseIcon", ()=>(0, _listIndentIncreaseJsDefault.default));
parcelHelpers.export(exports, "ListIndentIncrease", ()=>(0, _listIndentIncreaseJsDefault.default));
parcelHelpers.export(exports, "ListIndentIncreaseIcon", ()=>(0, _listIndentIncreaseJsDefault.default));
parcelHelpers.export(exports, "LucideIndent", ()=>(0, _listIndentIncreaseJsDefault.default));
parcelHelpers.export(exports, "LucideIndentIncrease", ()=>(0, _listIndentIncreaseJsDefault.default));
parcelHelpers.export(exports, "LucideListIndentIncrease", ()=>(0, _listIndentIncreaseJsDefault.default));
parcelHelpers.export(exports, "Loader2", ()=>(0, _loaderCircleJsDefault.default));
parcelHelpers.export(exports, "Loader2Icon", ()=>(0, _loaderCircleJsDefault.default));
parcelHelpers.export(exports, "LoaderCircle", ()=>(0, _loaderCircleJsDefault.default));
parcelHelpers.export(exports, "LoaderCircleIcon", ()=>(0, _loaderCircleJsDefault.default));
parcelHelpers.export(exports, "LucideLoader2", ()=>(0, _loaderCircleJsDefault.default));
parcelHelpers.export(exports, "LucideLoaderCircle", ()=>(0, _loaderCircleJsDefault.default));
parcelHelpers.export(exports, "LockKeyholeOpen", ()=>(0, _lockKeyholeOpenJsDefault.default));
parcelHelpers.export(exports, "LockKeyholeOpenIcon", ()=>(0, _lockKeyholeOpenJsDefault.default));
parcelHelpers.export(exports, "LucideLockKeyholeOpen", ()=>(0, _lockKeyholeOpenJsDefault.default));
parcelHelpers.export(exports, "LucideUnlockKeyhole", ()=>(0, _lockKeyholeOpenJsDefault.default));
parcelHelpers.export(exports, "UnlockKeyhole", ()=>(0, _lockKeyholeOpenJsDefault.default));
parcelHelpers.export(exports, "UnlockKeyholeIcon", ()=>(0, _lockKeyholeOpenJsDefault.default));
parcelHelpers.export(exports, "LockOpen", ()=>(0, _lockOpenJsDefault.default));
parcelHelpers.export(exports, "LockOpenIcon", ()=>(0, _lockOpenJsDefault.default));
parcelHelpers.export(exports, "LucideLockOpen", ()=>(0, _lockOpenJsDefault.default));
parcelHelpers.export(exports, "LucideUnlock", ()=>(0, _lockOpenJsDefault.default));
parcelHelpers.export(exports, "Unlock", ()=>(0, _lockOpenJsDefault.default));
parcelHelpers.export(exports, "UnlockIcon", ()=>(0, _lockOpenJsDefault.default));
parcelHelpers.export(exports, "LucideMailQuestion", ()=>(0, _mailQuestionMarkJsDefault.default));
parcelHelpers.export(exports, "LucideMailQuestionMark", ()=>(0, _mailQuestionMarkJsDefault.default));
parcelHelpers.export(exports, "MailQuestion", ()=>(0, _mailQuestionMarkJsDefault.default));
parcelHelpers.export(exports, "MailQuestionIcon", ()=>(0, _mailQuestionMarkJsDefault.default));
parcelHelpers.export(exports, "MailQuestionMark", ()=>(0, _mailQuestionMarkJsDefault.default));
parcelHelpers.export(exports, "MailQuestionMarkIcon", ()=>(0, _mailQuestionMarkJsDefault.default));
parcelHelpers.export(exports, "LocationEdit", ()=>(0, _mapPinPenJsDefault.default));
parcelHelpers.export(exports, "LocationEditIcon", ()=>(0, _mapPinPenJsDefault.default));
parcelHelpers.export(exports, "LucideLocationEdit", ()=>(0, _mapPinPenJsDefault.default));
parcelHelpers.export(exports, "LucideMapPinPen", ()=>(0, _mapPinPenJsDefault.default));
parcelHelpers.export(exports, "MapPinPen", ()=>(0, _mapPinPenJsDefault.default));
parcelHelpers.export(exports, "MapPinPenIcon", ()=>(0, _mapPinPenJsDefault.default));
parcelHelpers.export(exports, "LucideMessageCircleQuestion", ()=>(0, _messageCircleQuestionMarkJsDefault.default));
parcelHelpers.export(exports, "LucideMessageCircleQuestionMark", ()=>(0, _messageCircleQuestionMarkJsDefault.default));
parcelHelpers.export(exports, "MessageCircleQuestion", ()=>(0, _messageCircleQuestionMarkJsDefault.default));
parcelHelpers.export(exports, "MessageCircleQuestionIcon", ()=>(0, _messageCircleQuestionMarkJsDefault.default));
parcelHelpers.export(exports, "MessageCircleQuestionMark", ()=>(0, _messageCircleQuestionMarkJsDefault.default));
parcelHelpers.export(exports, "MessageCircleQuestionMarkIcon", ()=>(0, _messageCircleQuestionMarkJsDefault.default));
parcelHelpers.export(exports, "LucideMic2", ()=>(0, _micVocalJsDefault.default));
parcelHelpers.export(exports, "LucideMicVocal", ()=>(0, _micVocalJsDefault.default));
parcelHelpers.export(exports, "Mic2", ()=>(0, _micVocalJsDefault.default));
parcelHelpers.export(exports, "Mic2Icon", ()=>(0, _micVocalJsDefault.default));
parcelHelpers.export(exports, "MicVocal", ()=>(0, _micVocalJsDefault.default));
parcelHelpers.export(exports, "MicVocalIcon", ()=>(0, _micVocalJsDefault.default));
parcelHelpers.export(exports, "LucideMove3D", ()=>(0, _move3DJsDefault.default));
parcelHelpers.export(exports, "LucideMove3d", ()=>(0, _move3DJsDefault.default));
parcelHelpers.export(exports, "Move3D", ()=>(0, _move3DJsDefault.default));
parcelHelpers.export(exports, "Move3DIcon", ()=>(0, _move3DJsDefault.default));
parcelHelpers.export(exports, "Move3d", ()=>(0, _move3DJsDefault.default));
parcelHelpers.export(exports, "Move3dIcon", ()=>(0, _move3DJsDefault.default));
parcelHelpers.export(exports, "AlertOctagon", ()=>(0, _octagonAlertJsDefault.default));
parcelHelpers.export(exports, "AlertOctagonIcon", ()=>(0, _octagonAlertJsDefault.default));
parcelHelpers.export(exports, "LucideAlertOctagon", ()=>(0, _octagonAlertJsDefault.default));
parcelHelpers.export(exports, "LucideOctagonAlert", ()=>(0, _octagonAlertJsDefault.default));
parcelHelpers.export(exports, "OctagonAlert", ()=>(0, _octagonAlertJsDefault.default));
parcelHelpers.export(exports, "OctagonAlertIcon", ()=>(0, _octagonAlertJsDefault.default));
parcelHelpers.export(exports, "LucideOctagonPause", ()=>(0, _octagonPauseJsDefault.default));
parcelHelpers.export(exports, "LucidePauseOctagon", ()=>(0, _octagonPauseJsDefault.default));
parcelHelpers.export(exports, "OctagonPause", ()=>(0, _octagonPauseJsDefault.default));
parcelHelpers.export(exports, "OctagonPauseIcon", ()=>(0, _octagonPauseJsDefault.default));
parcelHelpers.export(exports, "PauseOctagon", ()=>(0, _octagonPauseJsDefault.default));
parcelHelpers.export(exports, "PauseOctagonIcon", ()=>(0, _octagonPauseJsDefault.default));
parcelHelpers.export(exports, "LucideOctagonX", ()=>(0, _octagonXJsDefault.default));
parcelHelpers.export(exports, "LucideXOctagon", ()=>(0, _octagonXJsDefault.default));
parcelHelpers.export(exports, "OctagonX", ()=>(0, _octagonXJsDefault.default));
parcelHelpers.export(exports, "OctagonXIcon", ()=>(0, _octagonXJsDefault.default));
parcelHelpers.export(exports, "XOctagon", ()=>(0, _octagonXJsDefault.default));
parcelHelpers.export(exports, "XOctagonIcon", ()=>(0, _octagonXJsDefault.default));
parcelHelpers.export(exports, "LucidePaintbrush2", ()=>(0, _paintbrushVerticalJsDefault.default));
parcelHelpers.export(exports, "LucidePaintbrushVertical", ()=>(0, _paintbrushVerticalJsDefault.default));
parcelHelpers.export(exports, "Paintbrush2", ()=>(0, _paintbrushVerticalJsDefault.default));
parcelHelpers.export(exports, "Paintbrush2Icon", ()=>(0, _paintbrushVerticalJsDefault.default));
parcelHelpers.export(exports, "PaintbrushVertical", ()=>(0, _paintbrushVerticalJsDefault.default));
parcelHelpers.export(exports, "PaintbrushVerticalIcon", ()=>(0, _paintbrushVerticalJsDefault.default));
parcelHelpers.export(exports, "LucidePanelBottomDashed", ()=>(0, _panelBottomDashedJsDefault.default));
parcelHelpers.export(exports, "LucidePanelBottomInactive", ()=>(0, _panelBottomDashedJsDefault.default));
parcelHelpers.export(exports, "PanelBottomDashed", ()=>(0, _panelBottomDashedJsDefault.default));
parcelHelpers.export(exports, "PanelBottomDashedIcon", ()=>(0, _panelBottomDashedJsDefault.default));
parcelHelpers.export(exports, "PanelBottomInactive", ()=>(0, _panelBottomDashedJsDefault.default));
parcelHelpers.export(exports, "PanelBottomInactiveIcon", ()=>(0, _panelBottomDashedJsDefault.default));
parcelHelpers.export(exports, "LucidePanelLeftClose", ()=>(0, _panelLeftCloseJsDefault.default));
parcelHelpers.export(exports, "LucideSidebarClose", ()=>(0, _panelLeftCloseJsDefault.default));
parcelHelpers.export(exports, "PanelLeftClose", ()=>(0, _panelLeftCloseJsDefault.default));
parcelHelpers.export(exports, "PanelLeftCloseIcon", ()=>(0, _panelLeftCloseJsDefault.default));
parcelHelpers.export(exports, "SidebarClose", ()=>(0, _panelLeftCloseJsDefault.default));
parcelHelpers.export(exports, "SidebarCloseIcon", ()=>(0, _panelLeftCloseJsDefault.default));
parcelHelpers.export(exports, "LucidePanelLeftDashed", ()=>(0, _panelLeftDashedJsDefault.default));
parcelHelpers.export(exports, "LucidePanelLeftInactive", ()=>(0, _panelLeftDashedJsDefault.default));
parcelHelpers.export(exports, "PanelLeftDashed", ()=>(0, _panelLeftDashedJsDefault.default));
parcelHelpers.export(exports, "PanelLeftDashedIcon", ()=>(0, _panelLeftDashedJsDefault.default));
parcelHelpers.export(exports, "PanelLeftInactive", ()=>(0, _panelLeftDashedJsDefault.default));
parcelHelpers.export(exports, "PanelLeftInactiveIcon", ()=>(0, _panelLeftDashedJsDefault.default));
parcelHelpers.export(exports, "LucidePanelLeftOpen", ()=>(0, _panelLeftOpenJsDefault.default));
parcelHelpers.export(exports, "LucideSidebarOpen", ()=>(0, _panelLeftOpenJsDefault.default));
parcelHelpers.export(exports, "PanelLeftOpen", ()=>(0, _panelLeftOpenJsDefault.default));
parcelHelpers.export(exports, "PanelLeftOpenIcon", ()=>(0, _panelLeftOpenJsDefault.default));
parcelHelpers.export(exports, "SidebarOpen", ()=>(0, _panelLeftOpenJsDefault.default));
parcelHelpers.export(exports, "SidebarOpenIcon", ()=>(0, _panelLeftOpenJsDefault.default));
parcelHelpers.export(exports, "LucidePanelLeft", ()=>(0, _panelLeftJsDefault.default));
parcelHelpers.export(exports, "LucideSidebar", ()=>(0, _panelLeftJsDefault.default));
parcelHelpers.export(exports, "PanelLeft", ()=>(0, _panelLeftJsDefault.default));
parcelHelpers.export(exports, "PanelLeftIcon", ()=>(0, _panelLeftJsDefault.default));
parcelHelpers.export(exports, "Sidebar", ()=>(0, _panelLeftJsDefault.default));
parcelHelpers.export(exports, "SidebarIcon", ()=>(0, _panelLeftJsDefault.default));
parcelHelpers.export(exports, "LucidePanelRightDashed", ()=>(0, _panelRightDashedJsDefault.default));
parcelHelpers.export(exports, "LucidePanelRightInactive", ()=>(0, _panelRightDashedJsDefault.default));
parcelHelpers.export(exports, "PanelRightDashed", ()=>(0, _panelRightDashedJsDefault.default));
parcelHelpers.export(exports, "PanelRightDashedIcon", ()=>(0, _panelRightDashedJsDefault.default));
parcelHelpers.export(exports, "PanelRightInactive", ()=>(0, _panelRightDashedJsDefault.default));
parcelHelpers.export(exports, "PanelRightInactiveIcon", ()=>(0, _panelRightDashedJsDefault.default));
parcelHelpers.export(exports, "LucidePanelTopDashed", ()=>(0, _panelTopDashedJsDefault.default));
parcelHelpers.export(exports, "LucidePanelTopInactive", ()=>(0, _panelTopDashedJsDefault.default));
parcelHelpers.export(exports, "PanelTopDashed", ()=>(0, _panelTopDashedJsDefault.default));
parcelHelpers.export(exports, "PanelTopDashedIcon", ()=>(0, _panelTopDashedJsDefault.default));
parcelHelpers.export(exports, "PanelTopInactive", ()=>(0, _panelTopDashedJsDefault.default));
parcelHelpers.export(exports, "PanelTopInactiveIcon", ()=>(0, _panelTopDashedJsDefault.default));
parcelHelpers.export(exports, "Layout", ()=>(0, _panelsTopLeftJsDefault.default));
parcelHelpers.export(exports, "LayoutIcon", ()=>(0, _panelsTopLeftJsDefault.default));
parcelHelpers.export(exports, "LucideLayout", ()=>(0, _panelsTopLeftJsDefault.default));
parcelHelpers.export(exports, "LucidePanelsTopLeft", ()=>(0, _panelsTopLeftJsDefault.default));
parcelHelpers.export(exports, "PanelsTopLeft", ()=>(0, _panelsTopLeftJsDefault.default));
parcelHelpers.export(exports, "PanelsTopLeftIcon", ()=>(0, _panelsTopLeftJsDefault.default));
parcelHelpers.export(exports, "Edit3", ()=>(0, _penLineJsDefault.default));
parcelHelpers.export(exports, "Edit3Icon", ()=>(0, _penLineJsDefault.default));
parcelHelpers.export(exports, "LucideEdit3", ()=>(0, _penLineJsDefault.default));
parcelHelpers.export(exports, "LucidePenLine", ()=>(0, _penLineJsDefault.default));
parcelHelpers.export(exports, "PenLine", ()=>(0, _penLineJsDefault.default));
parcelHelpers.export(exports, "PenLineIcon", ()=>(0, _penLineJsDefault.default));
parcelHelpers.export(exports, "Edit2", ()=>(0, _penJsDefault.default));
parcelHelpers.export(exports, "Edit2Icon", ()=>(0, _penJsDefault.default));
parcelHelpers.export(exports, "LucideEdit2", ()=>(0, _penJsDefault.default));
parcelHelpers.export(exports, "LucidePen", ()=>(0, _penJsDefault.default));
parcelHelpers.export(exports, "Pen", ()=>(0, _penJsDefault.default));
parcelHelpers.export(exports, "PenIcon", ()=>(0, _penJsDefault.default));
parcelHelpers.export(exports, "LucidePlugZap", ()=>(0, _plugZapJsDefault.default));
parcelHelpers.export(exports, "LucidePlugZap2", ()=>(0, _plugZapJsDefault.default));
parcelHelpers.export(exports, "PlugZap", ()=>(0, _plugZapJsDefault.default));
parcelHelpers.export(exports, "PlugZap2", ()=>(0, _plugZapJsDefault.default));
parcelHelpers.export(exports, "PlugZap2Icon", ()=>(0, _plugZapJsDefault.default));
parcelHelpers.export(exports, "PlugZapIcon", ()=>(0, _plugZapJsDefault.default));
parcelHelpers.export(exports, "FormInput", ()=>(0, _rectangleEllipsisJsDefault.default));
parcelHelpers.export(exports, "FormInputIcon", ()=>(0, _rectangleEllipsisJsDefault.default));
parcelHelpers.export(exports, "LucideFormInput", ()=>(0, _rectangleEllipsisJsDefault.default));
parcelHelpers.export(exports, "LucideRectangleEllipsis", ()=>(0, _rectangleEllipsisJsDefault.default));
parcelHelpers.export(exports, "RectangleEllipsis", ()=>(0, _rectangleEllipsisJsDefault.default));
parcelHelpers.export(exports, "RectangleEllipsisIcon", ()=>(0, _rectangleEllipsisJsDefault.default));
parcelHelpers.export(exports, "LucideRotate3D", ()=>(0, _rotate3DJsDefault.default));
parcelHelpers.export(exports, "LucideRotate3d", ()=>(0, _rotate3DJsDefault.default));
parcelHelpers.export(exports, "Rotate3D", ()=>(0, _rotate3DJsDefault.default));
parcelHelpers.export(exports, "Rotate3DIcon", ()=>(0, _rotate3DJsDefault.default));
parcelHelpers.export(exports, "Rotate3d", ()=>(0, _rotate3DJsDefault.default));
parcelHelpers.export(exports, "Rotate3dIcon", ()=>(0, _rotate3DJsDefault.default));
parcelHelpers.export(exports, "LucideRows", ()=>(0, _rows2JsDefault.default));
parcelHelpers.export(exports, "LucideRows2", ()=>(0, _rows2JsDefault.default));
parcelHelpers.export(exports, "Rows", ()=>(0, _rows2JsDefault.default));
parcelHelpers.export(exports, "Rows2", ()=>(0, _rows2JsDefault.default));
parcelHelpers.export(exports, "Rows2Icon", ()=>(0, _rows2JsDefault.default));
parcelHelpers.export(exports, "RowsIcon", ()=>(0, _rows2JsDefault.default));
parcelHelpers.export(exports, "LucidePanelsTopBottom", ()=>(0, _rows3JsDefault.default));
parcelHelpers.export(exports, "LucideRows3", ()=>(0, _rows3JsDefault.default));
parcelHelpers.export(exports, "PanelsTopBottom", ()=>(0, _rows3JsDefault.default));
parcelHelpers.export(exports, "PanelsTopBottomIcon", ()=>(0, _rows3JsDefault.default));
parcelHelpers.export(exports, "Rows3", ()=>(0, _rows3JsDefault.default));
parcelHelpers.export(exports, "Rows3Icon", ()=>(0, _rows3JsDefault.default));
parcelHelpers.export(exports, "LucideScale3D", ()=>(0, _scale3DJsDefault.default));
parcelHelpers.export(exports, "LucideScale3d", ()=>(0, _scale3DJsDefault.default));
parcelHelpers.export(exports, "Scale3D", ()=>(0, _scale3DJsDefault.default));
parcelHelpers.export(exports, "Scale3DIcon", ()=>(0, _scale3DJsDefault.default));
parcelHelpers.export(exports, "Scale3d", ()=>(0, _scale3DJsDefault.default));
parcelHelpers.export(exports, "Scale3dIcon", ()=>(0, _scale3DJsDefault.default));
parcelHelpers.export(exports, "LucideSendHorizonal", ()=>(0, _sendHorizontalJsDefault.default));
parcelHelpers.export(exports, "LucideSendHorizontal", ()=>(0, _sendHorizontalJsDefault.default));
parcelHelpers.export(exports, "SendHorizonal", ()=>(0, _sendHorizontalJsDefault.default));
parcelHelpers.export(exports, "SendHorizonalIcon", ()=>(0, _sendHorizontalJsDefault.default));
parcelHelpers.export(exports, "SendHorizontal", ()=>(0, _sendHorizontalJsDefault.default));
parcelHelpers.export(exports, "SendHorizontalIcon", ()=>(0, _sendHorizontalJsDefault.default));
parcelHelpers.export(exports, "LucideShieldQuestion", ()=>(0, _shieldQuestionMarkJsDefault.default));
parcelHelpers.export(exports, "LucideShieldQuestionMark", ()=>(0, _shieldQuestionMarkJsDefault.default));
parcelHelpers.export(exports, "ShieldQuestion", ()=>(0, _shieldQuestionMarkJsDefault.default));
parcelHelpers.export(exports, "ShieldQuestionIcon", ()=>(0, _shieldQuestionMarkJsDefault.default));
parcelHelpers.export(exports, "ShieldQuestionMark", ()=>(0, _shieldQuestionMarkJsDefault.default));
parcelHelpers.export(exports, "ShieldQuestionMarkIcon", ()=>(0, _shieldQuestionMarkJsDefault.default));
parcelHelpers.export(exports, "LucideShieldClose", ()=>(0, _shieldXJsDefault.default));
parcelHelpers.export(exports, "LucideShieldX", ()=>(0, _shieldXJsDefault.default));
parcelHelpers.export(exports, "ShieldClose", ()=>(0, _shieldXJsDefault.default));
parcelHelpers.export(exports, "ShieldCloseIcon", ()=>(0, _shieldXJsDefault.default));
parcelHelpers.export(exports, "ShieldX", ()=>(0, _shieldXJsDefault.default));
parcelHelpers.export(exports, "ShieldXIcon", ()=>(0, _shieldXJsDefault.default));
parcelHelpers.export(exports, "LucideSliders", ()=>(0, _slidersVerticalJsDefault.default));
parcelHelpers.export(exports, "LucideSlidersVertical", ()=>(0, _slidersVerticalJsDefault.default));
parcelHelpers.export(exports, "Sliders", ()=>(0, _slidersVerticalJsDefault.default));
parcelHelpers.export(exports, "SlidersIcon", ()=>(0, _slidersVerticalJsDefault.default));
parcelHelpers.export(exports, "SlidersVertical", ()=>(0, _slidersVerticalJsDefault.default));
parcelHelpers.export(exports, "SlidersVerticalIcon", ()=>(0, _slidersVerticalJsDefault.default));
parcelHelpers.export(exports, "LucideSparkles", ()=>(0, _sparklesJsDefault.default));
parcelHelpers.export(exports, "LucideStars", ()=>(0, _sparklesJsDefault.default));
parcelHelpers.export(exports, "Sparkles", ()=>(0, _sparklesJsDefault.default));
parcelHelpers.export(exports, "SparklesIcon", ()=>(0, _sparklesJsDefault.default));
parcelHelpers.export(exports, "Stars", ()=>(0, _sparklesJsDefault.default));
parcelHelpers.export(exports, "StarsIcon", ()=>(0, _sparklesJsDefault.default));
parcelHelpers.export(exports, "ActivitySquare", ()=>(0, _squareActivityJsDefault.default));
parcelHelpers.export(exports, "ActivitySquareIcon", ()=>(0, _squareActivityJsDefault.default));
parcelHelpers.export(exports, "LucideActivitySquare", ()=>(0, _squareActivityJsDefault.default));
parcelHelpers.export(exports, "LucideSquareActivity", ()=>(0, _squareActivityJsDefault.default));
parcelHelpers.export(exports, "SquareActivity", ()=>(0, _squareActivityJsDefault.default));
parcelHelpers.export(exports, "SquareActivityIcon", ()=>(0, _squareActivityJsDefault.default));
parcelHelpers.export(exports, "ArrowDownLeftSquare", ()=>(0, _squareArrowDownLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowDownLeftSquareIcon", ()=>(0, _squareArrowDownLeftJsDefault.default));
parcelHelpers.export(exports, "LucideArrowDownLeftSquare", ()=>(0, _squareArrowDownLeftJsDefault.default));
parcelHelpers.export(exports, "LucideSquareArrowDownLeft", ()=>(0, _squareArrowDownLeftJsDefault.default));
parcelHelpers.export(exports, "SquareArrowDownLeft", ()=>(0, _squareArrowDownLeftJsDefault.default));
parcelHelpers.export(exports, "SquareArrowDownLeftIcon", ()=>(0, _squareArrowDownLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowDownRightSquare", ()=>(0, _squareArrowDownRightJsDefault.default));
parcelHelpers.export(exports, "ArrowDownRightSquareIcon", ()=>(0, _squareArrowDownRightJsDefault.default));
parcelHelpers.export(exports, "LucideArrowDownRightSquare", ()=>(0, _squareArrowDownRightJsDefault.default));
parcelHelpers.export(exports, "LucideSquareArrowDownRight", ()=>(0, _squareArrowDownRightJsDefault.default));
parcelHelpers.export(exports, "SquareArrowDownRight", ()=>(0, _squareArrowDownRightJsDefault.default));
parcelHelpers.export(exports, "SquareArrowDownRightIcon", ()=>(0, _squareArrowDownRightJsDefault.default));
parcelHelpers.export(exports, "ArrowLeftSquare", ()=>(0, _squareArrowLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowLeftSquareIcon", ()=>(0, _squareArrowLeftJsDefault.default));
parcelHelpers.export(exports, "LucideArrowLeftSquare", ()=>(0, _squareArrowLeftJsDefault.default));
parcelHelpers.export(exports, "LucideSquareArrowLeft", ()=>(0, _squareArrowLeftJsDefault.default));
parcelHelpers.export(exports, "SquareArrowLeft", ()=>(0, _squareArrowLeftJsDefault.default));
parcelHelpers.export(exports, "SquareArrowLeftIcon", ()=>(0, _squareArrowLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowDownSquare", ()=>(0, _squareArrowDownJsDefault.default));
parcelHelpers.export(exports, "ArrowDownSquareIcon", ()=>(0, _squareArrowDownJsDefault.default));
parcelHelpers.export(exports, "LucideArrowDownSquare", ()=>(0, _squareArrowDownJsDefault.default));
parcelHelpers.export(exports, "LucideSquareArrowDown", ()=>(0, _squareArrowDownJsDefault.default));
parcelHelpers.export(exports, "SquareArrowDown", ()=>(0, _squareArrowDownJsDefault.default));
parcelHelpers.export(exports, "SquareArrowDownIcon", ()=>(0, _squareArrowDownJsDefault.default));
parcelHelpers.export(exports, "ArrowDownLeftFromSquare", ()=>(0, _squareArrowOutDownLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowDownLeftFromSquareIcon", ()=>(0, _squareArrowOutDownLeftJsDefault.default));
parcelHelpers.export(exports, "LucideArrowDownLeftFromSquare", ()=>(0, _squareArrowOutDownLeftJsDefault.default));
parcelHelpers.export(exports, "LucideSquareArrowOutDownLeft", ()=>(0, _squareArrowOutDownLeftJsDefault.default));
parcelHelpers.export(exports, "SquareArrowOutDownLeft", ()=>(0, _squareArrowOutDownLeftJsDefault.default));
parcelHelpers.export(exports, "SquareArrowOutDownLeftIcon", ()=>(0, _squareArrowOutDownLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowDownRightFromSquare", ()=>(0, _squareArrowOutDownRightJsDefault.default));
parcelHelpers.export(exports, "ArrowDownRightFromSquareIcon", ()=>(0, _squareArrowOutDownRightJsDefault.default));
parcelHelpers.export(exports, "LucideArrowDownRightFromSquare", ()=>(0, _squareArrowOutDownRightJsDefault.default));
parcelHelpers.export(exports, "LucideSquareArrowOutDownRight", ()=>(0, _squareArrowOutDownRightJsDefault.default));
parcelHelpers.export(exports, "SquareArrowOutDownRight", ()=>(0, _squareArrowOutDownRightJsDefault.default));
parcelHelpers.export(exports, "SquareArrowOutDownRightIcon", ()=>(0, _squareArrowOutDownRightJsDefault.default));
parcelHelpers.export(exports, "ArrowUpLeftFromSquare", ()=>(0, _squareArrowOutUpLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowUpLeftFromSquareIcon", ()=>(0, _squareArrowOutUpLeftJsDefault.default));
parcelHelpers.export(exports, "LucideArrowUpLeftFromSquare", ()=>(0, _squareArrowOutUpLeftJsDefault.default));
parcelHelpers.export(exports, "LucideSquareArrowOutUpLeft", ()=>(0, _squareArrowOutUpLeftJsDefault.default));
parcelHelpers.export(exports, "SquareArrowOutUpLeft", ()=>(0, _squareArrowOutUpLeftJsDefault.default));
parcelHelpers.export(exports, "SquareArrowOutUpLeftIcon", ()=>(0, _squareArrowOutUpLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowUpRightFromSquare", ()=>(0, _squareArrowOutUpRightJsDefault.default));
parcelHelpers.export(exports, "ArrowUpRightFromSquareIcon", ()=>(0, _squareArrowOutUpRightJsDefault.default));
parcelHelpers.export(exports, "LucideArrowUpRightFromSquare", ()=>(0, _squareArrowOutUpRightJsDefault.default));
parcelHelpers.export(exports, "LucideSquareArrowOutUpRight", ()=>(0, _squareArrowOutUpRightJsDefault.default));
parcelHelpers.export(exports, "SquareArrowOutUpRight", ()=>(0, _squareArrowOutUpRightJsDefault.default));
parcelHelpers.export(exports, "SquareArrowOutUpRightIcon", ()=>(0, _squareArrowOutUpRightJsDefault.default));
parcelHelpers.export(exports, "ArrowRightSquare", ()=>(0, _squareArrowRightJsDefault.default));
parcelHelpers.export(exports, "ArrowRightSquareIcon", ()=>(0, _squareArrowRightJsDefault.default));
parcelHelpers.export(exports, "LucideArrowRightSquare", ()=>(0, _squareArrowRightJsDefault.default));
parcelHelpers.export(exports, "LucideSquareArrowRight", ()=>(0, _squareArrowRightJsDefault.default));
parcelHelpers.export(exports, "SquareArrowRight", ()=>(0, _squareArrowRightJsDefault.default));
parcelHelpers.export(exports, "SquareArrowRightIcon", ()=>(0, _squareArrowRightJsDefault.default));
parcelHelpers.export(exports, "ArrowUpLeftSquare", ()=>(0, _squareArrowUpLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowUpLeftSquareIcon", ()=>(0, _squareArrowUpLeftJsDefault.default));
parcelHelpers.export(exports, "LucideArrowUpLeftSquare", ()=>(0, _squareArrowUpLeftJsDefault.default));
parcelHelpers.export(exports, "LucideSquareArrowUpLeft", ()=>(0, _squareArrowUpLeftJsDefault.default));
parcelHelpers.export(exports, "SquareArrowUpLeft", ()=>(0, _squareArrowUpLeftJsDefault.default));
parcelHelpers.export(exports, "SquareArrowUpLeftIcon", ()=>(0, _squareArrowUpLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowUpRightSquare", ()=>(0, _squareArrowUpRightJsDefault.default));
parcelHelpers.export(exports, "ArrowUpRightSquareIcon", ()=>(0, _squareArrowUpRightJsDefault.default));
parcelHelpers.export(exports, "LucideArrowUpRightSquare", ()=>(0, _squareArrowUpRightJsDefault.default));
parcelHelpers.export(exports, "LucideSquareArrowUpRight", ()=>(0, _squareArrowUpRightJsDefault.default));
parcelHelpers.export(exports, "SquareArrowUpRight", ()=>(0, _squareArrowUpRightJsDefault.default));
parcelHelpers.export(exports, "SquareArrowUpRightIcon", ()=>(0, _squareArrowUpRightJsDefault.default));
parcelHelpers.export(exports, "ArrowUpSquare", ()=>(0, _squareArrowUpJsDefault.default));
parcelHelpers.export(exports, "ArrowUpSquareIcon", ()=>(0, _squareArrowUpJsDefault.default));
parcelHelpers.export(exports, "LucideArrowUpSquare", ()=>(0, _squareArrowUpJsDefault.default));
parcelHelpers.export(exports, "LucideSquareArrowUp", ()=>(0, _squareArrowUpJsDefault.default));
parcelHelpers.export(exports, "SquareArrowUp", ()=>(0, _squareArrowUpJsDefault.default));
parcelHelpers.export(exports, "SquareArrowUpIcon", ()=>(0, _squareArrowUpJsDefault.default));
parcelHelpers.export(exports, "AsteriskSquare", ()=>(0, _squareAsteriskJsDefault.default));
parcelHelpers.export(exports, "AsteriskSquareIcon", ()=>(0, _squareAsteriskJsDefault.default));
parcelHelpers.export(exports, "LucideAsteriskSquare", ()=>(0, _squareAsteriskJsDefault.default));
parcelHelpers.export(exports, "LucideSquareAsterisk", ()=>(0, _squareAsteriskJsDefault.default));
parcelHelpers.export(exports, "SquareAsterisk", ()=>(0, _squareAsteriskJsDefault.default));
parcelHelpers.export(exports, "SquareAsteriskIcon", ()=>(0, _squareAsteriskJsDefault.default));
parcelHelpers.export(exports, "LucideScissorsSquareDashedBottom", ()=>(0, _squareBottomDashedScissorsJsDefault.default));
parcelHelpers.export(exports, "LucideSquareBottomDashedScissors", ()=>(0, _squareBottomDashedScissorsJsDefault.default));
parcelHelpers.export(exports, "ScissorsSquareDashedBottom", ()=>(0, _squareBottomDashedScissorsJsDefault.default));
parcelHelpers.export(exports, "ScissorsSquareDashedBottomIcon", ()=>(0, _squareBottomDashedScissorsJsDefault.default));
parcelHelpers.export(exports, "SquareBottomDashedScissors", ()=>(0, _squareBottomDashedScissorsJsDefault.default));
parcelHelpers.export(exports, "SquareBottomDashedScissorsIcon", ()=>(0, _squareBottomDashedScissorsJsDefault.default));
parcelHelpers.export(exports, "GanttChartSquare", ()=>(0, _squareChartGanttJsDefault.default));
parcelHelpers.export(exports, "GanttChartSquareIcon", ()=>(0, _squareChartGanttJsDefault.default));
parcelHelpers.export(exports, "LucideGanttChartSquare", ()=>(0, _squareChartGanttJsDefault.default));
parcelHelpers.export(exports, "LucideSquareChartGantt", ()=>(0, _squareChartGanttJsDefault.default));
parcelHelpers.export(exports, "LucideSquareGanttChart", ()=>(0, _squareChartGanttJsDefault.default));
parcelHelpers.export(exports, "SquareChartGantt", ()=>(0, _squareChartGanttJsDefault.default));
parcelHelpers.export(exports, "SquareChartGanttIcon", ()=>(0, _squareChartGanttJsDefault.default));
parcelHelpers.export(exports, "SquareGanttChart", ()=>(0, _squareChartGanttJsDefault.default));
parcelHelpers.export(exports, "SquareGanttChartIcon", ()=>(0, _squareChartGanttJsDefault.default));
parcelHelpers.export(exports, "CheckSquare", ()=>(0, _squareCheckBigJsDefault.default));
parcelHelpers.export(exports, "CheckSquareIcon", ()=>(0, _squareCheckBigJsDefault.default));
parcelHelpers.export(exports, "LucideCheckSquare", ()=>(0, _squareCheckBigJsDefault.default));
parcelHelpers.export(exports, "LucideSquareCheckBig", ()=>(0, _squareCheckBigJsDefault.default));
parcelHelpers.export(exports, "SquareCheckBig", ()=>(0, _squareCheckBigJsDefault.default));
parcelHelpers.export(exports, "SquareCheckBigIcon", ()=>(0, _squareCheckBigJsDefault.default));
parcelHelpers.export(exports, "CheckSquare2", ()=>(0, _squareCheckJsDefault.default));
parcelHelpers.export(exports, "CheckSquare2Icon", ()=>(0, _squareCheckJsDefault.default));
parcelHelpers.export(exports, "LucideCheckSquare2", ()=>(0, _squareCheckJsDefault.default));
parcelHelpers.export(exports, "LucideSquareCheck", ()=>(0, _squareCheckJsDefault.default));
parcelHelpers.export(exports, "SquareCheck", ()=>(0, _squareCheckJsDefault.default));
parcelHelpers.export(exports, "SquareCheckIcon", ()=>(0, _squareCheckJsDefault.default));
parcelHelpers.export(exports, "ChevronDownSquare", ()=>(0, _squareChevronDownJsDefault.default));
parcelHelpers.export(exports, "ChevronDownSquareIcon", ()=>(0, _squareChevronDownJsDefault.default));
parcelHelpers.export(exports, "LucideChevronDownSquare", ()=>(0, _squareChevronDownJsDefault.default));
parcelHelpers.export(exports, "LucideSquareChevronDown", ()=>(0, _squareChevronDownJsDefault.default));
parcelHelpers.export(exports, "SquareChevronDown", ()=>(0, _squareChevronDownJsDefault.default));
parcelHelpers.export(exports, "SquareChevronDownIcon", ()=>(0, _squareChevronDownJsDefault.default));
parcelHelpers.export(exports, "ChevronLeftSquare", ()=>(0, _squareChevronLeftJsDefault.default));
parcelHelpers.export(exports, "ChevronLeftSquareIcon", ()=>(0, _squareChevronLeftJsDefault.default));
parcelHelpers.export(exports, "LucideChevronLeftSquare", ()=>(0, _squareChevronLeftJsDefault.default));
parcelHelpers.export(exports, "LucideSquareChevronLeft", ()=>(0, _squareChevronLeftJsDefault.default));
parcelHelpers.export(exports, "SquareChevronLeft", ()=>(0, _squareChevronLeftJsDefault.default));
parcelHelpers.export(exports, "SquareChevronLeftIcon", ()=>(0, _squareChevronLeftJsDefault.default));
parcelHelpers.export(exports, "ChevronUpSquare", ()=>(0, _squareChevronUpJsDefault.default));
parcelHelpers.export(exports, "ChevronUpSquareIcon", ()=>(0, _squareChevronUpJsDefault.default));
parcelHelpers.export(exports, "LucideChevronUpSquare", ()=>(0, _squareChevronUpJsDefault.default));
parcelHelpers.export(exports, "LucideSquareChevronUp", ()=>(0, _squareChevronUpJsDefault.default));
parcelHelpers.export(exports, "SquareChevronUp", ()=>(0, _squareChevronUpJsDefault.default));
parcelHelpers.export(exports, "SquareChevronUpIcon", ()=>(0, _squareChevronUpJsDefault.default));
parcelHelpers.export(exports, "ChevronRightSquare", ()=>(0, _squareChevronRightJsDefault.default));
parcelHelpers.export(exports, "ChevronRightSquareIcon", ()=>(0, _squareChevronRightJsDefault.default));
parcelHelpers.export(exports, "LucideChevronRightSquare", ()=>(0, _squareChevronRightJsDefault.default));
parcelHelpers.export(exports, "LucideSquareChevronRight", ()=>(0, _squareChevronRightJsDefault.default));
parcelHelpers.export(exports, "SquareChevronRight", ()=>(0, _squareChevronRightJsDefault.default));
parcelHelpers.export(exports, "SquareChevronRightIcon", ()=>(0, _squareChevronRightJsDefault.default));
parcelHelpers.export(exports, "CodeSquare", ()=>(0, _squareCodeJsDefault.default));
parcelHelpers.export(exports, "CodeSquareIcon", ()=>(0, _squareCodeJsDefault.default));
parcelHelpers.export(exports, "LucideCodeSquare", ()=>(0, _squareCodeJsDefault.default));
parcelHelpers.export(exports, "LucideSquareCode", ()=>(0, _squareCodeJsDefault.default));
parcelHelpers.export(exports, "SquareCode", ()=>(0, _squareCodeJsDefault.default));
parcelHelpers.export(exports, "SquareCodeIcon", ()=>(0, _squareCodeJsDefault.default));
parcelHelpers.export(exports, "KanbanSquareDashed", ()=>(0, _squareDashedKanbanJsDefault.default));
parcelHelpers.export(exports, "KanbanSquareDashedIcon", ()=>(0, _squareDashedKanbanJsDefault.default));
parcelHelpers.export(exports, "LucideKanbanSquareDashed", ()=>(0, _squareDashedKanbanJsDefault.default));
parcelHelpers.export(exports, "LucideSquareDashedKanban", ()=>(0, _squareDashedKanbanJsDefault.default));
parcelHelpers.export(exports, "SquareDashedKanban", ()=>(0, _squareDashedKanbanJsDefault.default));
parcelHelpers.export(exports, "SquareDashedKanbanIcon", ()=>(0, _squareDashedKanbanJsDefault.default));
parcelHelpers.export(exports, "LucideMousePointerSquareDashed", ()=>(0, _squareDashedMousePointerJsDefault.default));
parcelHelpers.export(exports, "LucideSquareDashedMousePointer", ()=>(0, _squareDashedMousePointerJsDefault.default));
parcelHelpers.export(exports, "MousePointerSquareDashed", ()=>(0, _squareDashedMousePointerJsDefault.default));
parcelHelpers.export(exports, "MousePointerSquareDashedIcon", ()=>(0, _squareDashedMousePointerJsDefault.default));
parcelHelpers.export(exports, "SquareDashedMousePointer", ()=>(0, _squareDashedMousePointerJsDefault.default));
parcelHelpers.export(exports, "SquareDashedMousePointerIcon", ()=>(0, _squareDashedMousePointerJsDefault.default));
parcelHelpers.export(exports, "BoxSelect", ()=>(0, _squareDashedJsDefault.default));
parcelHelpers.export(exports, "BoxSelectIcon", ()=>(0, _squareDashedJsDefault.default));
parcelHelpers.export(exports, "LucideBoxSelect", ()=>(0, _squareDashedJsDefault.default));
parcelHelpers.export(exports, "LucideSquareDashed", ()=>(0, _squareDashedJsDefault.default));
parcelHelpers.export(exports, "SquareDashed", ()=>(0, _squareDashedJsDefault.default));
parcelHelpers.export(exports, "SquareDashedIcon", ()=>(0, _squareDashedJsDefault.default));
parcelHelpers.export(exports, "DivideSquare", ()=>(0, _squareDivideJsDefault.default));
parcelHelpers.export(exports, "DivideSquareIcon", ()=>(0, _squareDivideJsDefault.default));
parcelHelpers.export(exports, "LucideDivideSquare", ()=>(0, _squareDivideJsDefault.default));
parcelHelpers.export(exports, "LucideSquareDivide", ()=>(0, _squareDivideJsDefault.default));
parcelHelpers.export(exports, "SquareDivide", ()=>(0, _squareDivideJsDefault.default));
parcelHelpers.export(exports, "SquareDivideIcon", ()=>(0, _squareDivideJsDefault.default));
parcelHelpers.export(exports, "DotSquare", ()=>(0, _squareDotJsDefault.default));
parcelHelpers.export(exports, "DotSquareIcon", ()=>(0, _squareDotJsDefault.default));
parcelHelpers.export(exports, "LucideDotSquare", ()=>(0, _squareDotJsDefault.default));
parcelHelpers.export(exports, "LucideSquareDot", ()=>(0, _squareDotJsDefault.default));
parcelHelpers.export(exports, "SquareDot", ()=>(0, _squareDotJsDefault.default));
parcelHelpers.export(exports, "SquareDotIcon", ()=>(0, _squareDotJsDefault.default));
parcelHelpers.export(exports, "EqualSquare", ()=>(0, _squareEqualJsDefault.default));
parcelHelpers.export(exports, "EqualSquareIcon", ()=>(0, _squareEqualJsDefault.default));
parcelHelpers.export(exports, "LucideEqualSquare", ()=>(0, _squareEqualJsDefault.default));
parcelHelpers.export(exports, "LucideSquareEqual", ()=>(0, _squareEqualJsDefault.default));
parcelHelpers.export(exports, "SquareEqual", ()=>(0, _squareEqualJsDefault.default));
parcelHelpers.export(exports, "SquareEqualIcon", ()=>(0, _squareEqualJsDefault.default));
parcelHelpers.export(exports, "FunctionSquare", ()=>(0, _squareFunctionJsDefault.default));
parcelHelpers.export(exports, "FunctionSquareIcon", ()=>(0, _squareFunctionJsDefault.default));
parcelHelpers.export(exports, "LucideFunctionSquare", ()=>(0, _squareFunctionJsDefault.default));
parcelHelpers.export(exports, "LucideSquareFunction", ()=>(0, _squareFunctionJsDefault.default));
parcelHelpers.export(exports, "SquareFunction", ()=>(0, _squareFunctionJsDefault.default));
parcelHelpers.export(exports, "SquareFunctionIcon", ()=>(0, _squareFunctionJsDefault.default));
parcelHelpers.export(exports, "KanbanSquare", ()=>(0, _squareKanbanJsDefault.default));
parcelHelpers.export(exports, "KanbanSquareIcon", ()=>(0, _squareKanbanJsDefault.default));
parcelHelpers.export(exports, "LucideKanbanSquare", ()=>(0, _squareKanbanJsDefault.default));
parcelHelpers.export(exports, "LucideSquareKanban", ()=>(0, _squareKanbanJsDefault.default));
parcelHelpers.export(exports, "SquareKanban", ()=>(0, _squareKanbanJsDefault.default));
parcelHelpers.export(exports, "SquareKanbanIcon", ()=>(0, _squareKanbanJsDefault.default));
parcelHelpers.export(exports, "LibrarySquare", ()=>(0, _squareLibraryJsDefault.default));
parcelHelpers.export(exports, "LibrarySquareIcon", ()=>(0, _squareLibraryJsDefault.default));
parcelHelpers.export(exports, "LucideLibrarySquare", ()=>(0, _squareLibraryJsDefault.default));
parcelHelpers.export(exports, "LucideSquareLibrary", ()=>(0, _squareLibraryJsDefault.default));
parcelHelpers.export(exports, "SquareLibrary", ()=>(0, _squareLibraryJsDefault.default));
parcelHelpers.export(exports, "SquareLibraryIcon", ()=>(0, _squareLibraryJsDefault.default));
parcelHelpers.export(exports, "LucideMSquare", ()=>(0, _squareMJsDefault.default));
parcelHelpers.export(exports, "LucideSquareM", ()=>(0, _squareMJsDefault.default));
parcelHelpers.export(exports, "MSquare", ()=>(0, _squareMJsDefault.default));
parcelHelpers.export(exports, "MSquareIcon", ()=>(0, _squareMJsDefault.default));
parcelHelpers.export(exports, "SquareM", ()=>(0, _squareMJsDefault.default));
parcelHelpers.export(exports, "SquareMIcon", ()=>(0, _squareMJsDefault.default));
parcelHelpers.export(exports, "LucideMenuSquare", ()=>(0, _squareMenuJsDefault.default));
parcelHelpers.export(exports, "LucideSquareMenu", ()=>(0, _squareMenuJsDefault.default));
parcelHelpers.export(exports, "MenuSquare", ()=>(0, _squareMenuJsDefault.default));
parcelHelpers.export(exports, "MenuSquareIcon", ()=>(0, _squareMenuJsDefault.default));
parcelHelpers.export(exports, "SquareMenu", ()=>(0, _squareMenuJsDefault.default));
parcelHelpers.export(exports, "SquareMenuIcon", ()=>(0, _squareMenuJsDefault.default));
parcelHelpers.export(exports, "LucideMinusSquare", ()=>(0, _squareMinusJsDefault.default));
parcelHelpers.export(exports, "LucideSquareMinus", ()=>(0, _squareMinusJsDefault.default));
parcelHelpers.export(exports, "MinusSquare", ()=>(0, _squareMinusJsDefault.default));
parcelHelpers.export(exports, "MinusSquareIcon", ()=>(0, _squareMinusJsDefault.default));
parcelHelpers.export(exports, "SquareMinus", ()=>(0, _squareMinusJsDefault.default));
parcelHelpers.export(exports, "SquareMinusIcon", ()=>(0, _squareMinusJsDefault.default));
parcelHelpers.export(exports, "Inspect", ()=>(0, _squareMousePointerJsDefault.default));
parcelHelpers.export(exports, "InspectIcon", ()=>(0, _squareMousePointerJsDefault.default));
parcelHelpers.export(exports, "LucideInspect", ()=>(0, _squareMousePointerJsDefault.default));
parcelHelpers.export(exports, "LucideSquareMousePointer", ()=>(0, _squareMousePointerJsDefault.default));
parcelHelpers.export(exports, "SquareMousePointer", ()=>(0, _squareMousePointerJsDefault.default));
parcelHelpers.export(exports, "SquareMousePointerIcon", ()=>(0, _squareMousePointerJsDefault.default));
parcelHelpers.export(exports, "LucideParkingSquareOff", ()=>(0, _squareParkingOffJsDefault.default));
parcelHelpers.export(exports, "LucideSquareParkingOff", ()=>(0, _squareParkingOffJsDefault.default));
parcelHelpers.export(exports, "ParkingSquareOff", ()=>(0, _squareParkingOffJsDefault.default));
parcelHelpers.export(exports, "ParkingSquareOffIcon", ()=>(0, _squareParkingOffJsDefault.default));
parcelHelpers.export(exports, "SquareParkingOff", ()=>(0, _squareParkingOffJsDefault.default));
parcelHelpers.export(exports, "SquareParkingOffIcon", ()=>(0, _squareParkingOffJsDefault.default));
parcelHelpers.export(exports, "LucideParkingSquare", ()=>(0, _squareParkingJsDefault.default));
parcelHelpers.export(exports, "LucideSquareParking", ()=>(0, _squareParkingJsDefault.default));
parcelHelpers.export(exports, "ParkingSquare", ()=>(0, _squareParkingJsDefault.default));
parcelHelpers.export(exports, "ParkingSquareIcon", ()=>(0, _squareParkingJsDefault.default));
parcelHelpers.export(exports, "SquareParking", ()=>(0, _squareParkingJsDefault.default));
parcelHelpers.export(exports, "SquareParkingIcon", ()=>(0, _squareParkingJsDefault.default));
parcelHelpers.export(exports, "Edit", ()=>(0, _squarePenJsDefault.default));
parcelHelpers.export(exports, "EditIcon", ()=>(0, _squarePenJsDefault.default));
parcelHelpers.export(exports, "LucideEdit", ()=>(0, _squarePenJsDefault.default));
parcelHelpers.export(exports, "LucidePenBox", ()=>(0, _squarePenJsDefault.default));
parcelHelpers.export(exports, "LucidePenSquare", ()=>(0, _squarePenJsDefault.default));
parcelHelpers.export(exports, "LucideSquarePen", ()=>(0, _squarePenJsDefault.default));
parcelHelpers.export(exports, "PenBox", ()=>(0, _squarePenJsDefault.default));
parcelHelpers.export(exports, "PenBoxIcon", ()=>(0, _squarePenJsDefault.default));
parcelHelpers.export(exports, "PenSquare", ()=>(0, _squarePenJsDefault.default));
parcelHelpers.export(exports, "PenSquareIcon", ()=>(0, _squarePenJsDefault.default));
parcelHelpers.export(exports, "SquarePen", ()=>(0, _squarePenJsDefault.default));
parcelHelpers.export(exports, "SquarePenIcon", ()=>(0, _squarePenJsDefault.default));
parcelHelpers.export(exports, "LucidePercentSquare", ()=>(0, _squarePercentJsDefault.default));
parcelHelpers.export(exports, "LucideSquarePercent", ()=>(0, _squarePercentJsDefault.default));
parcelHelpers.export(exports, "PercentSquare", ()=>(0, _squarePercentJsDefault.default));
parcelHelpers.export(exports, "PercentSquareIcon", ()=>(0, _squarePercentJsDefault.default));
parcelHelpers.export(exports, "SquarePercent", ()=>(0, _squarePercentJsDefault.default));
parcelHelpers.export(exports, "SquarePercentIcon", ()=>(0, _squarePercentJsDefault.default));
parcelHelpers.export(exports, "LucidePiSquare", ()=>(0, _squarePiJsDefault.default));
parcelHelpers.export(exports, "LucideSquarePi", ()=>(0, _squarePiJsDefault.default));
parcelHelpers.export(exports, "PiSquare", ()=>(0, _squarePiJsDefault.default));
parcelHelpers.export(exports, "PiSquareIcon", ()=>(0, _squarePiJsDefault.default));
parcelHelpers.export(exports, "SquarePi", ()=>(0, _squarePiJsDefault.default));
parcelHelpers.export(exports, "SquarePiIcon", ()=>(0, _squarePiJsDefault.default));
parcelHelpers.export(exports, "LucidePilcrowSquare", ()=>(0, _squarePilcrowJsDefault.default));
parcelHelpers.export(exports, "LucideSquarePilcrow", ()=>(0, _squarePilcrowJsDefault.default));
parcelHelpers.export(exports, "PilcrowSquare", ()=>(0, _squarePilcrowJsDefault.default));
parcelHelpers.export(exports, "PilcrowSquareIcon", ()=>(0, _squarePilcrowJsDefault.default));
parcelHelpers.export(exports, "SquarePilcrow", ()=>(0, _squarePilcrowJsDefault.default));
parcelHelpers.export(exports, "SquarePilcrowIcon", ()=>(0, _squarePilcrowJsDefault.default));
parcelHelpers.export(exports, "LucidePlaySquare", ()=>(0, _squarePlayJsDefault.default));
parcelHelpers.export(exports, "LucideSquarePlay", ()=>(0, _squarePlayJsDefault.default));
parcelHelpers.export(exports, "PlaySquare", ()=>(0, _squarePlayJsDefault.default));
parcelHelpers.export(exports, "PlaySquareIcon", ()=>(0, _squarePlayJsDefault.default));
parcelHelpers.export(exports, "SquarePlay", ()=>(0, _squarePlayJsDefault.default));
parcelHelpers.export(exports, "SquarePlayIcon", ()=>(0, _squarePlayJsDefault.default));
parcelHelpers.export(exports, "LucidePlusSquare", ()=>(0, _squarePlusJsDefault.default));
parcelHelpers.export(exports, "LucideSquarePlus", ()=>(0, _squarePlusJsDefault.default));
parcelHelpers.export(exports, "PlusSquare", ()=>(0, _squarePlusJsDefault.default));
parcelHelpers.export(exports, "PlusSquareIcon", ()=>(0, _squarePlusJsDefault.default));
parcelHelpers.export(exports, "SquarePlus", ()=>(0, _squarePlusJsDefault.default));
parcelHelpers.export(exports, "SquarePlusIcon", ()=>(0, _squarePlusJsDefault.default));
parcelHelpers.export(exports, "LucidePowerSquare", ()=>(0, _squarePowerJsDefault.default));
parcelHelpers.export(exports, "LucideSquarePower", ()=>(0, _squarePowerJsDefault.default));
parcelHelpers.export(exports, "PowerSquare", ()=>(0, _squarePowerJsDefault.default));
parcelHelpers.export(exports, "PowerSquareIcon", ()=>(0, _squarePowerJsDefault.default));
parcelHelpers.export(exports, "SquarePower", ()=>(0, _squarePowerJsDefault.default));
parcelHelpers.export(exports, "SquarePowerIcon", ()=>(0, _squarePowerJsDefault.default));
parcelHelpers.export(exports, "LucideScissorsSquare", ()=>(0, _squareScissorsJsDefault.default));
parcelHelpers.export(exports, "LucideSquareScissors", ()=>(0, _squareScissorsJsDefault.default));
parcelHelpers.export(exports, "ScissorsSquare", ()=>(0, _squareScissorsJsDefault.default));
parcelHelpers.export(exports, "ScissorsSquareIcon", ()=>(0, _squareScissorsJsDefault.default));
parcelHelpers.export(exports, "SquareScissors", ()=>(0, _squareScissorsJsDefault.default));
parcelHelpers.export(exports, "SquareScissorsIcon", ()=>(0, _squareScissorsJsDefault.default));
parcelHelpers.export(exports, "LucideSigmaSquare", ()=>(0, _squareSigmaJsDefault.default));
parcelHelpers.export(exports, "LucideSquareSigma", ()=>(0, _squareSigmaJsDefault.default));
parcelHelpers.export(exports, "SigmaSquare", ()=>(0, _squareSigmaJsDefault.default));
parcelHelpers.export(exports, "SigmaSquareIcon", ()=>(0, _squareSigmaJsDefault.default));
parcelHelpers.export(exports, "SquareSigma", ()=>(0, _squareSigmaJsDefault.default));
parcelHelpers.export(exports, "SquareSigmaIcon", ()=>(0, _squareSigmaJsDefault.default));
parcelHelpers.export(exports, "LucideSlashSquare", ()=>(0, _squareSlashJsDefault.default));
parcelHelpers.export(exports, "LucideSquareSlash", ()=>(0, _squareSlashJsDefault.default));
parcelHelpers.export(exports, "SlashSquare", ()=>(0, _squareSlashJsDefault.default));
parcelHelpers.export(exports, "SlashSquareIcon", ()=>(0, _squareSlashJsDefault.default));
parcelHelpers.export(exports, "SquareSlash", ()=>(0, _squareSlashJsDefault.default));
parcelHelpers.export(exports, "SquareSlashIcon", ()=>(0, _squareSlashJsDefault.default));
parcelHelpers.export(exports, "LucideSplitSquareHorizontal", ()=>(0, _squareSplitHorizontalJsDefault.default));
parcelHelpers.export(exports, "LucideSquareSplitHorizontal", ()=>(0, _squareSplitHorizontalJsDefault.default));
parcelHelpers.export(exports, "SplitSquareHorizontal", ()=>(0, _squareSplitHorizontalJsDefault.default));
parcelHelpers.export(exports, "SplitSquareHorizontalIcon", ()=>(0, _squareSplitHorizontalJsDefault.default));
parcelHelpers.export(exports, "SquareSplitHorizontal", ()=>(0, _squareSplitHorizontalJsDefault.default));
parcelHelpers.export(exports, "SquareSplitHorizontalIcon", ()=>(0, _squareSplitHorizontalJsDefault.default));
parcelHelpers.export(exports, "LucideSplitSquareVertical", ()=>(0, _squareSplitVerticalJsDefault.default));
parcelHelpers.export(exports, "LucideSquareSplitVertical", ()=>(0, _squareSplitVerticalJsDefault.default));
parcelHelpers.export(exports, "SplitSquareVertical", ()=>(0, _squareSplitVerticalJsDefault.default));
parcelHelpers.export(exports, "SplitSquareVerticalIcon", ()=>(0, _squareSplitVerticalJsDefault.default));
parcelHelpers.export(exports, "SquareSplitVertical", ()=>(0, _squareSplitVerticalJsDefault.default));
parcelHelpers.export(exports, "SquareSplitVerticalIcon", ()=>(0, _squareSplitVerticalJsDefault.default));
parcelHelpers.export(exports, "LucideSquareTerminal", ()=>(0, _squareTerminalJsDefault.default));
parcelHelpers.export(exports, "LucideTerminalSquare", ()=>(0, _squareTerminalJsDefault.default));
parcelHelpers.export(exports, "SquareTerminal", ()=>(0, _squareTerminalJsDefault.default));
parcelHelpers.export(exports, "SquareTerminalIcon", ()=>(0, _squareTerminalJsDefault.default));
parcelHelpers.export(exports, "TerminalSquare", ()=>(0, _squareTerminalJsDefault.default));
parcelHelpers.export(exports, "TerminalSquareIcon", ()=>(0, _squareTerminalJsDefault.default));
parcelHelpers.export(exports, "LucideSquareUserRound", ()=>(0, _squareUserRoundJsDefault.default));
parcelHelpers.export(exports, "LucideUserSquare2", ()=>(0, _squareUserRoundJsDefault.default));
parcelHelpers.export(exports, "SquareUserRound", ()=>(0, _squareUserRoundJsDefault.default));
parcelHelpers.export(exports, "SquareUserRoundIcon", ()=>(0, _squareUserRoundJsDefault.default));
parcelHelpers.export(exports, "UserSquare2", ()=>(0, _squareUserRoundJsDefault.default));
parcelHelpers.export(exports, "UserSquare2Icon", ()=>(0, _squareUserRoundJsDefault.default));
parcelHelpers.export(exports, "LucideSquareUser", ()=>(0, _squareUserJsDefault.default));
parcelHelpers.export(exports, "LucideUserSquare", ()=>(0, _squareUserJsDefault.default));
parcelHelpers.export(exports, "SquareUser", ()=>(0, _squareUserJsDefault.default));
parcelHelpers.export(exports, "SquareUserIcon", ()=>(0, _squareUserJsDefault.default));
parcelHelpers.export(exports, "UserSquare", ()=>(0, _squareUserJsDefault.default));
parcelHelpers.export(exports, "UserSquareIcon", ()=>(0, _squareUserJsDefault.default));
parcelHelpers.export(exports, "LucideSquareX", ()=>(0, _squareXJsDefault.default));
parcelHelpers.export(exports, "LucideXSquare", ()=>(0, _squareXJsDefault.default));
parcelHelpers.export(exports, "SquareX", ()=>(0, _squareXJsDefault.default));
parcelHelpers.export(exports, "SquareXIcon", ()=>(0, _squareXJsDefault.default));
parcelHelpers.export(exports, "XSquare", ()=>(0, _squareXJsDefault.default));
parcelHelpers.export(exports, "XSquareIcon", ()=>(0, _squareXJsDefault.default));
parcelHelpers.export(exports, "LucideTestTube2", ()=>(0, _testTubeDiagonalJsDefault.default));
parcelHelpers.export(exports, "LucideTestTubeDiagonal", ()=>(0, _testTubeDiagonalJsDefault.default));
parcelHelpers.export(exports, "TestTube2", ()=>(0, _testTubeDiagonalJsDefault.default));
parcelHelpers.export(exports, "TestTube2Icon", ()=>(0, _testTubeDiagonalJsDefault.default));
parcelHelpers.export(exports, "TestTubeDiagonal", ()=>(0, _testTubeDiagonalJsDefault.default));
parcelHelpers.export(exports, "TestTubeDiagonalIcon", ()=>(0, _testTubeDiagonalJsDefault.default));
parcelHelpers.export(exports, "AlignCenter", ()=>(0, _textAlignCenterJsDefault.default));
parcelHelpers.export(exports, "AlignCenterIcon", ()=>(0, _textAlignCenterJsDefault.default));
parcelHelpers.export(exports, "LucideAlignCenter", ()=>(0, _textAlignCenterJsDefault.default));
parcelHelpers.export(exports, "LucideTextAlignCenter", ()=>(0, _textAlignCenterJsDefault.default));
parcelHelpers.export(exports, "TextAlignCenter", ()=>(0, _textAlignCenterJsDefault.default));
parcelHelpers.export(exports, "TextAlignCenterIcon", ()=>(0, _textAlignCenterJsDefault.default));
parcelHelpers.export(exports, "AlignRight", ()=>(0, _textAlignEndJsDefault.default));
parcelHelpers.export(exports, "AlignRightIcon", ()=>(0, _textAlignEndJsDefault.default));
parcelHelpers.export(exports, "LucideAlignRight", ()=>(0, _textAlignEndJsDefault.default));
parcelHelpers.export(exports, "LucideTextAlignEnd", ()=>(0, _textAlignEndJsDefault.default));
parcelHelpers.export(exports, "TextAlignEnd", ()=>(0, _textAlignEndJsDefault.default));
parcelHelpers.export(exports, "TextAlignEndIcon", ()=>(0, _textAlignEndJsDefault.default));
parcelHelpers.export(exports, "AlignJustify", ()=>(0, _textAlignJustifyJsDefault.default));
parcelHelpers.export(exports, "AlignJustifyIcon", ()=>(0, _textAlignJustifyJsDefault.default));
parcelHelpers.export(exports, "LucideAlignJustify", ()=>(0, _textAlignJustifyJsDefault.default));
parcelHelpers.export(exports, "LucideTextAlignJustify", ()=>(0, _textAlignJustifyJsDefault.default));
parcelHelpers.export(exports, "TextAlignJustify", ()=>(0, _textAlignJustifyJsDefault.default));
parcelHelpers.export(exports, "TextAlignJustifyIcon", ()=>(0, _textAlignJustifyJsDefault.default));
parcelHelpers.export(exports, "AlignLeft", ()=>(0, _textAlignStartJsDefault.default));
parcelHelpers.export(exports, "AlignLeftIcon", ()=>(0, _textAlignStartJsDefault.default));
parcelHelpers.export(exports, "LucideAlignLeft", ()=>(0, _textAlignStartJsDefault.default));
parcelHelpers.export(exports, "LucideText", ()=>(0, _textAlignStartJsDefault.default));
parcelHelpers.export(exports, "LucideTextAlignStart", ()=>(0, _textAlignStartJsDefault.default));
parcelHelpers.export(exports, "Text", ()=>(0, _textAlignStartJsDefault.default));
parcelHelpers.export(exports, "TextAlignStart", ()=>(0, _textAlignStartJsDefault.default));
parcelHelpers.export(exports, "TextAlignStartIcon", ()=>(0, _textAlignStartJsDefault.default));
parcelHelpers.export(exports, "TextIcon", ()=>(0, _textAlignStartJsDefault.default));
parcelHelpers.export(exports, "LetterText", ()=>(0, _textInitialJsDefault.default));
parcelHelpers.export(exports, "LetterTextIcon", ()=>(0, _textInitialJsDefault.default));
parcelHelpers.export(exports, "LucideLetterText", ()=>(0, _textInitialJsDefault.default));
parcelHelpers.export(exports, "LucideTextInitial", ()=>(0, _textInitialJsDefault.default));
parcelHelpers.export(exports, "TextInitial", ()=>(0, _textInitialJsDefault.default));
parcelHelpers.export(exports, "TextInitialIcon", ()=>(0, _textInitialJsDefault.default));
parcelHelpers.export(exports, "LucideTextSelect", ()=>(0, _textSelectJsDefault.default));
parcelHelpers.export(exports, "LucideTextSelection", ()=>(0, _textSelectJsDefault.default));
parcelHelpers.export(exports, "TextSelect", ()=>(0, _textSelectJsDefault.default));
parcelHelpers.export(exports, "TextSelectIcon", ()=>(0, _textSelectJsDefault.default));
parcelHelpers.export(exports, "TextSelection", ()=>(0, _textSelectJsDefault.default));
parcelHelpers.export(exports, "TextSelectionIcon", ()=>(0, _textSelectJsDefault.default));
parcelHelpers.export(exports, "LucideTextWrap", ()=>(0, _textWrapJsDefault.default));
parcelHelpers.export(exports, "LucideWrapText", ()=>(0, _textWrapJsDefault.default));
parcelHelpers.export(exports, "TextWrap", ()=>(0, _textWrapJsDefault.default));
parcelHelpers.export(exports, "TextWrapIcon", ()=>(0, _textWrapJsDefault.default));
parcelHelpers.export(exports, "WrapText", ()=>(0, _textWrapJsDefault.default));
parcelHelpers.export(exports, "WrapTextIcon", ()=>(0, _textWrapJsDefault.default));
parcelHelpers.export(exports, "LucideTrain", ()=>(0, _tramFrontJsDefault.default));
parcelHelpers.export(exports, "LucideTramFront", ()=>(0, _tramFrontJsDefault.default));
parcelHelpers.export(exports, "Train", ()=>(0, _tramFrontJsDefault.default));
parcelHelpers.export(exports, "TrainIcon", ()=>(0, _tramFrontJsDefault.default));
parcelHelpers.export(exports, "TramFront", ()=>(0, _tramFrontJsDefault.default));
parcelHelpers.export(exports, "TramFrontIcon", ()=>(0, _tramFrontJsDefault.default));
parcelHelpers.export(exports, "LucidePalmtree", ()=>(0, _treePalmJsDefault.default));
parcelHelpers.export(exports, "LucideTreePalm", ()=>(0, _treePalmJsDefault.default));
parcelHelpers.export(exports, "Palmtree", ()=>(0, _treePalmJsDefault.default));
parcelHelpers.export(exports, "PalmtreeIcon", ()=>(0, _treePalmJsDefault.default));
parcelHelpers.export(exports, "TreePalm", ()=>(0, _treePalmJsDefault.default));
parcelHelpers.export(exports, "TreePalmIcon", ()=>(0, _treePalmJsDefault.default));
parcelHelpers.export(exports, "AlertTriangle", ()=>(0, _triangleAlertJsDefault.default));
parcelHelpers.export(exports, "AlertTriangleIcon", ()=>(0, _triangleAlertJsDefault.default));
parcelHelpers.export(exports, "LucideAlertTriangle", ()=>(0, _triangleAlertJsDefault.default));
parcelHelpers.export(exports, "LucideTriangleAlert", ()=>(0, _triangleAlertJsDefault.default));
parcelHelpers.export(exports, "TriangleAlert", ()=>(0, _triangleAlertJsDefault.default));
parcelHelpers.export(exports, "TriangleAlertIcon", ()=>(0, _triangleAlertJsDefault.default));
parcelHelpers.export(exports, "LucideTv2", ()=>(0, _tvMinimalJsDefault.default));
parcelHelpers.export(exports, "LucideTvMinimal", ()=>(0, _tvMinimalJsDefault.default));
parcelHelpers.export(exports, "Tv2", ()=>(0, _tvMinimalJsDefault.default));
parcelHelpers.export(exports, "Tv2Icon", ()=>(0, _tvMinimalJsDefault.default));
parcelHelpers.export(exports, "TvMinimal", ()=>(0, _tvMinimalJsDefault.default));
parcelHelpers.export(exports, "TvMinimalIcon", ()=>(0, _tvMinimalJsDefault.default));
parcelHelpers.export(exports, "LucideSchool2", ()=>(0, _universityJsDefault.default));
parcelHelpers.export(exports, "LucideUniversity", ()=>(0, _universityJsDefault.default));
parcelHelpers.export(exports, "School2", ()=>(0, _universityJsDefault.default));
parcelHelpers.export(exports, "School2Icon", ()=>(0, _universityJsDefault.default));
parcelHelpers.export(exports, "University", ()=>(0, _universityJsDefault.default));
parcelHelpers.export(exports, "UniversityIcon", ()=>(0, _universityJsDefault.default));
parcelHelpers.export(exports, "LucideUserCheck2", ()=>(0, _userRoundCheckJsDefault.default));
parcelHelpers.export(exports, "LucideUserRoundCheck", ()=>(0, _userRoundCheckJsDefault.default));
parcelHelpers.export(exports, "UserCheck2", ()=>(0, _userRoundCheckJsDefault.default));
parcelHelpers.export(exports, "UserCheck2Icon", ()=>(0, _userRoundCheckJsDefault.default));
parcelHelpers.export(exports, "UserRoundCheck", ()=>(0, _userRoundCheckJsDefault.default));
parcelHelpers.export(exports, "UserRoundCheckIcon", ()=>(0, _userRoundCheckJsDefault.default));
parcelHelpers.export(exports, "LucideUserCog2", ()=>(0, _userRoundCogJsDefault.default));
parcelHelpers.export(exports, "LucideUserRoundCog", ()=>(0, _userRoundCogJsDefault.default));
parcelHelpers.export(exports, "UserCog2", ()=>(0, _userRoundCogJsDefault.default));
parcelHelpers.export(exports, "UserCog2Icon", ()=>(0, _userRoundCogJsDefault.default));
parcelHelpers.export(exports, "UserRoundCog", ()=>(0, _userRoundCogJsDefault.default));
parcelHelpers.export(exports, "UserRoundCogIcon", ()=>(0, _userRoundCogJsDefault.default));
parcelHelpers.export(exports, "LucideUserMinus2", ()=>(0, _userRoundMinusJsDefault.default));
parcelHelpers.export(exports, "LucideUserRoundMinus", ()=>(0, _userRoundMinusJsDefault.default));
parcelHelpers.export(exports, "UserMinus2", ()=>(0, _userRoundMinusJsDefault.default));
parcelHelpers.export(exports, "UserMinus2Icon", ()=>(0, _userRoundMinusJsDefault.default));
parcelHelpers.export(exports, "UserRoundMinus", ()=>(0, _userRoundMinusJsDefault.default));
parcelHelpers.export(exports, "UserRoundMinusIcon", ()=>(0, _userRoundMinusJsDefault.default));
parcelHelpers.export(exports, "LucideUserPlus2", ()=>(0, _userRoundPlusJsDefault.default));
parcelHelpers.export(exports, "LucideUserRoundPlus", ()=>(0, _userRoundPlusJsDefault.default));
parcelHelpers.export(exports, "UserPlus2", ()=>(0, _userRoundPlusJsDefault.default));
parcelHelpers.export(exports, "UserPlus2Icon", ()=>(0, _userRoundPlusJsDefault.default));
parcelHelpers.export(exports, "UserRoundPlus", ()=>(0, _userRoundPlusJsDefault.default));
parcelHelpers.export(exports, "UserRoundPlusIcon", ()=>(0, _userRoundPlusJsDefault.default));
parcelHelpers.export(exports, "LucideUserRoundX", ()=>(0, _userRoundXJsDefault.default));
parcelHelpers.export(exports, "LucideUserX2", ()=>(0, _userRoundXJsDefault.default));
parcelHelpers.export(exports, "UserRoundX", ()=>(0, _userRoundXJsDefault.default));
parcelHelpers.export(exports, "UserRoundXIcon", ()=>(0, _userRoundXJsDefault.default));
parcelHelpers.export(exports, "UserX2", ()=>(0, _userRoundXJsDefault.default));
parcelHelpers.export(exports, "UserX2Icon", ()=>(0, _userRoundXJsDefault.default));
parcelHelpers.export(exports, "LucideUser2", ()=>(0, _userRoundJsDefault.default));
parcelHelpers.export(exports, "LucideUserRound", ()=>(0, _userRoundJsDefault.default));
parcelHelpers.export(exports, "User2", ()=>(0, _userRoundJsDefault.default));
parcelHelpers.export(exports, "User2Icon", ()=>(0, _userRoundJsDefault.default));
parcelHelpers.export(exports, "UserRound", ()=>(0, _userRoundJsDefault.default));
parcelHelpers.export(exports, "UserRoundIcon", ()=>(0, _userRoundJsDefault.default));
parcelHelpers.export(exports, "LucideUsers2", ()=>(0, _usersRoundJsDefault.default));
parcelHelpers.export(exports, "LucideUsersRound", ()=>(0, _usersRoundJsDefault.default));
parcelHelpers.export(exports, "Users2", ()=>(0, _usersRoundJsDefault.default));
parcelHelpers.export(exports, "Users2Icon", ()=>(0, _usersRoundJsDefault.default));
parcelHelpers.export(exports, "UsersRound", ()=>(0, _usersRoundJsDefault.default));
parcelHelpers.export(exports, "UsersRoundIcon", ()=>(0, _usersRoundJsDefault.default));
parcelHelpers.export(exports, "ForkKnifeCrossed", ()=>(0, _utensilsCrossedJsDefault.default));
parcelHelpers.export(exports, "ForkKnifeCrossedIcon", ()=>(0, _utensilsCrossedJsDefault.default));
parcelHelpers.export(exports, "LucideForkKnifeCrossed", ()=>(0, _utensilsCrossedJsDefault.default));
parcelHelpers.export(exports, "LucideUtensilsCrossed", ()=>(0, _utensilsCrossedJsDefault.default));
parcelHelpers.export(exports, "UtensilsCrossed", ()=>(0, _utensilsCrossedJsDefault.default));
parcelHelpers.export(exports, "UtensilsCrossedIcon", ()=>(0, _utensilsCrossedJsDefault.default));
parcelHelpers.export(exports, "ForkKnife", ()=>(0, _utensilsJsDefault.default));
parcelHelpers.export(exports, "ForkKnifeIcon", ()=>(0, _utensilsJsDefault.default));
parcelHelpers.export(exports, "LucideForkKnife", ()=>(0, _utensilsJsDefault.default));
parcelHelpers.export(exports, "LucideUtensils", ()=>(0, _utensilsJsDefault.default));
parcelHelpers.export(exports, "Utensils", ()=>(0, _utensilsJsDefault.default));
parcelHelpers.export(exports, "UtensilsIcon", ()=>(0, _utensilsJsDefault.default));
parcelHelpers.export(exports, "LucideWallet2", ()=>(0, _walletMinimalJsDefault.default));
parcelHelpers.export(exports, "LucideWalletMinimal", ()=>(0, _walletMinimalJsDefault.default));
parcelHelpers.export(exports, "Wallet2", ()=>(0, _walletMinimalJsDefault.default));
parcelHelpers.export(exports, "Wallet2Icon", ()=>(0, _walletMinimalJsDefault.default));
parcelHelpers.export(exports, "WalletMinimal", ()=>(0, _walletMinimalJsDefault.default));
parcelHelpers.export(exports, "WalletMinimalIcon", ()=>(0, _walletMinimalJsDefault.default));
parcelHelpers.export(exports, "LucideWand2", ()=>(0, _wandSparklesJsDefault.default));
parcelHelpers.export(exports, "LucideWandSparkles", ()=>(0, _wandSparklesJsDefault.default));
parcelHelpers.export(exports, "Wand2", ()=>(0, _wandSparklesJsDefault.default));
parcelHelpers.export(exports, "Wand2Icon", ()=>(0, _wandSparklesJsDefault.default));
parcelHelpers.export(exports, "WandSparkles", ()=>(0, _wandSparklesJsDefault.default));
parcelHelpers.export(exports, "WandSparklesIcon", ()=>(0, _wandSparklesJsDefault.default));
parcelHelpers.export(exports, "AArrowDown", ()=>(0, _aArrowDownJsDefault.default));
parcelHelpers.export(exports, "AArrowDownIcon", ()=>(0, _aArrowDownJsDefault.default));
parcelHelpers.export(exports, "LucideAArrowDown", ()=>(0, _aArrowDownJsDefault.default));
parcelHelpers.export(exports, "AArrowUp", ()=>(0, _aArrowUpJsDefault.default));
parcelHelpers.export(exports, "AArrowUpIcon", ()=>(0, _aArrowUpJsDefault.default));
parcelHelpers.export(exports, "LucideAArrowUp", ()=>(0, _aArrowUpJsDefault.default));
parcelHelpers.export(exports, "ALargeSmall", ()=>(0, _aLargeSmallJsDefault.default));
parcelHelpers.export(exports, "ALargeSmallIcon", ()=>(0, _aLargeSmallJsDefault.default));
parcelHelpers.export(exports, "LucideALargeSmall", ()=>(0, _aLargeSmallJsDefault.default));
parcelHelpers.export(exports, "Accessibility", ()=>(0, _accessibilityJsDefault.default));
parcelHelpers.export(exports, "AccessibilityIcon", ()=>(0, _accessibilityJsDefault.default));
parcelHelpers.export(exports, "LucideAccessibility", ()=>(0, _accessibilityJsDefault.default));
parcelHelpers.export(exports, "Activity", ()=>(0, _activityJsDefault.default));
parcelHelpers.export(exports, "ActivityIcon", ()=>(0, _activityJsDefault.default));
parcelHelpers.export(exports, "LucideActivity", ()=>(0, _activityJsDefault.default));
parcelHelpers.export(exports, "AirVent", ()=>(0, _airVentJsDefault.default));
parcelHelpers.export(exports, "AirVentIcon", ()=>(0, _airVentJsDefault.default));
parcelHelpers.export(exports, "LucideAirVent", ()=>(0, _airVentJsDefault.default));
parcelHelpers.export(exports, "Airplay", ()=>(0, _airplayJsDefault.default));
parcelHelpers.export(exports, "AirplayIcon", ()=>(0, _airplayJsDefault.default));
parcelHelpers.export(exports, "LucideAirplay", ()=>(0, _airplayJsDefault.default));
parcelHelpers.export(exports, "AlarmClockOff", ()=>(0, _alarmClockOffJsDefault.default));
parcelHelpers.export(exports, "AlarmClockOffIcon", ()=>(0, _alarmClockOffJsDefault.default));
parcelHelpers.export(exports, "LucideAlarmClockOff", ()=>(0, _alarmClockOffJsDefault.default));
parcelHelpers.export(exports, "AlarmClock", ()=>(0, _alarmClockJsDefault.default));
parcelHelpers.export(exports, "AlarmClockIcon", ()=>(0, _alarmClockJsDefault.default));
parcelHelpers.export(exports, "LucideAlarmClock", ()=>(0, _alarmClockJsDefault.default));
parcelHelpers.export(exports, "Album", ()=>(0, _albumJsDefault.default));
parcelHelpers.export(exports, "AlbumIcon", ()=>(0, _albumJsDefault.default));
parcelHelpers.export(exports, "LucideAlbum", ()=>(0, _albumJsDefault.default));
parcelHelpers.export(exports, "AlarmSmoke", ()=>(0, _alarmSmokeJsDefault.default));
parcelHelpers.export(exports, "AlarmSmokeIcon", ()=>(0, _alarmSmokeJsDefault.default));
parcelHelpers.export(exports, "LucideAlarmSmoke", ()=>(0, _alarmSmokeJsDefault.default));
parcelHelpers.export(exports, "AlignCenterHorizontal", ()=>(0, _alignCenterHorizontalJsDefault.default));
parcelHelpers.export(exports, "AlignCenterHorizontalIcon", ()=>(0, _alignCenterHorizontalJsDefault.default));
parcelHelpers.export(exports, "LucideAlignCenterHorizontal", ()=>(0, _alignCenterHorizontalJsDefault.default));
parcelHelpers.export(exports, "AlignCenterVertical", ()=>(0, _alignCenterVerticalJsDefault.default));
parcelHelpers.export(exports, "AlignCenterVerticalIcon", ()=>(0, _alignCenterVerticalJsDefault.default));
parcelHelpers.export(exports, "LucideAlignCenterVertical", ()=>(0, _alignCenterVerticalJsDefault.default));
parcelHelpers.export(exports, "AlignEndHorizontal", ()=>(0, _alignEndHorizontalJsDefault.default));
parcelHelpers.export(exports, "AlignEndHorizontalIcon", ()=>(0, _alignEndHorizontalJsDefault.default));
parcelHelpers.export(exports, "LucideAlignEndHorizontal", ()=>(0, _alignEndHorizontalJsDefault.default));
parcelHelpers.export(exports, "AlignEndVertical", ()=>(0, _alignEndVerticalJsDefault.default));
parcelHelpers.export(exports, "AlignEndVerticalIcon", ()=>(0, _alignEndVerticalJsDefault.default));
parcelHelpers.export(exports, "LucideAlignEndVertical", ()=>(0, _alignEndVerticalJsDefault.default));
parcelHelpers.export(exports, "AlignHorizontalDistributeCenter", ()=>(0, _alignHorizontalDistributeCenterJsDefault.default));
parcelHelpers.export(exports, "AlignHorizontalDistributeCenterIcon", ()=>(0, _alignHorizontalDistributeCenterJsDefault.default));
parcelHelpers.export(exports, "LucideAlignHorizontalDistributeCenter", ()=>(0, _alignHorizontalDistributeCenterJsDefault.default));
parcelHelpers.export(exports, "AlignHorizontalDistributeEnd", ()=>(0, _alignHorizontalDistributeEndJsDefault.default));
parcelHelpers.export(exports, "AlignHorizontalDistributeEndIcon", ()=>(0, _alignHorizontalDistributeEndJsDefault.default));
parcelHelpers.export(exports, "LucideAlignHorizontalDistributeEnd", ()=>(0, _alignHorizontalDistributeEndJsDefault.default));
parcelHelpers.export(exports, "AlignHorizontalDistributeStart", ()=>(0, _alignHorizontalDistributeStartJsDefault.default));
parcelHelpers.export(exports, "AlignHorizontalDistributeStartIcon", ()=>(0, _alignHorizontalDistributeStartJsDefault.default));
parcelHelpers.export(exports, "LucideAlignHorizontalDistributeStart", ()=>(0, _alignHorizontalDistributeStartJsDefault.default));
parcelHelpers.export(exports, "AlignHorizontalJustifyCenter", ()=>(0, _alignHorizontalJustifyCenterJsDefault.default));
parcelHelpers.export(exports, "AlignHorizontalJustifyCenterIcon", ()=>(0, _alignHorizontalJustifyCenterJsDefault.default));
parcelHelpers.export(exports, "LucideAlignHorizontalJustifyCenter", ()=>(0, _alignHorizontalJustifyCenterJsDefault.default));
parcelHelpers.export(exports, "AlignHorizontalJustifyEnd", ()=>(0, _alignHorizontalJustifyEndJsDefault.default));
parcelHelpers.export(exports, "AlignHorizontalJustifyEndIcon", ()=>(0, _alignHorizontalJustifyEndJsDefault.default));
parcelHelpers.export(exports, "LucideAlignHorizontalJustifyEnd", ()=>(0, _alignHorizontalJustifyEndJsDefault.default));
parcelHelpers.export(exports, "AlignHorizontalJustifyStart", ()=>(0, _alignHorizontalJustifyStartJsDefault.default));
parcelHelpers.export(exports, "AlignHorizontalJustifyStartIcon", ()=>(0, _alignHorizontalJustifyStartJsDefault.default));
parcelHelpers.export(exports, "LucideAlignHorizontalJustifyStart", ()=>(0, _alignHorizontalJustifyStartJsDefault.default));
parcelHelpers.export(exports, "AlignHorizontalSpaceAround", ()=>(0, _alignHorizontalSpaceAroundJsDefault.default));
parcelHelpers.export(exports, "AlignHorizontalSpaceAroundIcon", ()=>(0, _alignHorizontalSpaceAroundJsDefault.default));
parcelHelpers.export(exports, "LucideAlignHorizontalSpaceAround", ()=>(0, _alignHorizontalSpaceAroundJsDefault.default));
parcelHelpers.export(exports, "AlignHorizontalSpaceBetween", ()=>(0, _alignHorizontalSpaceBetweenJsDefault.default));
parcelHelpers.export(exports, "AlignHorizontalSpaceBetweenIcon", ()=>(0, _alignHorizontalSpaceBetweenJsDefault.default));
parcelHelpers.export(exports, "LucideAlignHorizontalSpaceBetween", ()=>(0, _alignHorizontalSpaceBetweenJsDefault.default));
parcelHelpers.export(exports, "AlignStartHorizontal", ()=>(0, _alignStartHorizontalJsDefault.default));
parcelHelpers.export(exports, "AlignStartHorizontalIcon", ()=>(0, _alignStartHorizontalJsDefault.default));
parcelHelpers.export(exports, "LucideAlignStartHorizontal", ()=>(0, _alignStartHorizontalJsDefault.default));
parcelHelpers.export(exports, "AlignStartVertical", ()=>(0, _alignStartVerticalJsDefault.default));
parcelHelpers.export(exports, "AlignStartVerticalIcon", ()=>(0, _alignStartVerticalJsDefault.default));
parcelHelpers.export(exports, "LucideAlignStartVertical", ()=>(0, _alignStartVerticalJsDefault.default));
parcelHelpers.export(exports, "AlignVerticalDistributeCenter", ()=>(0, _alignVerticalDistributeCenterJsDefault.default));
parcelHelpers.export(exports, "AlignVerticalDistributeCenterIcon", ()=>(0, _alignVerticalDistributeCenterJsDefault.default));
parcelHelpers.export(exports, "LucideAlignVerticalDistributeCenter", ()=>(0, _alignVerticalDistributeCenterJsDefault.default));
parcelHelpers.export(exports, "AlignVerticalDistributeEnd", ()=>(0, _alignVerticalDistributeEndJsDefault.default));
parcelHelpers.export(exports, "AlignVerticalDistributeEndIcon", ()=>(0, _alignVerticalDistributeEndJsDefault.default));
parcelHelpers.export(exports, "LucideAlignVerticalDistributeEnd", ()=>(0, _alignVerticalDistributeEndJsDefault.default));
parcelHelpers.export(exports, "AlignVerticalDistributeStart", ()=>(0, _alignVerticalDistributeStartJsDefault.default));
parcelHelpers.export(exports, "AlignVerticalDistributeStartIcon", ()=>(0, _alignVerticalDistributeStartJsDefault.default));
parcelHelpers.export(exports, "LucideAlignVerticalDistributeStart", ()=>(0, _alignVerticalDistributeStartJsDefault.default));
parcelHelpers.export(exports, "AlignVerticalJustifyCenter", ()=>(0, _alignVerticalJustifyCenterJsDefault.default));
parcelHelpers.export(exports, "AlignVerticalJustifyCenterIcon", ()=>(0, _alignVerticalJustifyCenterJsDefault.default));
parcelHelpers.export(exports, "LucideAlignVerticalJustifyCenter", ()=>(0, _alignVerticalJustifyCenterJsDefault.default));
parcelHelpers.export(exports, "AlignVerticalJustifyEnd", ()=>(0, _alignVerticalJustifyEndJsDefault.default));
parcelHelpers.export(exports, "AlignVerticalJustifyEndIcon", ()=>(0, _alignVerticalJustifyEndJsDefault.default));
parcelHelpers.export(exports, "LucideAlignVerticalJustifyEnd", ()=>(0, _alignVerticalJustifyEndJsDefault.default));
parcelHelpers.export(exports, "AlignVerticalJustifyStart", ()=>(0, _alignVerticalJustifyStartJsDefault.default));
parcelHelpers.export(exports, "AlignVerticalJustifyStartIcon", ()=>(0, _alignVerticalJustifyStartJsDefault.default));
parcelHelpers.export(exports, "LucideAlignVerticalJustifyStart", ()=>(0, _alignVerticalJustifyStartJsDefault.default));
parcelHelpers.export(exports, "AlignVerticalSpaceAround", ()=>(0, _alignVerticalSpaceAroundJsDefault.default));
parcelHelpers.export(exports, "AlignVerticalSpaceAroundIcon", ()=>(0, _alignVerticalSpaceAroundJsDefault.default));
parcelHelpers.export(exports, "LucideAlignVerticalSpaceAround", ()=>(0, _alignVerticalSpaceAroundJsDefault.default));
parcelHelpers.export(exports, "AlignVerticalSpaceBetween", ()=>(0, _alignVerticalSpaceBetweenJsDefault.default));
parcelHelpers.export(exports, "AlignVerticalSpaceBetweenIcon", ()=>(0, _alignVerticalSpaceBetweenJsDefault.default));
parcelHelpers.export(exports, "LucideAlignVerticalSpaceBetween", ()=>(0, _alignVerticalSpaceBetweenJsDefault.default));
parcelHelpers.export(exports, "Ambulance", ()=>(0, _ambulanceJsDefault.default));
parcelHelpers.export(exports, "AmbulanceIcon", ()=>(0, _ambulanceJsDefault.default));
parcelHelpers.export(exports, "LucideAmbulance", ()=>(0, _ambulanceJsDefault.default));
parcelHelpers.export(exports, "Ampersand", ()=>(0, _ampersandJsDefault.default));
parcelHelpers.export(exports, "AmpersandIcon", ()=>(0, _ampersandJsDefault.default));
parcelHelpers.export(exports, "LucideAmpersand", ()=>(0, _ampersandJsDefault.default));
parcelHelpers.export(exports, "Ampersands", ()=>(0, _ampersandsJsDefault.default));
parcelHelpers.export(exports, "AmpersandsIcon", ()=>(0, _ampersandsJsDefault.default));
parcelHelpers.export(exports, "LucideAmpersands", ()=>(0, _ampersandsJsDefault.default));
parcelHelpers.export(exports, "Amphora", ()=>(0, _amphoraJsDefault.default));
parcelHelpers.export(exports, "AmphoraIcon", ()=>(0, _amphoraJsDefault.default));
parcelHelpers.export(exports, "LucideAmphora", ()=>(0, _amphoraJsDefault.default));
parcelHelpers.export(exports, "Anchor", ()=>(0, _anchorJsDefault.default));
parcelHelpers.export(exports, "AnchorIcon", ()=>(0, _anchorJsDefault.default));
parcelHelpers.export(exports, "LucideAnchor", ()=>(0, _anchorJsDefault.default));
parcelHelpers.export(exports, "Angry", ()=>(0, _angryJsDefault.default));
parcelHelpers.export(exports, "AngryIcon", ()=>(0, _angryJsDefault.default));
parcelHelpers.export(exports, "LucideAngry", ()=>(0, _angryJsDefault.default));
parcelHelpers.export(exports, "Annoyed", ()=>(0, _annoyedJsDefault.default));
parcelHelpers.export(exports, "AnnoyedIcon", ()=>(0, _annoyedJsDefault.default));
parcelHelpers.export(exports, "LucideAnnoyed", ()=>(0, _annoyedJsDefault.default));
parcelHelpers.export(exports, "Antenna", ()=>(0, _antennaJsDefault.default));
parcelHelpers.export(exports, "AntennaIcon", ()=>(0, _antennaJsDefault.default));
parcelHelpers.export(exports, "LucideAntenna", ()=>(0, _antennaJsDefault.default));
parcelHelpers.export(exports, "Anvil", ()=>(0, _anvilJsDefault.default));
parcelHelpers.export(exports, "AnvilIcon", ()=>(0, _anvilJsDefault.default));
parcelHelpers.export(exports, "LucideAnvil", ()=>(0, _anvilJsDefault.default));
parcelHelpers.export(exports, "AppWindowMac", ()=>(0, _appWindowMacJsDefault.default));
parcelHelpers.export(exports, "AppWindowMacIcon", ()=>(0, _appWindowMacJsDefault.default));
parcelHelpers.export(exports, "LucideAppWindowMac", ()=>(0, _appWindowMacJsDefault.default));
parcelHelpers.export(exports, "Aperture", ()=>(0, _apertureJsDefault.default));
parcelHelpers.export(exports, "ApertureIcon", ()=>(0, _apertureJsDefault.default));
parcelHelpers.export(exports, "LucideAperture", ()=>(0, _apertureJsDefault.default));
parcelHelpers.export(exports, "AppWindow", ()=>(0, _appWindowJsDefault.default));
parcelHelpers.export(exports, "AppWindowIcon", ()=>(0, _appWindowJsDefault.default));
parcelHelpers.export(exports, "LucideAppWindow", ()=>(0, _appWindowJsDefault.default));
parcelHelpers.export(exports, "Apple", ()=>(0, _appleJsDefault.default));
parcelHelpers.export(exports, "AppleIcon", ()=>(0, _appleJsDefault.default));
parcelHelpers.export(exports, "LucideApple", ()=>(0, _appleJsDefault.default));
parcelHelpers.export(exports, "ArchiveRestore", ()=>(0, _archiveRestoreJsDefault.default));
parcelHelpers.export(exports, "ArchiveRestoreIcon", ()=>(0, _archiveRestoreJsDefault.default));
parcelHelpers.export(exports, "LucideArchiveRestore", ()=>(0, _archiveRestoreJsDefault.default));
parcelHelpers.export(exports, "ArchiveX", ()=>(0, _archiveXJsDefault.default));
parcelHelpers.export(exports, "ArchiveXIcon", ()=>(0, _archiveXJsDefault.default));
parcelHelpers.export(exports, "LucideArchiveX", ()=>(0, _archiveXJsDefault.default));
parcelHelpers.export(exports, "Archive", ()=>(0, _archiveJsDefault.default));
parcelHelpers.export(exports, "ArchiveIcon", ()=>(0, _archiveJsDefault.default));
parcelHelpers.export(exports, "LucideArchive", ()=>(0, _archiveJsDefault.default));
parcelHelpers.export(exports, "Armchair", ()=>(0, _armchairJsDefault.default));
parcelHelpers.export(exports, "ArmchairIcon", ()=>(0, _armchairJsDefault.default));
parcelHelpers.export(exports, "LucideArmchair", ()=>(0, _armchairJsDefault.default));
parcelHelpers.export(exports, "ArrowBigDownDash", ()=>(0, _arrowBigDownDashJsDefault.default));
parcelHelpers.export(exports, "ArrowBigDownDashIcon", ()=>(0, _arrowBigDownDashJsDefault.default));
parcelHelpers.export(exports, "LucideArrowBigDownDash", ()=>(0, _arrowBigDownDashJsDefault.default));
parcelHelpers.export(exports, "ArrowBigDown", ()=>(0, _arrowBigDownJsDefault.default));
parcelHelpers.export(exports, "ArrowBigDownIcon", ()=>(0, _arrowBigDownJsDefault.default));
parcelHelpers.export(exports, "LucideArrowBigDown", ()=>(0, _arrowBigDownJsDefault.default));
parcelHelpers.export(exports, "ArrowBigLeftDash", ()=>(0, _arrowBigLeftDashJsDefault.default));
parcelHelpers.export(exports, "ArrowBigLeftDashIcon", ()=>(0, _arrowBigLeftDashJsDefault.default));
parcelHelpers.export(exports, "LucideArrowBigLeftDash", ()=>(0, _arrowBigLeftDashJsDefault.default));
parcelHelpers.export(exports, "ArrowBigLeft", ()=>(0, _arrowBigLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowBigLeftIcon", ()=>(0, _arrowBigLeftJsDefault.default));
parcelHelpers.export(exports, "LucideArrowBigLeft", ()=>(0, _arrowBigLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowBigRightDash", ()=>(0, _arrowBigRightDashJsDefault.default));
parcelHelpers.export(exports, "ArrowBigRightDashIcon", ()=>(0, _arrowBigRightDashJsDefault.default));
parcelHelpers.export(exports, "LucideArrowBigRightDash", ()=>(0, _arrowBigRightDashJsDefault.default));
parcelHelpers.export(exports, "ArrowBigUpDash", ()=>(0, _arrowBigUpDashJsDefault.default));
parcelHelpers.export(exports, "ArrowBigUpDashIcon", ()=>(0, _arrowBigUpDashJsDefault.default));
parcelHelpers.export(exports, "LucideArrowBigUpDash", ()=>(0, _arrowBigUpDashJsDefault.default));
parcelHelpers.export(exports, "ArrowBigRight", ()=>(0, _arrowBigRightJsDefault.default));
parcelHelpers.export(exports, "ArrowBigRightIcon", ()=>(0, _arrowBigRightJsDefault.default));
parcelHelpers.export(exports, "LucideArrowBigRight", ()=>(0, _arrowBigRightJsDefault.default));
parcelHelpers.export(exports, "ArrowBigUp", ()=>(0, _arrowBigUpJsDefault.default));
parcelHelpers.export(exports, "ArrowBigUpIcon", ()=>(0, _arrowBigUpJsDefault.default));
parcelHelpers.export(exports, "LucideArrowBigUp", ()=>(0, _arrowBigUpJsDefault.default));
parcelHelpers.export(exports, "ArrowDownFromLine", ()=>(0, _arrowDownFromLineJsDefault.default));
parcelHelpers.export(exports, "ArrowDownFromLineIcon", ()=>(0, _arrowDownFromLineJsDefault.default));
parcelHelpers.export(exports, "LucideArrowDownFromLine", ()=>(0, _arrowDownFromLineJsDefault.default));
parcelHelpers.export(exports, "ArrowDownLeft", ()=>(0, _arrowDownLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowDownLeftIcon", ()=>(0, _arrowDownLeftJsDefault.default));
parcelHelpers.export(exports, "LucideArrowDownLeft", ()=>(0, _arrowDownLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowDownNarrowWide", ()=>(0, _arrowDownNarrowWideJsDefault.default));
parcelHelpers.export(exports, "ArrowDownNarrowWideIcon", ()=>(0, _arrowDownNarrowWideJsDefault.default));
parcelHelpers.export(exports, "LucideArrowDownNarrowWide", ()=>(0, _arrowDownNarrowWideJsDefault.default));
parcelHelpers.export(exports, "ArrowDownRight", ()=>(0, _arrowDownRightJsDefault.default));
parcelHelpers.export(exports, "ArrowDownRightIcon", ()=>(0, _arrowDownRightJsDefault.default));
parcelHelpers.export(exports, "LucideArrowDownRight", ()=>(0, _arrowDownRightJsDefault.default));
parcelHelpers.export(exports, "ArrowDownToDot", ()=>(0, _arrowDownToDotJsDefault.default));
parcelHelpers.export(exports, "ArrowDownToDotIcon", ()=>(0, _arrowDownToDotJsDefault.default));
parcelHelpers.export(exports, "LucideArrowDownToDot", ()=>(0, _arrowDownToDotJsDefault.default));
parcelHelpers.export(exports, "ArrowDownToLine", ()=>(0, _arrowDownToLineJsDefault.default));
parcelHelpers.export(exports, "ArrowDownToLineIcon", ()=>(0, _arrowDownToLineJsDefault.default));
parcelHelpers.export(exports, "LucideArrowDownToLine", ()=>(0, _arrowDownToLineJsDefault.default));
parcelHelpers.export(exports, "ArrowDownUp", ()=>(0, _arrowDownUpJsDefault.default));
parcelHelpers.export(exports, "ArrowDownUpIcon", ()=>(0, _arrowDownUpJsDefault.default));
parcelHelpers.export(exports, "LucideArrowDownUp", ()=>(0, _arrowDownUpJsDefault.default));
parcelHelpers.export(exports, "ArrowDown", ()=>(0, _arrowDownJsDefault.default));
parcelHelpers.export(exports, "ArrowDownIcon", ()=>(0, _arrowDownJsDefault.default));
parcelHelpers.export(exports, "LucideArrowDown", ()=>(0, _arrowDownJsDefault.default));
parcelHelpers.export(exports, "ArrowLeftFromLine", ()=>(0, _arrowLeftFromLineJsDefault.default));
parcelHelpers.export(exports, "ArrowLeftFromLineIcon", ()=>(0, _arrowLeftFromLineJsDefault.default));
parcelHelpers.export(exports, "LucideArrowLeftFromLine", ()=>(0, _arrowLeftFromLineJsDefault.default));
parcelHelpers.export(exports, "ArrowLeftRight", ()=>(0, _arrowLeftRightJsDefault.default));
parcelHelpers.export(exports, "ArrowLeftRightIcon", ()=>(0, _arrowLeftRightJsDefault.default));
parcelHelpers.export(exports, "LucideArrowLeftRight", ()=>(0, _arrowLeftRightJsDefault.default));
parcelHelpers.export(exports, "ArrowLeftToLine", ()=>(0, _arrowLeftToLineJsDefault.default));
parcelHelpers.export(exports, "ArrowLeftToLineIcon", ()=>(0, _arrowLeftToLineJsDefault.default));
parcelHelpers.export(exports, "LucideArrowLeftToLine", ()=>(0, _arrowLeftToLineJsDefault.default));
parcelHelpers.export(exports, "ArrowLeft", ()=>(0, _arrowLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowLeftIcon", ()=>(0, _arrowLeftJsDefault.default));
parcelHelpers.export(exports, "LucideArrowLeft", ()=>(0, _arrowLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowRightFromLine", ()=>(0, _arrowRightFromLineJsDefault.default));
parcelHelpers.export(exports, "ArrowRightFromLineIcon", ()=>(0, _arrowRightFromLineJsDefault.default));
parcelHelpers.export(exports, "LucideArrowRightFromLine", ()=>(0, _arrowRightFromLineJsDefault.default));
parcelHelpers.export(exports, "ArrowRightLeft", ()=>(0, _arrowRightLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowRightLeftIcon", ()=>(0, _arrowRightLeftJsDefault.default));
parcelHelpers.export(exports, "LucideArrowRightLeft", ()=>(0, _arrowRightLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowRightToLine", ()=>(0, _arrowRightToLineJsDefault.default));
parcelHelpers.export(exports, "ArrowRightToLineIcon", ()=>(0, _arrowRightToLineJsDefault.default));
parcelHelpers.export(exports, "LucideArrowRightToLine", ()=>(0, _arrowRightToLineJsDefault.default));
parcelHelpers.export(exports, "ArrowRight", ()=>(0, _arrowRightJsDefault.default));
parcelHelpers.export(exports, "ArrowRightIcon", ()=>(0, _arrowRightJsDefault.default));
parcelHelpers.export(exports, "LucideArrowRight", ()=>(0, _arrowRightJsDefault.default));
parcelHelpers.export(exports, "ArrowUpDown", ()=>(0, _arrowUpDownJsDefault.default));
parcelHelpers.export(exports, "ArrowUpDownIcon", ()=>(0, _arrowUpDownJsDefault.default));
parcelHelpers.export(exports, "LucideArrowUpDown", ()=>(0, _arrowUpDownJsDefault.default));
parcelHelpers.export(exports, "ArrowUpFromDot", ()=>(0, _arrowUpFromDotJsDefault.default));
parcelHelpers.export(exports, "ArrowUpFromDotIcon", ()=>(0, _arrowUpFromDotJsDefault.default));
parcelHelpers.export(exports, "LucideArrowUpFromDot", ()=>(0, _arrowUpFromDotJsDefault.default));
parcelHelpers.export(exports, "ArrowUpFromLine", ()=>(0, _arrowUpFromLineJsDefault.default));
parcelHelpers.export(exports, "ArrowUpFromLineIcon", ()=>(0, _arrowUpFromLineJsDefault.default));
parcelHelpers.export(exports, "LucideArrowUpFromLine", ()=>(0, _arrowUpFromLineJsDefault.default));
parcelHelpers.export(exports, "ArrowUpLeft", ()=>(0, _arrowUpLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowUpLeftIcon", ()=>(0, _arrowUpLeftJsDefault.default));
parcelHelpers.export(exports, "LucideArrowUpLeft", ()=>(0, _arrowUpLeftJsDefault.default));
parcelHelpers.export(exports, "ArrowUpRight", ()=>(0, _arrowUpRightJsDefault.default));
parcelHelpers.export(exports, "ArrowUpRightIcon", ()=>(0, _arrowUpRightJsDefault.default));
parcelHelpers.export(exports, "LucideArrowUpRight", ()=>(0, _arrowUpRightJsDefault.default));
parcelHelpers.export(exports, "ArrowUpToLine", ()=>(0, _arrowUpToLineJsDefault.default));
parcelHelpers.export(exports, "ArrowUpToLineIcon", ()=>(0, _arrowUpToLineJsDefault.default));
parcelHelpers.export(exports, "LucideArrowUpToLine", ()=>(0, _arrowUpToLineJsDefault.default));
parcelHelpers.export(exports, "ArrowUpWideNarrow", ()=>(0, _arrowUpWideNarrowJsDefault.default));
parcelHelpers.export(exports, "ArrowUpWideNarrowIcon", ()=>(0, _arrowUpWideNarrowJsDefault.default));
parcelHelpers.export(exports, "LucideArrowUpWideNarrow", ()=>(0, _arrowUpWideNarrowJsDefault.default));
parcelHelpers.export(exports, "ArrowUp", ()=>(0, _arrowUpJsDefault.default));
parcelHelpers.export(exports, "ArrowUpIcon", ()=>(0, _arrowUpJsDefault.default));
parcelHelpers.export(exports, "LucideArrowUp", ()=>(0, _arrowUpJsDefault.default));
parcelHelpers.export(exports, "ArrowsUpFromLine", ()=>(0, _arrowsUpFromLineJsDefault.default));
parcelHelpers.export(exports, "ArrowsUpFromLineIcon", ()=>(0, _arrowsUpFromLineJsDefault.default));
parcelHelpers.export(exports, "LucideArrowsUpFromLine", ()=>(0, _arrowsUpFromLineJsDefault.default));
parcelHelpers.export(exports, "Asterisk", ()=>(0, _asteriskJsDefault.default));
parcelHelpers.export(exports, "AsteriskIcon", ()=>(0, _asteriskJsDefault.default));
parcelHelpers.export(exports, "LucideAsterisk", ()=>(0, _asteriskJsDefault.default));
parcelHelpers.export(exports, "AtSign", ()=>(0, _atSignJsDefault.default));
parcelHelpers.export(exports, "AtSignIcon", ()=>(0, _atSignJsDefault.default));
parcelHelpers.export(exports, "LucideAtSign", ()=>(0, _atSignJsDefault.default));
parcelHelpers.export(exports, "Atom", ()=>(0, _atomJsDefault.default));
parcelHelpers.export(exports, "AtomIcon", ()=>(0, _atomJsDefault.default));
parcelHelpers.export(exports, "LucideAtom", ()=>(0, _atomJsDefault.default));
parcelHelpers.export(exports, "AudioLines", ()=>(0, _audioLinesJsDefault.default));
parcelHelpers.export(exports, "AudioLinesIcon", ()=>(0, _audioLinesJsDefault.default));
parcelHelpers.export(exports, "LucideAudioLines", ()=>(0, _audioLinesJsDefault.default));
parcelHelpers.export(exports, "Award", ()=>(0, _awardJsDefault.default));
parcelHelpers.export(exports, "AwardIcon", ()=>(0, _awardJsDefault.default));
parcelHelpers.export(exports, "LucideAward", ()=>(0, _awardJsDefault.default));
parcelHelpers.export(exports, "AudioWaveform", ()=>(0, _audioWaveformJsDefault.default));
parcelHelpers.export(exports, "AudioWaveformIcon", ()=>(0, _audioWaveformJsDefault.default));
parcelHelpers.export(exports, "LucideAudioWaveform", ()=>(0, _audioWaveformJsDefault.default));
parcelHelpers.export(exports, "Axe", ()=>(0, _axeJsDefault.default));
parcelHelpers.export(exports, "AxeIcon", ()=>(0, _axeJsDefault.default));
parcelHelpers.export(exports, "LucideAxe", ()=>(0, _axeJsDefault.default));
parcelHelpers.export(exports, "Baby", ()=>(0, _babyJsDefault.default));
parcelHelpers.export(exports, "BabyIcon", ()=>(0, _babyJsDefault.default));
parcelHelpers.export(exports, "LucideBaby", ()=>(0, _babyJsDefault.default));
parcelHelpers.export(exports, "Backpack", ()=>(0, _backpackJsDefault.default));
parcelHelpers.export(exports, "BackpackIcon", ()=>(0, _backpackJsDefault.default));
parcelHelpers.export(exports, "LucideBackpack", ()=>(0, _backpackJsDefault.default));
parcelHelpers.export(exports, "BadgeAlert", ()=>(0, _badgeAlertJsDefault.default));
parcelHelpers.export(exports, "BadgeAlertIcon", ()=>(0, _badgeAlertJsDefault.default));
parcelHelpers.export(exports, "LucideBadgeAlert", ()=>(0, _badgeAlertJsDefault.default));
parcelHelpers.export(exports, "BadgeCent", ()=>(0, _badgeCentJsDefault.default));
parcelHelpers.export(exports, "BadgeCentIcon", ()=>(0, _badgeCentJsDefault.default));
parcelHelpers.export(exports, "LucideBadgeCent", ()=>(0, _badgeCentJsDefault.default));
parcelHelpers.export(exports, "BadgeDollarSign", ()=>(0, _badgeDollarSignJsDefault.default));
parcelHelpers.export(exports, "BadgeDollarSignIcon", ()=>(0, _badgeDollarSignJsDefault.default));
parcelHelpers.export(exports, "LucideBadgeDollarSign", ()=>(0, _badgeDollarSignJsDefault.default));
parcelHelpers.export(exports, "BadgeEuro", ()=>(0, _badgeEuroJsDefault.default));
parcelHelpers.export(exports, "BadgeEuroIcon", ()=>(0, _badgeEuroJsDefault.default));
parcelHelpers.export(exports, "LucideBadgeEuro", ()=>(0, _badgeEuroJsDefault.default));
parcelHelpers.export(exports, "BadgeIndianRupee", ()=>(0, _badgeIndianRupeeJsDefault.default));
parcelHelpers.export(exports, "BadgeIndianRupeeIcon", ()=>(0, _badgeIndianRupeeJsDefault.default));
parcelHelpers.export(exports, "LucideBadgeIndianRupee", ()=>(0, _badgeIndianRupeeJsDefault.default));
parcelHelpers.export(exports, "BadgeInfo", ()=>(0, _badgeInfoJsDefault.default));
parcelHelpers.export(exports, "BadgeInfoIcon", ()=>(0, _badgeInfoJsDefault.default));
parcelHelpers.export(exports, "LucideBadgeInfo", ()=>(0, _badgeInfoJsDefault.default));
parcelHelpers.export(exports, "BadgeJapaneseYen", ()=>(0, _badgeJapaneseYenJsDefault.default));
parcelHelpers.export(exports, "BadgeJapaneseYenIcon", ()=>(0, _badgeJapaneseYenJsDefault.default));
parcelHelpers.export(exports, "LucideBadgeJapaneseYen", ()=>(0, _badgeJapaneseYenJsDefault.default));
parcelHelpers.export(exports, "BadgeMinus", ()=>(0, _badgeMinusJsDefault.default));
parcelHelpers.export(exports, "BadgeMinusIcon", ()=>(0, _badgeMinusJsDefault.default));
parcelHelpers.export(exports, "LucideBadgeMinus", ()=>(0, _badgeMinusJsDefault.default));
parcelHelpers.export(exports, "BadgePlus", ()=>(0, _badgePlusJsDefault.default));
parcelHelpers.export(exports, "BadgePlusIcon", ()=>(0, _badgePlusJsDefault.default));
parcelHelpers.export(exports, "LucideBadgePlus", ()=>(0, _badgePlusJsDefault.default));
parcelHelpers.export(exports, "BadgePoundSterling", ()=>(0, _badgePoundSterlingJsDefault.default));
parcelHelpers.export(exports, "BadgePoundSterlingIcon", ()=>(0, _badgePoundSterlingJsDefault.default));
parcelHelpers.export(exports, "LucideBadgePoundSterling", ()=>(0, _badgePoundSterlingJsDefault.default));
parcelHelpers.export(exports, "BadgePercent", ()=>(0, _badgePercentJsDefault.default));
parcelHelpers.export(exports, "BadgePercentIcon", ()=>(0, _badgePercentJsDefault.default));
parcelHelpers.export(exports, "LucideBadgePercent", ()=>(0, _badgePercentJsDefault.default));
parcelHelpers.export(exports, "BadgeRussianRuble", ()=>(0, _badgeRussianRubleJsDefault.default));
parcelHelpers.export(exports, "BadgeRussianRubleIcon", ()=>(0, _badgeRussianRubleJsDefault.default));
parcelHelpers.export(exports, "LucideBadgeRussianRuble", ()=>(0, _badgeRussianRubleJsDefault.default));
parcelHelpers.export(exports, "BadgeSwissFranc", ()=>(0, _badgeSwissFrancJsDefault.default));
parcelHelpers.export(exports, "BadgeSwissFrancIcon", ()=>(0, _badgeSwissFrancJsDefault.default));
parcelHelpers.export(exports, "LucideBadgeSwissFranc", ()=>(0, _badgeSwissFrancJsDefault.default));
parcelHelpers.export(exports, "BadgeTurkishLira", ()=>(0, _badgeTurkishLiraJsDefault.default));
parcelHelpers.export(exports, "BadgeTurkishLiraIcon", ()=>(0, _badgeTurkishLiraJsDefault.default));
parcelHelpers.export(exports, "LucideBadgeTurkishLira", ()=>(0, _badgeTurkishLiraJsDefault.default));
parcelHelpers.export(exports, "BadgeX", ()=>(0, _badgeXJsDefault.default));
parcelHelpers.export(exports, "BadgeXIcon", ()=>(0, _badgeXJsDefault.default));
parcelHelpers.export(exports, "LucideBadgeX", ()=>(0, _badgeXJsDefault.default));
parcelHelpers.export(exports, "Badge", ()=>(0, _badgeJsDefault.default));
parcelHelpers.export(exports, "BadgeIcon", ()=>(0, _badgeJsDefault.default));
parcelHelpers.export(exports, "LucideBadge", ()=>(0, _badgeJsDefault.default));
parcelHelpers.export(exports, "BaggageClaim", ()=>(0, _baggageClaimJsDefault.default));
parcelHelpers.export(exports, "BaggageClaimIcon", ()=>(0, _baggageClaimJsDefault.default));
parcelHelpers.export(exports, "LucideBaggageClaim", ()=>(0, _baggageClaimJsDefault.default));
parcelHelpers.export(exports, "Ban", ()=>(0, _banJsDefault.default));
parcelHelpers.export(exports, "BanIcon", ()=>(0, _banJsDefault.default));
parcelHelpers.export(exports, "LucideBan", ()=>(0, _banJsDefault.default));
parcelHelpers.export(exports, "Banana", ()=>(0, _bananaJsDefault.default));
parcelHelpers.export(exports, "BananaIcon", ()=>(0, _bananaJsDefault.default));
parcelHelpers.export(exports, "LucideBanana", ()=>(0, _bananaJsDefault.default));
parcelHelpers.export(exports, "Bandage", ()=>(0, _bandageJsDefault.default));
parcelHelpers.export(exports, "BandageIcon", ()=>(0, _bandageJsDefault.default));
parcelHelpers.export(exports, "LucideBandage", ()=>(0, _bandageJsDefault.default));
parcelHelpers.export(exports, "BanknoteArrowDown", ()=>(0, _banknoteArrowDownJsDefault.default));
parcelHelpers.export(exports, "BanknoteArrowDownIcon", ()=>(0, _banknoteArrowDownJsDefault.default));
parcelHelpers.export(exports, "LucideBanknoteArrowDown", ()=>(0, _banknoteArrowDownJsDefault.default));
parcelHelpers.export(exports, "BanknoteX", ()=>(0, _banknoteXJsDefault.default));
parcelHelpers.export(exports, "BanknoteXIcon", ()=>(0, _banknoteXJsDefault.default));
parcelHelpers.export(exports, "LucideBanknoteX", ()=>(0, _banknoteXJsDefault.default));
parcelHelpers.export(exports, "BanknoteArrowUp", ()=>(0, _banknoteArrowUpJsDefault.default));
parcelHelpers.export(exports, "BanknoteArrowUpIcon", ()=>(0, _banknoteArrowUpJsDefault.default));
parcelHelpers.export(exports, "LucideBanknoteArrowUp", ()=>(0, _banknoteArrowUpJsDefault.default));
parcelHelpers.export(exports, "Banknote", ()=>(0, _banknoteJsDefault.default));
parcelHelpers.export(exports, "BanknoteIcon", ()=>(0, _banknoteJsDefault.default));
parcelHelpers.export(exports, "LucideBanknote", ()=>(0, _banknoteJsDefault.default));
parcelHelpers.export(exports, "Barcode", ()=>(0, _barcodeJsDefault.default));
parcelHelpers.export(exports, "BarcodeIcon", ()=>(0, _barcodeJsDefault.default));
parcelHelpers.export(exports, "LucideBarcode", ()=>(0, _barcodeJsDefault.default));
parcelHelpers.export(exports, "Baseline", ()=>(0, _baselineJsDefault.default));
parcelHelpers.export(exports, "BaselineIcon", ()=>(0, _baselineJsDefault.default));
parcelHelpers.export(exports, "LucideBaseline", ()=>(0, _baselineJsDefault.default));
parcelHelpers.export(exports, "Barrel", ()=>(0, _barrelJsDefault.default));
parcelHelpers.export(exports, "BarrelIcon", ()=>(0, _barrelJsDefault.default));
parcelHelpers.export(exports, "LucideBarrel", ()=>(0, _barrelJsDefault.default));
parcelHelpers.export(exports, "Bath", ()=>(0, _bathJsDefault.default));
parcelHelpers.export(exports, "BathIcon", ()=>(0, _bathJsDefault.default));
parcelHelpers.export(exports, "LucideBath", ()=>(0, _bathJsDefault.default));
parcelHelpers.export(exports, "BatteryCharging", ()=>(0, _batteryChargingJsDefault.default));
parcelHelpers.export(exports, "BatteryChargingIcon", ()=>(0, _batteryChargingJsDefault.default));
parcelHelpers.export(exports, "LucideBatteryCharging", ()=>(0, _batteryChargingJsDefault.default));
parcelHelpers.export(exports, "BatteryFull", ()=>(0, _batteryFullJsDefault.default));
parcelHelpers.export(exports, "BatteryFullIcon", ()=>(0, _batteryFullJsDefault.default));
parcelHelpers.export(exports, "LucideBatteryFull", ()=>(0, _batteryFullJsDefault.default));
parcelHelpers.export(exports, "BatteryLow", ()=>(0, _batteryLowJsDefault.default));
parcelHelpers.export(exports, "BatteryLowIcon", ()=>(0, _batteryLowJsDefault.default));
parcelHelpers.export(exports, "LucideBatteryLow", ()=>(0, _batteryLowJsDefault.default));
parcelHelpers.export(exports, "BatteryMedium", ()=>(0, _batteryMediumJsDefault.default));
parcelHelpers.export(exports, "BatteryMediumIcon", ()=>(0, _batteryMediumJsDefault.default));
parcelHelpers.export(exports, "LucideBatteryMedium", ()=>(0, _batteryMediumJsDefault.default));
parcelHelpers.export(exports, "BatteryPlus", ()=>(0, _batteryPlusJsDefault.default));
parcelHelpers.export(exports, "BatteryPlusIcon", ()=>(0, _batteryPlusJsDefault.default));
parcelHelpers.export(exports, "LucideBatteryPlus", ()=>(0, _batteryPlusJsDefault.default));
parcelHelpers.export(exports, "BatteryWarning", ()=>(0, _batteryWarningJsDefault.default));
parcelHelpers.export(exports, "BatteryWarningIcon", ()=>(0, _batteryWarningJsDefault.default));
parcelHelpers.export(exports, "LucideBatteryWarning", ()=>(0, _batteryWarningJsDefault.default));
parcelHelpers.export(exports, "Battery", ()=>(0, _batteryJsDefault.default));
parcelHelpers.export(exports, "BatteryIcon", ()=>(0, _batteryJsDefault.default));
parcelHelpers.export(exports, "LucideBattery", ()=>(0, _batteryJsDefault.default));
parcelHelpers.export(exports, "Beaker", ()=>(0, _beakerJsDefault.default));
parcelHelpers.export(exports, "BeakerIcon", ()=>(0, _beakerJsDefault.default));
parcelHelpers.export(exports, "LucideBeaker", ()=>(0, _beakerJsDefault.default));
parcelHelpers.export(exports, "BeanOff", ()=>(0, _beanOffJsDefault.default));
parcelHelpers.export(exports, "BeanOffIcon", ()=>(0, _beanOffJsDefault.default));
parcelHelpers.export(exports, "LucideBeanOff", ()=>(0, _beanOffJsDefault.default));
parcelHelpers.export(exports, "Bean", ()=>(0, _beanJsDefault.default));
parcelHelpers.export(exports, "BeanIcon", ()=>(0, _beanJsDefault.default));
parcelHelpers.export(exports, "LucideBean", ()=>(0, _beanJsDefault.default));
parcelHelpers.export(exports, "BedDouble", ()=>(0, _bedDoubleJsDefault.default));
parcelHelpers.export(exports, "BedDoubleIcon", ()=>(0, _bedDoubleJsDefault.default));
parcelHelpers.export(exports, "LucideBedDouble", ()=>(0, _bedDoubleJsDefault.default));
parcelHelpers.export(exports, "BedSingle", ()=>(0, _bedSingleJsDefault.default));
parcelHelpers.export(exports, "BedSingleIcon", ()=>(0, _bedSingleJsDefault.default));
parcelHelpers.export(exports, "LucideBedSingle", ()=>(0, _bedSingleJsDefault.default));
parcelHelpers.export(exports, "Bed", ()=>(0, _bedJsDefault.default));
parcelHelpers.export(exports, "BedIcon", ()=>(0, _bedJsDefault.default));
parcelHelpers.export(exports, "LucideBed", ()=>(0, _bedJsDefault.default));
parcelHelpers.export(exports, "Beef", ()=>(0, _beefJsDefault.default));
parcelHelpers.export(exports, "BeefIcon", ()=>(0, _beefJsDefault.default));
parcelHelpers.export(exports, "LucideBeef", ()=>(0, _beefJsDefault.default));
parcelHelpers.export(exports, "BeerOff", ()=>(0, _beerOffJsDefault.default));
parcelHelpers.export(exports, "BeerOffIcon", ()=>(0, _beerOffJsDefault.default));
parcelHelpers.export(exports, "LucideBeerOff", ()=>(0, _beerOffJsDefault.default));
parcelHelpers.export(exports, "BellDot", ()=>(0, _bellDotJsDefault.default));
parcelHelpers.export(exports, "BellDotIcon", ()=>(0, _bellDotJsDefault.default));
parcelHelpers.export(exports, "LucideBellDot", ()=>(0, _bellDotJsDefault.default));
parcelHelpers.export(exports, "Beer", ()=>(0, _beerJsDefault.default));
parcelHelpers.export(exports, "BeerIcon", ()=>(0, _beerJsDefault.default));
parcelHelpers.export(exports, "LucideBeer", ()=>(0, _beerJsDefault.default));
parcelHelpers.export(exports, "BellElectric", ()=>(0, _bellElectricJsDefault.default));
parcelHelpers.export(exports, "BellElectricIcon", ()=>(0, _bellElectricJsDefault.default));
parcelHelpers.export(exports, "LucideBellElectric", ()=>(0, _bellElectricJsDefault.default));
parcelHelpers.export(exports, "BellMinus", ()=>(0, _bellMinusJsDefault.default));
parcelHelpers.export(exports, "BellMinusIcon", ()=>(0, _bellMinusJsDefault.default));
parcelHelpers.export(exports, "LucideBellMinus", ()=>(0, _bellMinusJsDefault.default));
parcelHelpers.export(exports, "BellOff", ()=>(0, _bellOffJsDefault.default));
parcelHelpers.export(exports, "BellOffIcon", ()=>(0, _bellOffJsDefault.default));
parcelHelpers.export(exports, "LucideBellOff", ()=>(0, _bellOffJsDefault.default));
parcelHelpers.export(exports, "BellPlus", ()=>(0, _bellPlusJsDefault.default));
parcelHelpers.export(exports, "BellPlusIcon", ()=>(0, _bellPlusJsDefault.default));
parcelHelpers.export(exports, "LucideBellPlus", ()=>(0, _bellPlusJsDefault.default));
parcelHelpers.export(exports, "BellRing", ()=>(0, _bellRingJsDefault.default));
parcelHelpers.export(exports, "BellRingIcon", ()=>(0, _bellRingJsDefault.default));
parcelHelpers.export(exports, "LucideBellRing", ()=>(0, _bellRingJsDefault.default));
parcelHelpers.export(exports, "Bell", ()=>(0, _bellJsDefault.default));
parcelHelpers.export(exports, "BellIcon", ()=>(0, _bellJsDefault.default));
parcelHelpers.export(exports, "LucideBell", ()=>(0, _bellJsDefault.default));
parcelHelpers.export(exports, "BetweenVerticalEnd", ()=>(0, _betweenVerticalEndJsDefault.default));
parcelHelpers.export(exports, "BetweenVerticalEndIcon", ()=>(0, _betweenVerticalEndJsDefault.default));
parcelHelpers.export(exports, "LucideBetweenVerticalEnd", ()=>(0, _betweenVerticalEndJsDefault.default));
parcelHelpers.export(exports, "BetweenVerticalStart", ()=>(0, _betweenVerticalStartJsDefault.default));
parcelHelpers.export(exports, "BetweenVerticalStartIcon", ()=>(0, _betweenVerticalStartJsDefault.default));
parcelHelpers.export(exports, "LucideBetweenVerticalStart", ()=>(0, _betweenVerticalStartJsDefault.default));
parcelHelpers.export(exports, "BicepsFlexed", ()=>(0, _bicepsFlexedJsDefault.default));
parcelHelpers.export(exports, "BicepsFlexedIcon", ()=>(0, _bicepsFlexedJsDefault.default));
parcelHelpers.export(exports, "LucideBicepsFlexed", ()=>(0, _bicepsFlexedJsDefault.default));
parcelHelpers.export(exports, "Bike", ()=>(0, _bikeJsDefault.default));
parcelHelpers.export(exports, "BikeIcon", ()=>(0, _bikeJsDefault.default));
parcelHelpers.export(exports, "LucideBike", ()=>(0, _bikeJsDefault.default));
parcelHelpers.export(exports, "Binary", ()=>(0, _binaryJsDefault.default));
parcelHelpers.export(exports, "BinaryIcon", ()=>(0, _binaryJsDefault.default));
parcelHelpers.export(exports, "LucideBinary", ()=>(0, _binaryJsDefault.default));
parcelHelpers.export(exports, "Binoculars", ()=>(0, _binocularsJsDefault.default));
parcelHelpers.export(exports, "BinocularsIcon", ()=>(0, _binocularsJsDefault.default));
parcelHelpers.export(exports, "LucideBinoculars", ()=>(0, _binocularsJsDefault.default));
parcelHelpers.export(exports, "Biohazard", ()=>(0, _biohazardJsDefault.default));
parcelHelpers.export(exports, "BiohazardIcon", ()=>(0, _biohazardJsDefault.default));
parcelHelpers.export(exports, "LucideBiohazard", ()=>(0, _biohazardJsDefault.default));
parcelHelpers.export(exports, "Bird", ()=>(0, _birdJsDefault.default));
parcelHelpers.export(exports, "BirdIcon", ()=>(0, _birdJsDefault.default));
parcelHelpers.export(exports, "LucideBird", ()=>(0, _birdJsDefault.default));
parcelHelpers.export(exports, "Bitcoin", ()=>(0, _bitcoinJsDefault.default));
parcelHelpers.export(exports, "BitcoinIcon", ()=>(0, _bitcoinJsDefault.default));
parcelHelpers.export(exports, "LucideBitcoin", ()=>(0, _bitcoinJsDefault.default));
parcelHelpers.export(exports, "Blend", ()=>(0, _blendJsDefault.default));
parcelHelpers.export(exports, "BlendIcon", ()=>(0, _blendJsDefault.default));
parcelHelpers.export(exports, "LucideBlend", ()=>(0, _blendJsDefault.default));
parcelHelpers.export(exports, "Blinds", ()=>(0, _blindsJsDefault.default));
parcelHelpers.export(exports, "BlindsIcon", ()=>(0, _blindsJsDefault.default));
parcelHelpers.export(exports, "LucideBlinds", ()=>(0, _blindsJsDefault.default));
parcelHelpers.export(exports, "Blocks", ()=>(0, _blocksJsDefault.default));
parcelHelpers.export(exports, "BlocksIcon", ()=>(0, _blocksJsDefault.default));
parcelHelpers.export(exports, "LucideBlocks", ()=>(0, _blocksJsDefault.default));
parcelHelpers.export(exports, "BluetoothConnected", ()=>(0, _bluetoothConnectedJsDefault.default));
parcelHelpers.export(exports, "BluetoothConnectedIcon", ()=>(0, _bluetoothConnectedJsDefault.default));
parcelHelpers.export(exports, "LucideBluetoothConnected", ()=>(0, _bluetoothConnectedJsDefault.default));
parcelHelpers.export(exports, "BluetoothOff", ()=>(0, _bluetoothOffJsDefault.default));
parcelHelpers.export(exports, "BluetoothOffIcon", ()=>(0, _bluetoothOffJsDefault.default));
parcelHelpers.export(exports, "LucideBluetoothOff", ()=>(0, _bluetoothOffJsDefault.default));
parcelHelpers.export(exports, "Bluetooth", ()=>(0, _bluetoothJsDefault.default));
parcelHelpers.export(exports, "BluetoothIcon", ()=>(0, _bluetoothJsDefault.default));
parcelHelpers.export(exports, "LucideBluetooth", ()=>(0, _bluetoothJsDefault.default));
parcelHelpers.export(exports, "BluetoothSearching", ()=>(0, _bluetoothSearchingJsDefault.default));
parcelHelpers.export(exports, "BluetoothSearchingIcon", ()=>(0, _bluetoothSearchingJsDefault.default));
parcelHelpers.export(exports, "LucideBluetoothSearching", ()=>(0, _bluetoothSearchingJsDefault.default));
parcelHelpers.export(exports, "Bold", ()=>(0, _boldJsDefault.default));
parcelHelpers.export(exports, "BoldIcon", ()=>(0, _boldJsDefault.default));
parcelHelpers.export(exports, "LucideBold", ()=>(0, _boldJsDefault.default));
parcelHelpers.export(exports, "Bolt", ()=>(0, _boltJsDefault.default));
parcelHelpers.export(exports, "BoltIcon", ()=>(0, _boltJsDefault.default));
parcelHelpers.export(exports, "LucideBolt", ()=>(0, _boltJsDefault.default));
parcelHelpers.export(exports, "Bomb", ()=>(0, _bombJsDefault.default));
parcelHelpers.export(exports, "BombIcon", ()=>(0, _bombJsDefault.default));
parcelHelpers.export(exports, "LucideBomb", ()=>(0, _bombJsDefault.default));
parcelHelpers.export(exports, "Bone", ()=>(0, _boneJsDefault.default));
parcelHelpers.export(exports, "BoneIcon", ()=>(0, _boneJsDefault.default));
parcelHelpers.export(exports, "LucideBone", ()=>(0, _boneJsDefault.default));
parcelHelpers.export(exports, "BookA", ()=>(0, _bookAJsDefault.default));
parcelHelpers.export(exports, "BookAIcon", ()=>(0, _bookAJsDefault.default));
parcelHelpers.export(exports, "LucideBookA", ()=>(0, _bookAJsDefault.default));
parcelHelpers.export(exports, "BookAlert", ()=>(0, _bookAlertJsDefault.default));
parcelHelpers.export(exports, "BookAlertIcon", ()=>(0, _bookAlertJsDefault.default));
parcelHelpers.export(exports, "LucideBookAlert", ()=>(0, _bookAlertJsDefault.default));
parcelHelpers.export(exports, "BookAudio", ()=>(0, _bookAudioJsDefault.default));
parcelHelpers.export(exports, "BookAudioIcon", ()=>(0, _bookAudioJsDefault.default));
parcelHelpers.export(exports, "LucideBookAudio", ()=>(0, _bookAudioJsDefault.default));
parcelHelpers.export(exports, "BookCheck", ()=>(0, _bookCheckJsDefault.default));
parcelHelpers.export(exports, "BookCheckIcon", ()=>(0, _bookCheckJsDefault.default));
parcelHelpers.export(exports, "LucideBookCheck", ()=>(0, _bookCheckJsDefault.default));
parcelHelpers.export(exports, "BookCopy", ()=>(0, _bookCopyJsDefault.default));
parcelHelpers.export(exports, "BookCopyIcon", ()=>(0, _bookCopyJsDefault.default));
parcelHelpers.export(exports, "LucideBookCopy", ()=>(0, _bookCopyJsDefault.default));
parcelHelpers.export(exports, "BookDown", ()=>(0, _bookDownJsDefault.default));
parcelHelpers.export(exports, "BookDownIcon", ()=>(0, _bookDownJsDefault.default));
parcelHelpers.export(exports, "LucideBookDown", ()=>(0, _bookDownJsDefault.default));
parcelHelpers.export(exports, "BookHeadphones", ()=>(0, _bookHeadphonesJsDefault.default));
parcelHelpers.export(exports, "BookHeadphonesIcon", ()=>(0, _bookHeadphonesJsDefault.default));
parcelHelpers.export(exports, "LucideBookHeadphones", ()=>(0, _bookHeadphonesJsDefault.default));
parcelHelpers.export(exports, "BookHeart", ()=>(0, _bookHeartJsDefault.default));
parcelHelpers.export(exports, "BookHeartIcon", ()=>(0, _bookHeartJsDefault.default));
parcelHelpers.export(exports, "LucideBookHeart", ()=>(0, _bookHeartJsDefault.default));
parcelHelpers.export(exports, "BookImage", ()=>(0, _bookImageJsDefault.default));
parcelHelpers.export(exports, "BookImageIcon", ()=>(0, _bookImageJsDefault.default));
parcelHelpers.export(exports, "LucideBookImage", ()=>(0, _bookImageJsDefault.default));
parcelHelpers.export(exports, "BookKey", ()=>(0, _bookKeyJsDefault.default));
parcelHelpers.export(exports, "BookKeyIcon", ()=>(0, _bookKeyJsDefault.default));
parcelHelpers.export(exports, "LucideBookKey", ()=>(0, _bookKeyJsDefault.default));
parcelHelpers.export(exports, "BookLock", ()=>(0, _bookLockJsDefault.default));
parcelHelpers.export(exports, "BookLockIcon", ()=>(0, _bookLockJsDefault.default));
parcelHelpers.export(exports, "LucideBookLock", ()=>(0, _bookLockJsDefault.default));
parcelHelpers.export(exports, "BookMarked", ()=>(0, _bookMarkedJsDefault.default));
parcelHelpers.export(exports, "BookMarkedIcon", ()=>(0, _bookMarkedJsDefault.default));
parcelHelpers.export(exports, "LucideBookMarked", ()=>(0, _bookMarkedJsDefault.default));
parcelHelpers.export(exports, "BookMinus", ()=>(0, _bookMinusJsDefault.default));
parcelHelpers.export(exports, "BookMinusIcon", ()=>(0, _bookMinusJsDefault.default));
parcelHelpers.export(exports, "LucideBookMinus", ()=>(0, _bookMinusJsDefault.default));
parcelHelpers.export(exports, "BookOpenCheck", ()=>(0, _bookOpenCheckJsDefault.default));
parcelHelpers.export(exports, "BookOpenCheckIcon", ()=>(0, _bookOpenCheckJsDefault.default));
parcelHelpers.export(exports, "LucideBookOpenCheck", ()=>(0, _bookOpenCheckJsDefault.default));
parcelHelpers.export(exports, "BookOpenText", ()=>(0, _bookOpenTextJsDefault.default));
parcelHelpers.export(exports, "BookOpenTextIcon", ()=>(0, _bookOpenTextJsDefault.default));
parcelHelpers.export(exports, "LucideBookOpenText", ()=>(0, _bookOpenTextJsDefault.default));
parcelHelpers.export(exports, "BookOpen", ()=>(0, _bookOpenJsDefault.default));
parcelHelpers.export(exports, "BookOpenIcon", ()=>(0, _bookOpenJsDefault.default));
parcelHelpers.export(exports, "LucideBookOpen", ()=>(0, _bookOpenJsDefault.default));
parcelHelpers.export(exports, "BookPlus", ()=>(0, _bookPlusJsDefault.default));
parcelHelpers.export(exports, "BookPlusIcon", ()=>(0, _bookPlusJsDefault.default));
parcelHelpers.export(exports, "LucideBookPlus", ()=>(0, _bookPlusJsDefault.default));
parcelHelpers.export(exports, "BookType", ()=>(0, _bookTypeJsDefault.default));
parcelHelpers.export(exports, "BookTypeIcon", ()=>(0, _bookTypeJsDefault.default));
parcelHelpers.export(exports, "LucideBookType", ()=>(0, _bookTypeJsDefault.default));
parcelHelpers.export(exports, "BookText", ()=>(0, _bookTextJsDefault.default));
parcelHelpers.export(exports, "BookTextIcon", ()=>(0, _bookTextJsDefault.default));
parcelHelpers.export(exports, "LucideBookText", ()=>(0, _bookTextJsDefault.default));
parcelHelpers.export(exports, "BookUp2", ()=>(0, _bookUp2JsDefault.default));
parcelHelpers.export(exports, "BookUp2Icon", ()=>(0, _bookUp2JsDefault.default));
parcelHelpers.export(exports, "LucideBookUp2", ()=>(0, _bookUp2JsDefault.default));
parcelHelpers.export(exports, "BookUp", ()=>(0, _bookUpJsDefault.default));
parcelHelpers.export(exports, "BookUpIcon", ()=>(0, _bookUpJsDefault.default));
parcelHelpers.export(exports, "LucideBookUp", ()=>(0, _bookUpJsDefault.default));
parcelHelpers.export(exports, "BookUser", ()=>(0, _bookUserJsDefault.default));
parcelHelpers.export(exports, "BookUserIcon", ()=>(0, _bookUserJsDefault.default));
parcelHelpers.export(exports, "LucideBookUser", ()=>(0, _bookUserJsDefault.default));
parcelHelpers.export(exports, "BookX", ()=>(0, _bookXJsDefault.default));
parcelHelpers.export(exports, "BookXIcon", ()=>(0, _bookXJsDefault.default));
parcelHelpers.export(exports, "LucideBookX", ()=>(0, _bookXJsDefault.default));
parcelHelpers.export(exports, "Book", ()=>(0, _bookJsDefault.default));
parcelHelpers.export(exports, "BookIcon", ()=>(0, _bookJsDefault.default));
parcelHelpers.export(exports, "LucideBook", ()=>(0, _bookJsDefault.default));
parcelHelpers.export(exports, "BookmarkCheck", ()=>(0, _bookmarkCheckJsDefault.default));
parcelHelpers.export(exports, "BookmarkCheckIcon", ()=>(0, _bookmarkCheckJsDefault.default));
parcelHelpers.export(exports, "LucideBookmarkCheck", ()=>(0, _bookmarkCheckJsDefault.default));
parcelHelpers.export(exports, "BookmarkPlus", ()=>(0, _bookmarkPlusJsDefault.default));
parcelHelpers.export(exports, "BookmarkPlusIcon", ()=>(0, _bookmarkPlusJsDefault.default));
parcelHelpers.export(exports, "LucideBookmarkPlus", ()=>(0, _bookmarkPlusJsDefault.default));
parcelHelpers.export(exports, "BookmarkMinus", ()=>(0, _bookmarkMinusJsDefault.default));
parcelHelpers.export(exports, "BookmarkMinusIcon", ()=>(0, _bookmarkMinusJsDefault.default));
parcelHelpers.export(exports, "LucideBookmarkMinus", ()=>(0, _bookmarkMinusJsDefault.default));
parcelHelpers.export(exports, "BookmarkX", ()=>(0, _bookmarkXJsDefault.default));
parcelHelpers.export(exports, "BookmarkXIcon", ()=>(0, _bookmarkXJsDefault.default));
parcelHelpers.export(exports, "LucideBookmarkX", ()=>(0, _bookmarkXJsDefault.default));
parcelHelpers.export(exports, "Bookmark", ()=>(0, _bookmarkJsDefault.default));
parcelHelpers.export(exports, "BookmarkIcon", ()=>(0, _bookmarkJsDefault.default));
parcelHelpers.export(exports, "LucideBookmark", ()=>(0, _bookmarkJsDefault.default));
parcelHelpers.export(exports, "BoomBox", ()=>(0, _boomBoxJsDefault.default));
parcelHelpers.export(exports, "BoomBoxIcon", ()=>(0, _boomBoxJsDefault.default));
parcelHelpers.export(exports, "LucideBoomBox", ()=>(0, _boomBoxJsDefault.default));
parcelHelpers.export(exports, "BotMessageSquare", ()=>(0, _botMessageSquareJsDefault.default));
parcelHelpers.export(exports, "BotMessageSquareIcon", ()=>(0, _botMessageSquareJsDefault.default));
parcelHelpers.export(exports, "LucideBotMessageSquare", ()=>(0, _botMessageSquareJsDefault.default));
parcelHelpers.export(exports, "BotOff", ()=>(0, _botOffJsDefault.default));
parcelHelpers.export(exports, "BotOffIcon", ()=>(0, _botOffJsDefault.default));
parcelHelpers.export(exports, "LucideBotOff", ()=>(0, _botOffJsDefault.default));
parcelHelpers.export(exports, "Bot", ()=>(0, _botJsDefault.default));
parcelHelpers.export(exports, "BotIcon", ()=>(0, _botJsDefault.default));
parcelHelpers.export(exports, "LucideBot", ()=>(0, _botJsDefault.default));
parcelHelpers.export(exports, "BottleWine", ()=>(0, _bottleWineJsDefault.default));
parcelHelpers.export(exports, "BottleWineIcon", ()=>(0, _bottleWineJsDefault.default));
parcelHelpers.export(exports, "LucideBottleWine", ()=>(0, _bottleWineJsDefault.default));
parcelHelpers.export(exports, "BowArrow", ()=>(0, _bowArrowJsDefault.default));
parcelHelpers.export(exports, "BowArrowIcon", ()=>(0, _bowArrowJsDefault.default));
parcelHelpers.export(exports, "LucideBowArrow", ()=>(0, _bowArrowJsDefault.default));
parcelHelpers.export(exports, "Box", ()=>(0, _boxJsDefault.default));
parcelHelpers.export(exports, "BoxIcon", ()=>(0, _boxJsDefault.default));
parcelHelpers.export(exports, "LucideBox", ()=>(0, _boxJsDefault.default));
parcelHelpers.export(exports, "Boxes", ()=>(0, _boxesJsDefault.default));
parcelHelpers.export(exports, "BoxesIcon", ()=>(0, _boxesJsDefault.default));
parcelHelpers.export(exports, "LucideBoxes", ()=>(0, _boxesJsDefault.default));
parcelHelpers.export(exports, "Brackets", ()=>(0, _bracketsJsDefault.default));
parcelHelpers.export(exports, "BracketsIcon", ()=>(0, _bracketsJsDefault.default));
parcelHelpers.export(exports, "LucideBrackets", ()=>(0, _bracketsJsDefault.default));
parcelHelpers.export(exports, "BrainCircuit", ()=>(0, _brainCircuitJsDefault.default));
parcelHelpers.export(exports, "BrainCircuitIcon", ()=>(0, _brainCircuitJsDefault.default));
parcelHelpers.export(exports, "LucideBrainCircuit", ()=>(0, _brainCircuitJsDefault.default));
parcelHelpers.export(exports, "BrainCog", ()=>(0, _brainCogJsDefault.default));
parcelHelpers.export(exports, "BrainCogIcon", ()=>(0, _brainCogJsDefault.default));
parcelHelpers.export(exports, "LucideBrainCog", ()=>(0, _brainCogJsDefault.default));
parcelHelpers.export(exports, "Brain", ()=>(0, _brainJsDefault.default));
parcelHelpers.export(exports, "BrainIcon", ()=>(0, _brainJsDefault.default));
parcelHelpers.export(exports, "LucideBrain", ()=>(0, _brainJsDefault.default));
parcelHelpers.export(exports, "BrickWallFire", ()=>(0, _brickWallFireJsDefault.default));
parcelHelpers.export(exports, "BrickWallFireIcon", ()=>(0, _brickWallFireJsDefault.default));
parcelHelpers.export(exports, "LucideBrickWallFire", ()=>(0, _brickWallFireJsDefault.default));
parcelHelpers.export(exports, "BrickWallShield", ()=>(0, _brickWallShieldJsDefault.default));
parcelHelpers.export(exports, "BrickWallShieldIcon", ()=>(0, _brickWallShieldJsDefault.default));
parcelHelpers.export(exports, "LucideBrickWallShield", ()=>(0, _brickWallShieldJsDefault.default));
parcelHelpers.export(exports, "BrickWall", ()=>(0, _brickWallJsDefault.default));
parcelHelpers.export(exports, "BrickWallIcon", ()=>(0, _brickWallJsDefault.default));
parcelHelpers.export(exports, "LucideBrickWall", ()=>(0, _brickWallJsDefault.default));
parcelHelpers.export(exports, "BriefcaseBusiness", ()=>(0, _briefcaseBusinessJsDefault.default));
parcelHelpers.export(exports, "BriefcaseBusinessIcon", ()=>(0, _briefcaseBusinessJsDefault.default));
parcelHelpers.export(exports, "LucideBriefcaseBusiness", ()=>(0, _briefcaseBusinessJsDefault.default));
parcelHelpers.export(exports, "BriefcaseConveyorBelt", ()=>(0, _briefcaseConveyorBeltJsDefault.default));
parcelHelpers.export(exports, "BriefcaseConveyorBeltIcon", ()=>(0, _briefcaseConveyorBeltJsDefault.default));
parcelHelpers.export(exports, "LucideBriefcaseConveyorBelt", ()=>(0, _briefcaseConveyorBeltJsDefault.default));
parcelHelpers.export(exports, "BriefcaseMedical", ()=>(0, _briefcaseMedicalJsDefault.default));
parcelHelpers.export(exports, "BriefcaseMedicalIcon", ()=>(0, _briefcaseMedicalJsDefault.default));
parcelHelpers.export(exports, "LucideBriefcaseMedical", ()=>(0, _briefcaseMedicalJsDefault.default));
parcelHelpers.export(exports, "Briefcase", ()=>(0, _briefcaseJsDefault.default));
parcelHelpers.export(exports, "BriefcaseIcon", ()=>(0, _briefcaseJsDefault.default));
parcelHelpers.export(exports, "LucideBriefcase", ()=>(0, _briefcaseJsDefault.default));
parcelHelpers.export(exports, "BringToFront", ()=>(0, _bringToFrontJsDefault.default));
parcelHelpers.export(exports, "BringToFrontIcon", ()=>(0, _bringToFrontJsDefault.default));
parcelHelpers.export(exports, "LucideBringToFront", ()=>(0, _bringToFrontJsDefault.default));
parcelHelpers.export(exports, "BrushCleaning", ()=>(0, _brushCleaningJsDefault.default));
parcelHelpers.export(exports, "BrushCleaningIcon", ()=>(0, _brushCleaningJsDefault.default));
parcelHelpers.export(exports, "LucideBrushCleaning", ()=>(0, _brushCleaningJsDefault.default));
parcelHelpers.export(exports, "Brush", ()=>(0, _brushJsDefault.default));
parcelHelpers.export(exports, "BrushIcon", ()=>(0, _brushJsDefault.default));
parcelHelpers.export(exports, "LucideBrush", ()=>(0, _brushJsDefault.default));
parcelHelpers.export(exports, "Bubbles", ()=>(0, _bubblesJsDefault.default));
parcelHelpers.export(exports, "BubblesIcon", ()=>(0, _bubblesJsDefault.default));
parcelHelpers.export(exports, "LucideBubbles", ()=>(0, _bubblesJsDefault.default));
parcelHelpers.export(exports, "BugPlay", ()=>(0, _bugPlayJsDefault.default));
parcelHelpers.export(exports, "BugPlayIcon", ()=>(0, _bugPlayJsDefault.default));
parcelHelpers.export(exports, "LucideBugPlay", ()=>(0, _bugPlayJsDefault.default));
parcelHelpers.export(exports, "BugOff", ()=>(0, _bugOffJsDefault.default));
parcelHelpers.export(exports, "BugOffIcon", ()=>(0, _bugOffJsDefault.default));
parcelHelpers.export(exports, "LucideBugOff", ()=>(0, _bugOffJsDefault.default));
parcelHelpers.export(exports, "Bug", ()=>(0, _bugJsDefault.default));
parcelHelpers.export(exports, "BugIcon", ()=>(0, _bugJsDefault.default));
parcelHelpers.export(exports, "LucideBug", ()=>(0, _bugJsDefault.default));
parcelHelpers.export(exports, "Building2", ()=>(0, _building2JsDefault.default));
parcelHelpers.export(exports, "Building2Icon", ()=>(0, _building2JsDefault.default));
parcelHelpers.export(exports, "LucideBuilding2", ()=>(0, _building2JsDefault.default));
parcelHelpers.export(exports, "Building", ()=>(0, _buildingJsDefault.default));
parcelHelpers.export(exports, "BuildingIcon", ()=>(0, _buildingJsDefault.default));
parcelHelpers.export(exports, "LucideBuilding", ()=>(0, _buildingJsDefault.default));
parcelHelpers.export(exports, "BusFront", ()=>(0, _busFrontJsDefault.default));
parcelHelpers.export(exports, "BusFrontIcon", ()=>(0, _busFrontJsDefault.default));
parcelHelpers.export(exports, "LucideBusFront", ()=>(0, _busFrontJsDefault.default));
parcelHelpers.export(exports, "Bus", ()=>(0, _busJsDefault.default));
parcelHelpers.export(exports, "BusIcon", ()=>(0, _busJsDefault.default));
parcelHelpers.export(exports, "LucideBus", ()=>(0, _busJsDefault.default));
parcelHelpers.export(exports, "CableCar", ()=>(0, _cableCarJsDefault.default));
parcelHelpers.export(exports, "CableCarIcon", ()=>(0, _cableCarJsDefault.default));
parcelHelpers.export(exports, "LucideCableCar", ()=>(0, _cableCarJsDefault.default));
parcelHelpers.export(exports, "Cable", ()=>(0, _cableJsDefault.default));
parcelHelpers.export(exports, "CableIcon", ()=>(0, _cableJsDefault.default));
parcelHelpers.export(exports, "LucideCable", ()=>(0, _cableJsDefault.default));
parcelHelpers.export(exports, "CakeSlice", ()=>(0, _cakeSliceJsDefault.default));
parcelHelpers.export(exports, "CakeSliceIcon", ()=>(0, _cakeSliceJsDefault.default));
parcelHelpers.export(exports, "LucideCakeSlice", ()=>(0, _cakeSliceJsDefault.default));
parcelHelpers.export(exports, "Cake", ()=>(0, _cakeJsDefault.default));
parcelHelpers.export(exports, "CakeIcon", ()=>(0, _cakeJsDefault.default));
parcelHelpers.export(exports, "LucideCake", ()=>(0, _cakeJsDefault.default));
parcelHelpers.export(exports, "Calculator", ()=>(0, _calculatorJsDefault.default));
parcelHelpers.export(exports, "CalculatorIcon", ()=>(0, _calculatorJsDefault.default));
parcelHelpers.export(exports, "LucideCalculator", ()=>(0, _calculatorJsDefault.default));
parcelHelpers.export(exports, "Calendar1", ()=>(0, _calendar1JsDefault.default));
parcelHelpers.export(exports, "Calendar1Icon", ()=>(0, _calendar1JsDefault.default));
parcelHelpers.export(exports, "LucideCalendar1", ()=>(0, _calendar1JsDefault.default));
parcelHelpers.export(exports, "CalendarArrowDown", ()=>(0, _calendarArrowDownJsDefault.default));
parcelHelpers.export(exports, "CalendarArrowDownIcon", ()=>(0, _calendarArrowDownJsDefault.default));
parcelHelpers.export(exports, "LucideCalendarArrowDown", ()=>(0, _calendarArrowDownJsDefault.default));
parcelHelpers.export(exports, "CalendarArrowUp", ()=>(0, _calendarArrowUpJsDefault.default));
parcelHelpers.export(exports, "CalendarArrowUpIcon", ()=>(0, _calendarArrowUpJsDefault.default));
parcelHelpers.export(exports, "LucideCalendarArrowUp", ()=>(0, _calendarArrowUpJsDefault.default));
parcelHelpers.export(exports, "CalendarCheck2", ()=>(0, _calendarCheck2JsDefault.default));
parcelHelpers.export(exports, "CalendarCheck2Icon", ()=>(0, _calendarCheck2JsDefault.default));
parcelHelpers.export(exports, "LucideCalendarCheck2", ()=>(0, _calendarCheck2JsDefault.default));
parcelHelpers.export(exports, "CalendarClock", ()=>(0, _calendarClockJsDefault.default));
parcelHelpers.export(exports, "CalendarClockIcon", ()=>(0, _calendarClockJsDefault.default));
parcelHelpers.export(exports, "LucideCalendarClock", ()=>(0, _calendarClockJsDefault.default));
parcelHelpers.export(exports, "CalendarCheck", ()=>(0, _calendarCheckJsDefault.default));
parcelHelpers.export(exports, "CalendarCheckIcon", ()=>(0, _calendarCheckJsDefault.default));
parcelHelpers.export(exports, "LucideCalendarCheck", ()=>(0, _calendarCheckJsDefault.default));
parcelHelpers.export(exports, "CalendarCog", ()=>(0, _calendarCogJsDefault.default));
parcelHelpers.export(exports, "CalendarCogIcon", ()=>(0, _calendarCogJsDefault.default));
parcelHelpers.export(exports, "LucideCalendarCog", ()=>(0, _calendarCogJsDefault.default));
parcelHelpers.export(exports, "CalendarDays", ()=>(0, _calendarDaysJsDefault.default));
parcelHelpers.export(exports, "CalendarDaysIcon", ()=>(0, _calendarDaysJsDefault.default));
parcelHelpers.export(exports, "LucideCalendarDays", ()=>(0, _calendarDaysJsDefault.default));
parcelHelpers.export(exports, "CalendarFold", ()=>(0, _calendarFoldJsDefault.default));
parcelHelpers.export(exports, "CalendarFoldIcon", ()=>(0, _calendarFoldJsDefault.default));
parcelHelpers.export(exports, "LucideCalendarFold", ()=>(0, _calendarFoldJsDefault.default));
parcelHelpers.export(exports, "CalendarHeart", ()=>(0, _calendarHeartJsDefault.default));
parcelHelpers.export(exports, "CalendarHeartIcon", ()=>(0, _calendarHeartJsDefault.default));
parcelHelpers.export(exports, "LucideCalendarHeart", ()=>(0, _calendarHeartJsDefault.default));
parcelHelpers.export(exports, "CalendarMinus", ()=>(0, _calendarMinusJsDefault.default));
parcelHelpers.export(exports, "CalendarMinusIcon", ()=>(0, _calendarMinusJsDefault.default));
parcelHelpers.export(exports, "LucideCalendarMinus", ()=>(0, _calendarMinusJsDefault.default));
parcelHelpers.export(exports, "CalendarMinus2", ()=>(0, _calendarMinus2JsDefault.default));
parcelHelpers.export(exports, "CalendarMinus2Icon", ()=>(0, _calendarMinus2JsDefault.default));
parcelHelpers.export(exports, "LucideCalendarMinus2", ()=>(0, _calendarMinus2JsDefault.default));
parcelHelpers.export(exports, "CalendarOff", ()=>(0, _calendarOffJsDefault.default));
parcelHelpers.export(exports, "CalendarOffIcon", ()=>(0, _calendarOffJsDefault.default));
parcelHelpers.export(exports, "LucideCalendarOff", ()=>(0, _calendarOffJsDefault.default));
parcelHelpers.export(exports, "CalendarPlus2", ()=>(0, _calendarPlus2JsDefault.default));
parcelHelpers.export(exports, "CalendarPlus2Icon", ()=>(0, _calendarPlus2JsDefault.default));
parcelHelpers.export(exports, "LucideCalendarPlus2", ()=>(0, _calendarPlus2JsDefault.default));
parcelHelpers.export(exports, "CalendarPlus", ()=>(0, _calendarPlusJsDefault.default));
parcelHelpers.export(exports, "CalendarPlusIcon", ()=>(0, _calendarPlusJsDefault.default));
parcelHelpers.export(exports, "LucideCalendarPlus", ()=>(0, _calendarPlusJsDefault.default));
parcelHelpers.export(exports, "CalendarRange", ()=>(0, _calendarRangeJsDefault.default));
parcelHelpers.export(exports, "CalendarRangeIcon", ()=>(0, _calendarRangeJsDefault.default));
parcelHelpers.export(exports, "LucideCalendarRange", ()=>(0, _calendarRangeJsDefault.default));
parcelHelpers.export(exports, "CalendarSearch", ()=>(0, _calendarSearchJsDefault.default));
parcelHelpers.export(exports, "CalendarSearchIcon", ()=>(0, _calendarSearchJsDefault.default));
parcelHelpers.export(exports, "LucideCalendarSearch", ()=>(0, _calendarSearchJsDefault.default));
parcelHelpers.export(exports, "CalendarSync", ()=>(0, _calendarSyncJsDefault.default));
parcelHelpers.export(exports, "CalendarSyncIcon", ()=>(0, _calendarSyncJsDefault.default));
parcelHelpers.export(exports, "LucideCalendarSync", ()=>(0, _calendarSyncJsDefault.default));
parcelHelpers.export(exports, "CalendarX2", ()=>(0, _calendarX2JsDefault.default));
parcelHelpers.export(exports, "CalendarX2Icon", ()=>(0, _calendarX2JsDefault.default));
parcelHelpers.export(exports, "LucideCalendarX2", ()=>(0, _calendarX2JsDefault.default));
parcelHelpers.export(exports, "CalendarX", ()=>(0, _calendarXJsDefault.default));
parcelHelpers.export(exports, "CalendarXIcon", ()=>(0, _calendarXJsDefault.default));
parcelHelpers.export(exports, "LucideCalendarX", ()=>(0, _calendarXJsDefault.default));
parcelHelpers.export(exports, "Calendar", ()=>(0, _calendarJsDefault.default));
parcelHelpers.export(exports, "CalendarIcon", ()=>(0, _calendarJsDefault.default));
parcelHelpers.export(exports, "LucideCalendar", ()=>(0, _calendarJsDefault.default));
parcelHelpers.export(exports, "Camera", ()=>(0, _cameraJsDefault.default));
parcelHelpers.export(exports, "CameraIcon", ()=>(0, _cameraJsDefault.default));
parcelHelpers.export(exports, "LucideCamera", ()=>(0, _cameraJsDefault.default));
parcelHelpers.export(exports, "CameraOff", ()=>(0, _cameraOffJsDefault.default));
parcelHelpers.export(exports, "CameraOffIcon", ()=>(0, _cameraOffJsDefault.default));
parcelHelpers.export(exports, "LucideCameraOff", ()=>(0, _cameraOffJsDefault.default));
parcelHelpers.export(exports, "CandyCane", ()=>(0, _candyCaneJsDefault.default));
parcelHelpers.export(exports, "CandyCaneIcon", ()=>(0, _candyCaneJsDefault.default));
parcelHelpers.export(exports, "LucideCandyCane", ()=>(0, _candyCaneJsDefault.default));
parcelHelpers.export(exports, "CandyOff", ()=>(0, _candyOffJsDefault.default));
parcelHelpers.export(exports, "CandyOffIcon", ()=>(0, _candyOffJsDefault.default));
parcelHelpers.export(exports, "LucideCandyOff", ()=>(0, _candyOffJsDefault.default));
parcelHelpers.export(exports, "Candy", ()=>(0, _candyJsDefault.default));
parcelHelpers.export(exports, "CandyIcon", ()=>(0, _candyJsDefault.default));
parcelHelpers.export(exports, "LucideCandy", ()=>(0, _candyJsDefault.default));
parcelHelpers.export(exports, "Cannabis", ()=>(0, _cannabisJsDefault.default));
parcelHelpers.export(exports, "CannabisIcon", ()=>(0, _cannabisJsDefault.default));
parcelHelpers.export(exports, "LucideCannabis", ()=>(0, _cannabisJsDefault.default));
parcelHelpers.export(exports, "CaptionsOff", ()=>(0, _captionsOffJsDefault.default));
parcelHelpers.export(exports, "CaptionsOffIcon", ()=>(0, _captionsOffJsDefault.default));
parcelHelpers.export(exports, "LucideCaptionsOff", ()=>(0, _captionsOffJsDefault.default));
parcelHelpers.export(exports, "CarFront", ()=>(0, _carFrontJsDefault.default));
parcelHelpers.export(exports, "CarFrontIcon", ()=>(0, _carFrontJsDefault.default));
parcelHelpers.export(exports, "LucideCarFront", ()=>(0, _carFrontJsDefault.default));
parcelHelpers.export(exports, "CarTaxiFront", ()=>(0, _carTaxiFrontJsDefault.default));
parcelHelpers.export(exports, "CarTaxiFrontIcon", ()=>(0, _carTaxiFrontJsDefault.default));
parcelHelpers.export(exports, "LucideCarTaxiFront", ()=>(0, _carTaxiFrontJsDefault.default));
parcelHelpers.export(exports, "Car", ()=>(0, _carJsDefault.default));
parcelHelpers.export(exports, "CarIcon", ()=>(0, _carJsDefault.default));
parcelHelpers.export(exports, "LucideCar", ()=>(0, _carJsDefault.default));
parcelHelpers.export(exports, "Caravan", ()=>(0, _caravanJsDefault.default));
parcelHelpers.export(exports, "CaravanIcon", ()=>(0, _caravanJsDefault.default));
parcelHelpers.export(exports, "LucideCaravan", ()=>(0, _caravanJsDefault.default));
parcelHelpers.export(exports, "CardSim", ()=>(0, _cardSimJsDefault.default));
parcelHelpers.export(exports, "CardSimIcon", ()=>(0, _cardSimJsDefault.default));
parcelHelpers.export(exports, "LucideCardSim", ()=>(0, _cardSimJsDefault.default));
parcelHelpers.export(exports, "Carrot", ()=>(0, _carrotJsDefault.default));
parcelHelpers.export(exports, "CarrotIcon", ()=>(0, _carrotJsDefault.default));
parcelHelpers.export(exports, "LucideCarrot", ()=>(0, _carrotJsDefault.default));
parcelHelpers.export(exports, "CaseLower", ()=>(0, _caseLowerJsDefault.default));
parcelHelpers.export(exports, "CaseLowerIcon", ()=>(0, _caseLowerJsDefault.default));
parcelHelpers.export(exports, "LucideCaseLower", ()=>(0, _caseLowerJsDefault.default));
parcelHelpers.export(exports, "CaseSensitive", ()=>(0, _caseSensitiveJsDefault.default));
parcelHelpers.export(exports, "CaseSensitiveIcon", ()=>(0, _caseSensitiveJsDefault.default));
parcelHelpers.export(exports, "LucideCaseSensitive", ()=>(0, _caseSensitiveJsDefault.default));
parcelHelpers.export(exports, "CaseUpper", ()=>(0, _caseUpperJsDefault.default));
parcelHelpers.export(exports, "CaseUpperIcon", ()=>(0, _caseUpperJsDefault.default));
parcelHelpers.export(exports, "LucideCaseUpper", ()=>(0, _caseUpperJsDefault.default));
parcelHelpers.export(exports, "Cast", ()=>(0, _castJsDefault.default));
parcelHelpers.export(exports, "CastIcon", ()=>(0, _castJsDefault.default));
parcelHelpers.export(exports, "LucideCast", ()=>(0, _castJsDefault.default));
parcelHelpers.export(exports, "CassetteTape", ()=>(0, _cassetteTapeJsDefault.default));
parcelHelpers.export(exports, "CassetteTapeIcon", ()=>(0, _cassetteTapeJsDefault.default));
parcelHelpers.export(exports, "LucideCassetteTape", ()=>(0, _cassetteTapeJsDefault.default));
parcelHelpers.export(exports, "Castle", ()=>(0, _castleJsDefault.default));
parcelHelpers.export(exports, "CastleIcon", ()=>(0, _castleJsDefault.default));
parcelHelpers.export(exports, "LucideCastle", ()=>(0, _castleJsDefault.default));
parcelHelpers.export(exports, "Cat", ()=>(0, _catJsDefault.default));
parcelHelpers.export(exports, "CatIcon", ()=>(0, _catJsDefault.default));
parcelHelpers.export(exports, "LucideCat", ()=>(0, _catJsDefault.default));
parcelHelpers.export(exports, "Cctv", ()=>(0, _cctvJsDefault.default));
parcelHelpers.export(exports, "CctvIcon", ()=>(0, _cctvJsDefault.default));
parcelHelpers.export(exports, "LucideCctv", ()=>(0, _cctvJsDefault.default));
parcelHelpers.export(exports, "ChartBarDecreasing", ()=>(0, _chartBarDecreasingJsDefault.default));
parcelHelpers.export(exports, "ChartBarDecreasingIcon", ()=>(0, _chartBarDecreasingJsDefault.default));
parcelHelpers.export(exports, "LucideChartBarDecreasing", ()=>(0, _chartBarDecreasingJsDefault.default));
parcelHelpers.export(exports, "ChartBarIncreasing", ()=>(0, _chartBarIncreasingJsDefault.default));
parcelHelpers.export(exports, "ChartBarIncreasingIcon", ()=>(0, _chartBarIncreasingJsDefault.default));
parcelHelpers.export(exports, "LucideChartBarIncreasing", ()=>(0, _chartBarIncreasingJsDefault.default));
parcelHelpers.export(exports, "ChartBarStacked", ()=>(0, _chartBarStackedJsDefault.default));
parcelHelpers.export(exports, "ChartBarStackedIcon", ()=>(0, _chartBarStackedJsDefault.default));
parcelHelpers.export(exports, "LucideChartBarStacked", ()=>(0, _chartBarStackedJsDefault.default));
parcelHelpers.export(exports, "ChartColumnDecreasing", ()=>(0, _chartColumnDecreasingJsDefault.default));
parcelHelpers.export(exports, "ChartColumnDecreasingIcon", ()=>(0, _chartColumnDecreasingJsDefault.default));
parcelHelpers.export(exports, "LucideChartColumnDecreasing", ()=>(0, _chartColumnDecreasingJsDefault.default));
parcelHelpers.export(exports, "ChartColumnStacked", ()=>(0, _chartColumnStackedJsDefault.default));
parcelHelpers.export(exports, "ChartColumnStackedIcon", ()=>(0, _chartColumnStackedJsDefault.default));
parcelHelpers.export(exports, "LucideChartColumnStacked", ()=>(0, _chartColumnStackedJsDefault.default));
parcelHelpers.export(exports, "ChartGantt", ()=>(0, _chartGanttJsDefault.default));
parcelHelpers.export(exports, "ChartGanttIcon", ()=>(0, _chartGanttJsDefault.default));
parcelHelpers.export(exports, "LucideChartGantt", ()=>(0, _chartGanttJsDefault.default));
parcelHelpers.export(exports, "ChartNetwork", ()=>(0, _chartNetworkJsDefault.default));
parcelHelpers.export(exports, "ChartNetworkIcon", ()=>(0, _chartNetworkJsDefault.default));
parcelHelpers.export(exports, "LucideChartNetwork", ()=>(0, _chartNetworkJsDefault.default));
parcelHelpers.export(exports, "ChartNoAxesColumnDecreasing", ()=>(0, _chartNoAxesColumnDecreasingJsDefault.default));
parcelHelpers.export(exports, "ChartNoAxesColumnDecreasingIcon", ()=>(0, _chartNoAxesColumnDecreasingJsDefault.default));
parcelHelpers.export(exports, "LucideChartNoAxesColumnDecreasing", ()=>(0, _chartNoAxesColumnDecreasingJsDefault.default));
parcelHelpers.export(exports, "ChartNoAxesCombined", ()=>(0, _chartNoAxesCombinedJsDefault.default));
parcelHelpers.export(exports, "ChartNoAxesCombinedIcon", ()=>(0, _chartNoAxesCombinedJsDefault.default));
parcelHelpers.export(exports, "LucideChartNoAxesCombined", ()=>(0, _chartNoAxesCombinedJsDefault.default));
parcelHelpers.export(exports, "ChartSpline", ()=>(0, _chartSplineJsDefault.default));
parcelHelpers.export(exports, "ChartSplineIcon", ()=>(0, _chartSplineJsDefault.default));
parcelHelpers.export(exports, "LucideChartSpline", ()=>(0, _chartSplineJsDefault.default));
parcelHelpers.export(exports, "CheckCheck", ()=>(0, _checkCheckJsDefault.default));
parcelHelpers.export(exports, "CheckCheckIcon", ()=>(0, _checkCheckJsDefault.default));
parcelHelpers.export(exports, "LucideCheckCheck", ()=>(0, _checkCheckJsDefault.default));
parcelHelpers.export(exports, "CheckLine", ()=>(0, _checkLineJsDefault.default));
parcelHelpers.export(exports, "CheckLineIcon", ()=>(0, _checkLineJsDefault.default));
parcelHelpers.export(exports, "LucideCheckLine", ()=>(0, _checkLineJsDefault.default));
parcelHelpers.export(exports, "ChefHat", ()=>(0, _chefHatJsDefault.default));
parcelHelpers.export(exports, "ChefHatIcon", ()=>(0, _chefHatJsDefault.default));
parcelHelpers.export(exports, "LucideChefHat", ()=>(0, _chefHatJsDefault.default));
parcelHelpers.export(exports, "Check", ()=>(0, _checkJsDefault.default));
parcelHelpers.export(exports, "CheckIcon", ()=>(0, _checkJsDefault.default));
parcelHelpers.export(exports, "LucideCheck", ()=>(0, _checkJsDefault.default));
parcelHelpers.export(exports, "Cherry", ()=>(0, _cherryJsDefault.default));
parcelHelpers.export(exports, "CherryIcon", ()=>(0, _cherryJsDefault.default));
parcelHelpers.export(exports, "LucideCherry", ()=>(0, _cherryJsDefault.default));
parcelHelpers.export(exports, "ChevronDown", ()=>(0, _chevronDownJsDefault.default));
parcelHelpers.export(exports, "ChevronDownIcon", ()=>(0, _chevronDownJsDefault.default));
parcelHelpers.export(exports, "LucideChevronDown", ()=>(0, _chevronDownJsDefault.default));
parcelHelpers.export(exports, "ChevronFirst", ()=>(0, _chevronFirstJsDefault.default));
parcelHelpers.export(exports, "ChevronFirstIcon", ()=>(0, _chevronFirstJsDefault.default));
parcelHelpers.export(exports, "LucideChevronFirst", ()=>(0, _chevronFirstJsDefault.default));
parcelHelpers.export(exports, "ChevronLast", ()=>(0, _chevronLastJsDefault.default));
parcelHelpers.export(exports, "ChevronLastIcon", ()=>(0, _chevronLastJsDefault.default));
parcelHelpers.export(exports, "LucideChevronLast", ()=>(0, _chevronLastJsDefault.default));
parcelHelpers.export(exports, "ChevronLeft", ()=>(0, _chevronLeftJsDefault.default));
parcelHelpers.export(exports, "ChevronLeftIcon", ()=>(0, _chevronLeftJsDefault.default));
parcelHelpers.export(exports, "LucideChevronLeft", ()=>(0, _chevronLeftJsDefault.default));
parcelHelpers.export(exports, "ChevronRight", ()=>(0, _chevronRightJsDefault.default));
parcelHelpers.export(exports, "ChevronRightIcon", ()=>(0, _chevronRightJsDefault.default));
parcelHelpers.export(exports, "LucideChevronRight", ()=>(0, _chevronRightJsDefault.default));
parcelHelpers.export(exports, "ChevronUp", ()=>(0, _chevronUpJsDefault.default));
parcelHelpers.export(exports, "ChevronUpIcon", ()=>(0, _chevronUpJsDefault.default));
parcelHelpers.export(exports, "LucideChevronUp", ()=>(0, _chevronUpJsDefault.default));
parcelHelpers.export(exports, "ChevronsDownUp", ()=>(0, _chevronsDownUpJsDefault.default));
parcelHelpers.export(exports, "ChevronsDownUpIcon", ()=>(0, _chevronsDownUpJsDefault.default));
parcelHelpers.export(exports, "LucideChevronsDownUp", ()=>(0, _chevronsDownUpJsDefault.default));
parcelHelpers.export(exports, "ChevronsDown", ()=>(0, _chevronsDownJsDefault.default));
parcelHelpers.export(exports, "ChevronsDownIcon", ()=>(0, _chevronsDownJsDefault.default));
parcelHelpers.export(exports, "LucideChevronsDown", ()=>(0, _chevronsDownJsDefault.default));
parcelHelpers.export(exports, "ChevronsLeftRightEllipsis", ()=>(0, _chevronsLeftRightEllipsisJsDefault.default));
parcelHelpers.export(exports, "ChevronsLeftRightEllipsisIcon", ()=>(0, _chevronsLeftRightEllipsisJsDefault.default));
parcelHelpers.export(exports, "LucideChevronsLeftRightEllipsis", ()=>(0, _chevronsLeftRightEllipsisJsDefault.default));
parcelHelpers.export(exports, "ChevronsLeftRight", ()=>(0, _chevronsLeftRightJsDefault.default));
parcelHelpers.export(exports, "ChevronsLeftRightIcon", ()=>(0, _chevronsLeftRightJsDefault.default));
parcelHelpers.export(exports, "LucideChevronsLeftRight", ()=>(0, _chevronsLeftRightJsDefault.default));
parcelHelpers.export(exports, "ChevronsLeft", ()=>(0, _chevronsLeftJsDefault.default));
parcelHelpers.export(exports, "ChevronsLeftIcon", ()=>(0, _chevronsLeftJsDefault.default));
parcelHelpers.export(exports, "LucideChevronsLeft", ()=>(0, _chevronsLeftJsDefault.default));
parcelHelpers.export(exports, "ChevronsRightLeft", ()=>(0, _chevronsRightLeftJsDefault.default));
parcelHelpers.export(exports, "ChevronsRightLeftIcon", ()=>(0, _chevronsRightLeftJsDefault.default));
parcelHelpers.export(exports, "LucideChevronsRightLeft", ()=>(0, _chevronsRightLeftJsDefault.default));
parcelHelpers.export(exports, "ChevronsRight", ()=>(0, _chevronsRightJsDefault.default));
parcelHelpers.export(exports, "ChevronsRightIcon", ()=>(0, _chevronsRightJsDefault.default));
parcelHelpers.export(exports, "LucideChevronsRight", ()=>(0, _chevronsRightJsDefault.default));
parcelHelpers.export(exports, "ChevronsUpDown", ()=>(0, _chevronsUpDownJsDefault.default));
parcelHelpers.export(exports, "ChevronsUpDownIcon", ()=>(0, _chevronsUpDownJsDefault.default));
parcelHelpers.export(exports, "LucideChevronsUpDown", ()=>(0, _chevronsUpDownJsDefault.default));
parcelHelpers.export(exports, "ChevronsUp", ()=>(0, _chevronsUpJsDefault.default));
parcelHelpers.export(exports, "ChevronsUpIcon", ()=>(0, _chevronsUpJsDefault.default));
parcelHelpers.export(exports, "LucideChevronsUp", ()=>(0, _chevronsUpJsDefault.default));
parcelHelpers.export(exports, "Church", ()=>(0, _churchJsDefault.default));
parcelHelpers.export(exports, "ChurchIcon", ()=>(0, _churchJsDefault.default));
parcelHelpers.export(exports, "LucideChurch", ()=>(0, _churchJsDefault.default));
parcelHelpers.export(exports, "CigaretteOff", ()=>(0, _cigaretteOffJsDefault.default));
parcelHelpers.export(exports, "CigaretteOffIcon", ()=>(0, _cigaretteOffJsDefault.default));
parcelHelpers.export(exports, "LucideCigaretteOff", ()=>(0, _cigaretteOffJsDefault.default));
parcelHelpers.export(exports, "Cigarette", ()=>(0, _cigaretteJsDefault.default));
parcelHelpers.export(exports, "CigaretteIcon", ()=>(0, _cigaretteJsDefault.default));
parcelHelpers.export(exports, "LucideCigarette", ()=>(0, _cigaretteJsDefault.default));
parcelHelpers.export(exports, "CircleDashed", ()=>(0, _circleDashedJsDefault.default));
parcelHelpers.export(exports, "CircleDashedIcon", ()=>(0, _circleDashedJsDefault.default));
parcelHelpers.export(exports, "LucideCircleDashed", ()=>(0, _circleDashedJsDefault.default));
parcelHelpers.export(exports, "CircleDollarSign", ()=>(0, _circleDollarSignJsDefault.default));
parcelHelpers.export(exports, "CircleDollarSignIcon", ()=>(0, _circleDollarSignJsDefault.default));
parcelHelpers.export(exports, "LucideCircleDollarSign", ()=>(0, _circleDollarSignJsDefault.default));
parcelHelpers.export(exports, "CircleDotDashed", ()=>(0, _circleDotDashedJsDefault.default));
parcelHelpers.export(exports, "CircleDotDashedIcon", ()=>(0, _circleDotDashedJsDefault.default));
parcelHelpers.export(exports, "LucideCircleDotDashed", ()=>(0, _circleDotDashedJsDefault.default));
parcelHelpers.export(exports, "CircleDot", ()=>(0, _circleDotJsDefault.default));
parcelHelpers.export(exports, "CircleDotIcon", ()=>(0, _circleDotJsDefault.default));
parcelHelpers.export(exports, "LucideCircleDot", ()=>(0, _circleDotJsDefault.default));
parcelHelpers.export(exports, "CircleEllipsis", ()=>(0, _circleEllipsisJsDefault.default));
parcelHelpers.export(exports, "CircleEllipsisIcon", ()=>(0, _circleEllipsisJsDefault.default));
parcelHelpers.export(exports, "LucideCircleEllipsis", ()=>(0, _circleEllipsisJsDefault.default));
parcelHelpers.export(exports, "CircleEqual", ()=>(0, _circleEqualJsDefault.default));
parcelHelpers.export(exports, "CircleEqualIcon", ()=>(0, _circleEqualJsDefault.default));
parcelHelpers.export(exports, "LucideCircleEqual", ()=>(0, _circleEqualJsDefault.default));
parcelHelpers.export(exports, "CircleFadingArrowUp", ()=>(0, _circleFadingArrowUpJsDefault.default));
parcelHelpers.export(exports, "CircleFadingArrowUpIcon", ()=>(0, _circleFadingArrowUpJsDefault.default));
parcelHelpers.export(exports, "LucideCircleFadingArrowUp", ()=>(0, _circleFadingArrowUpJsDefault.default));
parcelHelpers.export(exports, "CircleFadingPlus", ()=>(0, _circleFadingPlusJsDefault.default));
parcelHelpers.export(exports, "CircleFadingPlusIcon", ()=>(0, _circleFadingPlusJsDefault.default));
parcelHelpers.export(exports, "LucideCircleFadingPlus", ()=>(0, _circleFadingPlusJsDefault.default));
parcelHelpers.export(exports, "CircleOff", ()=>(0, _circleOffJsDefault.default));
parcelHelpers.export(exports, "CircleOffIcon", ()=>(0, _circleOffJsDefault.default));
parcelHelpers.export(exports, "LucideCircleOff", ()=>(0, _circleOffJsDefault.default));
parcelHelpers.export(exports, "CirclePoundSterling", ()=>(0, _circlePoundSterlingJsDefault.default));
parcelHelpers.export(exports, "CirclePoundSterlingIcon", ()=>(0, _circlePoundSterlingJsDefault.default));
parcelHelpers.export(exports, "LucideCirclePoundSterling", ()=>(0, _circlePoundSterlingJsDefault.default));
parcelHelpers.export(exports, "CircleSlash", ()=>(0, _circleSlashJsDefault.default));
parcelHelpers.export(exports, "CircleSlashIcon", ()=>(0, _circleSlashJsDefault.default));
parcelHelpers.export(exports, "LucideCircleSlash", ()=>(0, _circleSlashJsDefault.default));
parcelHelpers.export(exports, "CircleSmall", ()=>(0, _circleSmallJsDefault.default));
parcelHelpers.export(exports, "CircleSmallIcon", ()=>(0, _circleSmallJsDefault.default));
parcelHelpers.export(exports, "LucideCircleSmall", ()=>(0, _circleSmallJsDefault.default));
parcelHelpers.export(exports, "CircleStar", ()=>(0, _circleStarJsDefault.default));
parcelHelpers.export(exports, "CircleStarIcon", ()=>(0, _circleStarJsDefault.default));
parcelHelpers.export(exports, "LucideCircleStar", ()=>(0, _circleStarJsDefault.default));
parcelHelpers.export(exports, "Circle", ()=>(0, _circleJsDefault.default));
parcelHelpers.export(exports, "CircleIcon", ()=>(0, _circleJsDefault.default));
parcelHelpers.export(exports, "LucideCircle", ()=>(0, _circleJsDefault.default));
parcelHelpers.export(exports, "CircuitBoard", ()=>(0, _circuitBoardJsDefault.default));
parcelHelpers.export(exports, "CircuitBoardIcon", ()=>(0, _circuitBoardJsDefault.default));
parcelHelpers.export(exports, "LucideCircuitBoard", ()=>(0, _circuitBoardJsDefault.default));
parcelHelpers.export(exports, "Citrus", ()=>(0, _citrusJsDefault.default));
parcelHelpers.export(exports, "CitrusIcon", ()=>(0, _citrusJsDefault.default));
parcelHelpers.export(exports, "LucideCitrus", ()=>(0, _citrusJsDefault.default));
parcelHelpers.export(exports, "Clapperboard", ()=>(0, _clapperboardJsDefault.default));
parcelHelpers.export(exports, "ClapperboardIcon", ()=>(0, _clapperboardJsDefault.default));
parcelHelpers.export(exports, "LucideClapperboard", ()=>(0, _clapperboardJsDefault.default));
parcelHelpers.export(exports, "ClipboardCheck", ()=>(0, _clipboardCheckJsDefault.default));
parcelHelpers.export(exports, "ClipboardCheckIcon", ()=>(0, _clipboardCheckJsDefault.default));
parcelHelpers.export(exports, "LucideClipboardCheck", ()=>(0, _clipboardCheckJsDefault.default));
parcelHelpers.export(exports, "ClipboardCopy", ()=>(0, _clipboardCopyJsDefault.default));
parcelHelpers.export(exports, "ClipboardCopyIcon", ()=>(0, _clipboardCopyJsDefault.default));
parcelHelpers.export(exports, "LucideClipboardCopy", ()=>(0, _clipboardCopyJsDefault.default));
parcelHelpers.export(exports, "ClipboardClock", ()=>(0, _clipboardClockJsDefault.default));
parcelHelpers.export(exports, "ClipboardClockIcon", ()=>(0, _clipboardClockJsDefault.default));
parcelHelpers.export(exports, "LucideClipboardClock", ()=>(0, _clipboardClockJsDefault.default));
parcelHelpers.export(exports, "ClipboardList", ()=>(0, _clipboardListJsDefault.default));
parcelHelpers.export(exports, "ClipboardListIcon", ()=>(0, _clipboardListJsDefault.default));
parcelHelpers.export(exports, "LucideClipboardList", ()=>(0, _clipboardListJsDefault.default));
parcelHelpers.export(exports, "ClipboardMinus", ()=>(0, _clipboardMinusJsDefault.default));
parcelHelpers.export(exports, "ClipboardMinusIcon", ()=>(0, _clipboardMinusJsDefault.default));
parcelHelpers.export(exports, "LucideClipboardMinus", ()=>(0, _clipboardMinusJsDefault.default));
parcelHelpers.export(exports, "ClipboardPaste", ()=>(0, _clipboardPasteJsDefault.default));
parcelHelpers.export(exports, "ClipboardPasteIcon", ()=>(0, _clipboardPasteJsDefault.default));
parcelHelpers.export(exports, "LucideClipboardPaste", ()=>(0, _clipboardPasteJsDefault.default));
parcelHelpers.export(exports, "ClipboardPlus", ()=>(0, _clipboardPlusJsDefault.default));
parcelHelpers.export(exports, "ClipboardPlusIcon", ()=>(0, _clipboardPlusJsDefault.default));
parcelHelpers.export(exports, "LucideClipboardPlus", ()=>(0, _clipboardPlusJsDefault.default));
parcelHelpers.export(exports, "ClipboardType", ()=>(0, _clipboardTypeJsDefault.default));
parcelHelpers.export(exports, "ClipboardTypeIcon", ()=>(0, _clipboardTypeJsDefault.default));
parcelHelpers.export(exports, "LucideClipboardType", ()=>(0, _clipboardTypeJsDefault.default));
parcelHelpers.export(exports, "ClipboardX", ()=>(0, _clipboardXJsDefault.default));
parcelHelpers.export(exports, "ClipboardXIcon", ()=>(0, _clipboardXJsDefault.default));
parcelHelpers.export(exports, "LucideClipboardX", ()=>(0, _clipboardXJsDefault.default));
parcelHelpers.export(exports, "Clipboard", ()=>(0, _clipboardJsDefault.default));
parcelHelpers.export(exports, "ClipboardIcon", ()=>(0, _clipboardJsDefault.default));
parcelHelpers.export(exports, "LucideClipboard", ()=>(0, _clipboardJsDefault.default));
parcelHelpers.export(exports, "Clock1", ()=>(0, _clock1JsDefault.default));
parcelHelpers.export(exports, "Clock1Icon", ()=>(0, _clock1JsDefault.default));
parcelHelpers.export(exports, "LucideClock1", ()=>(0, _clock1JsDefault.default));
parcelHelpers.export(exports, "Clock10", ()=>(0, _clock10JsDefault.default));
parcelHelpers.export(exports, "Clock10Icon", ()=>(0, _clock10JsDefault.default));
parcelHelpers.export(exports, "LucideClock10", ()=>(0, _clock10JsDefault.default));
parcelHelpers.export(exports, "Clock11", ()=>(0, _clock11JsDefault.default));
parcelHelpers.export(exports, "Clock11Icon", ()=>(0, _clock11JsDefault.default));
parcelHelpers.export(exports, "LucideClock11", ()=>(0, _clock11JsDefault.default));
parcelHelpers.export(exports, "Clock12", ()=>(0, _clock12JsDefault.default));
parcelHelpers.export(exports, "Clock12Icon", ()=>(0, _clock12JsDefault.default));
parcelHelpers.export(exports, "LucideClock12", ()=>(0, _clock12JsDefault.default));
parcelHelpers.export(exports, "Clock2", ()=>(0, _clock2JsDefault.default));
parcelHelpers.export(exports, "Clock2Icon", ()=>(0, _clock2JsDefault.default));
parcelHelpers.export(exports, "LucideClock2", ()=>(0, _clock2JsDefault.default));
parcelHelpers.export(exports, "Clock3", ()=>(0, _clock3JsDefault.default));
parcelHelpers.export(exports, "Clock3Icon", ()=>(0, _clock3JsDefault.default));
parcelHelpers.export(exports, "LucideClock3", ()=>(0, _clock3JsDefault.default));
parcelHelpers.export(exports, "Clock5", ()=>(0, _clock5JsDefault.default));
parcelHelpers.export(exports, "Clock5Icon", ()=>(0, _clock5JsDefault.default));
parcelHelpers.export(exports, "LucideClock5", ()=>(0, _clock5JsDefault.default));
parcelHelpers.export(exports, "Clock4", ()=>(0, _clock4JsDefault.default));
parcelHelpers.export(exports, "Clock4Icon", ()=>(0, _clock4JsDefault.default));
parcelHelpers.export(exports, "LucideClock4", ()=>(0, _clock4JsDefault.default));
parcelHelpers.export(exports, "Clock6", ()=>(0, _clock6JsDefault.default));
parcelHelpers.export(exports, "Clock6Icon", ()=>(0, _clock6JsDefault.default));
parcelHelpers.export(exports, "LucideClock6", ()=>(0, _clock6JsDefault.default));
parcelHelpers.export(exports, "Clock7", ()=>(0, _clock7JsDefault.default));
parcelHelpers.export(exports, "Clock7Icon", ()=>(0, _clock7JsDefault.default));
parcelHelpers.export(exports, "LucideClock7", ()=>(0, _clock7JsDefault.default));
parcelHelpers.export(exports, "Clock8", ()=>(0, _clock8JsDefault.default));
parcelHelpers.export(exports, "Clock8Icon", ()=>(0, _clock8JsDefault.default));
parcelHelpers.export(exports, "LucideClock8", ()=>(0, _clock8JsDefault.default));
parcelHelpers.export(exports, "Clock9", ()=>(0, _clock9JsDefault.default));
parcelHelpers.export(exports, "Clock9Icon", ()=>(0, _clock9JsDefault.default));
parcelHelpers.export(exports, "LucideClock9", ()=>(0, _clock9JsDefault.default));
parcelHelpers.export(exports, "ClockArrowDown", ()=>(0, _clockArrowDownJsDefault.default));
parcelHelpers.export(exports, "ClockArrowDownIcon", ()=>(0, _clockArrowDownJsDefault.default));
parcelHelpers.export(exports, "LucideClockArrowDown", ()=>(0, _clockArrowDownJsDefault.default));
parcelHelpers.export(exports, "ClockAlert", ()=>(0, _clockAlertJsDefault.default));
parcelHelpers.export(exports, "ClockAlertIcon", ()=>(0, _clockAlertJsDefault.default));
parcelHelpers.export(exports, "LucideClockAlert", ()=>(0, _clockAlertJsDefault.default));
parcelHelpers.export(exports, "ClockArrowUp", ()=>(0, _clockArrowUpJsDefault.default));
parcelHelpers.export(exports, "ClockArrowUpIcon", ()=>(0, _clockArrowUpJsDefault.default));
parcelHelpers.export(exports, "LucideClockArrowUp", ()=>(0, _clockArrowUpJsDefault.default));
parcelHelpers.export(exports, "ClockFading", ()=>(0, _clockFadingJsDefault.default));
parcelHelpers.export(exports, "ClockFadingIcon", ()=>(0, _clockFadingJsDefault.default));
parcelHelpers.export(exports, "LucideClockFading", ()=>(0, _clockFadingJsDefault.default));
parcelHelpers.export(exports, "ClockPlus", ()=>(0, _clockPlusJsDefault.default));
parcelHelpers.export(exports, "ClockPlusIcon", ()=>(0, _clockPlusJsDefault.default));
parcelHelpers.export(exports, "LucideClockPlus", ()=>(0, _clockPlusJsDefault.default));
parcelHelpers.export(exports, "Clock", ()=>(0, _clockJsDefault.default));
parcelHelpers.export(exports, "ClockIcon", ()=>(0, _clockJsDefault.default));
parcelHelpers.export(exports, "LucideClock", ()=>(0, _clockJsDefault.default));
parcelHelpers.export(exports, "ClosedCaption", ()=>(0, _closedCaptionJsDefault.default));
parcelHelpers.export(exports, "ClosedCaptionIcon", ()=>(0, _closedCaptionJsDefault.default));
parcelHelpers.export(exports, "LucideClosedCaption", ()=>(0, _closedCaptionJsDefault.default));
parcelHelpers.export(exports, "CloudAlert", ()=>(0, _cloudAlertJsDefault.default));
parcelHelpers.export(exports, "CloudAlertIcon", ()=>(0, _cloudAlertJsDefault.default));
parcelHelpers.export(exports, "LucideCloudAlert", ()=>(0, _cloudAlertJsDefault.default));
parcelHelpers.export(exports, "CloudCheck", ()=>(0, _cloudCheckJsDefault.default));
parcelHelpers.export(exports, "CloudCheckIcon", ()=>(0, _cloudCheckJsDefault.default));
parcelHelpers.export(exports, "LucideCloudCheck", ()=>(0, _cloudCheckJsDefault.default));
parcelHelpers.export(exports, "CloudCog", ()=>(0, _cloudCogJsDefault.default));
parcelHelpers.export(exports, "CloudCogIcon", ()=>(0, _cloudCogJsDefault.default));
parcelHelpers.export(exports, "LucideCloudCog", ()=>(0, _cloudCogJsDefault.default));
parcelHelpers.export(exports, "CloudDrizzle", ()=>(0, _cloudDrizzleJsDefault.default));
parcelHelpers.export(exports, "CloudDrizzleIcon", ()=>(0, _cloudDrizzleJsDefault.default));
parcelHelpers.export(exports, "LucideCloudDrizzle", ()=>(0, _cloudDrizzleJsDefault.default));
parcelHelpers.export(exports, "CloudFog", ()=>(0, _cloudFogJsDefault.default));
parcelHelpers.export(exports, "CloudFogIcon", ()=>(0, _cloudFogJsDefault.default));
parcelHelpers.export(exports, "LucideCloudFog", ()=>(0, _cloudFogJsDefault.default));
parcelHelpers.export(exports, "CloudHail", ()=>(0, _cloudHailJsDefault.default));
parcelHelpers.export(exports, "CloudHailIcon", ()=>(0, _cloudHailJsDefault.default));
parcelHelpers.export(exports, "LucideCloudHail", ()=>(0, _cloudHailJsDefault.default));
parcelHelpers.export(exports, "CloudLightning", ()=>(0, _cloudLightningJsDefault.default));
parcelHelpers.export(exports, "CloudLightningIcon", ()=>(0, _cloudLightningJsDefault.default));
parcelHelpers.export(exports, "LucideCloudLightning", ()=>(0, _cloudLightningJsDefault.default));
parcelHelpers.export(exports, "CloudMoonRain", ()=>(0, _cloudMoonRainJsDefault.default));
parcelHelpers.export(exports, "CloudMoonRainIcon", ()=>(0, _cloudMoonRainJsDefault.default));
parcelHelpers.export(exports, "LucideCloudMoonRain", ()=>(0, _cloudMoonRainJsDefault.default));
parcelHelpers.export(exports, "CloudOff", ()=>(0, _cloudOffJsDefault.default));
parcelHelpers.export(exports, "CloudOffIcon", ()=>(0, _cloudOffJsDefault.default));
parcelHelpers.export(exports, "LucideCloudOff", ()=>(0, _cloudOffJsDefault.default));
parcelHelpers.export(exports, "CloudMoon", ()=>(0, _cloudMoonJsDefault.default));
parcelHelpers.export(exports, "CloudMoonIcon", ()=>(0, _cloudMoonJsDefault.default));
parcelHelpers.export(exports, "LucideCloudMoon", ()=>(0, _cloudMoonJsDefault.default));
parcelHelpers.export(exports, "CloudRainWind", ()=>(0, _cloudRainWindJsDefault.default));
parcelHelpers.export(exports, "CloudRainWindIcon", ()=>(0, _cloudRainWindJsDefault.default));
parcelHelpers.export(exports, "LucideCloudRainWind", ()=>(0, _cloudRainWindJsDefault.default));
parcelHelpers.export(exports, "CloudRain", ()=>(0, _cloudRainJsDefault.default));
parcelHelpers.export(exports, "CloudRainIcon", ()=>(0, _cloudRainJsDefault.default));
parcelHelpers.export(exports, "LucideCloudRain", ()=>(0, _cloudRainJsDefault.default));
parcelHelpers.export(exports, "CloudSnow", ()=>(0, _cloudSnowJsDefault.default));
parcelHelpers.export(exports, "CloudSnowIcon", ()=>(0, _cloudSnowJsDefault.default));
parcelHelpers.export(exports, "LucideCloudSnow", ()=>(0, _cloudSnowJsDefault.default));
parcelHelpers.export(exports, "CloudSunRain", ()=>(0, _cloudSunRainJsDefault.default));
parcelHelpers.export(exports, "CloudSunRainIcon", ()=>(0, _cloudSunRainJsDefault.default));
parcelHelpers.export(exports, "LucideCloudSunRain", ()=>(0, _cloudSunRainJsDefault.default));
parcelHelpers.export(exports, "CloudSun", ()=>(0, _cloudSunJsDefault.default));
parcelHelpers.export(exports, "CloudSunIcon", ()=>(0, _cloudSunJsDefault.default));
parcelHelpers.export(exports, "LucideCloudSun", ()=>(0, _cloudSunJsDefault.default));
parcelHelpers.export(exports, "Cloud", ()=>(0, _cloudJsDefault.default));
parcelHelpers.export(exports, "CloudIcon", ()=>(0, _cloudJsDefault.default));
parcelHelpers.export(exports, "LucideCloud", ()=>(0, _cloudJsDefault.default));
parcelHelpers.export(exports, "Cloudy", ()=>(0, _cloudyJsDefault.default));
parcelHelpers.export(exports, "CloudyIcon", ()=>(0, _cloudyJsDefault.default));
parcelHelpers.export(exports, "LucideCloudy", ()=>(0, _cloudyJsDefault.default));
parcelHelpers.export(exports, "Clover", ()=>(0, _cloverJsDefault.default));
parcelHelpers.export(exports, "CloverIcon", ()=>(0, _cloverJsDefault.default));
parcelHelpers.export(exports, "LucideClover", ()=>(0, _cloverJsDefault.default));
parcelHelpers.export(exports, "Club", ()=>(0, _clubJsDefault.default));
parcelHelpers.export(exports, "ClubIcon", ()=>(0, _clubJsDefault.default));
parcelHelpers.export(exports, "LucideClub", ()=>(0, _clubJsDefault.default));
parcelHelpers.export(exports, "Code", ()=>(0, _codeJsDefault.default));
parcelHelpers.export(exports, "CodeIcon", ()=>(0, _codeJsDefault.default));
parcelHelpers.export(exports, "LucideCode", ()=>(0, _codeJsDefault.default));
parcelHelpers.export(exports, "Codepen", ()=>(0, _codepenJsDefault.default));
parcelHelpers.export(exports, "CodepenIcon", ()=>(0, _codepenJsDefault.default));
parcelHelpers.export(exports, "LucideCodepen", ()=>(0, _codepenJsDefault.default));
parcelHelpers.export(exports, "Codesandbox", ()=>(0, _codesandboxJsDefault.default));
parcelHelpers.export(exports, "CodesandboxIcon", ()=>(0, _codesandboxJsDefault.default));
parcelHelpers.export(exports, "LucideCodesandbox", ()=>(0, _codesandboxJsDefault.default));
parcelHelpers.export(exports, "Coffee", ()=>(0, _coffeeJsDefault.default));
parcelHelpers.export(exports, "CoffeeIcon", ()=>(0, _coffeeJsDefault.default));
parcelHelpers.export(exports, "LucideCoffee", ()=>(0, _coffeeJsDefault.default));
parcelHelpers.export(exports, "Cog", ()=>(0, _cogJsDefault.default));
parcelHelpers.export(exports, "CogIcon", ()=>(0, _cogJsDefault.default));
parcelHelpers.export(exports, "LucideCog", ()=>(0, _cogJsDefault.default));
parcelHelpers.export(exports, "Coins", ()=>(0, _coinsJsDefault.default));
parcelHelpers.export(exports, "CoinsIcon", ()=>(0, _coinsJsDefault.default));
parcelHelpers.export(exports, "LucideCoins", ()=>(0, _coinsJsDefault.default));
parcelHelpers.export(exports, "Columns4", ()=>(0, _columns4JsDefault.default));
parcelHelpers.export(exports, "Columns4Icon", ()=>(0, _columns4JsDefault.default));
parcelHelpers.export(exports, "LucideColumns4", ()=>(0, _columns4JsDefault.default));
parcelHelpers.export(exports, "Combine", ()=>(0, _combineJsDefault.default));
parcelHelpers.export(exports, "CombineIcon", ()=>(0, _combineJsDefault.default));
parcelHelpers.export(exports, "LucideCombine", ()=>(0, _combineJsDefault.default));
parcelHelpers.export(exports, "Command", ()=>(0, _commandJsDefault.default));
parcelHelpers.export(exports, "CommandIcon", ()=>(0, _commandJsDefault.default));
parcelHelpers.export(exports, "LucideCommand", ()=>(0, _commandJsDefault.default));
parcelHelpers.export(exports, "Compass", ()=>(0, _compassJsDefault.default));
parcelHelpers.export(exports, "CompassIcon", ()=>(0, _compassJsDefault.default));
parcelHelpers.export(exports, "LucideCompass", ()=>(0, _compassJsDefault.default));
parcelHelpers.export(exports, "Component", ()=>(0, _componentJsDefault.default));
parcelHelpers.export(exports, "ComponentIcon", ()=>(0, _componentJsDefault.default));
parcelHelpers.export(exports, "LucideComponent", ()=>(0, _componentJsDefault.default));
parcelHelpers.export(exports, "Computer", ()=>(0, _computerJsDefault.default));
parcelHelpers.export(exports, "ComputerIcon", ()=>(0, _computerJsDefault.default));
parcelHelpers.export(exports, "LucideComputer", ()=>(0, _computerJsDefault.default));
parcelHelpers.export(exports, "ConciergeBell", ()=>(0, _conciergeBellJsDefault.default));
parcelHelpers.export(exports, "ConciergeBellIcon", ()=>(0, _conciergeBellJsDefault.default));
parcelHelpers.export(exports, "LucideConciergeBell", ()=>(0, _conciergeBellJsDefault.default));
parcelHelpers.export(exports, "Construction", ()=>(0, _constructionJsDefault.default));
parcelHelpers.export(exports, "ConstructionIcon", ()=>(0, _constructionJsDefault.default));
parcelHelpers.export(exports, "LucideConstruction", ()=>(0, _constructionJsDefault.default));
parcelHelpers.export(exports, "Cone", ()=>(0, _coneJsDefault.default));
parcelHelpers.export(exports, "ConeIcon", ()=>(0, _coneJsDefault.default));
parcelHelpers.export(exports, "LucideCone", ()=>(0, _coneJsDefault.default));
parcelHelpers.export(exports, "Contact", ()=>(0, _contactJsDefault.default));
parcelHelpers.export(exports, "ContactIcon", ()=>(0, _contactJsDefault.default));
parcelHelpers.export(exports, "LucideContact", ()=>(0, _contactJsDefault.default));
parcelHelpers.export(exports, "Container", ()=>(0, _containerJsDefault.default));
parcelHelpers.export(exports, "ContainerIcon", ()=>(0, _containerJsDefault.default));
parcelHelpers.export(exports, "LucideContainer", ()=>(0, _containerJsDefault.default));
parcelHelpers.export(exports, "Contrast", ()=>(0, _contrastJsDefault.default));
parcelHelpers.export(exports, "ContrastIcon", ()=>(0, _contrastJsDefault.default));
parcelHelpers.export(exports, "LucideContrast", ()=>(0, _contrastJsDefault.default));
parcelHelpers.export(exports, "Cookie", ()=>(0, _cookieJsDefault.default));
parcelHelpers.export(exports, "CookieIcon", ()=>(0, _cookieJsDefault.default));
parcelHelpers.export(exports, "LucideCookie", ()=>(0, _cookieJsDefault.default));
parcelHelpers.export(exports, "CopyCheck", ()=>(0, _copyCheckJsDefault.default));
parcelHelpers.export(exports, "CopyCheckIcon", ()=>(0, _copyCheckJsDefault.default));
parcelHelpers.export(exports, "LucideCopyCheck", ()=>(0, _copyCheckJsDefault.default));
parcelHelpers.export(exports, "CookingPot", ()=>(0, _cookingPotJsDefault.default));
parcelHelpers.export(exports, "CookingPotIcon", ()=>(0, _cookingPotJsDefault.default));
parcelHelpers.export(exports, "LucideCookingPot", ()=>(0, _cookingPotJsDefault.default));
parcelHelpers.export(exports, "CopyMinus", ()=>(0, _copyMinusJsDefault.default));
parcelHelpers.export(exports, "CopyMinusIcon", ()=>(0, _copyMinusJsDefault.default));
parcelHelpers.export(exports, "LucideCopyMinus", ()=>(0, _copyMinusJsDefault.default));
parcelHelpers.export(exports, "CopyPlus", ()=>(0, _copyPlusJsDefault.default));
parcelHelpers.export(exports, "CopyPlusIcon", ()=>(0, _copyPlusJsDefault.default));
parcelHelpers.export(exports, "LucideCopyPlus", ()=>(0, _copyPlusJsDefault.default));
parcelHelpers.export(exports, "CopySlash", ()=>(0, _copySlashJsDefault.default));
parcelHelpers.export(exports, "CopySlashIcon", ()=>(0, _copySlashJsDefault.default));
parcelHelpers.export(exports, "LucideCopySlash", ()=>(0, _copySlashJsDefault.default));
parcelHelpers.export(exports, "CopyX", ()=>(0, _copyXJsDefault.default));
parcelHelpers.export(exports, "CopyXIcon", ()=>(0, _copyXJsDefault.default));
parcelHelpers.export(exports, "LucideCopyX", ()=>(0, _copyXJsDefault.default));
parcelHelpers.export(exports, "Copy", ()=>(0, _copyJsDefault.default));
parcelHelpers.export(exports, "CopyIcon", ()=>(0, _copyJsDefault.default));
parcelHelpers.export(exports, "LucideCopy", ()=>(0, _copyJsDefault.default));
parcelHelpers.export(exports, "Copyleft", ()=>(0, _copyleftJsDefault.default));
parcelHelpers.export(exports, "CopyleftIcon", ()=>(0, _copyleftJsDefault.default));
parcelHelpers.export(exports, "LucideCopyleft", ()=>(0, _copyleftJsDefault.default));
parcelHelpers.export(exports, "Copyright", ()=>(0, _copyrightJsDefault.default));
parcelHelpers.export(exports, "CopyrightIcon", ()=>(0, _copyrightJsDefault.default));
parcelHelpers.export(exports, "LucideCopyright", ()=>(0, _copyrightJsDefault.default));
parcelHelpers.export(exports, "CornerDownLeft", ()=>(0, _cornerDownLeftJsDefault.default));
parcelHelpers.export(exports, "CornerDownLeftIcon", ()=>(0, _cornerDownLeftJsDefault.default));
parcelHelpers.export(exports, "LucideCornerDownLeft", ()=>(0, _cornerDownLeftJsDefault.default));
parcelHelpers.export(exports, "CornerDownRight", ()=>(0, _cornerDownRightJsDefault.default));
parcelHelpers.export(exports, "CornerDownRightIcon", ()=>(0, _cornerDownRightJsDefault.default));
parcelHelpers.export(exports, "LucideCornerDownRight", ()=>(0, _cornerDownRightJsDefault.default));
parcelHelpers.export(exports, "CornerLeftDown", ()=>(0, _cornerLeftDownJsDefault.default));
parcelHelpers.export(exports, "CornerLeftDownIcon", ()=>(0, _cornerLeftDownJsDefault.default));
parcelHelpers.export(exports, "LucideCornerLeftDown", ()=>(0, _cornerLeftDownJsDefault.default));
parcelHelpers.export(exports, "CornerLeftUp", ()=>(0, _cornerLeftUpJsDefault.default));
parcelHelpers.export(exports, "CornerLeftUpIcon", ()=>(0, _cornerLeftUpJsDefault.default));
parcelHelpers.export(exports, "LucideCornerLeftUp", ()=>(0, _cornerLeftUpJsDefault.default));
parcelHelpers.export(exports, "CornerRightDown", ()=>(0, _cornerRightDownJsDefault.default));
parcelHelpers.export(exports, "CornerRightDownIcon", ()=>(0, _cornerRightDownJsDefault.default));
parcelHelpers.export(exports, "LucideCornerRightDown", ()=>(0, _cornerRightDownJsDefault.default));
parcelHelpers.export(exports, "CornerRightUp", ()=>(0, _cornerRightUpJsDefault.default));
parcelHelpers.export(exports, "CornerRightUpIcon", ()=>(0, _cornerRightUpJsDefault.default));
parcelHelpers.export(exports, "LucideCornerRightUp", ()=>(0, _cornerRightUpJsDefault.default));
parcelHelpers.export(exports, "CornerUpLeft", ()=>(0, _cornerUpLeftJsDefault.default));
parcelHelpers.export(exports, "CornerUpLeftIcon", ()=>(0, _cornerUpLeftJsDefault.default));
parcelHelpers.export(exports, "LucideCornerUpLeft", ()=>(0, _cornerUpLeftJsDefault.default));
parcelHelpers.export(exports, "CornerUpRight", ()=>(0, _cornerUpRightJsDefault.default));
parcelHelpers.export(exports, "CornerUpRightIcon", ()=>(0, _cornerUpRightJsDefault.default));
parcelHelpers.export(exports, "LucideCornerUpRight", ()=>(0, _cornerUpRightJsDefault.default));
parcelHelpers.export(exports, "Cpu", ()=>(0, _cpuJsDefault.default));
parcelHelpers.export(exports, "CpuIcon", ()=>(0, _cpuJsDefault.default));
parcelHelpers.export(exports, "LucideCpu", ()=>(0, _cpuJsDefault.default));
parcelHelpers.export(exports, "CreativeCommons", ()=>(0, _creativeCommonsJsDefault.default));
parcelHelpers.export(exports, "CreativeCommonsIcon", ()=>(0, _creativeCommonsJsDefault.default));
parcelHelpers.export(exports, "LucideCreativeCommons", ()=>(0, _creativeCommonsJsDefault.default));
parcelHelpers.export(exports, "CreditCard", ()=>(0, _creditCardJsDefault.default));
parcelHelpers.export(exports, "CreditCardIcon", ()=>(0, _creditCardJsDefault.default));
parcelHelpers.export(exports, "LucideCreditCard", ()=>(0, _creditCardJsDefault.default));
parcelHelpers.export(exports, "Croissant", ()=>(0, _croissantJsDefault.default));
parcelHelpers.export(exports, "CroissantIcon", ()=>(0, _croissantJsDefault.default));
parcelHelpers.export(exports, "LucideCroissant", ()=>(0, _croissantJsDefault.default));
parcelHelpers.export(exports, "Crop", ()=>(0, _cropJsDefault.default));
parcelHelpers.export(exports, "CropIcon", ()=>(0, _cropJsDefault.default));
parcelHelpers.export(exports, "LucideCrop", ()=>(0, _cropJsDefault.default));
parcelHelpers.export(exports, "Cross", ()=>(0, _crossJsDefault.default));
parcelHelpers.export(exports, "CrossIcon", ()=>(0, _crossJsDefault.default));
parcelHelpers.export(exports, "LucideCross", ()=>(0, _crossJsDefault.default));
parcelHelpers.export(exports, "Crosshair", ()=>(0, _crosshairJsDefault.default));
parcelHelpers.export(exports, "CrosshairIcon", ()=>(0, _crosshairJsDefault.default));
parcelHelpers.export(exports, "LucideCrosshair", ()=>(0, _crosshairJsDefault.default));
parcelHelpers.export(exports, "Crown", ()=>(0, _crownJsDefault.default));
parcelHelpers.export(exports, "CrownIcon", ()=>(0, _crownJsDefault.default));
parcelHelpers.export(exports, "LucideCrown", ()=>(0, _crownJsDefault.default));
parcelHelpers.export(exports, "Cuboid", ()=>(0, _cuboidJsDefault.default));
parcelHelpers.export(exports, "CuboidIcon", ()=>(0, _cuboidJsDefault.default));
parcelHelpers.export(exports, "LucideCuboid", ()=>(0, _cuboidJsDefault.default));
parcelHelpers.export(exports, "CupSoda", ()=>(0, _cupSodaJsDefault.default));
parcelHelpers.export(exports, "CupSodaIcon", ()=>(0, _cupSodaJsDefault.default));
parcelHelpers.export(exports, "LucideCupSoda", ()=>(0, _cupSodaJsDefault.default));
parcelHelpers.export(exports, "Currency", ()=>(0, _currencyJsDefault.default));
parcelHelpers.export(exports, "CurrencyIcon", ()=>(0, _currencyJsDefault.default));
parcelHelpers.export(exports, "LucideCurrency", ()=>(0, _currencyJsDefault.default));
parcelHelpers.export(exports, "Cylinder", ()=>(0, _cylinderJsDefault.default));
parcelHelpers.export(exports, "CylinderIcon", ()=>(0, _cylinderJsDefault.default));
parcelHelpers.export(exports, "LucideCylinder", ()=>(0, _cylinderJsDefault.default));
parcelHelpers.export(exports, "Dam", ()=>(0, _damJsDefault.default));
parcelHelpers.export(exports, "DamIcon", ()=>(0, _damJsDefault.default));
parcelHelpers.export(exports, "LucideDam", ()=>(0, _damJsDefault.default));
parcelHelpers.export(exports, "DatabaseBackup", ()=>(0, _databaseBackupJsDefault.default));
parcelHelpers.export(exports, "DatabaseBackupIcon", ()=>(0, _databaseBackupJsDefault.default));
parcelHelpers.export(exports, "LucideDatabaseBackup", ()=>(0, _databaseBackupJsDefault.default));
parcelHelpers.export(exports, "DatabaseZap", ()=>(0, _databaseZapJsDefault.default));
parcelHelpers.export(exports, "DatabaseZapIcon", ()=>(0, _databaseZapJsDefault.default));
parcelHelpers.export(exports, "LucideDatabaseZap", ()=>(0, _databaseZapJsDefault.default));
parcelHelpers.export(exports, "DecimalsArrowLeft", ()=>(0, _decimalsArrowLeftJsDefault.default));
parcelHelpers.export(exports, "DecimalsArrowLeftIcon", ()=>(0, _decimalsArrowLeftJsDefault.default));
parcelHelpers.export(exports, "LucideDecimalsArrowLeft", ()=>(0, _decimalsArrowLeftJsDefault.default));
parcelHelpers.export(exports, "Database", ()=>(0, _databaseJsDefault.default));
parcelHelpers.export(exports, "DatabaseIcon", ()=>(0, _databaseJsDefault.default));
parcelHelpers.export(exports, "LucideDatabase", ()=>(0, _databaseJsDefault.default));
parcelHelpers.export(exports, "DecimalsArrowRight", ()=>(0, _decimalsArrowRightJsDefault.default));
parcelHelpers.export(exports, "DecimalsArrowRightIcon", ()=>(0, _decimalsArrowRightJsDefault.default));
parcelHelpers.export(exports, "LucideDecimalsArrowRight", ()=>(0, _decimalsArrowRightJsDefault.default));
parcelHelpers.export(exports, "Delete", ()=>(0, _deleteJsDefault.default));
parcelHelpers.export(exports, "DeleteIcon", ()=>(0, _deleteJsDefault.default));
parcelHelpers.export(exports, "LucideDelete", ()=>(0, _deleteJsDefault.default));
parcelHelpers.export(exports, "Dessert", ()=>(0, _dessertJsDefault.default));
parcelHelpers.export(exports, "DessertIcon", ()=>(0, _dessertJsDefault.default));
parcelHelpers.export(exports, "LucideDessert", ()=>(0, _dessertJsDefault.default));
parcelHelpers.export(exports, "Diameter", ()=>(0, _diameterJsDefault.default));
parcelHelpers.export(exports, "DiameterIcon", ()=>(0, _diameterJsDefault.default));
parcelHelpers.export(exports, "LucideDiameter", ()=>(0, _diameterJsDefault.default));
parcelHelpers.export(exports, "DiamondMinus", ()=>(0, _diamondMinusJsDefault.default));
parcelHelpers.export(exports, "DiamondMinusIcon", ()=>(0, _diamondMinusJsDefault.default));
parcelHelpers.export(exports, "LucideDiamondMinus", ()=>(0, _diamondMinusJsDefault.default));
parcelHelpers.export(exports, "DiamondPlus", ()=>(0, _diamondPlusJsDefault.default));
parcelHelpers.export(exports, "DiamondPlusIcon", ()=>(0, _diamondPlusJsDefault.default));
parcelHelpers.export(exports, "LucideDiamondPlus", ()=>(0, _diamondPlusJsDefault.default));
parcelHelpers.export(exports, "Diamond", ()=>(0, _diamondJsDefault.default));
parcelHelpers.export(exports, "DiamondIcon", ()=>(0, _diamondJsDefault.default));
parcelHelpers.export(exports, "LucideDiamond", ()=>(0, _diamondJsDefault.default));
parcelHelpers.export(exports, "Dice1", ()=>(0, _dice1JsDefault.default));
parcelHelpers.export(exports, "Dice1Icon", ()=>(0, _dice1JsDefault.default));
parcelHelpers.export(exports, "LucideDice1", ()=>(0, _dice1JsDefault.default));
parcelHelpers.export(exports, "Dice2", ()=>(0, _dice2JsDefault.default));
parcelHelpers.export(exports, "Dice2Icon", ()=>(0, _dice2JsDefault.default));
parcelHelpers.export(exports, "LucideDice2", ()=>(0, _dice2JsDefault.default));
parcelHelpers.export(exports, "Dice3", ()=>(0, _dice3JsDefault.default));
parcelHelpers.export(exports, "Dice3Icon", ()=>(0, _dice3JsDefault.default));
parcelHelpers.export(exports, "LucideDice3", ()=>(0, _dice3JsDefault.default));
parcelHelpers.export(exports, "Dice4", ()=>(0, _dice4JsDefault.default));
parcelHelpers.export(exports, "Dice4Icon", ()=>(0, _dice4JsDefault.default));
parcelHelpers.export(exports, "LucideDice4", ()=>(0, _dice4JsDefault.default));
parcelHelpers.export(exports, "Dice5", ()=>(0, _dice5JsDefault.default));
parcelHelpers.export(exports, "Dice5Icon", ()=>(0, _dice5JsDefault.default));
parcelHelpers.export(exports, "LucideDice5", ()=>(0, _dice5JsDefault.default));
parcelHelpers.export(exports, "Dice6", ()=>(0, _dice6JsDefault.default));
parcelHelpers.export(exports, "Dice6Icon", ()=>(0, _dice6JsDefault.default));
parcelHelpers.export(exports, "LucideDice6", ()=>(0, _dice6JsDefault.default));
parcelHelpers.export(exports, "Dices", ()=>(0, _dicesJsDefault.default));
parcelHelpers.export(exports, "DicesIcon", ()=>(0, _dicesJsDefault.default));
parcelHelpers.export(exports, "LucideDices", ()=>(0, _dicesJsDefault.default));
parcelHelpers.export(exports, "Diff", ()=>(0, _diffJsDefault.default));
parcelHelpers.export(exports, "DiffIcon", ()=>(0, _diffJsDefault.default));
parcelHelpers.export(exports, "LucideDiff", ()=>(0, _diffJsDefault.default));
parcelHelpers.export(exports, "Disc2", ()=>(0, _disc2JsDefault.default));
parcelHelpers.export(exports, "Disc2Icon", ()=>(0, _disc2JsDefault.default));
parcelHelpers.export(exports, "LucideDisc2", ()=>(0, _disc2JsDefault.default));
parcelHelpers.export(exports, "Disc3", ()=>(0, _disc3JsDefault.default));
parcelHelpers.export(exports, "Disc3Icon", ()=>(0, _disc3JsDefault.default));
parcelHelpers.export(exports, "LucideDisc3", ()=>(0, _disc3JsDefault.default));
parcelHelpers.export(exports, "DiscAlbum", ()=>(0, _discAlbumJsDefault.default));
parcelHelpers.export(exports, "DiscAlbumIcon", ()=>(0, _discAlbumJsDefault.default));
parcelHelpers.export(exports, "LucideDiscAlbum", ()=>(0, _discAlbumJsDefault.default));
parcelHelpers.export(exports, "Disc", ()=>(0, _discJsDefault.default));
parcelHelpers.export(exports, "DiscIcon", ()=>(0, _discJsDefault.default));
parcelHelpers.export(exports, "LucideDisc", ()=>(0, _discJsDefault.default));
parcelHelpers.export(exports, "Divide", ()=>(0, _divideJsDefault.default));
parcelHelpers.export(exports, "DivideIcon", ()=>(0, _divideJsDefault.default));
parcelHelpers.export(exports, "LucideDivide", ()=>(0, _divideJsDefault.default));
parcelHelpers.export(exports, "DnaOff", ()=>(0, _dnaOffJsDefault.default));
parcelHelpers.export(exports, "DnaOffIcon", ()=>(0, _dnaOffJsDefault.default));
parcelHelpers.export(exports, "LucideDnaOff", ()=>(0, _dnaOffJsDefault.default));
parcelHelpers.export(exports, "Dna", ()=>(0, _dnaJsDefault.default));
parcelHelpers.export(exports, "DnaIcon", ()=>(0, _dnaJsDefault.default));
parcelHelpers.export(exports, "LucideDna", ()=>(0, _dnaJsDefault.default));
parcelHelpers.export(exports, "Dock", ()=>(0, _dockJsDefault.default));
parcelHelpers.export(exports, "DockIcon", ()=>(0, _dockJsDefault.default));
parcelHelpers.export(exports, "LucideDock", ()=>(0, _dockJsDefault.default));
parcelHelpers.export(exports, "Dog", ()=>(0, _dogJsDefault.default));
parcelHelpers.export(exports, "DogIcon", ()=>(0, _dogJsDefault.default));
parcelHelpers.export(exports, "LucideDog", ()=>(0, _dogJsDefault.default));
parcelHelpers.export(exports, "DollarSign", ()=>(0, _dollarSignJsDefault.default));
parcelHelpers.export(exports, "DollarSignIcon", ()=>(0, _dollarSignJsDefault.default));
parcelHelpers.export(exports, "LucideDollarSign", ()=>(0, _dollarSignJsDefault.default));
parcelHelpers.export(exports, "Donut", ()=>(0, _donutJsDefault.default));
parcelHelpers.export(exports, "DonutIcon", ()=>(0, _donutJsDefault.default));
parcelHelpers.export(exports, "LucideDonut", ()=>(0, _donutJsDefault.default));
parcelHelpers.export(exports, "DoorClosedLocked", ()=>(0, _doorClosedLockedJsDefault.default));
parcelHelpers.export(exports, "DoorClosedLockedIcon", ()=>(0, _doorClosedLockedJsDefault.default));
parcelHelpers.export(exports, "LucideDoorClosedLocked", ()=>(0, _doorClosedLockedJsDefault.default));
parcelHelpers.export(exports, "DoorClosed", ()=>(0, _doorClosedJsDefault.default));
parcelHelpers.export(exports, "DoorClosedIcon", ()=>(0, _doorClosedJsDefault.default));
parcelHelpers.export(exports, "LucideDoorClosed", ()=>(0, _doorClosedJsDefault.default));
parcelHelpers.export(exports, "DoorOpen", ()=>(0, _doorOpenJsDefault.default));
parcelHelpers.export(exports, "DoorOpenIcon", ()=>(0, _doorOpenJsDefault.default));
parcelHelpers.export(exports, "LucideDoorOpen", ()=>(0, _doorOpenJsDefault.default));
parcelHelpers.export(exports, "Dot", ()=>(0, _dotJsDefault.default));
parcelHelpers.export(exports, "DotIcon", ()=>(0, _dotJsDefault.default));
parcelHelpers.export(exports, "LucideDot", ()=>(0, _dotJsDefault.default));
parcelHelpers.export(exports, "Download", ()=>(0, _downloadJsDefault.default));
parcelHelpers.export(exports, "DownloadIcon", ()=>(0, _downloadJsDefault.default));
parcelHelpers.export(exports, "LucideDownload", ()=>(0, _downloadJsDefault.default));
parcelHelpers.export(exports, "DraftingCompass", ()=>(0, _draftingCompassJsDefault.default));
parcelHelpers.export(exports, "DraftingCompassIcon", ()=>(0, _draftingCompassJsDefault.default));
parcelHelpers.export(exports, "LucideDraftingCompass", ()=>(0, _draftingCompassJsDefault.default));
parcelHelpers.export(exports, "Drama", ()=>(0, _dramaJsDefault.default));
parcelHelpers.export(exports, "DramaIcon", ()=>(0, _dramaJsDefault.default));
parcelHelpers.export(exports, "LucideDrama", ()=>(0, _dramaJsDefault.default));
parcelHelpers.export(exports, "Dribbble", ()=>(0, _dribbbleJsDefault.default));
parcelHelpers.export(exports, "DribbbleIcon", ()=>(0, _dribbbleJsDefault.default));
parcelHelpers.export(exports, "LucideDribbble", ()=>(0, _dribbbleJsDefault.default));
parcelHelpers.export(exports, "Drill", ()=>(0, _drillJsDefault.default));
parcelHelpers.export(exports, "DrillIcon", ()=>(0, _drillJsDefault.default));
parcelHelpers.export(exports, "LucideDrill", ()=>(0, _drillJsDefault.default));
parcelHelpers.export(exports, "Drone", ()=>(0, _droneJsDefault.default));
parcelHelpers.export(exports, "DroneIcon", ()=>(0, _droneJsDefault.default));
parcelHelpers.export(exports, "LucideDrone", ()=>(0, _droneJsDefault.default));
parcelHelpers.export(exports, "DropletOff", ()=>(0, _dropletOffJsDefault.default));
parcelHelpers.export(exports, "DropletOffIcon", ()=>(0, _dropletOffJsDefault.default));
parcelHelpers.export(exports, "LucideDropletOff", ()=>(0, _dropletOffJsDefault.default));
parcelHelpers.export(exports, "Droplet", ()=>(0, _dropletJsDefault.default));
parcelHelpers.export(exports, "DropletIcon", ()=>(0, _dropletJsDefault.default));
parcelHelpers.export(exports, "LucideDroplet", ()=>(0, _dropletJsDefault.default));
parcelHelpers.export(exports, "Droplets", ()=>(0, _dropletsJsDefault.default));
parcelHelpers.export(exports, "DropletsIcon", ()=>(0, _dropletsJsDefault.default));
parcelHelpers.export(exports, "LucideDroplets", ()=>(0, _dropletsJsDefault.default));
parcelHelpers.export(exports, "Drum", ()=>(0, _drumJsDefault.default));
parcelHelpers.export(exports, "DrumIcon", ()=>(0, _drumJsDefault.default));
parcelHelpers.export(exports, "LucideDrum", ()=>(0, _drumJsDefault.default));
parcelHelpers.export(exports, "Drumstick", ()=>(0, _drumstickJsDefault.default));
parcelHelpers.export(exports, "DrumstickIcon", ()=>(0, _drumstickJsDefault.default));
parcelHelpers.export(exports, "LucideDrumstick", ()=>(0, _drumstickJsDefault.default));
parcelHelpers.export(exports, "Dumbbell", ()=>(0, _dumbbellJsDefault.default));
parcelHelpers.export(exports, "DumbbellIcon", ()=>(0, _dumbbellJsDefault.default));
parcelHelpers.export(exports, "LucideDumbbell", ()=>(0, _dumbbellJsDefault.default));
parcelHelpers.export(exports, "EarOff", ()=>(0, _earOffJsDefault.default));
parcelHelpers.export(exports, "EarOffIcon", ()=>(0, _earOffJsDefault.default));
parcelHelpers.export(exports, "LucideEarOff", ()=>(0, _earOffJsDefault.default));
parcelHelpers.export(exports, "Ear", ()=>(0, _earJsDefault.default));
parcelHelpers.export(exports, "EarIcon", ()=>(0, _earJsDefault.default));
parcelHelpers.export(exports, "LucideEar", ()=>(0, _earJsDefault.default));
parcelHelpers.export(exports, "EarthLock", ()=>(0, _earthLockJsDefault.default));
parcelHelpers.export(exports, "EarthLockIcon", ()=>(0, _earthLockJsDefault.default));
parcelHelpers.export(exports, "LucideEarthLock", ()=>(0, _earthLockJsDefault.default));
parcelHelpers.export(exports, "Eclipse", ()=>(0, _eclipseJsDefault.default));
parcelHelpers.export(exports, "EclipseIcon", ()=>(0, _eclipseJsDefault.default));
parcelHelpers.export(exports, "LucideEclipse", ()=>(0, _eclipseJsDefault.default));
parcelHelpers.export(exports, "EggFried", ()=>(0, _eggFriedJsDefault.default));
parcelHelpers.export(exports, "EggFriedIcon", ()=>(0, _eggFriedJsDefault.default));
parcelHelpers.export(exports, "LucideEggFried", ()=>(0, _eggFriedJsDefault.default));
parcelHelpers.export(exports, "EggOff", ()=>(0, _eggOffJsDefault.default));
parcelHelpers.export(exports, "EggOffIcon", ()=>(0, _eggOffJsDefault.default));
parcelHelpers.export(exports, "LucideEggOff", ()=>(0, _eggOffJsDefault.default));
parcelHelpers.export(exports, "Egg", ()=>(0, _eggJsDefault.default));
parcelHelpers.export(exports, "EggIcon", ()=>(0, _eggJsDefault.default));
parcelHelpers.export(exports, "LucideEgg", ()=>(0, _eggJsDefault.default));
parcelHelpers.export(exports, "EqualApproximately", ()=>(0, _equalApproximatelyJsDefault.default));
parcelHelpers.export(exports, "EqualApproximatelyIcon", ()=>(0, _equalApproximatelyJsDefault.default));
parcelHelpers.export(exports, "LucideEqualApproximately", ()=>(0, _equalApproximatelyJsDefault.default));
parcelHelpers.export(exports, "EqualNot", ()=>(0, _equalNotJsDefault.default));
parcelHelpers.export(exports, "EqualNotIcon", ()=>(0, _equalNotJsDefault.default));
parcelHelpers.export(exports, "LucideEqualNot", ()=>(0, _equalNotJsDefault.default));
parcelHelpers.export(exports, "Equal", ()=>(0, _equalJsDefault.default));
parcelHelpers.export(exports, "EqualIcon", ()=>(0, _equalJsDefault.default));
parcelHelpers.export(exports, "LucideEqual", ()=>(0, _equalJsDefault.default));
parcelHelpers.export(exports, "Eraser", ()=>(0, _eraserJsDefault.default));
parcelHelpers.export(exports, "EraserIcon", ()=>(0, _eraserJsDefault.default));
parcelHelpers.export(exports, "LucideEraser", ()=>(0, _eraserJsDefault.default));
parcelHelpers.export(exports, "Euro", ()=>(0, _euroJsDefault.default));
parcelHelpers.export(exports, "EuroIcon", ()=>(0, _euroJsDefault.default));
parcelHelpers.export(exports, "LucideEuro", ()=>(0, _euroJsDefault.default));
parcelHelpers.export(exports, "EthernetPort", ()=>(0, _ethernetPortJsDefault.default));
parcelHelpers.export(exports, "EthernetPortIcon", ()=>(0, _ethernetPortJsDefault.default));
parcelHelpers.export(exports, "LucideEthernetPort", ()=>(0, _ethernetPortJsDefault.default));
parcelHelpers.export(exports, "EvCharger", ()=>(0, _evChargerJsDefault.default));
parcelHelpers.export(exports, "EvChargerIcon", ()=>(0, _evChargerJsDefault.default));
parcelHelpers.export(exports, "LucideEvCharger", ()=>(0, _evChargerJsDefault.default));
parcelHelpers.export(exports, "Expand", ()=>(0, _expandJsDefault.default));
parcelHelpers.export(exports, "ExpandIcon", ()=>(0, _expandJsDefault.default));
parcelHelpers.export(exports, "LucideExpand", ()=>(0, _expandJsDefault.default));
parcelHelpers.export(exports, "ExternalLink", ()=>(0, _externalLinkJsDefault.default));
parcelHelpers.export(exports, "ExternalLinkIcon", ()=>(0, _externalLinkJsDefault.default));
parcelHelpers.export(exports, "LucideExternalLink", ()=>(0, _externalLinkJsDefault.default));
parcelHelpers.export(exports, "EyeOff", ()=>(0, _eyeOffJsDefault.default));
parcelHelpers.export(exports, "EyeOffIcon", ()=>(0, _eyeOffJsDefault.default));
parcelHelpers.export(exports, "LucideEyeOff", ()=>(0, _eyeOffJsDefault.default));
parcelHelpers.export(exports, "EyeClosed", ()=>(0, _eyeClosedJsDefault.default));
parcelHelpers.export(exports, "EyeClosedIcon", ()=>(0, _eyeClosedJsDefault.default));
parcelHelpers.export(exports, "LucideEyeClosed", ()=>(0, _eyeClosedJsDefault.default));
parcelHelpers.export(exports, "Eye", ()=>(0, _eyeJsDefault.default));
parcelHelpers.export(exports, "EyeIcon", ()=>(0, _eyeJsDefault.default));
parcelHelpers.export(exports, "LucideEye", ()=>(0, _eyeJsDefault.default));
parcelHelpers.export(exports, "Facebook", ()=>(0, _facebookJsDefault.default));
parcelHelpers.export(exports, "FacebookIcon", ()=>(0, _facebookJsDefault.default));
parcelHelpers.export(exports, "LucideFacebook", ()=>(0, _facebookJsDefault.default));
parcelHelpers.export(exports, "Factory", ()=>(0, _factoryJsDefault.default));
parcelHelpers.export(exports, "FactoryIcon", ()=>(0, _factoryJsDefault.default));
parcelHelpers.export(exports, "LucideFactory", ()=>(0, _factoryJsDefault.default));
parcelHelpers.export(exports, "Fan", ()=>(0, _fanJsDefault.default));
parcelHelpers.export(exports, "FanIcon", ()=>(0, _fanJsDefault.default));
parcelHelpers.export(exports, "LucideFan", ()=>(0, _fanJsDefault.default));
parcelHelpers.export(exports, "FastForward", ()=>(0, _fastForwardJsDefault.default));
parcelHelpers.export(exports, "FastForwardIcon", ()=>(0, _fastForwardJsDefault.default));
parcelHelpers.export(exports, "LucideFastForward", ()=>(0, _fastForwardJsDefault.default));
parcelHelpers.export(exports, "Feather", ()=>(0, _featherJsDefault.default));
parcelHelpers.export(exports, "FeatherIcon", ()=>(0, _featherJsDefault.default));
parcelHelpers.export(exports, "LucideFeather", ()=>(0, _featherJsDefault.default));
parcelHelpers.export(exports, "Fence", ()=>(0, _fenceJsDefault.default));
parcelHelpers.export(exports, "FenceIcon", ()=>(0, _fenceJsDefault.default));
parcelHelpers.export(exports, "LucideFence", ()=>(0, _fenceJsDefault.default));
parcelHelpers.export(exports, "FerrisWheel", ()=>(0, _ferrisWheelJsDefault.default));
parcelHelpers.export(exports, "FerrisWheelIcon", ()=>(0, _ferrisWheelJsDefault.default));
parcelHelpers.export(exports, "LucideFerrisWheel", ()=>(0, _ferrisWheelJsDefault.default));
parcelHelpers.export(exports, "Figma", ()=>(0, _figmaJsDefault.default));
parcelHelpers.export(exports, "FigmaIcon", ()=>(0, _figmaJsDefault.default));
parcelHelpers.export(exports, "LucideFigma", ()=>(0, _figmaJsDefault.default));
parcelHelpers.export(exports, "FileArchive", ()=>(0, _fileArchiveJsDefault.default));
parcelHelpers.export(exports, "FileArchiveIcon", ()=>(0, _fileArchiveJsDefault.default));
parcelHelpers.export(exports, "LucideFileArchive", ()=>(0, _fileArchiveJsDefault.default));
parcelHelpers.export(exports, "FileAudio2", ()=>(0, _fileAudio2JsDefault.default));
parcelHelpers.export(exports, "FileAudio2Icon", ()=>(0, _fileAudio2JsDefault.default));
parcelHelpers.export(exports, "LucideFileAudio2", ()=>(0, _fileAudio2JsDefault.default));
parcelHelpers.export(exports, "FileAudio", ()=>(0, _fileAudioJsDefault.default));
parcelHelpers.export(exports, "FileAudioIcon", ()=>(0, _fileAudioJsDefault.default));
parcelHelpers.export(exports, "LucideFileAudio", ()=>(0, _fileAudioJsDefault.default));
parcelHelpers.export(exports, "FileBadge2", ()=>(0, _fileBadge2JsDefault.default));
parcelHelpers.export(exports, "FileBadge2Icon", ()=>(0, _fileBadge2JsDefault.default));
parcelHelpers.export(exports, "LucideFileBadge2", ()=>(0, _fileBadge2JsDefault.default));
parcelHelpers.export(exports, "FileBox", ()=>(0, _fileBoxJsDefault.default));
parcelHelpers.export(exports, "FileBoxIcon", ()=>(0, _fileBoxJsDefault.default));
parcelHelpers.export(exports, "LucideFileBox", ()=>(0, _fileBoxJsDefault.default));
parcelHelpers.export(exports, "FileBadge", ()=>(0, _fileBadgeJsDefault.default));
parcelHelpers.export(exports, "FileBadgeIcon", ()=>(0, _fileBadgeJsDefault.default));
parcelHelpers.export(exports, "LucideFileBadge", ()=>(0, _fileBadgeJsDefault.default));
parcelHelpers.export(exports, "FileCheck2", ()=>(0, _fileCheck2JsDefault.default));
parcelHelpers.export(exports, "FileCheck2Icon", ()=>(0, _fileCheck2JsDefault.default));
parcelHelpers.export(exports, "LucideFileCheck2", ()=>(0, _fileCheck2JsDefault.default));
parcelHelpers.export(exports, "FileCheck", ()=>(0, _fileCheckJsDefault.default));
parcelHelpers.export(exports, "FileCheckIcon", ()=>(0, _fileCheckJsDefault.default));
parcelHelpers.export(exports, "LucideFileCheck", ()=>(0, _fileCheckJsDefault.default));
parcelHelpers.export(exports, "FileCode2", ()=>(0, _fileCode2JsDefault.default));
parcelHelpers.export(exports, "FileCode2Icon", ()=>(0, _fileCode2JsDefault.default));
parcelHelpers.export(exports, "LucideFileCode2", ()=>(0, _fileCode2JsDefault.default));
parcelHelpers.export(exports, "FileClock", ()=>(0, _fileClockJsDefault.default));
parcelHelpers.export(exports, "FileClockIcon", ()=>(0, _fileClockJsDefault.default));
parcelHelpers.export(exports, "LucideFileClock", ()=>(0, _fileClockJsDefault.default));
parcelHelpers.export(exports, "FileCode", ()=>(0, _fileCodeJsDefault.default));
parcelHelpers.export(exports, "FileCodeIcon", ()=>(0, _fileCodeJsDefault.default));
parcelHelpers.export(exports, "LucideFileCode", ()=>(0, _fileCodeJsDefault.default));
parcelHelpers.export(exports, "FileDiff", ()=>(0, _fileDiffJsDefault.default));
parcelHelpers.export(exports, "FileDiffIcon", ()=>(0, _fileDiffJsDefault.default));
parcelHelpers.export(exports, "LucideFileDiff", ()=>(0, _fileDiffJsDefault.default));
parcelHelpers.export(exports, "FileDigit", ()=>(0, _fileDigitJsDefault.default));
parcelHelpers.export(exports, "FileDigitIcon", ()=>(0, _fileDigitJsDefault.default));
parcelHelpers.export(exports, "LucideFileDigit", ()=>(0, _fileDigitJsDefault.default));
parcelHelpers.export(exports, "FileDown", ()=>(0, _fileDownJsDefault.default));
parcelHelpers.export(exports, "FileDownIcon", ()=>(0, _fileDownJsDefault.default));
parcelHelpers.export(exports, "LucideFileDown", ()=>(0, _fileDownJsDefault.default));
parcelHelpers.export(exports, "FileHeart", ()=>(0, _fileHeartJsDefault.default));
parcelHelpers.export(exports, "FileHeartIcon", ()=>(0, _fileHeartJsDefault.default));
parcelHelpers.export(exports, "LucideFileHeart", ()=>(0, _fileHeartJsDefault.default));
parcelHelpers.export(exports, "FileImage", ()=>(0, _fileImageJsDefault.default));
parcelHelpers.export(exports, "FileImageIcon", ()=>(0, _fileImageJsDefault.default));
parcelHelpers.export(exports, "LucideFileImage", ()=>(0, _fileImageJsDefault.default));
parcelHelpers.export(exports, "FileInput", ()=>(0, _fileInputJsDefault.default));
parcelHelpers.export(exports, "FileInputIcon", ()=>(0, _fileInputJsDefault.default));
parcelHelpers.export(exports, "LucideFileInput", ()=>(0, _fileInputJsDefault.default));
parcelHelpers.export(exports, "FileJson2", ()=>(0, _fileJson2JsDefault.default));
parcelHelpers.export(exports, "FileJson2Icon", ()=>(0, _fileJson2JsDefault.default));
parcelHelpers.export(exports, "LucideFileJson2", ()=>(0, _fileJson2JsDefault.default));
parcelHelpers.export(exports, "FileJson", ()=>(0, _fileJsonJsDefault.default));
parcelHelpers.export(exports, "FileJsonIcon", ()=>(0, _fileJsonJsDefault.default));
parcelHelpers.export(exports, "LucideFileJson", ()=>(0, _fileJsonJsDefault.default));
parcelHelpers.export(exports, "FileKey2", ()=>(0, _fileKey2JsDefault.default));
parcelHelpers.export(exports, "FileKey2Icon", ()=>(0, _fileKey2JsDefault.default));
parcelHelpers.export(exports, "LucideFileKey2", ()=>(0, _fileKey2JsDefault.default));
parcelHelpers.export(exports, "FileKey", ()=>(0, _fileKeyJsDefault.default));
parcelHelpers.export(exports, "FileKeyIcon", ()=>(0, _fileKeyJsDefault.default));
parcelHelpers.export(exports, "LucideFileKey", ()=>(0, _fileKeyJsDefault.default));
parcelHelpers.export(exports, "FileLock2", ()=>(0, _fileLock2JsDefault.default));
parcelHelpers.export(exports, "FileLock2Icon", ()=>(0, _fileLock2JsDefault.default));
parcelHelpers.export(exports, "LucideFileLock2", ()=>(0, _fileLock2JsDefault.default));
parcelHelpers.export(exports, "FileLock", ()=>(0, _fileLockJsDefault.default));
parcelHelpers.export(exports, "FileLockIcon", ()=>(0, _fileLockJsDefault.default));
parcelHelpers.export(exports, "LucideFileLock", ()=>(0, _fileLockJsDefault.default));
parcelHelpers.export(exports, "FileMinus2", ()=>(0, _fileMinus2JsDefault.default));
parcelHelpers.export(exports, "FileMinus2Icon", ()=>(0, _fileMinus2JsDefault.default));
parcelHelpers.export(exports, "LucideFileMinus2", ()=>(0, _fileMinus2JsDefault.default));
parcelHelpers.export(exports, "FileMinus", ()=>(0, _fileMinusJsDefault.default));
parcelHelpers.export(exports, "FileMinusIcon", ()=>(0, _fileMinusJsDefault.default));
parcelHelpers.export(exports, "LucideFileMinus", ()=>(0, _fileMinusJsDefault.default));
parcelHelpers.export(exports, "FileMusic", ()=>(0, _fileMusicJsDefault.default));
parcelHelpers.export(exports, "FileMusicIcon", ()=>(0, _fileMusicJsDefault.default));
parcelHelpers.export(exports, "LucideFileMusic", ()=>(0, _fileMusicJsDefault.default));
parcelHelpers.export(exports, "FileOutput", ()=>(0, _fileOutputJsDefault.default));
parcelHelpers.export(exports, "FileOutputIcon", ()=>(0, _fileOutputJsDefault.default));
parcelHelpers.export(exports, "LucideFileOutput", ()=>(0, _fileOutputJsDefault.default));
parcelHelpers.export(exports, "FilePlus2", ()=>(0, _filePlus2JsDefault.default));
parcelHelpers.export(exports, "FilePlus2Icon", ()=>(0, _filePlus2JsDefault.default));
parcelHelpers.export(exports, "LucideFilePlus2", ()=>(0, _filePlus2JsDefault.default));
parcelHelpers.export(exports, "FilePlus", ()=>(0, _filePlusJsDefault.default));
parcelHelpers.export(exports, "FilePlusIcon", ()=>(0, _filePlusJsDefault.default));
parcelHelpers.export(exports, "LucideFilePlus", ()=>(0, _filePlusJsDefault.default));
parcelHelpers.export(exports, "FileScan", ()=>(0, _fileScanJsDefault.default));
parcelHelpers.export(exports, "FileScanIcon", ()=>(0, _fileScanJsDefault.default));
parcelHelpers.export(exports, "LucideFileScan", ()=>(0, _fileScanJsDefault.default));
parcelHelpers.export(exports, "FileSearch2", ()=>(0, _fileSearch2JsDefault.default));
parcelHelpers.export(exports, "FileSearch2Icon", ()=>(0, _fileSearch2JsDefault.default));
parcelHelpers.export(exports, "LucideFileSearch2", ()=>(0, _fileSearch2JsDefault.default));
parcelHelpers.export(exports, "FileSearch", ()=>(0, _fileSearchJsDefault.default));
parcelHelpers.export(exports, "FileSearchIcon", ()=>(0, _fileSearchJsDefault.default));
parcelHelpers.export(exports, "LucideFileSearch", ()=>(0, _fileSearchJsDefault.default));
parcelHelpers.export(exports, "FileSliders", ()=>(0, _fileSlidersJsDefault.default));
parcelHelpers.export(exports, "FileSlidersIcon", ()=>(0, _fileSlidersJsDefault.default));
parcelHelpers.export(exports, "LucideFileSliders", ()=>(0, _fileSlidersJsDefault.default));
parcelHelpers.export(exports, "FileSpreadsheet", ()=>(0, _fileSpreadsheetJsDefault.default));
parcelHelpers.export(exports, "FileSpreadsheetIcon", ()=>(0, _fileSpreadsheetJsDefault.default));
parcelHelpers.export(exports, "LucideFileSpreadsheet", ()=>(0, _fileSpreadsheetJsDefault.default));
parcelHelpers.export(exports, "FileStack", ()=>(0, _fileStackJsDefault.default));
parcelHelpers.export(exports, "FileStackIcon", ()=>(0, _fileStackJsDefault.default));
parcelHelpers.export(exports, "LucideFileStack", ()=>(0, _fileStackJsDefault.default));
parcelHelpers.export(exports, "FileSymlink", ()=>(0, _fileSymlinkJsDefault.default));
parcelHelpers.export(exports, "FileSymlinkIcon", ()=>(0, _fileSymlinkJsDefault.default));
parcelHelpers.export(exports, "LucideFileSymlink", ()=>(0, _fileSymlinkJsDefault.default));
parcelHelpers.export(exports, "FileTerminal", ()=>(0, _fileTerminalJsDefault.default));
parcelHelpers.export(exports, "FileTerminalIcon", ()=>(0, _fileTerminalJsDefault.default));
parcelHelpers.export(exports, "LucideFileTerminal", ()=>(0, _fileTerminalJsDefault.default));
parcelHelpers.export(exports, "FileText", ()=>(0, _fileTextJsDefault.default));
parcelHelpers.export(exports, "FileTextIcon", ()=>(0, _fileTextJsDefault.default));
parcelHelpers.export(exports, "LucideFileText", ()=>(0, _fileTextJsDefault.default));
parcelHelpers.export(exports, "FileType2", ()=>(0, _fileType2JsDefault.default));
parcelHelpers.export(exports, "FileType2Icon", ()=>(0, _fileType2JsDefault.default));
parcelHelpers.export(exports, "LucideFileType2", ()=>(0, _fileType2JsDefault.default));
parcelHelpers.export(exports, "FileType", ()=>(0, _fileTypeJsDefault.default));
parcelHelpers.export(exports, "FileTypeIcon", ()=>(0, _fileTypeJsDefault.default));
parcelHelpers.export(exports, "LucideFileType", ()=>(0, _fileTypeJsDefault.default));
parcelHelpers.export(exports, "FileUp", ()=>(0, _fileUpJsDefault.default));
parcelHelpers.export(exports, "FileUpIcon", ()=>(0, _fileUpJsDefault.default));
parcelHelpers.export(exports, "LucideFileUp", ()=>(0, _fileUpJsDefault.default));
parcelHelpers.export(exports, "FileUser", ()=>(0, _fileUserJsDefault.default));
parcelHelpers.export(exports, "FileUserIcon", ()=>(0, _fileUserJsDefault.default));
parcelHelpers.export(exports, "LucideFileUser", ()=>(0, _fileUserJsDefault.default));
parcelHelpers.export(exports, "FileVolume2", ()=>(0, _fileVolume2JsDefault.default));
parcelHelpers.export(exports, "FileVolume2Icon", ()=>(0, _fileVolume2JsDefault.default));
parcelHelpers.export(exports, "LucideFileVolume2", ()=>(0, _fileVolume2JsDefault.default));
parcelHelpers.export(exports, "FileVolume", ()=>(0, _fileVolumeJsDefault.default));
parcelHelpers.export(exports, "FileVolumeIcon", ()=>(0, _fileVolumeJsDefault.default));
parcelHelpers.export(exports, "LucideFileVolume", ()=>(0, _fileVolumeJsDefault.default));
parcelHelpers.export(exports, "FileWarning", ()=>(0, _fileWarningJsDefault.default));
parcelHelpers.export(exports, "FileWarningIcon", ()=>(0, _fileWarningJsDefault.default));
parcelHelpers.export(exports, "LucideFileWarning", ()=>(0, _fileWarningJsDefault.default));
parcelHelpers.export(exports, "FileX2", ()=>(0, _fileX2JsDefault.default));
parcelHelpers.export(exports, "FileX2Icon", ()=>(0, _fileX2JsDefault.default));
parcelHelpers.export(exports, "LucideFileX2", ()=>(0, _fileX2JsDefault.default));
parcelHelpers.export(exports, "FileX", ()=>(0, _fileXJsDefault.default));
parcelHelpers.export(exports, "FileXIcon", ()=>(0, _fileXJsDefault.default));
parcelHelpers.export(exports, "LucideFileX", ()=>(0, _fileXJsDefault.default));
parcelHelpers.export(exports, "File", ()=>(0, _fileJsDefault.default));
parcelHelpers.export(exports, "FileIcon", ()=>(0, _fileJsDefault.default));
parcelHelpers.export(exports, "LucideFile", ()=>(0, _fileJsDefault.default));
parcelHelpers.export(exports, "Film", ()=>(0, _filmJsDefault.default));
parcelHelpers.export(exports, "FilmIcon", ()=>(0, _filmJsDefault.default));
parcelHelpers.export(exports, "LucideFilm", ()=>(0, _filmJsDefault.default));
parcelHelpers.export(exports, "Files", ()=>(0, _filesJsDefault.default));
parcelHelpers.export(exports, "FilesIcon", ()=>(0, _filesJsDefault.default));
parcelHelpers.export(exports, "LucideFiles", ()=>(0, _filesJsDefault.default));
parcelHelpers.export(exports, "Fingerprint", ()=>(0, _fingerprintJsDefault.default));
parcelHelpers.export(exports, "FingerprintIcon", ()=>(0, _fingerprintJsDefault.default));
parcelHelpers.export(exports, "LucideFingerprint", ()=>(0, _fingerprintJsDefault.default));
parcelHelpers.export(exports, "FireExtinguisher", ()=>(0, _fireExtinguisherJsDefault.default));
parcelHelpers.export(exports, "FireExtinguisherIcon", ()=>(0, _fireExtinguisherJsDefault.default));
parcelHelpers.export(exports, "LucideFireExtinguisher", ()=>(0, _fireExtinguisherJsDefault.default));
parcelHelpers.export(exports, "FishOff", ()=>(0, _fishOffJsDefault.default));
parcelHelpers.export(exports, "FishOffIcon", ()=>(0, _fishOffJsDefault.default));
parcelHelpers.export(exports, "LucideFishOff", ()=>(0, _fishOffJsDefault.default));
parcelHelpers.export(exports, "FishSymbol", ()=>(0, _fishSymbolJsDefault.default));
parcelHelpers.export(exports, "FishSymbolIcon", ()=>(0, _fishSymbolJsDefault.default));
parcelHelpers.export(exports, "LucideFishSymbol", ()=>(0, _fishSymbolJsDefault.default));
parcelHelpers.export(exports, "Fish", ()=>(0, _fishJsDefault.default));
parcelHelpers.export(exports, "FishIcon", ()=>(0, _fishJsDefault.default));
parcelHelpers.export(exports, "LucideFish", ()=>(0, _fishJsDefault.default));
parcelHelpers.export(exports, "FlagOff", ()=>(0, _flagOffJsDefault.default));
parcelHelpers.export(exports, "FlagOffIcon", ()=>(0, _flagOffJsDefault.default));
parcelHelpers.export(exports, "LucideFlagOff", ()=>(0, _flagOffJsDefault.default));
parcelHelpers.export(exports, "FlagTriangleLeft", ()=>(0, _flagTriangleLeftJsDefault.default));
parcelHelpers.export(exports, "FlagTriangleLeftIcon", ()=>(0, _flagTriangleLeftJsDefault.default));
parcelHelpers.export(exports, "LucideFlagTriangleLeft", ()=>(0, _flagTriangleLeftJsDefault.default));
parcelHelpers.export(exports, "FlagTriangleRight", ()=>(0, _flagTriangleRightJsDefault.default));
parcelHelpers.export(exports, "FlagTriangleRightIcon", ()=>(0, _flagTriangleRightJsDefault.default));
parcelHelpers.export(exports, "LucideFlagTriangleRight", ()=>(0, _flagTriangleRightJsDefault.default));
parcelHelpers.export(exports, "Flag", ()=>(0, _flagJsDefault.default));
parcelHelpers.export(exports, "FlagIcon", ()=>(0, _flagJsDefault.default));
parcelHelpers.export(exports, "LucideFlag", ()=>(0, _flagJsDefault.default));
parcelHelpers.export(exports, "FlameKindling", ()=>(0, _flameKindlingJsDefault.default));
parcelHelpers.export(exports, "FlameKindlingIcon", ()=>(0, _flameKindlingJsDefault.default));
parcelHelpers.export(exports, "LucideFlameKindling", ()=>(0, _flameKindlingJsDefault.default));
parcelHelpers.export(exports, "Flame", ()=>(0, _flameJsDefault.default));
parcelHelpers.export(exports, "FlameIcon", ()=>(0, _flameJsDefault.default));
parcelHelpers.export(exports, "LucideFlame", ()=>(0, _flameJsDefault.default));
parcelHelpers.export(exports, "FlashlightOff", ()=>(0, _flashlightOffJsDefault.default));
parcelHelpers.export(exports, "FlashlightOffIcon", ()=>(0, _flashlightOffJsDefault.default));
parcelHelpers.export(exports, "LucideFlashlightOff", ()=>(0, _flashlightOffJsDefault.default));
parcelHelpers.export(exports, "Flashlight", ()=>(0, _flashlightJsDefault.default));
parcelHelpers.export(exports, "FlashlightIcon", ()=>(0, _flashlightJsDefault.default));
parcelHelpers.export(exports, "LucideFlashlight", ()=>(0, _flashlightJsDefault.default));
parcelHelpers.export(exports, "FlaskConicalOff", ()=>(0, _flaskConicalOffJsDefault.default));
parcelHelpers.export(exports, "FlaskConicalOffIcon", ()=>(0, _flaskConicalOffJsDefault.default));
parcelHelpers.export(exports, "LucideFlaskConicalOff", ()=>(0, _flaskConicalOffJsDefault.default));
parcelHelpers.export(exports, "FlaskConical", ()=>(0, _flaskConicalJsDefault.default));
parcelHelpers.export(exports, "FlaskConicalIcon", ()=>(0, _flaskConicalJsDefault.default));
parcelHelpers.export(exports, "LucideFlaskConical", ()=>(0, _flaskConicalJsDefault.default));
parcelHelpers.export(exports, "FlaskRound", ()=>(0, _flaskRoundJsDefault.default));
parcelHelpers.export(exports, "FlaskRoundIcon", ()=>(0, _flaskRoundJsDefault.default));
parcelHelpers.export(exports, "LucideFlaskRound", ()=>(0, _flaskRoundJsDefault.default));
parcelHelpers.export(exports, "FlipHorizontal2", ()=>(0, _flipHorizontal2JsDefault.default));
parcelHelpers.export(exports, "FlipHorizontal2Icon", ()=>(0, _flipHorizontal2JsDefault.default));
parcelHelpers.export(exports, "LucideFlipHorizontal2", ()=>(0, _flipHorizontal2JsDefault.default));
parcelHelpers.export(exports, "FlipHorizontal", ()=>(0, _flipHorizontalJsDefault.default));
parcelHelpers.export(exports, "FlipHorizontalIcon", ()=>(0, _flipHorizontalJsDefault.default));
parcelHelpers.export(exports, "LucideFlipHorizontal", ()=>(0, _flipHorizontalJsDefault.default));
parcelHelpers.export(exports, "FlipVertical2", ()=>(0, _flipVertical2JsDefault.default));
parcelHelpers.export(exports, "FlipVertical2Icon", ()=>(0, _flipVertical2JsDefault.default));
parcelHelpers.export(exports, "LucideFlipVertical2", ()=>(0, _flipVertical2JsDefault.default));
parcelHelpers.export(exports, "FlipVertical", ()=>(0, _flipVerticalJsDefault.default));
parcelHelpers.export(exports, "FlipVerticalIcon", ()=>(0, _flipVerticalJsDefault.default));
parcelHelpers.export(exports, "LucideFlipVertical", ()=>(0, _flipVerticalJsDefault.default));
parcelHelpers.export(exports, "Flower2", ()=>(0, _flower2JsDefault.default));
parcelHelpers.export(exports, "Flower2Icon", ()=>(0, _flower2JsDefault.default));
parcelHelpers.export(exports, "LucideFlower2", ()=>(0, _flower2JsDefault.default));
parcelHelpers.export(exports, "Flower", ()=>(0, _flowerJsDefault.default));
parcelHelpers.export(exports, "FlowerIcon", ()=>(0, _flowerJsDefault.default));
parcelHelpers.export(exports, "LucideFlower", ()=>(0, _flowerJsDefault.default));
parcelHelpers.export(exports, "Focus", ()=>(0, _focusJsDefault.default));
parcelHelpers.export(exports, "FocusIcon", ()=>(0, _focusJsDefault.default));
parcelHelpers.export(exports, "LucideFocus", ()=>(0, _focusJsDefault.default));
parcelHelpers.export(exports, "FoldHorizontal", ()=>(0, _foldHorizontalJsDefault.default));
parcelHelpers.export(exports, "FoldHorizontalIcon", ()=>(0, _foldHorizontalJsDefault.default));
parcelHelpers.export(exports, "LucideFoldHorizontal", ()=>(0, _foldHorizontalJsDefault.default));
parcelHelpers.export(exports, "FoldVertical", ()=>(0, _foldVerticalJsDefault.default));
parcelHelpers.export(exports, "FoldVerticalIcon", ()=>(0, _foldVerticalJsDefault.default));
parcelHelpers.export(exports, "LucideFoldVertical", ()=>(0, _foldVerticalJsDefault.default));
parcelHelpers.export(exports, "FolderArchive", ()=>(0, _folderArchiveJsDefault.default));
parcelHelpers.export(exports, "FolderArchiveIcon", ()=>(0, _folderArchiveJsDefault.default));
parcelHelpers.export(exports, "LucideFolderArchive", ()=>(0, _folderArchiveJsDefault.default));
parcelHelpers.export(exports, "FolderCheck", ()=>(0, _folderCheckJsDefault.default));
parcelHelpers.export(exports, "FolderCheckIcon", ()=>(0, _folderCheckJsDefault.default));
parcelHelpers.export(exports, "LucideFolderCheck", ()=>(0, _folderCheckJsDefault.default));
parcelHelpers.export(exports, "FolderClock", ()=>(0, _folderClockJsDefault.default));
parcelHelpers.export(exports, "FolderClockIcon", ()=>(0, _folderClockJsDefault.default));
parcelHelpers.export(exports, "LucideFolderClock", ()=>(0, _folderClockJsDefault.default));
parcelHelpers.export(exports, "FolderCode", ()=>(0, _folderCodeJsDefault.default));
parcelHelpers.export(exports, "FolderCodeIcon", ()=>(0, _folderCodeJsDefault.default));
parcelHelpers.export(exports, "LucideFolderCode", ()=>(0, _folderCodeJsDefault.default));
parcelHelpers.export(exports, "FolderDot", ()=>(0, _folderDotJsDefault.default));
parcelHelpers.export(exports, "FolderDotIcon", ()=>(0, _folderDotJsDefault.default));
parcelHelpers.export(exports, "LucideFolderDot", ()=>(0, _folderDotJsDefault.default));
parcelHelpers.export(exports, "FolderClosed", ()=>(0, _folderClosedJsDefault.default));
parcelHelpers.export(exports, "FolderClosedIcon", ()=>(0, _folderClosedJsDefault.default));
parcelHelpers.export(exports, "LucideFolderClosed", ()=>(0, _folderClosedJsDefault.default));
parcelHelpers.export(exports, "FolderDown", ()=>(0, _folderDownJsDefault.default));
parcelHelpers.export(exports, "FolderDownIcon", ()=>(0, _folderDownJsDefault.default));
parcelHelpers.export(exports, "LucideFolderDown", ()=>(0, _folderDownJsDefault.default));
parcelHelpers.export(exports, "FolderGit2", ()=>(0, _folderGit2JsDefault.default));
parcelHelpers.export(exports, "FolderGit2Icon", ()=>(0, _folderGit2JsDefault.default));
parcelHelpers.export(exports, "LucideFolderGit2", ()=>(0, _folderGit2JsDefault.default));
parcelHelpers.export(exports, "FolderGit", ()=>(0, _folderGitJsDefault.default));
parcelHelpers.export(exports, "FolderGitIcon", ()=>(0, _folderGitJsDefault.default));
parcelHelpers.export(exports, "LucideFolderGit", ()=>(0, _folderGitJsDefault.default));
parcelHelpers.export(exports, "FolderHeart", ()=>(0, _folderHeartJsDefault.default));
parcelHelpers.export(exports, "FolderHeartIcon", ()=>(0, _folderHeartJsDefault.default));
parcelHelpers.export(exports, "LucideFolderHeart", ()=>(0, _folderHeartJsDefault.default));
parcelHelpers.export(exports, "FolderInput", ()=>(0, _folderInputJsDefault.default));
parcelHelpers.export(exports, "FolderInputIcon", ()=>(0, _folderInputJsDefault.default));
parcelHelpers.export(exports, "LucideFolderInput", ()=>(0, _folderInputJsDefault.default));
parcelHelpers.export(exports, "FolderKanban", ()=>(0, _folderKanbanJsDefault.default));
parcelHelpers.export(exports, "FolderKanbanIcon", ()=>(0, _folderKanbanJsDefault.default));
parcelHelpers.export(exports, "LucideFolderKanban", ()=>(0, _folderKanbanJsDefault.default));
parcelHelpers.export(exports, "FolderKey", ()=>(0, _folderKeyJsDefault.default));
parcelHelpers.export(exports, "FolderKeyIcon", ()=>(0, _folderKeyJsDefault.default));
parcelHelpers.export(exports, "LucideFolderKey", ()=>(0, _folderKeyJsDefault.default));
parcelHelpers.export(exports, "FolderLock", ()=>(0, _folderLockJsDefault.default));
parcelHelpers.export(exports, "FolderLockIcon", ()=>(0, _folderLockJsDefault.default));
parcelHelpers.export(exports, "LucideFolderLock", ()=>(0, _folderLockJsDefault.default));
parcelHelpers.export(exports, "FolderMinus", ()=>(0, _folderMinusJsDefault.default));
parcelHelpers.export(exports, "FolderMinusIcon", ()=>(0, _folderMinusJsDefault.default));
parcelHelpers.export(exports, "LucideFolderMinus", ()=>(0, _folderMinusJsDefault.default));
parcelHelpers.export(exports, "FolderOpenDot", ()=>(0, _folderOpenDotJsDefault.default));
parcelHelpers.export(exports, "FolderOpenDotIcon", ()=>(0, _folderOpenDotJsDefault.default));
parcelHelpers.export(exports, "LucideFolderOpenDot", ()=>(0, _folderOpenDotJsDefault.default));
parcelHelpers.export(exports, "FolderOpen", ()=>(0, _folderOpenJsDefault.default));
parcelHelpers.export(exports, "FolderOpenIcon", ()=>(0, _folderOpenJsDefault.default));
parcelHelpers.export(exports, "LucideFolderOpen", ()=>(0, _folderOpenJsDefault.default));
parcelHelpers.export(exports, "FolderOutput", ()=>(0, _folderOutputJsDefault.default));
parcelHelpers.export(exports, "FolderOutputIcon", ()=>(0, _folderOutputJsDefault.default));
parcelHelpers.export(exports, "LucideFolderOutput", ()=>(0, _folderOutputJsDefault.default));
parcelHelpers.export(exports, "FolderPlus", ()=>(0, _folderPlusJsDefault.default));
parcelHelpers.export(exports, "FolderPlusIcon", ()=>(0, _folderPlusJsDefault.default));
parcelHelpers.export(exports, "LucideFolderPlus", ()=>(0, _folderPlusJsDefault.default));
parcelHelpers.export(exports, "FolderRoot", ()=>(0, _folderRootJsDefault.default));
parcelHelpers.export(exports, "FolderRootIcon", ()=>(0, _folderRootJsDefault.default));
parcelHelpers.export(exports, "LucideFolderRoot", ()=>(0, _folderRootJsDefault.default));
parcelHelpers.export(exports, "FolderSearch2", ()=>(0, _folderSearch2JsDefault.default));
parcelHelpers.export(exports, "FolderSearch2Icon", ()=>(0, _folderSearch2JsDefault.default));
parcelHelpers.export(exports, "LucideFolderSearch2", ()=>(0, _folderSearch2JsDefault.default));
parcelHelpers.export(exports, "FolderSearch", ()=>(0, _folderSearchJsDefault.default));
parcelHelpers.export(exports, "FolderSearchIcon", ()=>(0, _folderSearchJsDefault.default));
parcelHelpers.export(exports, "LucideFolderSearch", ()=>(0, _folderSearchJsDefault.default));
parcelHelpers.export(exports, "FolderSymlink", ()=>(0, _folderSymlinkJsDefault.default));
parcelHelpers.export(exports, "FolderSymlinkIcon", ()=>(0, _folderSymlinkJsDefault.default));
parcelHelpers.export(exports, "LucideFolderSymlink", ()=>(0, _folderSymlinkJsDefault.default));
parcelHelpers.export(exports, "FolderSync", ()=>(0, _folderSyncJsDefault.default));
parcelHelpers.export(exports, "FolderSyncIcon", ()=>(0, _folderSyncJsDefault.default));
parcelHelpers.export(exports, "LucideFolderSync", ()=>(0, _folderSyncJsDefault.default));
parcelHelpers.export(exports, "FolderTree", ()=>(0, _folderTreeJsDefault.default));
parcelHelpers.export(exports, "FolderTreeIcon", ()=>(0, _folderTreeJsDefault.default));
parcelHelpers.export(exports, "LucideFolderTree", ()=>(0, _folderTreeJsDefault.default));
parcelHelpers.export(exports, "FolderUp", ()=>(0, _folderUpJsDefault.default));
parcelHelpers.export(exports, "FolderUpIcon", ()=>(0, _folderUpJsDefault.default));
parcelHelpers.export(exports, "LucideFolderUp", ()=>(0, _folderUpJsDefault.default));
parcelHelpers.export(exports, "FolderX", ()=>(0, _folderXJsDefault.default));
parcelHelpers.export(exports, "FolderXIcon", ()=>(0, _folderXJsDefault.default));
parcelHelpers.export(exports, "LucideFolderX", ()=>(0, _folderXJsDefault.default));
parcelHelpers.export(exports, "Folder", ()=>(0, _folderJsDefault.default));
parcelHelpers.export(exports, "FolderIcon", ()=>(0, _folderJsDefault.default));
parcelHelpers.export(exports, "LucideFolder", ()=>(0, _folderJsDefault.default));
parcelHelpers.export(exports, "Folders", ()=>(0, _foldersJsDefault.default));
parcelHelpers.export(exports, "FoldersIcon", ()=>(0, _foldersJsDefault.default));
parcelHelpers.export(exports, "LucideFolders", ()=>(0, _foldersJsDefault.default));
parcelHelpers.export(exports, "Footprints", ()=>(0, _footprintsJsDefault.default));
parcelHelpers.export(exports, "FootprintsIcon", ()=>(0, _footprintsJsDefault.default));
parcelHelpers.export(exports, "LucideFootprints", ()=>(0, _footprintsJsDefault.default));
parcelHelpers.export(exports, "Forklift", ()=>(0, _forkliftJsDefault.default));
parcelHelpers.export(exports, "ForkliftIcon", ()=>(0, _forkliftJsDefault.default));
parcelHelpers.export(exports, "LucideForklift", ()=>(0, _forkliftJsDefault.default));
parcelHelpers.export(exports, "Forward", ()=>(0, _forwardJsDefault.default));
parcelHelpers.export(exports, "ForwardIcon", ()=>(0, _forwardJsDefault.default));
parcelHelpers.export(exports, "LucideForward", ()=>(0, _forwardJsDefault.default));
parcelHelpers.export(exports, "Frame", ()=>(0, _frameJsDefault.default));
parcelHelpers.export(exports, "FrameIcon", ()=>(0, _frameJsDefault.default));
parcelHelpers.export(exports, "LucideFrame", ()=>(0, _frameJsDefault.default));
parcelHelpers.export(exports, "Framer", ()=>(0, _framerJsDefault.default));
parcelHelpers.export(exports, "FramerIcon", ()=>(0, _framerJsDefault.default));
parcelHelpers.export(exports, "LucideFramer", ()=>(0, _framerJsDefault.default));
parcelHelpers.export(exports, "Frown", ()=>(0, _frownJsDefault.default));
parcelHelpers.export(exports, "FrownIcon", ()=>(0, _frownJsDefault.default));
parcelHelpers.export(exports, "LucideFrown", ()=>(0, _frownJsDefault.default));
parcelHelpers.export(exports, "Fuel", ()=>(0, _fuelJsDefault.default));
parcelHelpers.export(exports, "FuelIcon", ()=>(0, _fuelJsDefault.default));
parcelHelpers.export(exports, "LucideFuel", ()=>(0, _fuelJsDefault.default));
parcelHelpers.export(exports, "Fullscreen", ()=>(0, _fullscreenJsDefault.default));
parcelHelpers.export(exports, "FullscreenIcon", ()=>(0, _fullscreenJsDefault.default));
parcelHelpers.export(exports, "LucideFullscreen", ()=>(0, _fullscreenJsDefault.default));
parcelHelpers.export(exports, "FunnelPlus", ()=>(0, _funnelPlusJsDefault.default));
parcelHelpers.export(exports, "FunnelPlusIcon", ()=>(0, _funnelPlusJsDefault.default));
parcelHelpers.export(exports, "LucideFunnelPlus", ()=>(0, _funnelPlusJsDefault.default));
parcelHelpers.export(exports, "GalleryHorizontalEnd", ()=>(0, _galleryHorizontalEndJsDefault.default));
parcelHelpers.export(exports, "GalleryHorizontalEndIcon", ()=>(0, _galleryHorizontalEndJsDefault.default));
parcelHelpers.export(exports, "LucideGalleryHorizontalEnd", ()=>(0, _galleryHorizontalEndJsDefault.default));
parcelHelpers.export(exports, "GalleryHorizontal", ()=>(0, _galleryHorizontalJsDefault.default));
parcelHelpers.export(exports, "GalleryHorizontalIcon", ()=>(0, _galleryHorizontalJsDefault.default));
parcelHelpers.export(exports, "LucideGalleryHorizontal", ()=>(0, _galleryHorizontalJsDefault.default));
parcelHelpers.export(exports, "GalleryThumbnails", ()=>(0, _galleryThumbnailsJsDefault.default));
parcelHelpers.export(exports, "GalleryThumbnailsIcon", ()=>(0, _galleryThumbnailsJsDefault.default));
parcelHelpers.export(exports, "LucideGalleryThumbnails", ()=>(0, _galleryThumbnailsJsDefault.default));
parcelHelpers.export(exports, "GalleryVerticalEnd", ()=>(0, _galleryVerticalEndJsDefault.default));
parcelHelpers.export(exports, "GalleryVerticalEndIcon", ()=>(0, _galleryVerticalEndJsDefault.default));
parcelHelpers.export(exports, "LucideGalleryVerticalEnd", ()=>(0, _galleryVerticalEndJsDefault.default));
parcelHelpers.export(exports, "GalleryVertical", ()=>(0, _galleryVerticalJsDefault.default));
parcelHelpers.export(exports, "GalleryVerticalIcon", ()=>(0, _galleryVerticalJsDefault.default));
parcelHelpers.export(exports, "LucideGalleryVertical", ()=>(0, _galleryVerticalJsDefault.default));
parcelHelpers.export(exports, "Gamepad2", ()=>(0, _gamepad2JsDefault.default));
parcelHelpers.export(exports, "Gamepad2Icon", ()=>(0, _gamepad2JsDefault.default));
parcelHelpers.export(exports, "LucideGamepad2", ()=>(0, _gamepad2JsDefault.default));
parcelHelpers.export(exports, "Gamepad", ()=>(0, _gamepadJsDefault.default));
parcelHelpers.export(exports, "GamepadIcon", ()=>(0, _gamepadJsDefault.default));
parcelHelpers.export(exports, "LucideGamepad", ()=>(0, _gamepadJsDefault.default));
parcelHelpers.export(exports, "Gauge", ()=>(0, _gaugeJsDefault.default));
parcelHelpers.export(exports, "GaugeIcon", ()=>(0, _gaugeJsDefault.default));
parcelHelpers.export(exports, "LucideGauge", ()=>(0, _gaugeJsDefault.default));
parcelHelpers.export(exports, "Gavel", ()=>(0, _gavelJsDefault.default));
parcelHelpers.export(exports, "GavelIcon", ()=>(0, _gavelJsDefault.default));
parcelHelpers.export(exports, "LucideGavel", ()=>(0, _gavelJsDefault.default));
parcelHelpers.export(exports, "Gem", ()=>(0, _gemJsDefault.default));
parcelHelpers.export(exports, "GemIcon", ()=>(0, _gemJsDefault.default));
parcelHelpers.export(exports, "LucideGem", ()=>(0, _gemJsDefault.default));
parcelHelpers.export(exports, "GeorgianLari", ()=>(0, _georgianLariJsDefault.default));
parcelHelpers.export(exports, "GeorgianLariIcon", ()=>(0, _georgianLariJsDefault.default));
parcelHelpers.export(exports, "LucideGeorgianLari", ()=>(0, _georgianLariJsDefault.default));
parcelHelpers.export(exports, "Ghost", ()=>(0, _ghostJsDefault.default));
parcelHelpers.export(exports, "GhostIcon", ()=>(0, _ghostJsDefault.default));
parcelHelpers.export(exports, "LucideGhost", ()=>(0, _ghostJsDefault.default));
parcelHelpers.export(exports, "Gift", ()=>(0, _giftJsDefault.default));
parcelHelpers.export(exports, "GiftIcon", ()=>(0, _giftJsDefault.default));
parcelHelpers.export(exports, "LucideGift", ()=>(0, _giftJsDefault.default));
parcelHelpers.export(exports, "GitBranchPlus", ()=>(0, _gitBranchPlusJsDefault.default));
parcelHelpers.export(exports, "GitBranchPlusIcon", ()=>(0, _gitBranchPlusJsDefault.default));
parcelHelpers.export(exports, "LucideGitBranchPlus", ()=>(0, _gitBranchPlusJsDefault.default));
parcelHelpers.export(exports, "GitBranch", ()=>(0, _gitBranchJsDefault.default));
parcelHelpers.export(exports, "GitBranchIcon", ()=>(0, _gitBranchJsDefault.default));
parcelHelpers.export(exports, "LucideGitBranch", ()=>(0, _gitBranchJsDefault.default));
parcelHelpers.export(exports, "GitCommitVertical", ()=>(0, _gitCommitVerticalJsDefault.default));
parcelHelpers.export(exports, "GitCommitVerticalIcon", ()=>(0, _gitCommitVerticalJsDefault.default));
parcelHelpers.export(exports, "LucideGitCommitVertical", ()=>(0, _gitCommitVerticalJsDefault.default));
parcelHelpers.export(exports, "GitCompareArrows", ()=>(0, _gitCompareArrowsJsDefault.default));
parcelHelpers.export(exports, "GitCompareArrowsIcon", ()=>(0, _gitCompareArrowsJsDefault.default));
parcelHelpers.export(exports, "LucideGitCompareArrows", ()=>(0, _gitCompareArrowsJsDefault.default));
parcelHelpers.export(exports, "GitCompare", ()=>(0, _gitCompareJsDefault.default));
parcelHelpers.export(exports, "GitCompareIcon", ()=>(0, _gitCompareJsDefault.default));
parcelHelpers.export(exports, "LucideGitCompare", ()=>(0, _gitCompareJsDefault.default));
parcelHelpers.export(exports, "GitFork", ()=>(0, _gitForkJsDefault.default));
parcelHelpers.export(exports, "GitForkIcon", ()=>(0, _gitForkJsDefault.default));
parcelHelpers.export(exports, "LucideGitFork", ()=>(0, _gitForkJsDefault.default));
parcelHelpers.export(exports, "GitGraph", ()=>(0, _gitGraphJsDefault.default));
parcelHelpers.export(exports, "GitGraphIcon", ()=>(0, _gitGraphJsDefault.default));
parcelHelpers.export(exports, "LucideGitGraph", ()=>(0, _gitGraphJsDefault.default));
parcelHelpers.export(exports, "GitMerge", ()=>(0, _gitMergeJsDefault.default));
parcelHelpers.export(exports, "GitMergeIcon", ()=>(0, _gitMergeJsDefault.default));
parcelHelpers.export(exports, "LucideGitMerge", ()=>(0, _gitMergeJsDefault.default));
parcelHelpers.export(exports, "GitPullRequestArrow", ()=>(0, _gitPullRequestArrowJsDefault.default));
parcelHelpers.export(exports, "GitPullRequestArrowIcon", ()=>(0, _gitPullRequestArrowJsDefault.default));
parcelHelpers.export(exports, "LucideGitPullRequestArrow", ()=>(0, _gitPullRequestArrowJsDefault.default));
parcelHelpers.export(exports, "GitPullRequestClosed", ()=>(0, _gitPullRequestClosedJsDefault.default));
parcelHelpers.export(exports, "GitPullRequestClosedIcon", ()=>(0, _gitPullRequestClosedJsDefault.default));
parcelHelpers.export(exports, "LucideGitPullRequestClosed", ()=>(0, _gitPullRequestClosedJsDefault.default));
parcelHelpers.export(exports, "GitPullRequestCreateArrow", ()=>(0, _gitPullRequestCreateArrowJsDefault.default));
parcelHelpers.export(exports, "GitPullRequestCreateArrowIcon", ()=>(0, _gitPullRequestCreateArrowJsDefault.default));
parcelHelpers.export(exports, "LucideGitPullRequestCreateArrow", ()=>(0, _gitPullRequestCreateArrowJsDefault.default));
parcelHelpers.export(exports, "GitPullRequestCreate", ()=>(0, _gitPullRequestCreateJsDefault.default));
parcelHelpers.export(exports, "GitPullRequestCreateIcon", ()=>(0, _gitPullRequestCreateJsDefault.default));
parcelHelpers.export(exports, "LucideGitPullRequestCreate", ()=>(0, _gitPullRequestCreateJsDefault.default));
parcelHelpers.export(exports, "GitPullRequestDraft", ()=>(0, _gitPullRequestDraftJsDefault.default));
parcelHelpers.export(exports, "GitPullRequestDraftIcon", ()=>(0, _gitPullRequestDraftJsDefault.default));
parcelHelpers.export(exports, "LucideGitPullRequestDraft", ()=>(0, _gitPullRequestDraftJsDefault.default));
parcelHelpers.export(exports, "GitPullRequest", ()=>(0, _gitPullRequestJsDefault.default));
parcelHelpers.export(exports, "GitPullRequestIcon", ()=>(0, _gitPullRequestJsDefault.default));
parcelHelpers.export(exports, "LucideGitPullRequest", ()=>(0, _gitPullRequestJsDefault.default));
parcelHelpers.export(exports, "Github", ()=>(0, _githubJsDefault.default));
parcelHelpers.export(exports, "GithubIcon", ()=>(0, _githubJsDefault.default));
parcelHelpers.export(exports, "LucideGithub", ()=>(0, _githubJsDefault.default));
parcelHelpers.export(exports, "GlassWater", ()=>(0, _glassWaterJsDefault.default));
parcelHelpers.export(exports, "GlassWaterIcon", ()=>(0, _glassWaterJsDefault.default));
parcelHelpers.export(exports, "LucideGlassWater", ()=>(0, _glassWaterJsDefault.default));
parcelHelpers.export(exports, "Gitlab", ()=>(0, _gitlabJsDefault.default));
parcelHelpers.export(exports, "GitlabIcon", ()=>(0, _gitlabJsDefault.default));
parcelHelpers.export(exports, "LucideGitlab", ()=>(0, _gitlabJsDefault.default));
parcelHelpers.export(exports, "Glasses", ()=>(0, _glassesJsDefault.default));
parcelHelpers.export(exports, "GlassesIcon", ()=>(0, _glassesJsDefault.default));
parcelHelpers.export(exports, "LucideGlasses", ()=>(0, _glassesJsDefault.default));
parcelHelpers.export(exports, "GlobeLock", ()=>(0, _globeLockJsDefault.default));
parcelHelpers.export(exports, "GlobeLockIcon", ()=>(0, _globeLockJsDefault.default));
parcelHelpers.export(exports, "LucideGlobeLock", ()=>(0, _globeLockJsDefault.default));
parcelHelpers.export(exports, "Globe", ()=>(0, _globeJsDefault.default));
parcelHelpers.export(exports, "GlobeIcon", ()=>(0, _globeJsDefault.default));
parcelHelpers.export(exports, "LucideGlobe", ()=>(0, _globeJsDefault.default));
parcelHelpers.export(exports, "Goal", ()=>(0, _goalJsDefault.default));
parcelHelpers.export(exports, "GoalIcon", ()=>(0, _goalJsDefault.default));
parcelHelpers.export(exports, "LucideGoal", ()=>(0, _goalJsDefault.default));
parcelHelpers.export(exports, "Gpu", ()=>(0, _gpuJsDefault.default));
parcelHelpers.export(exports, "GpuIcon", ()=>(0, _gpuJsDefault.default));
parcelHelpers.export(exports, "LucideGpu", ()=>(0, _gpuJsDefault.default));
parcelHelpers.export(exports, "GraduationCap", ()=>(0, _graduationCapJsDefault.default));
parcelHelpers.export(exports, "GraduationCapIcon", ()=>(0, _graduationCapJsDefault.default));
parcelHelpers.export(exports, "LucideGraduationCap", ()=>(0, _graduationCapJsDefault.default));
parcelHelpers.export(exports, "Grape", ()=>(0, _grapeJsDefault.default));
parcelHelpers.export(exports, "GrapeIcon", ()=>(0, _grapeJsDefault.default));
parcelHelpers.export(exports, "LucideGrape", ()=>(0, _grapeJsDefault.default));
parcelHelpers.export(exports, "Grid3x2", ()=>(0, _grid3X2JsDefault.default));
parcelHelpers.export(exports, "Grid3x2Icon", ()=>(0, _grid3X2JsDefault.default));
parcelHelpers.export(exports, "LucideGrid3x2", ()=>(0, _grid3X2JsDefault.default));
parcelHelpers.export(exports, "GripHorizontal", ()=>(0, _gripHorizontalJsDefault.default));
parcelHelpers.export(exports, "GripHorizontalIcon", ()=>(0, _gripHorizontalJsDefault.default));
parcelHelpers.export(exports, "LucideGripHorizontal", ()=>(0, _gripHorizontalJsDefault.default));
parcelHelpers.export(exports, "GripVertical", ()=>(0, _gripVerticalJsDefault.default));
parcelHelpers.export(exports, "GripVerticalIcon", ()=>(0, _gripVerticalJsDefault.default));
parcelHelpers.export(exports, "LucideGripVertical", ()=>(0, _gripVerticalJsDefault.default));
parcelHelpers.export(exports, "Grip", ()=>(0, _gripJsDefault.default));
parcelHelpers.export(exports, "GripIcon", ()=>(0, _gripJsDefault.default));
parcelHelpers.export(exports, "LucideGrip", ()=>(0, _gripJsDefault.default));
parcelHelpers.export(exports, "Guitar", ()=>(0, _guitarJsDefault.default));
parcelHelpers.export(exports, "GuitarIcon", ()=>(0, _guitarJsDefault.default));
parcelHelpers.export(exports, "LucideGuitar", ()=>(0, _guitarJsDefault.default));
parcelHelpers.export(exports, "Group", ()=>(0, _groupJsDefault.default));
parcelHelpers.export(exports, "GroupIcon", ()=>(0, _groupJsDefault.default));
parcelHelpers.export(exports, "LucideGroup", ()=>(0, _groupJsDefault.default));
parcelHelpers.export(exports, "Ham", ()=>(0, _hamJsDefault.default));
parcelHelpers.export(exports, "HamIcon", ()=>(0, _hamJsDefault.default));
parcelHelpers.export(exports, "LucideHam", ()=>(0, _hamJsDefault.default));
parcelHelpers.export(exports, "Hamburger", ()=>(0, _hamburgerJsDefault.default));
parcelHelpers.export(exports, "HamburgerIcon", ()=>(0, _hamburgerJsDefault.default));
parcelHelpers.export(exports, "LucideHamburger", ()=>(0, _hamburgerJsDefault.default));
parcelHelpers.export(exports, "HandCoins", ()=>(0, _handCoinsJsDefault.default));
parcelHelpers.export(exports, "HandCoinsIcon", ()=>(0, _handCoinsJsDefault.default));
parcelHelpers.export(exports, "LucideHandCoins", ()=>(0, _handCoinsJsDefault.default));
parcelHelpers.export(exports, "Hammer", ()=>(0, _hammerJsDefault.default));
parcelHelpers.export(exports, "HammerIcon", ()=>(0, _hammerJsDefault.default));
parcelHelpers.export(exports, "LucideHammer", ()=>(0, _hammerJsDefault.default));
parcelHelpers.export(exports, "HandFist", ()=>(0, _handFistJsDefault.default));
parcelHelpers.export(exports, "HandFistIcon", ()=>(0, _handFistJsDefault.default));
parcelHelpers.export(exports, "LucideHandFist", ()=>(0, _handFistJsDefault.default));
parcelHelpers.export(exports, "HandHeart", ()=>(0, _handHeartJsDefault.default));
parcelHelpers.export(exports, "HandHeartIcon", ()=>(0, _handHeartJsDefault.default));
parcelHelpers.export(exports, "LucideHandHeart", ()=>(0, _handHeartJsDefault.default));
parcelHelpers.export(exports, "HandMetal", ()=>(0, _handMetalJsDefault.default));
parcelHelpers.export(exports, "HandMetalIcon", ()=>(0, _handMetalJsDefault.default));
parcelHelpers.export(exports, "LucideHandMetal", ()=>(0, _handMetalJsDefault.default));
parcelHelpers.export(exports, "HandPlatter", ()=>(0, _handPlatterJsDefault.default));
parcelHelpers.export(exports, "HandPlatterIcon", ()=>(0, _handPlatterJsDefault.default));
parcelHelpers.export(exports, "LucideHandPlatter", ()=>(0, _handPlatterJsDefault.default));
parcelHelpers.export(exports, "Hand", ()=>(0, _handJsDefault.default));
parcelHelpers.export(exports, "HandIcon", ()=>(0, _handJsDefault.default));
parcelHelpers.export(exports, "LucideHand", ()=>(0, _handJsDefault.default));
parcelHelpers.export(exports, "Handbag", ()=>(0, _handbagJsDefault.default));
parcelHelpers.export(exports, "HandbagIcon", ()=>(0, _handbagJsDefault.default));
parcelHelpers.export(exports, "LucideHandbag", ()=>(0, _handbagJsDefault.default));
parcelHelpers.export(exports, "Handshake", ()=>(0, _handshakeJsDefault.default));
parcelHelpers.export(exports, "HandshakeIcon", ()=>(0, _handshakeJsDefault.default));
parcelHelpers.export(exports, "LucideHandshake", ()=>(0, _handshakeJsDefault.default));
parcelHelpers.export(exports, "HardDriveDownload", ()=>(0, _hardDriveDownloadJsDefault.default));
parcelHelpers.export(exports, "HardDriveDownloadIcon", ()=>(0, _hardDriveDownloadJsDefault.default));
parcelHelpers.export(exports, "LucideHardDriveDownload", ()=>(0, _hardDriveDownloadJsDefault.default));
parcelHelpers.export(exports, "HardDriveUpload", ()=>(0, _hardDriveUploadJsDefault.default));
parcelHelpers.export(exports, "HardDriveUploadIcon", ()=>(0, _hardDriveUploadJsDefault.default));
parcelHelpers.export(exports, "LucideHardDriveUpload", ()=>(0, _hardDriveUploadJsDefault.default));
parcelHelpers.export(exports, "HardDrive", ()=>(0, _hardDriveJsDefault.default));
parcelHelpers.export(exports, "HardDriveIcon", ()=>(0, _hardDriveJsDefault.default));
parcelHelpers.export(exports, "LucideHardDrive", ()=>(0, _hardDriveJsDefault.default));
parcelHelpers.export(exports, "HardHat", ()=>(0, _hardHatJsDefault.default));
parcelHelpers.export(exports, "HardHatIcon", ()=>(0, _hardHatJsDefault.default));
parcelHelpers.export(exports, "LucideHardHat", ()=>(0, _hardHatJsDefault.default));
parcelHelpers.export(exports, "Hash", ()=>(0, _hashJsDefault.default));
parcelHelpers.export(exports, "HashIcon", ()=>(0, _hashJsDefault.default));
parcelHelpers.export(exports, "LucideHash", ()=>(0, _hashJsDefault.default));
parcelHelpers.export(exports, "HatGlasses", ()=>(0, _hatGlassesJsDefault.default));
parcelHelpers.export(exports, "HatGlassesIcon", ()=>(0, _hatGlassesJsDefault.default));
parcelHelpers.export(exports, "LucideHatGlasses", ()=>(0, _hatGlassesJsDefault.default));
parcelHelpers.export(exports, "Haze", ()=>(0, _hazeJsDefault.default));
parcelHelpers.export(exports, "HazeIcon", ()=>(0, _hazeJsDefault.default));
parcelHelpers.export(exports, "LucideHaze", ()=>(0, _hazeJsDefault.default));
parcelHelpers.export(exports, "Heading1", ()=>(0, _heading1JsDefault.default));
parcelHelpers.export(exports, "Heading1Icon", ()=>(0, _heading1JsDefault.default));
parcelHelpers.export(exports, "LucideHeading1", ()=>(0, _heading1JsDefault.default));
parcelHelpers.export(exports, "HdmiPort", ()=>(0, _hdmiPortJsDefault.default));
parcelHelpers.export(exports, "HdmiPortIcon", ()=>(0, _hdmiPortJsDefault.default));
parcelHelpers.export(exports, "LucideHdmiPort", ()=>(0, _hdmiPortJsDefault.default));
parcelHelpers.export(exports, "Heading2", ()=>(0, _heading2JsDefault.default));
parcelHelpers.export(exports, "Heading2Icon", ()=>(0, _heading2JsDefault.default));
parcelHelpers.export(exports, "LucideHeading2", ()=>(0, _heading2JsDefault.default));
parcelHelpers.export(exports, "Heading3", ()=>(0, _heading3JsDefault.default));
parcelHelpers.export(exports, "Heading3Icon", ()=>(0, _heading3JsDefault.default));
parcelHelpers.export(exports, "LucideHeading3", ()=>(0, _heading3JsDefault.default));
parcelHelpers.export(exports, "Heading5", ()=>(0, _heading5JsDefault.default));
parcelHelpers.export(exports, "Heading5Icon", ()=>(0, _heading5JsDefault.default));
parcelHelpers.export(exports, "LucideHeading5", ()=>(0, _heading5JsDefault.default));
parcelHelpers.export(exports, "Heading4", ()=>(0, _heading4JsDefault.default));
parcelHelpers.export(exports, "Heading4Icon", ()=>(0, _heading4JsDefault.default));
parcelHelpers.export(exports, "LucideHeading4", ()=>(0, _heading4JsDefault.default));
parcelHelpers.export(exports, "Heading6", ()=>(0, _heading6JsDefault.default));
parcelHelpers.export(exports, "Heading6Icon", ()=>(0, _heading6JsDefault.default));
parcelHelpers.export(exports, "LucideHeading6", ()=>(0, _heading6JsDefault.default));
parcelHelpers.export(exports, "Heading", ()=>(0, _headingJsDefault.default));
parcelHelpers.export(exports, "HeadingIcon", ()=>(0, _headingJsDefault.default));
parcelHelpers.export(exports, "LucideHeading", ()=>(0, _headingJsDefault.default));
parcelHelpers.export(exports, "HeadphoneOff", ()=>(0, _headphoneOffJsDefault.default));
parcelHelpers.export(exports, "HeadphoneOffIcon", ()=>(0, _headphoneOffJsDefault.default));
parcelHelpers.export(exports, "LucideHeadphoneOff", ()=>(0, _headphoneOffJsDefault.default));
parcelHelpers.export(exports, "Headphones", ()=>(0, _headphonesJsDefault.default));
parcelHelpers.export(exports, "HeadphonesIcon", ()=>(0, _headphonesJsDefault.default));
parcelHelpers.export(exports, "LucideHeadphones", ()=>(0, _headphonesJsDefault.default));
parcelHelpers.export(exports, "Headset", ()=>(0, _headsetJsDefault.default));
parcelHelpers.export(exports, "HeadsetIcon", ()=>(0, _headsetJsDefault.default));
parcelHelpers.export(exports, "LucideHeadset", ()=>(0, _headsetJsDefault.default));
parcelHelpers.export(exports, "HeartCrack", ()=>(0, _heartCrackJsDefault.default));
parcelHelpers.export(exports, "HeartCrackIcon", ()=>(0, _heartCrackJsDefault.default));
parcelHelpers.export(exports, "LucideHeartCrack", ()=>(0, _heartCrackJsDefault.default));
parcelHelpers.export(exports, "HeartHandshake", ()=>(0, _heartHandshakeJsDefault.default));
parcelHelpers.export(exports, "HeartHandshakeIcon", ()=>(0, _heartHandshakeJsDefault.default));
parcelHelpers.export(exports, "LucideHeartHandshake", ()=>(0, _heartHandshakeJsDefault.default));
parcelHelpers.export(exports, "HeartMinus", ()=>(0, _heartMinusJsDefault.default));
parcelHelpers.export(exports, "HeartMinusIcon", ()=>(0, _heartMinusJsDefault.default));
parcelHelpers.export(exports, "LucideHeartMinus", ()=>(0, _heartMinusJsDefault.default));
parcelHelpers.export(exports, "HeartOff", ()=>(0, _heartOffJsDefault.default));
parcelHelpers.export(exports, "HeartOffIcon", ()=>(0, _heartOffJsDefault.default));
parcelHelpers.export(exports, "LucideHeartOff", ()=>(0, _heartOffJsDefault.default));
parcelHelpers.export(exports, "HeartPlus", ()=>(0, _heartPlusJsDefault.default));
parcelHelpers.export(exports, "HeartPlusIcon", ()=>(0, _heartPlusJsDefault.default));
parcelHelpers.export(exports, "LucideHeartPlus", ()=>(0, _heartPlusJsDefault.default));
parcelHelpers.export(exports, "HeartPulse", ()=>(0, _heartPulseJsDefault.default));
parcelHelpers.export(exports, "HeartPulseIcon", ()=>(0, _heartPulseJsDefault.default));
parcelHelpers.export(exports, "LucideHeartPulse", ()=>(0, _heartPulseJsDefault.default));
parcelHelpers.export(exports, "Heart", ()=>(0, _heartJsDefault.default));
parcelHelpers.export(exports, "HeartIcon", ()=>(0, _heartJsDefault.default));
parcelHelpers.export(exports, "LucideHeart", ()=>(0, _heartJsDefault.default));
parcelHelpers.export(exports, "Heater", ()=>(0, _heaterJsDefault.default));
parcelHelpers.export(exports, "HeaterIcon", ()=>(0, _heaterJsDefault.default));
parcelHelpers.export(exports, "LucideHeater", ()=>(0, _heaterJsDefault.default));
parcelHelpers.export(exports, "Hexagon", ()=>(0, _hexagonJsDefault.default));
parcelHelpers.export(exports, "HexagonIcon", ()=>(0, _hexagonJsDefault.default));
parcelHelpers.export(exports, "LucideHexagon", ()=>(0, _hexagonJsDefault.default));
parcelHelpers.export(exports, "Highlighter", ()=>(0, _highlighterJsDefault.default));
parcelHelpers.export(exports, "HighlighterIcon", ()=>(0, _highlighterJsDefault.default));
parcelHelpers.export(exports, "LucideHighlighter", ()=>(0, _highlighterJsDefault.default));
parcelHelpers.export(exports, "History", ()=>(0, _historyJsDefault.default));
parcelHelpers.export(exports, "HistoryIcon", ()=>(0, _historyJsDefault.default));
parcelHelpers.export(exports, "LucideHistory", ()=>(0, _historyJsDefault.default));
parcelHelpers.export(exports, "HopOff", ()=>(0, _hopOffJsDefault.default));
parcelHelpers.export(exports, "HopOffIcon", ()=>(0, _hopOffJsDefault.default));
parcelHelpers.export(exports, "LucideHopOff", ()=>(0, _hopOffJsDefault.default));
parcelHelpers.export(exports, "Hop", ()=>(0, _hopJsDefault.default));
parcelHelpers.export(exports, "HopIcon", ()=>(0, _hopJsDefault.default));
parcelHelpers.export(exports, "LucideHop", ()=>(0, _hopJsDefault.default));
parcelHelpers.export(exports, "Hotel", ()=>(0, _hotelJsDefault.default));
parcelHelpers.export(exports, "HotelIcon", ()=>(0, _hotelJsDefault.default));
parcelHelpers.export(exports, "LucideHotel", ()=>(0, _hotelJsDefault.default));
parcelHelpers.export(exports, "Hospital", ()=>(0, _hospitalJsDefault.default));
parcelHelpers.export(exports, "HospitalIcon", ()=>(0, _hospitalJsDefault.default));
parcelHelpers.export(exports, "LucideHospital", ()=>(0, _hospitalJsDefault.default));
parcelHelpers.export(exports, "Hourglass", ()=>(0, _hourglassJsDefault.default));
parcelHelpers.export(exports, "HourglassIcon", ()=>(0, _hourglassJsDefault.default));
parcelHelpers.export(exports, "LucideHourglass", ()=>(0, _hourglassJsDefault.default));
parcelHelpers.export(exports, "HouseHeart", ()=>(0, _houseHeartJsDefault.default));
parcelHelpers.export(exports, "HouseHeartIcon", ()=>(0, _houseHeartJsDefault.default));
parcelHelpers.export(exports, "LucideHouseHeart", ()=>(0, _houseHeartJsDefault.default));
parcelHelpers.export(exports, "HousePlug", ()=>(0, _housePlugJsDefault.default));
parcelHelpers.export(exports, "HousePlugIcon", ()=>(0, _housePlugJsDefault.default));
parcelHelpers.export(exports, "LucideHousePlug", ()=>(0, _housePlugJsDefault.default));
parcelHelpers.export(exports, "HousePlus", ()=>(0, _housePlusJsDefault.default));
parcelHelpers.export(exports, "HousePlusIcon", ()=>(0, _housePlusJsDefault.default));
parcelHelpers.export(exports, "LucideHousePlus", ()=>(0, _housePlusJsDefault.default));
parcelHelpers.export(exports, "HouseWifi", ()=>(0, _houseWifiJsDefault.default));
parcelHelpers.export(exports, "HouseWifiIcon", ()=>(0, _houseWifiJsDefault.default));
parcelHelpers.export(exports, "LucideHouseWifi", ()=>(0, _houseWifiJsDefault.default));
parcelHelpers.export(exports, "IdCardLanyard", ()=>(0, _idCardLanyardJsDefault.default));
parcelHelpers.export(exports, "IdCardLanyardIcon", ()=>(0, _idCardLanyardJsDefault.default));
parcelHelpers.export(exports, "LucideIdCardLanyard", ()=>(0, _idCardLanyardJsDefault.default));
parcelHelpers.export(exports, "IdCard", ()=>(0, _idCardJsDefault.default));
parcelHelpers.export(exports, "IdCardIcon", ()=>(0, _idCardJsDefault.default));
parcelHelpers.export(exports, "LucideIdCard", ()=>(0, _idCardJsDefault.default));
parcelHelpers.export(exports, "ImageDown", ()=>(0, _imageDownJsDefault.default));
parcelHelpers.export(exports, "ImageDownIcon", ()=>(0, _imageDownJsDefault.default));
parcelHelpers.export(exports, "LucideImageDown", ()=>(0, _imageDownJsDefault.default));
parcelHelpers.export(exports, "ImageMinus", ()=>(0, _imageMinusJsDefault.default));
parcelHelpers.export(exports, "ImageMinusIcon", ()=>(0, _imageMinusJsDefault.default));
parcelHelpers.export(exports, "LucideImageMinus", ()=>(0, _imageMinusJsDefault.default));
parcelHelpers.export(exports, "ImageOff", ()=>(0, _imageOffJsDefault.default));
parcelHelpers.export(exports, "ImageOffIcon", ()=>(0, _imageOffJsDefault.default));
parcelHelpers.export(exports, "LucideImageOff", ()=>(0, _imageOffJsDefault.default));
parcelHelpers.export(exports, "ImagePlay", ()=>(0, _imagePlayJsDefault.default));
parcelHelpers.export(exports, "ImagePlayIcon", ()=>(0, _imagePlayJsDefault.default));
parcelHelpers.export(exports, "LucideImagePlay", ()=>(0, _imagePlayJsDefault.default));
parcelHelpers.export(exports, "ImagePlus", ()=>(0, _imagePlusJsDefault.default));
parcelHelpers.export(exports, "ImagePlusIcon", ()=>(0, _imagePlusJsDefault.default));
parcelHelpers.export(exports, "LucideImagePlus", ()=>(0, _imagePlusJsDefault.default));
parcelHelpers.export(exports, "ImageUpscale", ()=>(0, _imageUpscaleJsDefault.default));
parcelHelpers.export(exports, "ImageUpscaleIcon", ()=>(0, _imageUpscaleJsDefault.default));
parcelHelpers.export(exports, "LucideImageUpscale", ()=>(0, _imageUpscaleJsDefault.default));
parcelHelpers.export(exports, "ImageUp", ()=>(0, _imageUpJsDefault.default));
parcelHelpers.export(exports, "ImageUpIcon", ()=>(0, _imageUpJsDefault.default));
parcelHelpers.export(exports, "LucideImageUp", ()=>(0, _imageUpJsDefault.default));
parcelHelpers.export(exports, "Image", ()=>(0, _imageJsDefault.default));
parcelHelpers.export(exports, "ImageIcon", ()=>(0, _imageJsDefault.default));
parcelHelpers.export(exports, "LucideImage", ()=>(0, _imageJsDefault.default));
parcelHelpers.export(exports, "Images", ()=>(0, _imagesJsDefault.default));
parcelHelpers.export(exports, "ImagesIcon", ()=>(0, _imagesJsDefault.default));
parcelHelpers.export(exports, "LucideImages", ()=>(0, _imagesJsDefault.default));
parcelHelpers.export(exports, "Import", ()=>(0, _importJsDefault.default));
parcelHelpers.export(exports, "ImportIcon", ()=>(0, _importJsDefault.default));
parcelHelpers.export(exports, "LucideImport", ()=>(0, _importJsDefault.default));
parcelHelpers.export(exports, "Inbox", ()=>(0, _inboxJsDefault.default));
parcelHelpers.export(exports, "InboxIcon", ()=>(0, _inboxJsDefault.default));
parcelHelpers.export(exports, "LucideInbox", ()=>(0, _inboxJsDefault.default));
parcelHelpers.export(exports, "IndianRupee", ()=>(0, _indianRupeeJsDefault.default));
parcelHelpers.export(exports, "IndianRupeeIcon", ()=>(0, _indianRupeeJsDefault.default));
parcelHelpers.export(exports, "LucideIndianRupee", ()=>(0, _indianRupeeJsDefault.default));
parcelHelpers.export(exports, "Infinity", ()=>(0, _infinityJsDefault.default));
parcelHelpers.export(exports, "InfinityIcon", ()=>(0, _infinityJsDefault.default));
parcelHelpers.export(exports, "LucideInfinity", ()=>(0, _infinityJsDefault.default));
parcelHelpers.export(exports, "Info", ()=>(0, _infoJsDefault.default));
parcelHelpers.export(exports, "InfoIcon", ()=>(0, _infoJsDefault.default));
parcelHelpers.export(exports, "LucideInfo", ()=>(0, _infoJsDefault.default));
parcelHelpers.export(exports, "InspectionPanel", ()=>(0, _inspectionPanelJsDefault.default));
parcelHelpers.export(exports, "InspectionPanelIcon", ()=>(0, _inspectionPanelJsDefault.default));
parcelHelpers.export(exports, "LucideInspectionPanel", ()=>(0, _inspectionPanelJsDefault.default));
parcelHelpers.export(exports, "Instagram", ()=>(0, _instagramJsDefault.default));
parcelHelpers.export(exports, "InstagramIcon", ()=>(0, _instagramJsDefault.default));
parcelHelpers.export(exports, "LucideInstagram", ()=>(0, _instagramJsDefault.default));
parcelHelpers.export(exports, "Italic", ()=>(0, _italicJsDefault.default));
parcelHelpers.export(exports, "ItalicIcon", ()=>(0, _italicJsDefault.default));
parcelHelpers.export(exports, "LucideItalic", ()=>(0, _italicJsDefault.default));
parcelHelpers.export(exports, "IterationCcw", ()=>(0, _iterationCcwJsDefault.default));
parcelHelpers.export(exports, "IterationCcwIcon", ()=>(0, _iterationCcwJsDefault.default));
parcelHelpers.export(exports, "LucideIterationCcw", ()=>(0, _iterationCcwJsDefault.default));
parcelHelpers.export(exports, "IterationCw", ()=>(0, _iterationCwJsDefault.default));
parcelHelpers.export(exports, "IterationCwIcon", ()=>(0, _iterationCwJsDefault.default));
parcelHelpers.export(exports, "LucideIterationCw", ()=>(0, _iterationCwJsDefault.default));
parcelHelpers.export(exports, "JapaneseYen", ()=>(0, _japaneseYenJsDefault.default));
parcelHelpers.export(exports, "JapaneseYenIcon", ()=>(0, _japaneseYenJsDefault.default));
parcelHelpers.export(exports, "LucideJapaneseYen", ()=>(0, _japaneseYenJsDefault.default));
parcelHelpers.export(exports, "Joystick", ()=>(0, _joystickJsDefault.default));
parcelHelpers.export(exports, "JoystickIcon", ()=>(0, _joystickJsDefault.default));
parcelHelpers.export(exports, "LucideJoystick", ()=>(0, _joystickJsDefault.default));
parcelHelpers.export(exports, "Kanban", ()=>(0, _kanbanJsDefault.default));
parcelHelpers.export(exports, "KanbanIcon", ()=>(0, _kanbanJsDefault.default));
parcelHelpers.export(exports, "LucideKanban", ()=>(0, _kanbanJsDefault.default));
parcelHelpers.export(exports, "Kayak", ()=>(0, _kayakJsDefault.default));
parcelHelpers.export(exports, "KayakIcon", ()=>(0, _kayakJsDefault.default));
parcelHelpers.export(exports, "LucideKayak", ()=>(0, _kayakJsDefault.default));
parcelHelpers.export(exports, "KeySquare", ()=>(0, _keySquareJsDefault.default));
parcelHelpers.export(exports, "KeySquareIcon", ()=>(0, _keySquareJsDefault.default));
parcelHelpers.export(exports, "LucideKeySquare", ()=>(0, _keySquareJsDefault.default));
parcelHelpers.export(exports, "KeyRound", ()=>(0, _keyRoundJsDefault.default));
parcelHelpers.export(exports, "KeyRoundIcon", ()=>(0, _keyRoundJsDefault.default));
parcelHelpers.export(exports, "LucideKeyRound", ()=>(0, _keyRoundJsDefault.default));
parcelHelpers.export(exports, "Key", ()=>(0, _keyJsDefault.default));
parcelHelpers.export(exports, "KeyIcon", ()=>(0, _keyJsDefault.default));
parcelHelpers.export(exports, "LucideKey", ()=>(0, _keyJsDefault.default));
parcelHelpers.export(exports, "KeyboardMusic", ()=>(0, _keyboardMusicJsDefault.default));
parcelHelpers.export(exports, "KeyboardMusicIcon", ()=>(0, _keyboardMusicJsDefault.default));
parcelHelpers.export(exports, "LucideKeyboardMusic", ()=>(0, _keyboardMusicJsDefault.default));
parcelHelpers.export(exports, "KeyboardOff", ()=>(0, _keyboardOffJsDefault.default));
parcelHelpers.export(exports, "KeyboardOffIcon", ()=>(0, _keyboardOffJsDefault.default));
parcelHelpers.export(exports, "LucideKeyboardOff", ()=>(0, _keyboardOffJsDefault.default));
parcelHelpers.export(exports, "Keyboard", ()=>(0, _keyboardJsDefault.default));
parcelHelpers.export(exports, "KeyboardIcon", ()=>(0, _keyboardJsDefault.default));
parcelHelpers.export(exports, "LucideKeyboard", ()=>(0, _keyboardJsDefault.default));
parcelHelpers.export(exports, "LampCeiling", ()=>(0, _lampCeilingJsDefault.default));
parcelHelpers.export(exports, "LampCeilingIcon", ()=>(0, _lampCeilingJsDefault.default));
parcelHelpers.export(exports, "LucideLampCeiling", ()=>(0, _lampCeilingJsDefault.default));
parcelHelpers.export(exports, "LampDesk", ()=>(0, _lampDeskJsDefault.default));
parcelHelpers.export(exports, "LampDeskIcon", ()=>(0, _lampDeskJsDefault.default));
parcelHelpers.export(exports, "LucideLampDesk", ()=>(0, _lampDeskJsDefault.default));
parcelHelpers.export(exports, "LampWallDown", ()=>(0, _lampWallDownJsDefault.default));
parcelHelpers.export(exports, "LampWallDownIcon", ()=>(0, _lampWallDownJsDefault.default));
parcelHelpers.export(exports, "LucideLampWallDown", ()=>(0, _lampWallDownJsDefault.default));
parcelHelpers.export(exports, "LampFloor", ()=>(0, _lampFloorJsDefault.default));
parcelHelpers.export(exports, "LampFloorIcon", ()=>(0, _lampFloorJsDefault.default));
parcelHelpers.export(exports, "LucideLampFloor", ()=>(0, _lampFloorJsDefault.default));
parcelHelpers.export(exports, "LampWallUp", ()=>(0, _lampWallUpJsDefault.default));
parcelHelpers.export(exports, "LampWallUpIcon", ()=>(0, _lampWallUpJsDefault.default));
parcelHelpers.export(exports, "LucideLampWallUp", ()=>(0, _lampWallUpJsDefault.default));
parcelHelpers.export(exports, "Lamp", ()=>(0, _lampJsDefault.default));
parcelHelpers.export(exports, "LampIcon", ()=>(0, _lampJsDefault.default));
parcelHelpers.export(exports, "LucideLamp", ()=>(0, _lampJsDefault.default));
parcelHelpers.export(exports, "LandPlot", ()=>(0, _landPlotJsDefault.default));
parcelHelpers.export(exports, "LandPlotIcon", ()=>(0, _landPlotJsDefault.default));
parcelHelpers.export(exports, "LucideLandPlot", ()=>(0, _landPlotJsDefault.default));
parcelHelpers.export(exports, "Landmark", ()=>(0, _landmarkJsDefault.default));
parcelHelpers.export(exports, "LandmarkIcon", ()=>(0, _landmarkJsDefault.default));
parcelHelpers.export(exports, "LucideLandmark", ()=>(0, _landmarkJsDefault.default));
parcelHelpers.export(exports, "LaptopMinimalCheck", ()=>(0, _laptopMinimalCheckJsDefault.default));
parcelHelpers.export(exports, "LaptopMinimalCheckIcon", ()=>(0, _laptopMinimalCheckJsDefault.default));
parcelHelpers.export(exports, "LucideLaptopMinimalCheck", ()=>(0, _laptopMinimalCheckJsDefault.default));
parcelHelpers.export(exports, "Languages", ()=>(0, _languagesJsDefault.default));
parcelHelpers.export(exports, "LanguagesIcon", ()=>(0, _languagesJsDefault.default));
parcelHelpers.export(exports, "LucideLanguages", ()=>(0, _languagesJsDefault.default));
parcelHelpers.export(exports, "Laptop", ()=>(0, _laptopJsDefault.default));
parcelHelpers.export(exports, "LaptopIcon", ()=>(0, _laptopJsDefault.default));
parcelHelpers.export(exports, "LucideLaptop", ()=>(0, _laptopJsDefault.default));
parcelHelpers.export(exports, "LassoSelect", ()=>(0, _lassoSelectJsDefault.default));
parcelHelpers.export(exports, "LassoSelectIcon", ()=>(0, _lassoSelectJsDefault.default));
parcelHelpers.export(exports, "LucideLassoSelect", ()=>(0, _lassoSelectJsDefault.default));
parcelHelpers.export(exports, "Lasso", ()=>(0, _lassoJsDefault.default));
parcelHelpers.export(exports, "LassoIcon", ()=>(0, _lassoJsDefault.default));
parcelHelpers.export(exports, "LucideLasso", ()=>(0, _lassoJsDefault.default));
parcelHelpers.export(exports, "Laugh", ()=>(0, _laughJsDefault.default));
parcelHelpers.export(exports, "LaughIcon", ()=>(0, _laughJsDefault.default));
parcelHelpers.export(exports, "LucideLaugh", ()=>(0, _laughJsDefault.default));
parcelHelpers.export(exports, "Layers2", ()=>(0, _layers2JsDefault.default));
parcelHelpers.export(exports, "Layers2Icon", ()=>(0, _layers2JsDefault.default));
parcelHelpers.export(exports, "LucideLayers2", ()=>(0, _layers2JsDefault.default));
parcelHelpers.export(exports, "LayoutDashboard", ()=>(0, _layoutDashboardJsDefault.default));
parcelHelpers.export(exports, "LayoutDashboardIcon", ()=>(0, _layoutDashboardJsDefault.default));
parcelHelpers.export(exports, "LucideLayoutDashboard", ()=>(0, _layoutDashboardJsDefault.default));
parcelHelpers.export(exports, "LayoutGrid", ()=>(0, _layoutGridJsDefault.default));
parcelHelpers.export(exports, "LayoutGridIcon", ()=>(0, _layoutGridJsDefault.default));
parcelHelpers.export(exports, "LucideLayoutGrid", ()=>(0, _layoutGridJsDefault.default));
parcelHelpers.export(exports, "LayoutPanelLeft", ()=>(0, _layoutPanelLeftJsDefault.default));
parcelHelpers.export(exports, "LayoutPanelLeftIcon", ()=>(0, _layoutPanelLeftJsDefault.default));
parcelHelpers.export(exports, "LucideLayoutPanelLeft", ()=>(0, _layoutPanelLeftJsDefault.default));
parcelHelpers.export(exports, "LayoutList", ()=>(0, _layoutListJsDefault.default));
parcelHelpers.export(exports, "LayoutListIcon", ()=>(0, _layoutListJsDefault.default));
parcelHelpers.export(exports, "LucideLayoutList", ()=>(0, _layoutListJsDefault.default));
parcelHelpers.export(exports, "LayoutPanelTop", ()=>(0, _layoutPanelTopJsDefault.default));
parcelHelpers.export(exports, "LayoutPanelTopIcon", ()=>(0, _layoutPanelTopJsDefault.default));
parcelHelpers.export(exports, "LucideLayoutPanelTop", ()=>(0, _layoutPanelTopJsDefault.default));
parcelHelpers.export(exports, "LayoutTemplate", ()=>(0, _layoutTemplateJsDefault.default));
parcelHelpers.export(exports, "LayoutTemplateIcon", ()=>(0, _layoutTemplateJsDefault.default));
parcelHelpers.export(exports, "LucideLayoutTemplate", ()=>(0, _layoutTemplateJsDefault.default));
parcelHelpers.export(exports, "Leaf", ()=>(0, _leafJsDefault.default));
parcelHelpers.export(exports, "LeafIcon", ()=>(0, _leafJsDefault.default));
parcelHelpers.export(exports, "LucideLeaf", ()=>(0, _leafJsDefault.default));
parcelHelpers.export(exports, "Lectern", ()=>(0, _lecternJsDefault.default));
parcelHelpers.export(exports, "LecternIcon", ()=>(0, _lecternJsDefault.default));
parcelHelpers.export(exports, "LucideLectern", ()=>(0, _lecternJsDefault.default));
parcelHelpers.export(exports, "LibraryBig", ()=>(0, _libraryBigJsDefault.default));
parcelHelpers.export(exports, "LibraryBigIcon", ()=>(0, _libraryBigJsDefault.default));
parcelHelpers.export(exports, "LucideLibraryBig", ()=>(0, _libraryBigJsDefault.default));
parcelHelpers.export(exports, "LeafyGreen", ()=>(0, _leafyGreenJsDefault.default));
parcelHelpers.export(exports, "LeafyGreenIcon", ()=>(0, _leafyGreenJsDefault.default));
parcelHelpers.export(exports, "LucideLeafyGreen", ()=>(0, _leafyGreenJsDefault.default));
parcelHelpers.export(exports, "Library", ()=>(0, _libraryJsDefault.default));
parcelHelpers.export(exports, "LibraryIcon", ()=>(0, _libraryJsDefault.default));
parcelHelpers.export(exports, "LucideLibrary", ()=>(0, _libraryJsDefault.default));
parcelHelpers.export(exports, "LifeBuoy", ()=>(0, _lifeBuoyJsDefault.default));
parcelHelpers.export(exports, "LifeBuoyIcon", ()=>(0, _lifeBuoyJsDefault.default));
parcelHelpers.export(exports, "LucideLifeBuoy", ()=>(0, _lifeBuoyJsDefault.default));
parcelHelpers.export(exports, "Ligature", ()=>(0, _ligatureJsDefault.default));
parcelHelpers.export(exports, "LigatureIcon", ()=>(0, _ligatureJsDefault.default));
parcelHelpers.export(exports, "LucideLigature", ()=>(0, _ligatureJsDefault.default));
parcelHelpers.export(exports, "LightbulbOff", ()=>(0, _lightbulbOffJsDefault.default));
parcelHelpers.export(exports, "LightbulbOffIcon", ()=>(0, _lightbulbOffJsDefault.default));
parcelHelpers.export(exports, "LucideLightbulbOff", ()=>(0, _lightbulbOffJsDefault.default));
parcelHelpers.export(exports, "Lightbulb", ()=>(0, _lightbulbJsDefault.default));
parcelHelpers.export(exports, "LightbulbIcon", ()=>(0, _lightbulbJsDefault.default));
parcelHelpers.export(exports, "LucideLightbulb", ()=>(0, _lightbulbJsDefault.default));
parcelHelpers.export(exports, "LineSquiggle", ()=>(0, _lineSquiggleJsDefault.default));
parcelHelpers.export(exports, "LineSquiggleIcon", ()=>(0, _lineSquiggleJsDefault.default));
parcelHelpers.export(exports, "LucideLineSquiggle", ()=>(0, _lineSquiggleJsDefault.default));
parcelHelpers.export(exports, "Link2Off", ()=>(0, _link2OffJsDefault.default));
parcelHelpers.export(exports, "Link2OffIcon", ()=>(0, _link2OffJsDefault.default));
parcelHelpers.export(exports, "LucideLink2Off", ()=>(0, _link2OffJsDefault.default));
parcelHelpers.export(exports, "Link2", ()=>(0, _link2JsDefault.default));
parcelHelpers.export(exports, "Link2Icon", ()=>(0, _link2JsDefault.default));
parcelHelpers.export(exports, "LucideLink2", ()=>(0, _link2JsDefault.default));
parcelHelpers.export(exports, "Linkedin", ()=>(0, _linkedinJsDefault.default));
parcelHelpers.export(exports, "LinkedinIcon", ()=>(0, _linkedinJsDefault.default));
parcelHelpers.export(exports, "LucideLinkedin", ()=>(0, _linkedinJsDefault.default));
parcelHelpers.export(exports, "ListCheck", ()=>(0, _listCheckJsDefault.default));
parcelHelpers.export(exports, "ListCheckIcon", ()=>(0, _listCheckJsDefault.default));
parcelHelpers.export(exports, "LucideListCheck", ()=>(0, _listCheckJsDefault.default));
parcelHelpers.export(exports, "Link", ()=>(0, _linkJsDefault.default));
parcelHelpers.export(exports, "LinkIcon", ()=>(0, _linkJsDefault.default));
parcelHelpers.export(exports, "LucideLink", ()=>(0, _linkJsDefault.default));
parcelHelpers.export(exports, "ListChecks", ()=>(0, _listChecksJsDefault.default));
parcelHelpers.export(exports, "ListChecksIcon", ()=>(0, _listChecksJsDefault.default));
parcelHelpers.export(exports, "LucideListChecks", ()=>(0, _listChecksJsDefault.default));
parcelHelpers.export(exports, "ListChevronsDownUp", ()=>(0, _listChevronsDownUpJsDefault.default));
parcelHelpers.export(exports, "ListChevronsDownUpIcon", ()=>(0, _listChevronsDownUpJsDefault.default));
parcelHelpers.export(exports, "LucideListChevronsDownUp", ()=>(0, _listChevronsDownUpJsDefault.default));
parcelHelpers.export(exports, "ListChevronsUpDown", ()=>(0, _listChevronsUpDownJsDefault.default));
parcelHelpers.export(exports, "ListChevronsUpDownIcon", ()=>(0, _listChevronsUpDownJsDefault.default));
parcelHelpers.export(exports, "LucideListChevronsUpDown", ()=>(0, _listChevronsUpDownJsDefault.default));
parcelHelpers.export(exports, "ListCollapse", ()=>(0, _listCollapseJsDefault.default));
parcelHelpers.export(exports, "ListCollapseIcon", ()=>(0, _listCollapseJsDefault.default));
parcelHelpers.export(exports, "LucideListCollapse", ()=>(0, _listCollapseJsDefault.default));
parcelHelpers.export(exports, "ListEnd", ()=>(0, _listEndJsDefault.default));
parcelHelpers.export(exports, "ListEndIcon", ()=>(0, _listEndJsDefault.default));
parcelHelpers.export(exports, "LucideListEnd", ()=>(0, _listEndJsDefault.default));
parcelHelpers.export(exports, "ListFilterPlus", ()=>(0, _listFilterPlusJsDefault.default));
parcelHelpers.export(exports, "ListFilterPlusIcon", ()=>(0, _listFilterPlusJsDefault.default));
parcelHelpers.export(exports, "LucideListFilterPlus", ()=>(0, _listFilterPlusJsDefault.default));
parcelHelpers.export(exports, "ListFilter", ()=>(0, _listFilterJsDefault.default));
parcelHelpers.export(exports, "ListFilterIcon", ()=>(0, _listFilterJsDefault.default));
parcelHelpers.export(exports, "LucideListFilter", ()=>(0, _listFilterJsDefault.default));
parcelHelpers.export(exports, "ListMinus", ()=>(0, _listMinusJsDefault.default));
parcelHelpers.export(exports, "ListMinusIcon", ()=>(0, _listMinusJsDefault.default));
parcelHelpers.export(exports, "LucideListMinus", ()=>(0, _listMinusJsDefault.default));
parcelHelpers.export(exports, "ListMusic", ()=>(0, _listMusicJsDefault.default));
parcelHelpers.export(exports, "ListMusicIcon", ()=>(0, _listMusicJsDefault.default));
parcelHelpers.export(exports, "LucideListMusic", ()=>(0, _listMusicJsDefault.default));
parcelHelpers.export(exports, "ListOrdered", ()=>(0, _listOrderedJsDefault.default));
parcelHelpers.export(exports, "ListOrderedIcon", ()=>(0, _listOrderedJsDefault.default));
parcelHelpers.export(exports, "LucideListOrdered", ()=>(0, _listOrderedJsDefault.default));
parcelHelpers.export(exports, "ListPlus", ()=>(0, _listPlusJsDefault.default));
parcelHelpers.export(exports, "ListPlusIcon", ()=>(0, _listPlusJsDefault.default));
parcelHelpers.export(exports, "LucideListPlus", ()=>(0, _listPlusJsDefault.default));
parcelHelpers.export(exports, "ListRestart", ()=>(0, _listRestartJsDefault.default));
parcelHelpers.export(exports, "ListRestartIcon", ()=>(0, _listRestartJsDefault.default));
parcelHelpers.export(exports, "LucideListRestart", ()=>(0, _listRestartJsDefault.default));
parcelHelpers.export(exports, "ListStart", ()=>(0, _listStartJsDefault.default));
parcelHelpers.export(exports, "ListStartIcon", ()=>(0, _listStartJsDefault.default));
parcelHelpers.export(exports, "LucideListStart", ()=>(0, _listStartJsDefault.default));
parcelHelpers.export(exports, "ListTodo", ()=>(0, _listTodoJsDefault.default));
parcelHelpers.export(exports, "ListTodoIcon", ()=>(0, _listTodoJsDefault.default));
parcelHelpers.export(exports, "LucideListTodo", ()=>(0, _listTodoJsDefault.default));
parcelHelpers.export(exports, "ListTree", ()=>(0, _listTreeJsDefault.default));
parcelHelpers.export(exports, "ListTreeIcon", ()=>(0, _listTreeJsDefault.default));
parcelHelpers.export(exports, "LucideListTree", ()=>(0, _listTreeJsDefault.default));
parcelHelpers.export(exports, "ListVideo", ()=>(0, _listVideoJsDefault.default));
parcelHelpers.export(exports, "ListVideoIcon", ()=>(0, _listVideoJsDefault.default));
parcelHelpers.export(exports, "LucideListVideo", ()=>(0, _listVideoJsDefault.default));
parcelHelpers.export(exports, "ListX", ()=>(0, _listXJsDefault.default));
parcelHelpers.export(exports, "ListXIcon", ()=>(0, _listXJsDefault.default));
parcelHelpers.export(exports, "LucideListX", ()=>(0, _listXJsDefault.default));
parcelHelpers.export(exports, "List", ()=>(0, _listJsDefault.default));
parcelHelpers.export(exports, "ListIcon", ()=>(0, _listJsDefault.default));
parcelHelpers.export(exports, "LucideList", ()=>(0, _listJsDefault.default));
parcelHelpers.export(exports, "LoaderPinwheel", ()=>(0, _loaderPinwheelJsDefault.default));
parcelHelpers.export(exports, "LoaderPinwheelIcon", ()=>(0, _loaderPinwheelJsDefault.default));
parcelHelpers.export(exports, "LucideLoaderPinwheel", ()=>(0, _loaderPinwheelJsDefault.default));
parcelHelpers.export(exports, "Loader", ()=>(0, _loaderJsDefault.default));
parcelHelpers.export(exports, "LoaderIcon", ()=>(0, _loaderJsDefault.default));
parcelHelpers.export(exports, "LucideLoader", ()=>(0, _loaderJsDefault.default));
parcelHelpers.export(exports, "LocateFixed", ()=>(0, _locateFixedJsDefault.default));
parcelHelpers.export(exports, "LocateFixedIcon", ()=>(0, _locateFixedJsDefault.default));
parcelHelpers.export(exports, "LucideLocateFixed", ()=>(0, _locateFixedJsDefault.default));
parcelHelpers.export(exports, "LocateOff", ()=>(0, _locateOffJsDefault.default));
parcelHelpers.export(exports, "LocateOffIcon", ()=>(0, _locateOffJsDefault.default));
parcelHelpers.export(exports, "LucideLocateOff", ()=>(0, _locateOffJsDefault.default));
parcelHelpers.export(exports, "Locate", ()=>(0, _locateJsDefault.default));
parcelHelpers.export(exports, "LocateIcon", ()=>(0, _locateJsDefault.default));
parcelHelpers.export(exports, "LucideLocate", ()=>(0, _locateJsDefault.default));
parcelHelpers.export(exports, "LockKeyhole", ()=>(0, _lockKeyholeJsDefault.default));
parcelHelpers.export(exports, "LockKeyholeIcon", ()=>(0, _lockKeyholeJsDefault.default));
parcelHelpers.export(exports, "LucideLockKeyhole", ()=>(0, _lockKeyholeJsDefault.default));
parcelHelpers.export(exports, "Lock", ()=>(0, _lockJsDefault.default));
parcelHelpers.export(exports, "LockIcon", ()=>(0, _lockJsDefault.default));
parcelHelpers.export(exports, "LucideLock", ()=>(0, _lockJsDefault.default));
parcelHelpers.export(exports, "LogIn", ()=>(0, _logInJsDefault.default));
parcelHelpers.export(exports, "LogInIcon", ()=>(0, _logInJsDefault.default));
parcelHelpers.export(exports, "LucideLogIn", ()=>(0, _logInJsDefault.default));
parcelHelpers.export(exports, "LogOut", ()=>(0, _logOutJsDefault.default));
parcelHelpers.export(exports, "LogOutIcon", ()=>(0, _logOutJsDefault.default));
parcelHelpers.export(exports, "LucideLogOut", ()=>(0, _logOutJsDefault.default));
parcelHelpers.export(exports, "Logs", ()=>(0, _logsJsDefault.default));
parcelHelpers.export(exports, "LogsIcon", ()=>(0, _logsJsDefault.default));
parcelHelpers.export(exports, "LucideLogs", ()=>(0, _logsJsDefault.default));
parcelHelpers.export(exports, "Lollipop", ()=>(0, _lollipopJsDefault.default));
parcelHelpers.export(exports, "LollipopIcon", ()=>(0, _lollipopJsDefault.default));
parcelHelpers.export(exports, "LucideLollipop", ()=>(0, _lollipopJsDefault.default));
parcelHelpers.export(exports, "LucideLuggage", ()=>(0, _luggageJsDefault.default));
parcelHelpers.export(exports, "Luggage", ()=>(0, _luggageJsDefault.default));
parcelHelpers.export(exports, "LuggageIcon", ()=>(0, _luggageJsDefault.default));
parcelHelpers.export(exports, "LucideMagnet", ()=>(0, _magnetJsDefault.default));
parcelHelpers.export(exports, "Magnet", ()=>(0, _magnetJsDefault.default));
parcelHelpers.export(exports, "MagnetIcon", ()=>(0, _magnetJsDefault.default));
parcelHelpers.export(exports, "LucideMailCheck", ()=>(0, _mailCheckJsDefault.default));
parcelHelpers.export(exports, "MailCheck", ()=>(0, _mailCheckJsDefault.default));
parcelHelpers.export(exports, "MailCheckIcon", ()=>(0, _mailCheckJsDefault.default));
parcelHelpers.export(exports, "LucideMailOpen", ()=>(0, _mailOpenJsDefault.default));
parcelHelpers.export(exports, "MailOpen", ()=>(0, _mailOpenJsDefault.default));
parcelHelpers.export(exports, "MailOpenIcon", ()=>(0, _mailOpenJsDefault.default));
parcelHelpers.export(exports, "LucideMailMinus", ()=>(0, _mailMinusJsDefault.default));
parcelHelpers.export(exports, "MailMinus", ()=>(0, _mailMinusJsDefault.default));
parcelHelpers.export(exports, "MailMinusIcon", ()=>(0, _mailMinusJsDefault.default));
parcelHelpers.export(exports, "LucideMailPlus", ()=>(0, _mailPlusJsDefault.default));
parcelHelpers.export(exports, "MailPlus", ()=>(0, _mailPlusJsDefault.default));
parcelHelpers.export(exports, "MailPlusIcon", ()=>(0, _mailPlusJsDefault.default));
parcelHelpers.export(exports, "LucideMailSearch", ()=>(0, _mailSearchJsDefault.default));
parcelHelpers.export(exports, "MailSearch", ()=>(0, _mailSearchJsDefault.default));
parcelHelpers.export(exports, "MailSearchIcon", ()=>(0, _mailSearchJsDefault.default));
parcelHelpers.export(exports, "LucideMailWarning", ()=>(0, _mailWarningJsDefault.default));
parcelHelpers.export(exports, "MailWarning", ()=>(0, _mailWarningJsDefault.default));
parcelHelpers.export(exports, "MailWarningIcon", ()=>(0, _mailWarningJsDefault.default));
parcelHelpers.export(exports, "LucideMailX", ()=>(0, _mailXJsDefault.default));
parcelHelpers.export(exports, "MailX", ()=>(0, _mailXJsDefault.default));
parcelHelpers.export(exports, "MailXIcon", ()=>(0, _mailXJsDefault.default));
parcelHelpers.export(exports, "LucideMail", ()=>(0, _mailJsDefault.default));
parcelHelpers.export(exports, "Mail", ()=>(0, _mailJsDefault.default));
parcelHelpers.export(exports, "MailIcon", ()=>(0, _mailJsDefault.default));
parcelHelpers.export(exports, "LucideMailbox", ()=>(0, _mailboxJsDefault.default));
parcelHelpers.export(exports, "Mailbox", ()=>(0, _mailboxJsDefault.default));
parcelHelpers.export(exports, "MailboxIcon", ()=>(0, _mailboxJsDefault.default));
parcelHelpers.export(exports, "LucideMails", ()=>(0, _mailsJsDefault.default));
parcelHelpers.export(exports, "Mails", ()=>(0, _mailsJsDefault.default));
parcelHelpers.export(exports, "MailsIcon", ()=>(0, _mailsJsDefault.default));
parcelHelpers.export(exports, "LucideMapMinus", ()=>(0, _mapMinusJsDefault.default));
parcelHelpers.export(exports, "MapMinus", ()=>(0, _mapMinusJsDefault.default));
parcelHelpers.export(exports, "MapMinusIcon", ()=>(0, _mapMinusJsDefault.default));
parcelHelpers.export(exports, "LucideMapPinCheck", ()=>(0, _mapPinCheckJsDefault.default));
parcelHelpers.export(exports, "MapPinCheck", ()=>(0, _mapPinCheckJsDefault.default));
parcelHelpers.export(exports, "MapPinCheckIcon", ()=>(0, _mapPinCheckJsDefault.default));
parcelHelpers.export(exports, "LucideMapPinCheckInside", ()=>(0, _mapPinCheckInsideJsDefault.default));
parcelHelpers.export(exports, "MapPinCheckInside", ()=>(0, _mapPinCheckInsideJsDefault.default));
parcelHelpers.export(exports, "MapPinCheckInsideIcon", ()=>(0, _mapPinCheckInsideJsDefault.default));
parcelHelpers.export(exports, "LucideMapPinHouse", ()=>(0, _mapPinHouseJsDefault.default));
parcelHelpers.export(exports, "MapPinHouse", ()=>(0, _mapPinHouseJsDefault.default));
parcelHelpers.export(exports, "MapPinHouseIcon", ()=>(0, _mapPinHouseJsDefault.default));
parcelHelpers.export(exports, "LucideMapPinMinusInside", ()=>(0, _mapPinMinusInsideJsDefault.default));
parcelHelpers.export(exports, "MapPinMinusInside", ()=>(0, _mapPinMinusInsideJsDefault.default));
parcelHelpers.export(exports, "MapPinMinusInsideIcon", ()=>(0, _mapPinMinusInsideJsDefault.default));
parcelHelpers.export(exports, "LucideMapPinMinus", ()=>(0, _mapPinMinusJsDefault.default));
parcelHelpers.export(exports, "MapPinMinus", ()=>(0, _mapPinMinusJsDefault.default));
parcelHelpers.export(exports, "MapPinMinusIcon", ()=>(0, _mapPinMinusJsDefault.default));
parcelHelpers.export(exports, "LucideMapPinOff", ()=>(0, _mapPinOffJsDefault.default));
parcelHelpers.export(exports, "MapPinOff", ()=>(0, _mapPinOffJsDefault.default));
parcelHelpers.export(exports, "MapPinOffIcon", ()=>(0, _mapPinOffJsDefault.default));
parcelHelpers.export(exports, "LucideMapPinPlusInside", ()=>(0, _mapPinPlusInsideJsDefault.default));
parcelHelpers.export(exports, "MapPinPlusInside", ()=>(0, _mapPinPlusInsideJsDefault.default));
parcelHelpers.export(exports, "MapPinPlusInsideIcon", ()=>(0, _mapPinPlusInsideJsDefault.default));
parcelHelpers.export(exports, "LucideMapPinPlus", ()=>(0, _mapPinPlusJsDefault.default));
parcelHelpers.export(exports, "MapPinPlus", ()=>(0, _mapPinPlusJsDefault.default));
parcelHelpers.export(exports, "MapPinPlusIcon", ()=>(0, _mapPinPlusJsDefault.default));
parcelHelpers.export(exports, "LucideMapPinXInside", ()=>(0, _mapPinXInsideJsDefault.default));
parcelHelpers.export(exports, "MapPinXInside", ()=>(0, _mapPinXInsideJsDefault.default));
parcelHelpers.export(exports, "MapPinXInsideIcon", ()=>(0, _mapPinXInsideJsDefault.default));
parcelHelpers.export(exports, "LucideMapPin", ()=>(0, _mapPinJsDefault.default));
parcelHelpers.export(exports, "MapPin", ()=>(0, _mapPinJsDefault.default));
parcelHelpers.export(exports, "MapPinIcon", ()=>(0, _mapPinJsDefault.default));
parcelHelpers.export(exports, "LucideMapPinX", ()=>(0, _mapPinXJsDefault.default));
parcelHelpers.export(exports, "MapPinX", ()=>(0, _mapPinXJsDefault.default));
parcelHelpers.export(exports, "MapPinXIcon", ()=>(0, _mapPinXJsDefault.default));
parcelHelpers.export(exports, "LucideMapPinned", ()=>(0, _mapPinnedJsDefault.default));
parcelHelpers.export(exports, "MapPinned", ()=>(0, _mapPinnedJsDefault.default));
parcelHelpers.export(exports, "MapPinnedIcon", ()=>(0, _mapPinnedJsDefault.default));
parcelHelpers.export(exports, "LucideMapPlus", ()=>(0, _mapPlusJsDefault.default));
parcelHelpers.export(exports, "MapPlus", ()=>(0, _mapPlusJsDefault.default));
parcelHelpers.export(exports, "MapPlusIcon", ()=>(0, _mapPlusJsDefault.default));
parcelHelpers.export(exports, "LucideMap", ()=>(0, _mapJsDefault.default));
parcelHelpers.export(exports, "Map", ()=>(0, _mapJsDefault.default));
parcelHelpers.export(exports, "MapIcon", ()=>(0, _mapJsDefault.default));
parcelHelpers.export(exports, "LucideMarsStroke", ()=>(0, _marsStrokeJsDefault.default));
parcelHelpers.export(exports, "MarsStroke", ()=>(0, _marsStrokeJsDefault.default));
parcelHelpers.export(exports, "MarsStrokeIcon", ()=>(0, _marsStrokeJsDefault.default));
parcelHelpers.export(exports, "LucideMars", ()=>(0, _marsJsDefault.default));
parcelHelpers.export(exports, "Mars", ()=>(0, _marsJsDefault.default));
parcelHelpers.export(exports, "MarsIcon", ()=>(0, _marsJsDefault.default));
parcelHelpers.export(exports, "LucideMaximize2", ()=>(0, _maximize2JsDefault.default));
parcelHelpers.export(exports, "Maximize2", ()=>(0, _maximize2JsDefault.default));
parcelHelpers.export(exports, "Maximize2Icon", ()=>(0, _maximize2JsDefault.default));
parcelHelpers.export(exports, "LucideMartini", ()=>(0, _martiniJsDefault.default));
parcelHelpers.export(exports, "Martini", ()=>(0, _martiniJsDefault.default));
parcelHelpers.export(exports, "MartiniIcon", ()=>(0, _martiniJsDefault.default));
parcelHelpers.export(exports, "LucideMaximize", ()=>(0, _maximizeJsDefault.default));
parcelHelpers.export(exports, "Maximize", ()=>(0, _maximizeJsDefault.default));
parcelHelpers.export(exports, "MaximizeIcon", ()=>(0, _maximizeJsDefault.default));
parcelHelpers.export(exports, "LucideMedal", ()=>(0, _medalJsDefault.default));
parcelHelpers.export(exports, "Medal", ()=>(0, _medalJsDefault.default));
parcelHelpers.export(exports, "MedalIcon", ()=>(0, _medalJsDefault.default));
parcelHelpers.export(exports, "LucideMegaphoneOff", ()=>(0, _megaphoneOffJsDefault.default));
parcelHelpers.export(exports, "MegaphoneOff", ()=>(0, _megaphoneOffJsDefault.default));
parcelHelpers.export(exports, "MegaphoneOffIcon", ()=>(0, _megaphoneOffJsDefault.default));
parcelHelpers.export(exports, "LucideMegaphone", ()=>(0, _megaphoneJsDefault.default));
parcelHelpers.export(exports, "Megaphone", ()=>(0, _megaphoneJsDefault.default));
parcelHelpers.export(exports, "MegaphoneIcon", ()=>(0, _megaphoneJsDefault.default));
parcelHelpers.export(exports, "LucideMeh", ()=>(0, _mehJsDefault.default));
parcelHelpers.export(exports, "Meh", ()=>(0, _mehJsDefault.default));
parcelHelpers.export(exports, "MehIcon", ()=>(0, _mehJsDefault.default));
parcelHelpers.export(exports, "LucideMemoryStick", ()=>(0, _memoryStickJsDefault.default));
parcelHelpers.export(exports, "MemoryStick", ()=>(0, _memoryStickJsDefault.default));
parcelHelpers.export(exports, "MemoryStickIcon", ()=>(0, _memoryStickJsDefault.default));
parcelHelpers.export(exports, "LucideMenu", ()=>(0, _menuJsDefault.default));
parcelHelpers.export(exports, "Menu", ()=>(0, _menuJsDefault.default));
parcelHelpers.export(exports, "MenuIcon", ()=>(0, _menuJsDefault.default));
parcelHelpers.export(exports, "LucideMessageCircleCode", ()=>(0, _messageCircleCodeJsDefault.default));
parcelHelpers.export(exports, "MessageCircleCode", ()=>(0, _messageCircleCodeJsDefault.default));
parcelHelpers.export(exports, "MessageCircleCodeIcon", ()=>(0, _messageCircleCodeJsDefault.default));
parcelHelpers.export(exports, "LucideMerge", ()=>(0, _mergeJsDefault.default));
parcelHelpers.export(exports, "Merge", ()=>(0, _mergeJsDefault.default));
parcelHelpers.export(exports, "MergeIcon", ()=>(0, _mergeJsDefault.default));
parcelHelpers.export(exports, "LucideMessageCircleHeart", ()=>(0, _messageCircleHeartJsDefault.default));
parcelHelpers.export(exports, "MessageCircleHeart", ()=>(0, _messageCircleHeartJsDefault.default));
parcelHelpers.export(exports, "MessageCircleHeartIcon", ()=>(0, _messageCircleHeartJsDefault.default));
parcelHelpers.export(exports, "LucideMessageCircleDashed", ()=>(0, _messageCircleDashedJsDefault.default));
parcelHelpers.export(exports, "MessageCircleDashed", ()=>(0, _messageCircleDashedJsDefault.default));
parcelHelpers.export(exports, "MessageCircleDashedIcon", ()=>(0, _messageCircleDashedJsDefault.default));
parcelHelpers.export(exports, "LucideMessageCircleMore", ()=>(0, _messageCircleMoreJsDefault.default));
parcelHelpers.export(exports, "MessageCircleMore", ()=>(0, _messageCircleMoreJsDefault.default));
parcelHelpers.export(exports, "MessageCircleMoreIcon", ()=>(0, _messageCircleMoreJsDefault.default));
parcelHelpers.export(exports, "LucideMessageCircleOff", ()=>(0, _messageCircleOffJsDefault.default));
parcelHelpers.export(exports, "MessageCircleOff", ()=>(0, _messageCircleOffJsDefault.default));
parcelHelpers.export(exports, "MessageCircleOffIcon", ()=>(0, _messageCircleOffJsDefault.default));
parcelHelpers.export(exports, "LucideMessageCirclePlus", ()=>(0, _messageCirclePlusJsDefault.default));
parcelHelpers.export(exports, "MessageCirclePlus", ()=>(0, _messageCirclePlusJsDefault.default));
parcelHelpers.export(exports, "MessageCirclePlusIcon", ()=>(0, _messageCirclePlusJsDefault.default));
parcelHelpers.export(exports, "LucideMessageCircleReply", ()=>(0, _messageCircleReplyJsDefault.default));
parcelHelpers.export(exports, "MessageCircleReply", ()=>(0, _messageCircleReplyJsDefault.default));
parcelHelpers.export(exports, "MessageCircleReplyIcon", ()=>(0, _messageCircleReplyJsDefault.default));
parcelHelpers.export(exports, "LucideMessageCircleWarning", ()=>(0, _messageCircleWarningJsDefault.default));
parcelHelpers.export(exports, "MessageCircleWarning", ()=>(0, _messageCircleWarningJsDefault.default));
parcelHelpers.export(exports, "MessageCircleWarningIcon", ()=>(0, _messageCircleWarningJsDefault.default));
parcelHelpers.export(exports, "LucideMessageCircleX", ()=>(0, _messageCircleXJsDefault.default));
parcelHelpers.export(exports, "MessageCircleX", ()=>(0, _messageCircleXJsDefault.default));
parcelHelpers.export(exports, "MessageCircleXIcon", ()=>(0, _messageCircleXJsDefault.default));
parcelHelpers.export(exports, "LucideMessageCircle", ()=>(0, _messageCircleJsDefault.default));
parcelHelpers.export(exports, "MessageCircle", ()=>(0, _messageCircleJsDefault.default));
parcelHelpers.export(exports, "MessageCircleIcon", ()=>(0, _messageCircleJsDefault.default));
parcelHelpers.export(exports, "LucideMessageSquareCode", ()=>(0, _messageSquareCodeJsDefault.default));
parcelHelpers.export(exports, "MessageSquareCode", ()=>(0, _messageSquareCodeJsDefault.default));
parcelHelpers.export(exports, "MessageSquareCodeIcon", ()=>(0, _messageSquareCodeJsDefault.default));
parcelHelpers.export(exports, "LucideMessageSquareDashed", ()=>(0, _messageSquareDashedJsDefault.default));
parcelHelpers.export(exports, "MessageSquareDashed", ()=>(0, _messageSquareDashedJsDefault.default));
parcelHelpers.export(exports, "MessageSquareDashedIcon", ()=>(0, _messageSquareDashedJsDefault.default));
parcelHelpers.export(exports, "LucideMessageSquareDot", ()=>(0, _messageSquareDotJsDefault.default));
parcelHelpers.export(exports, "MessageSquareDot", ()=>(0, _messageSquareDotJsDefault.default));
parcelHelpers.export(exports, "MessageSquareDotIcon", ()=>(0, _messageSquareDotJsDefault.default));
parcelHelpers.export(exports, "LucideMessageSquareDiff", ()=>(0, _messageSquareDiffJsDefault.default));
parcelHelpers.export(exports, "MessageSquareDiff", ()=>(0, _messageSquareDiffJsDefault.default));
parcelHelpers.export(exports, "MessageSquareDiffIcon", ()=>(0, _messageSquareDiffJsDefault.default));
parcelHelpers.export(exports, "LucideMessageSquareHeart", ()=>(0, _messageSquareHeartJsDefault.default));
parcelHelpers.export(exports, "MessageSquareHeart", ()=>(0, _messageSquareHeartJsDefault.default));
parcelHelpers.export(exports, "MessageSquareHeartIcon", ()=>(0, _messageSquareHeartJsDefault.default));
parcelHelpers.export(exports, "LucideMessageSquareLock", ()=>(0, _messageSquareLockJsDefault.default));
parcelHelpers.export(exports, "MessageSquareLock", ()=>(0, _messageSquareLockJsDefault.default));
parcelHelpers.export(exports, "MessageSquareLockIcon", ()=>(0, _messageSquareLockJsDefault.default));
parcelHelpers.export(exports, "LucideMessageSquareMore", ()=>(0, _messageSquareMoreJsDefault.default));
parcelHelpers.export(exports, "MessageSquareMore", ()=>(0, _messageSquareMoreJsDefault.default));
parcelHelpers.export(exports, "MessageSquareMoreIcon", ()=>(0, _messageSquareMoreJsDefault.default));
parcelHelpers.export(exports, "LucideMessageSquareOff", ()=>(0, _messageSquareOffJsDefault.default));
parcelHelpers.export(exports, "MessageSquareOff", ()=>(0, _messageSquareOffJsDefault.default));
parcelHelpers.export(exports, "MessageSquareOffIcon", ()=>(0, _messageSquareOffJsDefault.default));
parcelHelpers.export(exports, "LucideMessageSquarePlus", ()=>(0, _messageSquarePlusJsDefault.default));
parcelHelpers.export(exports, "MessageSquarePlus", ()=>(0, _messageSquarePlusJsDefault.default));
parcelHelpers.export(exports, "MessageSquarePlusIcon", ()=>(0, _messageSquarePlusJsDefault.default));
parcelHelpers.export(exports, "LucideMessageSquareReply", ()=>(0, _messageSquareReplyJsDefault.default));
parcelHelpers.export(exports, "MessageSquareReply", ()=>(0, _messageSquareReplyJsDefault.default));
parcelHelpers.export(exports, "MessageSquareReplyIcon", ()=>(0, _messageSquareReplyJsDefault.default));
parcelHelpers.export(exports, "LucideMessageSquareQuote", ()=>(0, _messageSquareQuoteJsDefault.default));
parcelHelpers.export(exports, "MessageSquareQuote", ()=>(0, _messageSquareQuoteJsDefault.default));
parcelHelpers.export(exports, "MessageSquareQuoteIcon", ()=>(0, _messageSquareQuoteJsDefault.default));
parcelHelpers.export(exports, "LucideMessageSquareText", ()=>(0, _messageSquareTextJsDefault.default));
parcelHelpers.export(exports, "MessageSquareText", ()=>(0, _messageSquareTextJsDefault.default));
parcelHelpers.export(exports, "MessageSquareTextIcon", ()=>(0, _messageSquareTextJsDefault.default));
parcelHelpers.export(exports, "LucideMessageSquareShare", ()=>(0, _messageSquareShareJsDefault.default));
parcelHelpers.export(exports, "MessageSquareShare", ()=>(0, _messageSquareShareJsDefault.default));
parcelHelpers.export(exports, "MessageSquareShareIcon", ()=>(0, _messageSquareShareJsDefault.default));
parcelHelpers.export(exports, "LucideMessageSquareWarning", ()=>(0, _messageSquareWarningJsDefault.default));
parcelHelpers.export(exports, "MessageSquareWarning", ()=>(0, _messageSquareWarningJsDefault.default));
parcelHelpers.export(exports, "MessageSquareWarningIcon", ()=>(0, _messageSquareWarningJsDefault.default));
parcelHelpers.export(exports, "LucideMessageSquareX", ()=>(0, _messageSquareXJsDefault.default));
parcelHelpers.export(exports, "MessageSquareX", ()=>(0, _messageSquareXJsDefault.default));
parcelHelpers.export(exports, "MessageSquareXIcon", ()=>(0, _messageSquareXJsDefault.default));
parcelHelpers.export(exports, "LucideMessageSquare", ()=>(0, _messageSquareJsDefault.default));
parcelHelpers.export(exports, "MessageSquare", ()=>(0, _messageSquareJsDefault.default));
parcelHelpers.export(exports, "MessageSquareIcon", ()=>(0, _messageSquareJsDefault.default));
parcelHelpers.export(exports, "LucideMessagesSquare", ()=>(0, _messagesSquareJsDefault.default));
parcelHelpers.export(exports, "MessagesSquare", ()=>(0, _messagesSquareJsDefault.default));
parcelHelpers.export(exports, "MessagesSquareIcon", ()=>(0, _messagesSquareJsDefault.default));
parcelHelpers.export(exports, "LucideMicOff", ()=>(0, _micOffJsDefault.default));
parcelHelpers.export(exports, "MicOff", ()=>(0, _micOffJsDefault.default));
parcelHelpers.export(exports, "MicOffIcon", ()=>(0, _micOffJsDefault.default));
parcelHelpers.export(exports, "LucideMic", ()=>(0, _micJsDefault.default));
parcelHelpers.export(exports, "Mic", ()=>(0, _micJsDefault.default));
parcelHelpers.export(exports, "MicIcon", ()=>(0, _micJsDefault.default));
parcelHelpers.export(exports, "LucideMicrochip", ()=>(0, _microchipJsDefault.default));
parcelHelpers.export(exports, "Microchip", ()=>(0, _microchipJsDefault.default));
parcelHelpers.export(exports, "MicrochipIcon", ()=>(0, _microchipJsDefault.default));
parcelHelpers.export(exports, "LucideMicroscope", ()=>(0, _microscopeJsDefault.default));
parcelHelpers.export(exports, "Microscope", ()=>(0, _microscopeJsDefault.default));
parcelHelpers.export(exports, "MicroscopeIcon", ()=>(0, _microscopeJsDefault.default));
parcelHelpers.export(exports, "LucideMicrowave", ()=>(0, _microwaveJsDefault.default));
parcelHelpers.export(exports, "Microwave", ()=>(0, _microwaveJsDefault.default));
parcelHelpers.export(exports, "MicrowaveIcon", ()=>(0, _microwaveJsDefault.default));
parcelHelpers.export(exports, "LucideMilestone", ()=>(0, _milestoneJsDefault.default));
parcelHelpers.export(exports, "Milestone", ()=>(0, _milestoneJsDefault.default));
parcelHelpers.export(exports, "MilestoneIcon", ()=>(0, _milestoneJsDefault.default));
parcelHelpers.export(exports, "LucideMilkOff", ()=>(0, _milkOffJsDefault.default));
parcelHelpers.export(exports, "MilkOff", ()=>(0, _milkOffJsDefault.default));
parcelHelpers.export(exports, "MilkOffIcon", ()=>(0, _milkOffJsDefault.default));
parcelHelpers.export(exports, "LucideMilk", ()=>(0, _milkJsDefault.default));
parcelHelpers.export(exports, "Milk", ()=>(0, _milkJsDefault.default));
parcelHelpers.export(exports, "MilkIcon", ()=>(0, _milkJsDefault.default));
parcelHelpers.export(exports, "LucideMinimize2", ()=>(0, _minimize2JsDefault.default));
parcelHelpers.export(exports, "Minimize2", ()=>(0, _minimize2JsDefault.default));
parcelHelpers.export(exports, "Minimize2Icon", ()=>(0, _minimize2JsDefault.default));
parcelHelpers.export(exports, "LucideMinimize", ()=>(0, _minimizeJsDefault.default));
parcelHelpers.export(exports, "Minimize", ()=>(0, _minimizeJsDefault.default));
parcelHelpers.export(exports, "MinimizeIcon", ()=>(0, _minimizeJsDefault.default));
parcelHelpers.export(exports, "LucideMinus", ()=>(0, _minusJsDefault.default));
parcelHelpers.export(exports, "Minus", ()=>(0, _minusJsDefault.default));
parcelHelpers.export(exports, "MinusIcon", ()=>(0, _minusJsDefault.default));
parcelHelpers.export(exports, "LucideMonitorCheck", ()=>(0, _monitorCheckJsDefault.default));
parcelHelpers.export(exports, "MonitorCheck", ()=>(0, _monitorCheckJsDefault.default));
parcelHelpers.export(exports, "MonitorCheckIcon", ()=>(0, _monitorCheckJsDefault.default));
parcelHelpers.export(exports, "LucideMonitorCog", ()=>(0, _monitorCogJsDefault.default));
parcelHelpers.export(exports, "MonitorCog", ()=>(0, _monitorCogJsDefault.default));
parcelHelpers.export(exports, "MonitorCogIcon", ()=>(0, _monitorCogJsDefault.default));
parcelHelpers.export(exports, "LucideMonitorDown", ()=>(0, _monitorDownJsDefault.default));
parcelHelpers.export(exports, "MonitorDown", ()=>(0, _monitorDownJsDefault.default));
parcelHelpers.export(exports, "MonitorDownIcon", ()=>(0, _monitorDownJsDefault.default));
parcelHelpers.export(exports, "LucideMonitorDot", ()=>(0, _monitorDotJsDefault.default));
parcelHelpers.export(exports, "MonitorDot", ()=>(0, _monitorDotJsDefault.default));
parcelHelpers.export(exports, "MonitorDotIcon", ()=>(0, _monitorDotJsDefault.default));
parcelHelpers.export(exports, "LucideMonitorOff", ()=>(0, _monitorOffJsDefault.default));
parcelHelpers.export(exports, "MonitorOff", ()=>(0, _monitorOffJsDefault.default));
parcelHelpers.export(exports, "MonitorOffIcon", ()=>(0, _monitorOffJsDefault.default));
parcelHelpers.export(exports, "LucideMonitorPlay", ()=>(0, _monitorPlayJsDefault.default));
parcelHelpers.export(exports, "MonitorPlay", ()=>(0, _monitorPlayJsDefault.default));
parcelHelpers.export(exports, "MonitorPlayIcon", ()=>(0, _monitorPlayJsDefault.default));
parcelHelpers.export(exports, "LucideMonitorPause", ()=>(0, _monitorPauseJsDefault.default));
parcelHelpers.export(exports, "MonitorPause", ()=>(0, _monitorPauseJsDefault.default));
parcelHelpers.export(exports, "MonitorPauseIcon", ()=>(0, _monitorPauseJsDefault.default));
parcelHelpers.export(exports, "LucideMonitorSmartphone", ()=>(0, _monitorSmartphoneJsDefault.default));
parcelHelpers.export(exports, "MonitorSmartphone", ()=>(0, _monitorSmartphoneJsDefault.default));
parcelHelpers.export(exports, "MonitorSmartphoneIcon", ()=>(0, _monitorSmartphoneJsDefault.default));
parcelHelpers.export(exports, "LucideMonitorStop", ()=>(0, _monitorStopJsDefault.default));
parcelHelpers.export(exports, "MonitorStop", ()=>(0, _monitorStopJsDefault.default));
parcelHelpers.export(exports, "MonitorStopIcon", ()=>(0, _monitorStopJsDefault.default));
parcelHelpers.export(exports, "LucideMonitorSpeaker", ()=>(0, _monitorSpeakerJsDefault.default));
parcelHelpers.export(exports, "MonitorSpeaker", ()=>(0, _monitorSpeakerJsDefault.default));
parcelHelpers.export(exports, "MonitorSpeakerIcon", ()=>(0, _monitorSpeakerJsDefault.default));
parcelHelpers.export(exports, "LucideMonitorUp", ()=>(0, _monitorUpJsDefault.default));
parcelHelpers.export(exports, "MonitorUp", ()=>(0, _monitorUpJsDefault.default));
parcelHelpers.export(exports, "MonitorUpIcon", ()=>(0, _monitorUpJsDefault.default));
parcelHelpers.export(exports, "LucideMonitorX", ()=>(0, _monitorXJsDefault.default));
parcelHelpers.export(exports, "MonitorX", ()=>(0, _monitorXJsDefault.default));
parcelHelpers.export(exports, "MonitorXIcon", ()=>(0, _monitorXJsDefault.default));
parcelHelpers.export(exports, "LucideMonitor", ()=>(0, _monitorJsDefault.default));
parcelHelpers.export(exports, "Monitor", ()=>(0, _monitorJsDefault.default));
parcelHelpers.export(exports, "MonitorIcon", ()=>(0, _monitorJsDefault.default));
parcelHelpers.export(exports, "LucideMoonStar", ()=>(0, _moonStarJsDefault.default));
parcelHelpers.export(exports, "MoonStar", ()=>(0, _moonStarJsDefault.default));
parcelHelpers.export(exports, "MoonStarIcon", ()=>(0, _moonStarJsDefault.default));
parcelHelpers.export(exports, "LucideMoon", ()=>(0, _moonJsDefault.default));
parcelHelpers.export(exports, "Moon", ()=>(0, _moonJsDefault.default));
parcelHelpers.export(exports, "MoonIcon", ()=>(0, _moonJsDefault.default));
parcelHelpers.export(exports, "LucideMountainSnow", ()=>(0, _mountainSnowJsDefault.default));
parcelHelpers.export(exports, "MountainSnow", ()=>(0, _mountainSnowJsDefault.default));
parcelHelpers.export(exports, "MountainSnowIcon", ()=>(0, _mountainSnowJsDefault.default));
parcelHelpers.export(exports, "LucideMountain", ()=>(0, _mountainJsDefault.default));
parcelHelpers.export(exports, "Mountain", ()=>(0, _mountainJsDefault.default));
parcelHelpers.export(exports, "MountainIcon", ()=>(0, _mountainJsDefault.default));
parcelHelpers.export(exports, "LucideMouseOff", ()=>(0, _mouseOffJsDefault.default));
parcelHelpers.export(exports, "MouseOff", ()=>(0, _mouseOffJsDefault.default));
parcelHelpers.export(exports, "MouseOffIcon", ()=>(0, _mouseOffJsDefault.default));
parcelHelpers.export(exports, "LucideMousePointer2", ()=>(0, _mousePointer2JsDefault.default));
parcelHelpers.export(exports, "MousePointer2", ()=>(0, _mousePointer2JsDefault.default));
parcelHelpers.export(exports, "MousePointer2Icon", ()=>(0, _mousePointer2JsDefault.default));
parcelHelpers.export(exports, "LucideMousePointerBan", ()=>(0, _mousePointerBanJsDefault.default));
parcelHelpers.export(exports, "MousePointerBan", ()=>(0, _mousePointerBanJsDefault.default));
parcelHelpers.export(exports, "MousePointerBanIcon", ()=>(0, _mousePointerBanJsDefault.default));
parcelHelpers.export(exports, "LucideMousePointerClick", ()=>(0, _mousePointerClickJsDefault.default));
parcelHelpers.export(exports, "MousePointerClick", ()=>(0, _mousePointerClickJsDefault.default));
parcelHelpers.export(exports, "MousePointerClickIcon", ()=>(0, _mousePointerClickJsDefault.default));
parcelHelpers.export(exports, "LucideMousePointer", ()=>(0, _mousePointerJsDefault.default));
parcelHelpers.export(exports, "MousePointer", ()=>(0, _mousePointerJsDefault.default));
parcelHelpers.export(exports, "MousePointerIcon", ()=>(0, _mousePointerJsDefault.default));
parcelHelpers.export(exports, "LucideMouse", ()=>(0, _mouseJsDefault.default));
parcelHelpers.export(exports, "Mouse", ()=>(0, _mouseJsDefault.default));
parcelHelpers.export(exports, "MouseIcon", ()=>(0, _mouseJsDefault.default));
parcelHelpers.export(exports, "LucideMoveDiagonal", ()=>(0, _moveDiagonalJsDefault.default));
parcelHelpers.export(exports, "MoveDiagonal", ()=>(0, _moveDiagonalJsDefault.default));
parcelHelpers.export(exports, "MoveDiagonalIcon", ()=>(0, _moveDiagonalJsDefault.default));
parcelHelpers.export(exports, "LucideMoveDiagonal2", ()=>(0, _moveDiagonal2JsDefault.default));
parcelHelpers.export(exports, "MoveDiagonal2", ()=>(0, _moveDiagonal2JsDefault.default));
parcelHelpers.export(exports, "MoveDiagonal2Icon", ()=>(0, _moveDiagonal2JsDefault.default));
parcelHelpers.export(exports, "LucideMoveDownLeft", ()=>(0, _moveDownLeftJsDefault.default));
parcelHelpers.export(exports, "MoveDownLeft", ()=>(0, _moveDownLeftJsDefault.default));
parcelHelpers.export(exports, "MoveDownLeftIcon", ()=>(0, _moveDownLeftJsDefault.default));
parcelHelpers.export(exports, "LucideMoveDownRight", ()=>(0, _moveDownRightJsDefault.default));
parcelHelpers.export(exports, "MoveDownRight", ()=>(0, _moveDownRightJsDefault.default));
parcelHelpers.export(exports, "MoveDownRightIcon", ()=>(0, _moveDownRightJsDefault.default));
parcelHelpers.export(exports, "LucideMoveDown", ()=>(0, _moveDownJsDefault.default));
parcelHelpers.export(exports, "MoveDown", ()=>(0, _moveDownJsDefault.default));
parcelHelpers.export(exports, "MoveDownIcon", ()=>(0, _moveDownJsDefault.default));
parcelHelpers.export(exports, "LucideMoveHorizontal", ()=>(0, _moveHorizontalJsDefault.default));
parcelHelpers.export(exports, "MoveHorizontal", ()=>(0, _moveHorizontalJsDefault.default));
parcelHelpers.export(exports, "MoveHorizontalIcon", ()=>(0, _moveHorizontalJsDefault.default));
parcelHelpers.export(exports, "LucideMoveLeft", ()=>(0, _moveLeftJsDefault.default));
parcelHelpers.export(exports, "MoveLeft", ()=>(0, _moveLeftJsDefault.default));
parcelHelpers.export(exports, "MoveLeftIcon", ()=>(0, _moveLeftJsDefault.default));
parcelHelpers.export(exports, "LucideMoveRight", ()=>(0, _moveRightJsDefault.default));
parcelHelpers.export(exports, "MoveRight", ()=>(0, _moveRightJsDefault.default));
parcelHelpers.export(exports, "MoveRightIcon", ()=>(0, _moveRightJsDefault.default));
parcelHelpers.export(exports, "LucideMoveUpLeft", ()=>(0, _moveUpLeftJsDefault.default));
parcelHelpers.export(exports, "MoveUpLeft", ()=>(0, _moveUpLeftJsDefault.default));
parcelHelpers.export(exports, "MoveUpLeftIcon", ()=>(0, _moveUpLeftJsDefault.default));
parcelHelpers.export(exports, "LucideMoveUpRight", ()=>(0, _moveUpRightJsDefault.default));
parcelHelpers.export(exports, "MoveUpRight", ()=>(0, _moveUpRightJsDefault.default));
parcelHelpers.export(exports, "MoveUpRightIcon", ()=>(0, _moveUpRightJsDefault.default));
parcelHelpers.export(exports, "LucideMoveUp", ()=>(0, _moveUpJsDefault.default));
parcelHelpers.export(exports, "MoveUp", ()=>(0, _moveUpJsDefault.default));
parcelHelpers.export(exports, "MoveUpIcon", ()=>(0, _moveUpJsDefault.default));
parcelHelpers.export(exports, "LucideMoveVertical", ()=>(0, _moveVerticalJsDefault.default));
parcelHelpers.export(exports, "MoveVertical", ()=>(0, _moveVerticalJsDefault.default));
parcelHelpers.export(exports, "MoveVerticalIcon", ()=>(0, _moveVerticalJsDefault.default));
parcelHelpers.export(exports, "LucideMove", ()=>(0, _moveJsDefault.default));
parcelHelpers.export(exports, "Move", ()=>(0, _moveJsDefault.default));
parcelHelpers.export(exports, "MoveIcon", ()=>(0, _moveJsDefault.default));
parcelHelpers.export(exports, "LucideMusic2", ()=>(0, _music2JsDefault.default));
parcelHelpers.export(exports, "Music2", ()=>(0, _music2JsDefault.default));
parcelHelpers.export(exports, "Music2Icon", ()=>(0, _music2JsDefault.default));
parcelHelpers.export(exports, "LucideMusic3", ()=>(0, _music3JsDefault.default));
parcelHelpers.export(exports, "Music3", ()=>(0, _music3JsDefault.default));
parcelHelpers.export(exports, "Music3Icon", ()=>(0, _music3JsDefault.default));
parcelHelpers.export(exports, "LucideMusic4", ()=>(0, _music4JsDefault.default));
parcelHelpers.export(exports, "Music4", ()=>(0, _music4JsDefault.default));
parcelHelpers.export(exports, "Music4Icon", ()=>(0, _music4JsDefault.default));
parcelHelpers.export(exports, "LucideMusic", ()=>(0, _musicJsDefault.default));
parcelHelpers.export(exports, "Music", ()=>(0, _musicJsDefault.default));
parcelHelpers.export(exports, "MusicIcon", ()=>(0, _musicJsDefault.default));
parcelHelpers.export(exports, "LucideNavigation2Off", ()=>(0, _navigation2OffJsDefault.default));
parcelHelpers.export(exports, "Navigation2Off", ()=>(0, _navigation2OffJsDefault.default));
parcelHelpers.export(exports, "Navigation2OffIcon", ()=>(0, _navigation2OffJsDefault.default));
parcelHelpers.export(exports, "LucideNavigation2", ()=>(0, _navigation2JsDefault.default));
parcelHelpers.export(exports, "Navigation2", ()=>(0, _navigation2JsDefault.default));
parcelHelpers.export(exports, "Navigation2Icon", ()=>(0, _navigation2JsDefault.default));
parcelHelpers.export(exports, "LucideNavigationOff", ()=>(0, _navigationOffJsDefault.default));
parcelHelpers.export(exports, "NavigationOff", ()=>(0, _navigationOffJsDefault.default));
parcelHelpers.export(exports, "NavigationOffIcon", ()=>(0, _navigationOffJsDefault.default));
parcelHelpers.export(exports, "LucideNavigation", ()=>(0, _navigationJsDefault.default));
parcelHelpers.export(exports, "Navigation", ()=>(0, _navigationJsDefault.default));
parcelHelpers.export(exports, "NavigationIcon", ()=>(0, _navigationJsDefault.default));
parcelHelpers.export(exports, "LucideNetwork", ()=>(0, _networkJsDefault.default));
parcelHelpers.export(exports, "Network", ()=>(0, _networkJsDefault.default));
parcelHelpers.export(exports, "NetworkIcon", ()=>(0, _networkJsDefault.default));
parcelHelpers.export(exports, "LucideNewspaper", ()=>(0, _newspaperJsDefault.default));
parcelHelpers.export(exports, "Newspaper", ()=>(0, _newspaperJsDefault.default));
parcelHelpers.export(exports, "NewspaperIcon", ()=>(0, _newspaperJsDefault.default));
parcelHelpers.export(exports, "LucideNfc", ()=>(0, _nfcJsDefault.default));
parcelHelpers.export(exports, "Nfc", ()=>(0, _nfcJsDefault.default));
parcelHelpers.export(exports, "NfcIcon", ()=>(0, _nfcJsDefault.default));
parcelHelpers.export(exports, "LucideNonBinary", ()=>(0, _nonBinaryJsDefault.default));
parcelHelpers.export(exports, "NonBinary", ()=>(0, _nonBinaryJsDefault.default));
parcelHelpers.export(exports, "NonBinaryIcon", ()=>(0, _nonBinaryJsDefault.default));
parcelHelpers.export(exports, "LucideNotebookPen", ()=>(0, _notebookPenJsDefault.default));
parcelHelpers.export(exports, "NotebookPen", ()=>(0, _notebookPenJsDefault.default));
parcelHelpers.export(exports, "NotebookPenIcon", ()=>(0, _notebookPenJsDefault.default));
parcelHelpers.export(exports, "LucideNotebookText", ()=>(0, _notebookTextJsDefault.default));
parcelHelpers.export(exports, "NotebookText", ()=>(0, _notebookTextJsDefault.default));
parcelHelpers.export(exports, "NotebookTextIcon", ()=>(0, _notebookTextJsDefault.default));
parcelHelpers.export(exports, "LucideNotebookTabs", ()=>(0, _notebookTabsJsDefault.default));
parcelHelpers.export(exports, "NotebookTabs", ()=>(0, _notebookTabsJsDefault.default));
parcelHelpers.export(exports, "NotebookTabsIcon", ()=>(0, _notebookTabsJsDefault.default));
parcelHelpers.export(exports, "LucideNotebook", ()=>(0, _notebookJsDefault.default));
parcelHelpers.export(exports, "Notebook", ()=>(0, _notebookJsDefault.default));
parcelHelpers.export(exports, "NotebookIcon", ()=>(0, _notebookJsDefault.default));
parcelHelpers.export(exports, "LucideNotepadText", ()=>(0, _notepadTextJsDefault.default));
parcelHelpers.export(exports, "NotepadText", ()=>(0, _notepadTextJsDefault.default));
parcelHelpers.export(exports, "NotepadTextIcon", ()=>(0, _notepadTextJsDefault.default));
parcelHelpers.export(exports, "LucideNotepadTextDashed", ()=>(0, _notepadTextDashedJsDefault.default));
parcelHelpers.export(exports, "NotepadTextDashed", ()=>(0, _notepadTextDashedJsDefault.default));
parcelHelpers.export(exports, "NotepadTextDashedIcon", ()=>(0, _notepadTextDashedJsDefault.default));
parcelHelpers.export(exports, "LucideNutOff", ()=>(0, _nutOffJsDefault.default));
parcelHelpers.export(exports, "NutOff", ()=>(0, _nutOffJsDefault.default));
parcelHelpers.export(exports, "NutOffIcon", ()=>(0, _nutOffJsDefault.default));
parcelHelpers.export(exports, "LucideNut", ()=>(0, _nutJsDefault.default));
parcelHelpers.export(exports, "Nut", ()=>(0, _nutJsDefault.default));
parcelHelpers.export(exports, "NutIcon", ()=>(0, _nutJsDefault.default));
parcelHelpers.export(exports, "LucideOctagonMinus", ()=>(0, _octagonMinusJsDefault.default));
parcelHelpers.export(exports, "OctagonMinus", ()=>(0, _octagonMinusJsDefault.default));
parcelHelpers.export(exports, "OctagonMinusIcon", ()=>(0, _octagonMinusJsDefault.default));
parcelHelpers.export(exports, "LucideOctagon", ()=>(0, _octagonJsDefault.default));
parcelHelpers.export(exports, "Octagon", ()=>(0, _octagonJsDefault.default));
parcelHelpers.export(exports, "OctagonIcon", ()=>(0, _octagonJsDefault.default));
parcelHelpers.export(exports, "LucideOmega", ()=>(0, _omegaJsDefault.default));
parcelHelpers.export(exports, "Omega", ()=>(0, _omegaJsDefault.default));
parcelHelpers.export(exports, "OmegaIcon", ()=>(0, _omegaJsDefault.default));
parcelHelpers.export(exports, "LucideOption", ()=>(0, _optionJsDefault.default));
parcelHelpers.export(exports, "Option", ()=>(0, _optionJsDefault.default));
parcelHelpers.export(exports, "OptionIcon", ()=>(0, _optionJsDefault.default));
parcelHelpers.export(exports, "LucideOrbit", ()=>(0, _orbitJsDefault.default));
parcelHelpers.export(exports, "Orbit", ()=>(0, _orbitJsDefault.default));
parcelHelpers.export(exports, "OrbitIcon", ()=>(0, _orbitJsDefault.default));
parcelHelpers.export(exports, "LucideOrigami", ()=>(0, _origamiJsDefault.default));
parcelHelpers.export(exports, "Origami", ()=>(0, _origamiJsDefault.default));
parcelHelpers.export(exports, "OrigamiIcon", ()=>(0, _origamiJsDefault.default));
parcelHelpers.export(exports, "LucidePackageCheck", ()=>(0, _packageCheckJsDefault.default));
parcelHelpers.export(exports, "PackageCheck", ()=>(0, _packageCheckJsDefault.default));
parcelHelpers.export(exports, "PackageCheckIcon", ()=>(0, _packageCheckJsDefault.default));
parcelHelpers.export(exports, "LucidePackage2", ()=>(0, _package2JsDefault.default));
parcelHelpers.export(exports, "Package2", ()=>(0, _package2JsDefault.default));
parcelHelpers.export(exports, "Package2Icon", ()=>(0, _package2JsDefault.default));
parcelHelpers.export(exports, "LucidePackageMinus", ()=>(0, _packageMinusJsDefault.default));
parcelHelpers.export(exports, "PackageMinus", ()=>(0, _packageMinusJsDefault.default));
parcelHelpers.export(exports, "PackageMinusIcon", ()=>(0, _packageMinusJsDefault.default));
parcelHelpers.export(exports, "LucidePackageOpen", ()=>(0, _packageOpenJsDefault.default));
parcelHelpers.export(exports, "PackageOpen", ()=>(0, _packageOpenJsDefault.default));
parcelHelpers.export(exports, "PackageOpenIcon", ()=>(0, _packageOpenJsDefault.default));
parcelHelpers.export(exports, "LucidePackagePlus", ()=>(0, _packagePlusJsDefault.default));
parcelHelpers.export(exports, "PackagePlus", ()=>(0, _packagePlusJsDefault.default));
parcelHelpers.export(exports, "PackagePlusIcon", ()=>(0, _packagePlusJsDefault.default));
parcelHelpers.export(exports, "LucidePackageSearch", ()=>(0, _packageSearchJsDefault.default));
parcelHelpers.export(exports, "PackageSearch", ()=>(0, _packageSearchJsDefault.default));
parcelHelpers.export(exports, "PackageSearchIcon", ()=>(0, _packageSearchJsDefault.default));
parcelHelpers.export(exports, "LucidePackageX", ()=>(0, _packageXJsDefault.default));
parcelHelpers.export(exports, "PackageX", ()=>(0, _packageXJsDefault.default));
parcelHelpers.export(exports, "PackageXIcon", ()=>(0, _packageXJsDefault.default));
parcelHelpers.export(exports, "LucidePackage", ()=>(0, _packageJsDefault.default));
parcelHelpers.export(exports, "Package", ()=>(0, _packageJsDefault.default));
parcelHelpers.export(exports, "PackageIcon", ()=>(0, _packageJsDefault.default));
parcelHelpers.export(exports, "LucidePaintBucket", ()=>(0, _paintBucketJsDefault.default));
parcelHelpers.export(exports, "PaintBucket", ()=>(0, _paintBucketJsDefault.default));
parcelHelpers.export(exports, "PaintBucketIcon", ()=>(0, _paintBucketJsDefault.default));
parcelHelpers.export(exports, "LucidePaintRoller", ()=>(0, _paintRollerJsDefault.default));
parcelHelpers.export(exports, "PaintRoller", ()=>(0, _paintRollerJsDefault.default));
parcelHelpers.export(exports, "PaintRollerIcon", ()=>(0, _paintRollerJsDefault.default));
parcelHelpers.export(exports, "LucidePaintbrush", ()=>(0, _paintbrushJsDefault.default));
parcelHelpers.export(exports, "Paintbrush", ()=>(0, _paintbrushJsDefault.default));
parcelHelpers.export(exports, "PaintbrushIcon", ()=>(0, _paintbrushJsDefault.default));
parcelHelpers.export(exports, "LucidePalette", ()=>(0, _paletteJsDefault.default));
parcelHelpers.export(exports, "Palette", ()=>(0, _paletteJsDefault.default));
parcelHelpers.export(exports, "PaletteIcon", ()=>(0, _paletteJsDefault.default));
parcelHelpers.export(exports, "LucidePanda", ()=>(0, _pandaJsDefault.default));
parcelHelpers.export(exports, "Panda", ()=>(0, _pandaJsDefault.default));
parcelHelpers.export(exports, "PandaIcon", ()=>(0, _pandaJsDefault.default));
parcelHelpers.export(exports, "LucidePanelBottomClose", ()=>(0, _panelBottomCloseJsDefault.default));
parcelHelpers.export(exports, "PanelBottomClose", ()=>(0, _panelBottomCloseJsDefault.default));
parcelHelpers.export(exports, "PanelBottomCloseIcon", ()=>(0, _panelBottomCloseJsDefault.default));
parcelHelpers.export(exports, "LucidePanelBottom", ()=>(0, _panelBottomJsDefault.default));
parcelHelpers.export(exports, "PanelBottom", ()=>(0, _panelBottomJsDefault.default));
parcelHelpers.export(exports, "PanelBottomIcon", ()=>(0, _panelBottomJsDefault.default));
parcelHelpers.export(exports, "LucidePanelBottomOpen", ()=>(0, _panelBottomOpenJsDefault.default));
parcelHelpers.export(exports, "PanelBottomOpen", ()=>(0, _panelBottomOpenJsDefault.default));
parcelHelpers.export(exports, "PanelBottomOpenIcon", ()=>(0, _panelBottomOpenJsDefault.default));
parcelHelpers.export(exports, "LucidePanelLeftRightDashed", ()=>(0, _panelLeftRightDashedJsDefault.default));
parcelHelpers.export(exports, "PanelLeftRightDashed", ()=>(0, _panelLeftRightDashedJsDefault.default));
parcelHelpers.export(exports, "PanelLeftRightDashedIcon", ()=>(0, _panelLeftRightDashedJsDefault.default));
parcelHelpers.export(exports, "LucidePanelRightClose", ()=>(0, _panelRightCloseJsDefault.default));
parcelHelpers.export(exports, "PanelRightClose", ()=>(0, _panelRightCloseJsDefault.default));
parcelHelpers.export(exports, "PanelRightCloseIcon", ()=>(0, _panelRightCloseJsDefault.default));
parcelHelpers.export(exports, "LucidePanelRightOpen", ()=>(0, _panelRightOpenJsDefault.default));
parcelHelpers.export(exports, "PanelRightOpen", ()=>(0, _panelRightOpenJsDefault.default));
parcelHelpers.export(exports, "PanelRightOpenIcon", ()=>(0, _panelRightOpenJsDefault.default));
parcelHelpers.export(exports, "LucidePanelRight", ()=>(0, _panelRightJsDefault.default));
parcelHelpers.export(exports, "PanelRight", ()=>(0, _panelRightJsDefault.default));
parcelHelpers.export(exports, "PanelRightIcon", ()=>(0, _panelRightJsDefault.default));
parcelHelpers.export(exports, "LucidePanelTopBottomDashed", ()=>(0, _panelTopBottomDashedJsDefault.default));
parcelHelpers.export(exports, "PanelTopBottomDashed", ()=>(0, _panelTopBottomDashedJsDefault.default));
parcelHelpers.export(exports, "PanelTopBottomDashedIcon", ()=>(0, _panelTopBottomDashedJsDefault.default));
parcelHelpers.export(exports, "LucidePanelTopClose", ()=>(0, _panelTopCloseJsDefault.default));
parcelHelpers.export(exports, "PanelTopClose", ()=>(0, _panelTopCloseJsDefault.default));
parcelHelpers.export(exports, "PanelTopCloseIcon", ()=>(0, _panelTopCloseJsDefault.default));
parcelHelpers.export(exports, "LucidePanelTopOpen", ()=>(0, _panelTopOpenJsDefault.default));
parcelHelpers.export(exports, "PanelTopOpen", ()=>(0, _panelTopOpenJsDefault.default));
parcelHelpers.export(exports, "PanelTopOpenIcon", ()=>(0, _panelTopOpenJsDefault.default));
parcelHelpers.export(exports, "LucidePanelTop", ()=>(0, _panelTopJsDefault.default));
parcelHelpers.export(exports, "PanelTop", ()=>(0, _panelTopJsDefault.default));
parcelHelpers.export(exports, "PanelTopIcon", ()=>(0, _panelTopJsDefault.default));
parcelHelpers.export(exports, "LucidePanelsLeftBottom", ()=>(0, _panelsLeftBottomJsDefault.default));
parcelHelpers.export(exports, "PanelsLeftBottom", ()=>(0, _panelsLeftBottomJsDefault.default));
parcelHelpers.export(exports, "PanelsLeftBottomIcon", ()=>(0, _panelsLeftBottomJsDefault.default));
parcelHelpers.export(exports, "LucidePanelsRightBottom", ()=>(0, _panelsRightBottomJsDefault.default));
parcelHelpers.export(exports, "PanelsRightBottom", ()=>(0, _panelsRightBottomJsDefault.default));
parcelHelpers.export(exports, "PanelsRightBottomIcon", ()=>(0, _panelsRightBottomJsDefault.default));
parcelHelpers.export(exports, "LucidePaperclip", ()=>(0, _paperclipJsDefault.default));
parcelHelpers.export(exports, "Paperclip", ()=>(0, _paperclipJsDefault.default));
parcelHelpers.export(exports, "PaperclipIcon", ()=>(0, _paperclipJsDefault.default));
parcelHelpers.export(exports, "LucideParentheses", ()=>(0, _parenthesesJsDefault.default));
parcelHelpers.export(exports, "Parentheses", ()=>(0, _parenthesesJsDefault.default));
parcelHelpers.export(exports, "ParenthesesIcon", ()=>(0, _parenthesesJsDefault.default));
parcelHelpers.export(exports, "LucideParkingMeter", ()=>(0, _parkingMeterJsDefault.default));
parcelHelpers.export(exports, "ParkingMeter", ()=>(0, _parkingMeterJsDefault.default));
parcelHelpers.export(exports, "ParkingMeterIcon", ()=>(0, _parkingMeterJsDefault.default));
parcelHelpers.export(exports, "LucidePartyPopper", ()=>(0, _partyPopperJsDefault.default));
parcelHelpers.export(exports, "PartyPopper", ()=>(0, _partyPopperJsDefault.default));
parcelHelpers.export(exports, "PartyPopperIcon", ()=>(0, _partyPopperJsDefault.default));
parcelHelpers.export(exports, "LucidePause", ()=>(0, _pauseJsDefault.default));
parcelHelpers.export(exports, "Pause", ()=>(0, _pauseJsDefault.default));
parcelHelpers.export(exports, "PauseIcon", ()=>(0, _pauseJsDefault.default));
parcelHelpers.export(exports, "LucidePawPrint", ()=>(0, _pawPrintJsDefault.default));
parcelHelpers.export(exports, "PawPrint", ()=>(0, _pawPrintJsDefault.default));
parcelHelpers.export(exports, "PawPrintIcon", ()=>(0, _pawPrintJsDefault.default));
parcelHelpers.export(exports, "LucidePcCase", ()=>(0, _pcCaseJsDefault.default));
parcelHelpers.export(exports, "PcCase", ()=>(0, _pcCaseJsDefault.default));
parcelHelpers.export(exports, "PcCaseIcon", ()=>(0, _pcCaseJsDefault.default));
parcelHelpers.export(exports, "LucidePenOff", ()=>(0, _penOffJsDefault.default));
parcelHelpers.export(exports, "PenOff", ()=>(0, _penOffJsDefault.default));
parcelHelpers.export(exports, "PenOffIcon", ()=>(0, _penOffJsDefault.default));
parcelHelpers.export(exports, "LucidePenTool", ()=>(0, _penToolJsDefault.default));
parcelHelpers.export(exports, "PenTool", ()=>(0, _penToolJsDefault.default));
parcelHelpers.export(exports, "PenToolIcon", ()=>(0, _penToolJsDefault.default));
parcelHelpers.export(exports, "LucidePencilLine", ()=>(0, _pencilLineJsDefault.default));
parcelHelpers.export(exports, "PencilLine", ()=>(0, _pencilLineJsDefault.default));
parcelHelpers.export(exports, "PencilLineIcon", ()=>(0, _pencilLineJsDefault.default));
parcelHelpers.export(exports, "LucidePencilOff", ()=>(0, _pencilOffJsDefault.default));
parcelHelpers.export(exports, "PencilOff", ()=>(0, _pencilOffJsDefault.default));
parcelHelpers.export(exports, "PencilOffIcon", ()=>(0, _pencilOffJsDefault.default));
parcelHelpers.export(exports, "LucidePencilRuler", ()=>(0, _pencilRulerJsDefault.default));
parcelHelpers.export(exports, "PencilRuler", ()=>(0, _pencilRulerJsDefault.default));
parcelHelpers.export(exports, "PencilRulerIcon", ()=>(0, _pencilRulerJsDefault.default));
parcelHelpers.export(exports, "LucidePencil", ()=>(0, _pencilJsDefault.default));
parcelHelpers.export(exports, "Pencil", ()=>(0, _pencilJsDefault.default));
parcelHelpers.export(exports, "PencilIcon", ()=>(0, _pencilJsDefault.default));
parcelHelpers.export(exports, "LucidePentagon", ()=>(0, _pentagonJsDefault.default));
parcelHelpers.export(exports, "Pentagon", ()=>(0, _pentagonJsDefault.default));
parcelHelpers.export(exports, "PentagonIcon", ()=>(0, _pentagonJsDefault.default));
parcelHelpers.export(exports, "LucidePercent", ()=>(0, _percentJsDefault.default));
parcelHelpers.export(exports, "Percent", ()=>(0, _percentJsDefault.default));
parcelHelpers.export(exports, "PercentIcon", ()=>(0, _percentJsDefault.default));
parcelHelpers.export(exports, "LucidePersonStanding", ()=>(0, _personStandingJsDefault.default));
parcelHelpers.export(exports, "PersonStanding", ()=>(0, _personStandingJsDefault.default));
parcelHelpers.export(exports, "PersonStandingIcon", ()=>(0, _personStandingJsDefault.default));
parcelHelpers.export(exports, "LucidePhilippinePeso", ()=>(0, _philippinePesoJsDefault.default));
parcelHelpers.export(exports, "PhilippinePeso", ()=>(0, _philippinePesoJsDefault.default));
parcelHelpers.export(exports, "PhilippinePesoIcon", ()=>(0, _philippinePesoJsDefault.default));
parcelHelpers.export(exports, "LucidePhoneCall", ()=>(0, _phoneCallJsDefault.default));
parcelHelpers.export(exports, "PhoneCall", ()=>(0, _phoneCallJsDefault.default));
parcelHelpers.export(exports, "PhoneCallIcon", ()=>(0, _phoneCallJsDefault.default));
parcelHelpers.export(exports, "LucidePhoneForwarded", ()=>(0, _phoneForwardedJsDefault.default));
parcelHelpers.export(exports, "PhoneForwarded", ()=>(0, _phoneForwardedJsDefault.default));
parcelHelpers.export(exports, "PhoneForwardedIcon", ()=>(0, _phoneForwardedJsDefault.default));
parcelHelpers.export(exports, "LucidePhoneIncoming", ()=>(0, _phoneIncomingJsDefault.default));
parcelHelpers.export(exports, "PhoneIncoming", ()=>(0, _phoneIncomingJsDefault.default));
parcelHelpers.export(exports, "PhoneIncomingIcon", ()=>(0, _phoneIncomingJsDefault.default));
parcelHelpers.export(exports, "LucidePhoneMissed", ()=>(0, _phoneMissedJsDefault.default));
parcelHelpers.export(exports, "PhoneMissed", ()=>(0, _phoneMissedJsDefault.default));
parcelHelpers.export(exports, "PhoneMissedIcon", ()=>(0, _phoneMissedJsDefault.default));
parcelHelpers.export(exports, "LucidePhoneOff", ()=>(0, _phoneOffJsDefault.default));
parcelHelpers.export(exports, "PhoneOff", ()=>(0, _phoneOffJsDefault.default));
parcelHelpers.export(exports, "PhoneOffIcon", ()=>(0, _phoneOffJsDefault.default));
parcelHelpers.export(exports, "LucidePhoneOutgoing", ()=>(0, _phoneOutgoingJsDefault.default));
parcelHelpers.export(exports, "PhoneOutgoing", ()=>(0, _phoneOutgoingJsDefault.default));
parcelHelpers.export(exports, "PhoneOutgoingIcon", ()=>(0, _phoneOutgoingJsDefault.default));
parcelHelpers.export(exports, "LucidePhone", ()=>(0, _phoneJsDefault.default));
parcelHelpers.export(exports, "Phone", ()=>(0, _phoneJsDefault.default));
parcelHelpers.export(exports, "PhoneIcon", ()=>(0, _phoneJsDefault.default));
parcelHelpers.export(exports, "LucidePi", ()=>(0, _piJsDefault.default));
parcelHelpers.export(exports, "Pi", ()=>(0, _piJsDefault.default));
parcelHelpers.export(exports, "PiIcon", ()=>(0, _piJsDefault.default));
parcelHelpers.export(exports, "LucidePickaxe", ()=>(0, _pickaxeJsDefault.default));
parcelHelpers.export(exports, "Pickaxe", ()=>(0, _pickaxeJsDefault.default));
parcelHelpers.export(exports, "PickaxeIcon", ()=>(0, _pickaxeJsDefault.default));
parcelHelpers.export(exports, "LucidePiano", ()=>(0, _pianoJsDefault.default));
parcelHelpers.export(exports, "Piano", ()=>(0, _pianoJsDefault.default));
parcelHelpers.export(exports, "PianoIcon", ()=>(0, _pianoJsDefault.default));
parcelHelpers.export(exports, "LucidePictureInPicture2", ()=>(0, _pictureInPicture2JsDefault.default));
parcelHelpers.export(exports, "PictureInPicture2", ()=>(0, _pictureInPicture2JsDefault.default));
parcelHelpers.export(exports, "PictureInPicture2Icon", ()=>(0, _pictureInPicture2JsDefault.default));
parcelHelpers.export(exports, "LucidePictureInPicture", ()=>(0, _pictureInPictureJsDefault.default));
parcelHelpers.export(exports, "PictureInPicture", ()=>(0, _pictureInPictureJsDefault.default));
parcelHelpers.export(exports, "PictureInPictureIcon", ()=>(0, _pictureInPictureJsDefault.default));
parcelHelpers.export(exports, "LucidePilcrowLeft", ()=>(0, _pilcrowLeftJsDefault.default));
parcelHelpers.export(exports, "PilcrowLeft", ()=>(0, _pilcrowLeftJsDefault.default));
parcelHelpers.export(exports, "PilcrowLeftIcon", ()=>(0, _pilcrowLeftJsDefault.default));
parcelHelpers.export(exports, "LucidePiggyBank", ()=>(0, _piggyBankJsDefault.default));
parcelHelpers.export(exports, "PiggyBank", ()=>(0, _piggyBankJsDefault.default));
parcelHelpers.export(exports, "PiggyBankIcon", ()=>(0, _piggyBankJsDefault.default));
parcelHelpers.export(exports, "LucidePilcrowRight", ()=>(0, _pilcrowRightJsDefault.default));
parcelHelpers.export(exports, "PilcrowRight", ()=>(0, _pilcrowRightJsDefault.default));
parcelHelpers.export(exports, "PilcrowRightIcon", ()=>(0, _pilcrowRightJsDefault.default));
parcelHelpers.export(exports, "LucidePilcrow", ()=>(0, _pilcrowJsDefault.default));
parcelHelpers.export(exports, "Pilcrow", ()=>(0, _pilcrowJsDefault.default));
parcelHelpers.export(exports, "PilcrowIcon", ()=>(0, _pilcrowJsDefault.default));
parcelHelpers.export(exports, "LucidePillBottle", ()=>(0, _pillBottleJsDefault.default));
parcelHelpers.export(exports, "PillBottle", ()=>(0, _pillBottleJsDefault.default));
parcelHelpers.export(exports, "PillBottleIcon", ()=>(0, _pillBottleJsDefault.default));
parcelHelpers.export(exports, "LucidePill", ()=>(0, _pillJsDefault.default));
parcelHelpers.export(exports, "Pill", ()=>(0, _pillJsDefault.default));
parcelHelpers.export(exports, "PillIcon", ()=>(0, _pillJsDefault.default));
parcelHelpers.export(exports, "LucidePinOff", ()=>(0, _pinOffJsDefault.default));
parcelHelpers.export(exports, "PinOff", ()=>(0, _pinOffJsDefault.default));
parcelHelpers.export(exports, "PinOffIcon", ()=>(0, _pinOffJsDefault.default));
parcelHelpers.export(exports, "LucidePin", ()=>(0, _pinJsDefault.default));
parcelHelpers.export(exports, "Pin", ()=>(0, _pinJsDefault.default));
parcelHelpers.export(exports, "PinIcon", ()=>(0, _pinJsDefault.default));
parcelHelpers.export(exports, "LucidePipette", ()=>(0, _pipetteJsDefault.default));
parcelHelpers.export(exports, "Pipette", ()=>(0, _pipetteJsDefault.default));
parcelHelpers.export(exports, "PipetteIcon", ()=>(0, _pipetteJsDefault.default));
parcelHelpers.export(exports, "LucidePizza", ()=>(0, _pizzaJsDefault.default));
parcelHelpers.export(exports, "Pizza", ()=>(0, _pizzaJsDefault.default));
parcelHelpers.export(exports, "PizzaIcon", ()=>(0, _pizzaJsDefault.default));
parcelHelpers.export(exports, "LucidePlaneLanding", ()=>(0, _planeLandingJsDefault.default));
parcelHelpers.export(exports, "PlaneLanding", ()=>(0, _planeLandingJsDefault.default));
parcelHelpers.export(exports, "PlaneLandingIcon", ()=>(0, _planeLandingJsDefault.default));
parcelHelpers.export(exports, "LucidePlaneTakeoff", ()=>(0, _planeTakeoffJsDefault.default));
parcelHelpers.export(exports, "PlaneTakeoff", ()=>(0, _planeTakeoffJsDefault.default));
parcelHelpers.export(exports, "PlaneTakeoffIcon", ()=>(0, _planeTakeoffJsDefault.default));
parcelHelpers.export(exports, "LucidePlane", ()=>(0, _planeJsDefault.default));
parcelHelpers.export(exports, "Plane", ()=>(0, _planeJsDefault.default));
parcelHelpers.export(exports, "PlaneIcon", ()=>(0, _planeJsDefault.default));
parcelHelpers.export(exports, "LucidePlay", ()=>(0, _playJsDefault.default));
parcelHelpers.export(exports, "Play", ()=>(0, _playJsDefault.default));
parcelHelpers.export(exports, "PlayIcon", ()=>(0, _playJsDefault.default));
parcelHelpers.export(exports, "LucidePlug2", ()=>(0, _plug2JsDefault.default));
parcelHelpers.export(exports, "Plug2", ()=>(0, _plug2JsDefault.default));
parcelHelpers.export(exports, "Plug2Icon", ()=>(0, _plug2JsDefault.default));
parcelHelpers.export(exports, "LucidePlug", ()=>(0, _plugJsDefault.default));
parcelHelpers.export(exports, "Plug", ()=>(0, _plugJsDefault.default));
parcelHelpers.export(exports, "PlugIcon", ()=>(0, _plugJsDefault.default));
parcelHelpers.export(exports, "LucidePlus", ()=>(0, _plusJsDefault.default));
parcelHelpers.export(exports, "Plus", ()=>(0, _plusJsDefault.default));
parcelHelpers.export(exports, "PlusIcon", ()=>(0, _plusJsDefault.default));
parcelHelpers.export(exports, "LucidePocketKnife", ()=>(0, _pocketKnifeJsDefault.default));
parcelHelpers.export(exports, "PocketKnife", ()=>(0, _pocketKnifeJsDefault.default));
parcelHelpers.export(exports, "PocketKnifeIcon", ()=>(0, _pocketKnifeJsDefault.default));
parcelHelpers.export(exports, "LucidePocket", ()=>(0, _pocketJsDefault.default));
parcelHelpers.export(exports, "Pocket", ()=>(0, _pocketJsDefault.default));
parcelHelpers.export(exports, "PocketIcon", ()=>(0, _pocketJsDefault.default));
parcelHelpers.export(exports, "LucidePodcast", ()=>(0, _podcastJsDefault.default));
parcelHelpers.export(exports, "Podcast", ()=>(0, _podcastJsDefault.default));
parcelHelpers.export(exports, "PodcastIcon", ()=>(0, _podcastJsDefault.default));
parcelHelpers.export(exports, "LucidePointerOff", ()=>(0, _pointerOffJsDefault.default));
parcelHelpers.export(exports, "PointerOff", ()=>(0, _pointerOffJsDefault.default));
parcelHelpers.export(exports, "PointerOffIcon", ()=>(0, _pointerOffJsDefault.default));
parcelHelpers.export(exports, "LucidePointer", ()=>(0, _pointerJsDefault.default));
parcelHelpers.export(exports, "Pointer", ()=>(0, _pointerJsDefault.default));
parcelHelpers.export(exports, "PointerIcon", ()=>(0, _pointerJsDefault.default));
parcelHelpers.export(exports, "LucidePopcorn", ()=>(0, _popcornJsDefault.default));
parcelHelpers.export(exports, "Popcorn", ()=>(0, _popcornJsDefault.default));
parcelHelpers.export(exports, "PopcornIcon", ()=>(0, _popcornJsDefault.default));
parcelHelpers.export(exports, "LucidePopsicle", ()=>(0, _popsicleJsDefault.default));
parcelHelpers.export(exports, "Popsicle", ()=>(0, _popsicleJsDefault.default));
parcelHelpers.export(exports, "PopsicleIcon", ()=>(0, _popsicleJsDefault.default));
parcelHelpers.export(exports, "LucidePoundSterling", ()=>(0, _poundSterlingJsDefault.default));
parcelHelpers.export(exports, "PoundSterling", ()=>(0, _poundSterlingJsDefault.default));
parcelHelpers.export(exports, "PoundSterlingIcon", ()=>(0, _poundSterlingJsDefault.default));
parcelHelpers.export(exports, "LucidePower", ()=>(0, _powerJsDefault.default));
parcelHelpers.export(exports, "Power", ()=>(0, _powerJsDefault.default));
parcelHelpers.export(exports, "PowerIcon", ()=>(0, _powerJsDefault.default));
parcelHelpers.export(exports, "LucidePowerOff", ()=>(0, _powerOffJsDefault.default));
parcelHelpers.export(exports, "PowerOff", ()=>(0, _powerOffJsDefault.default));
parcelHelpers.export(exports, "PowerOffIcon", ()=>(0, _powerOffJsDefault.default));
parcelHelpers.export(exports, "LucidePresentation", ()=>(0, _presentationJsDefault.default));
parcelHelpers.export(exports, "Presentation", ()=>(0, _presentationJsDefault.default));
parcelHelpers.export(exports, "PresentationIcon", ()=>(0, _presentationJsDefault.default));
parcelHelpers.export(exports, "LucidePrinterCheck", ()=>(0, _printerCheckJsDefault.default));
parcelHelpers.export(exports, "PrinterCheck", ()=>(0, _printerCheckJsDefault.default));
parcelHelpers.export(exports, "PrinterCheckIcon", ()=>(0, _printerCheckJsDefault.default));
parcelHelpers.export(exports, "LucidePrinter", ()=>(0, _printerJsDefault.default));
parcelHelpers.export(exports, "Printer", ()=>(0, _printerJsDefault.default));
parcelHelpers.export(exports, "PrinterIcon", ()=>(0, _printerJsDefault.default));
parcelHelpers.export(exports, "LucideProjector", ()=>(0, _projectorJsDefault.default));
parcelHelpers.export(exports, "Projector", ()=>(0, _projectorJsDefault.default));
parcelHelpers.export(exports, "ProjectorIcon", ()=>(0, _projectorJsDefault.default));
parcelHelpers.export(exports, "LucideProportions", ()=>(0, _proportionsJsDefault.default));
parcelHelpers.export(exports, "Proportions", ()=>(0, _proportionsJsDefault.default));
parcelHelpers.export(exports, "ProportionsIcon", ()=>(0, _proportionsJsDefault.default));
parcelHelpers.export(exports, "LucidePuzzle", ()=>(0, _puzzleJsDefault.default));
parcelHelpers.export(exports, "Puzzle", ()=>(0, _puzzleJsDefault.default));
parcelHelpers.export(exports, "PuzzleIcon", ()=>(0, _puzzleJsDefault.default));
parcelHelpers.export(exports, "LucidePyramid", ()=>(0, _pyramidJsDefault.default));
parcelHelpers.export(exports, "Pyramid", ()=>(0, _pyramidJsDefault.default));
parcelHelpers.export(exports, "PyramidIcon", ()=>(0, _pyramidJsDefault.default));
parcelHelpers.export(exports, "LucideQrCode", ()=>(0, _qrCodeJsDefault.default));
parcelHelpers.export(exports, "QrCode", ()=>(0, _qrCodeJsDefault.default));
parcelHelpers.export(exports, "QrCodeIcon", ()=>(0, _qrCodeJsDefault.default));
parcelHelpers.export(exports, "LucideQuote", ()=>(0, _quoteJsDefault.default));
parcelHelpers.export(exports, "Quote", ()=>(0, _quoteJsDefault.default));
parcelHelpers.export(exports, "QuoteIcon", ()=>(0, _quoteJsDefault.default));
parcelHelpers.export(exports, "LucideRabbit", ()=>(0, _rabbitJsDefault.default));
parcelHelpers.export(exports, "Rabbit", ()=>(0, _rabbitJsDefault.default));
parcelHelpers.export(exports, "RabbitIcon", ()=>(0, _rabbitJsDefault.default));
parcelHelpers.export(exports, "LucideRadar", ()=>(0, _radarJsDefault.default));
parcelHelpers.export(exports, "Radar", ()=>(0, _radarJsDefault.default));
parcelHelpers.export(exports, "RadarIcon", ()=>(0, _radarJsDefault.default));
parcelHelpers.export(exports, "LucideRadiation", ()=>(0, _radiationJsDefault.default));
parcelHelpers.export(exports, "Radiation", ()=>(0, _radiationJsDefault.default));
parcelHelpers.export(exports, "RadiationIcon", ()=>(0, _radiationJsDefault.default));
parcelHelpers.export(exports, "LucideRadical", ()=>(0, _radicalJsDefault.default));
parcelHelpers.export(exports, "Radical", ()=>(0, _radicalJsDefault.default));
parcelHelpers.export(exports, "RadicalIcon", ()=>(0, _radicalJsDefault.default));
parcelHelpers.export(exports, "LucideRadioReceiver", ()=>(0, _radioReceiverJsDefault.default));
parcelHelpers.export(exports, "RadioReceiver", ()=>(0, _radioReceiverJsDefault.default));
parcelHelpers.export(exports, "RadioReceiverIcon", ()=>(0, _radioReceiverJsDefault.default));
parcelHelpers.export(exports, "LucideRadioTower", ()=>(0, _radioTowerJsDefault.default));
parcelHelpers.export(exports, "RadioTower", ()=>(0, _radioTowerJsDefault.default));
parcelHelpers.export(exports, "RadioTowerIcon", ()=>(0, _radioTowerJsDefault.default));
parcelHelpers.export(exports, "LucideRadio", ()=>(0, _radioJsDefault.default));
parcelHelpers.export(exports, "Radio", ()=>(0, _radioJsDefault.default));
parcelHelpers.export(exports, "RadioIcon", ()=>(0, _radioJsDefault.default));
parcelHelpers.export(exports, "LucideRadius", ()=>(0, _radiusJsDefault.default));
parcelHelpers.export(exports, "Radius", ()=>(0, _radiusJsDefault.default));
parcelHelpers.export(exports, "RadiusIcon", ()=>(0, _radiusJsDefault.default));
parcelHelpers.export(exports, "LucideRailSymbol", ()=>(0, _railSymbolJsDefault.default));
parcelHelpers.export(exports, "RailSymbol", ()=>(0, _railSymbolJsDefault.default));
parcelHelpers.export(exports, "RailSymbolIcon", ()=>(0, _railSymbolJsDefault.default));
parcelHelpers.export(exports, "LucideRainbow", ()=>(0, _rainbowJsDefault.default));
parcelHelpers.export(exports, "Rainbow", ()=>(0, _rainbowJsDefault.default));
parcelHelpers.export(exports, "RainbowIcon", ()=>(0, _rainbowJsDefault.default));
parcelHelpers.export(exports, "LucideRat", ()=>(0, _ratJsDefault.default));
parcelHelpers.export(exports, "Rat", ()=>(0, _ratJsDefault.default));
parcelHelpers.export(exports, "RatIcon", ()=>(0, _ratJsDefault.default));
parcelHelpers.export(exports, "LucideRatio", ()=>(0, _ratioJsDefault.default));
parcelHelpers.export(exports, "Ratio", ()=>(0, _ratioJsDefault.default));
parcelHelpers.export(exports, "RatioIcon", ()=>(0, _ratioJsDefault.default));
parcelHelpers.export(exports, "LucideReceiptCent", ()=>(0, _receiptCentJsDefault.default));
parcelHelpers.export(exports, "ReceiptCent", ()=>(0, _receiptCentJsDefault.default));
parcelHelpers.export(exports, "ReceiptCentIcon", ()=>(0, _receiptCentJsDefault.default));
parcelHelpers.export(exports, "LucideReceiptIndianRupee", ()=>(0, _receiptIndianRupeeJsDefault.default));
parcelHelpers.export(exports, "ReceiptIndianRupee", ()=>(0, _receiptIndianRupeeJsDefault.default));
parcelHelpers.export(exports, "ReceiptIndianRupeeIcon", ()=>(0, _receiptIndianRupeeJsDefault.default));
parcelHelpers.export(exports, "LucideReceiptEuro", ()=>(0, _receiptEuroJsDefault.default));
parcelHelpers.export(exports, "ReceiptEuro", ()=>(0, _receiptEuroJsDefault.default));
parcelHelpers.export(exports, "ReceiptEuroIcon", ()=>(0, _receiptEuroJsDefault.default));
parcelHelpers.export(exports, "LucideReceiptJapaneseYen", ()=>(0, _receiptJapaneseYenJsDefault.default));
parcelHelpers.export(exports, "ReceiptJapaneseYen", ()=>(0, _receiptJapaneseYenJsDefault.default));
parcelHelpers.export(exports, "ReceiptJapaneseYenIcon", ()=>(0, _receiptJapaneseYenJsDefault.default));
parcelHelpers.export(exports, "LucideReceiptPoundSterling", ()=>(0, _receiptPoundSterlingJsDefault.default));
parcelHelpers.export(exports, "ReceiptPoundSterling", ()=>(0, _receiptPoundSterlingJsDefault.default));
parcelHelpers.export(exports, "ReceiptPoundSterlingIcon", ()=>(0, _receiptPoundSterlingJsDefault.default));
parcelHelpers.export(exports, "LucideReceiptRussianRuble", ()=>(0, _receiptRussianRubleJsDefault.default));
parcelHelpers.export(exports, "ReceiptRussianRuble", ()=>(0, _receiptRussianRubleJsDefault.default));
parcelHelpers.export(exports, "ReceiptRussianRubleIcon", ()=>(0, _receiptRussianRubleJsDefault.default));
parcelHelpers.export(exports, "LucideReceiptSwissFranc", ()=>(0, _receiptSwissFrancJsDefault.default));
parcelHelpers.export(exports, "ReceiptSwissFranc", ()=>(0, _receiptSwissFrancJsDefault.default));
parcelHelpers.export(exports, "ReceiptSwissFrancIcon", ()=>(0, _receiptSwissFrancJsDefault.default));
parcelHelpers.export(exports, "LucideReceiptText", ()=>(0, _receiptTextJsDefault.default));
parcelHelpers.export(exports, "ReceiptText", ()=>(0, _receiptTextJsDefault.default));
parcelHelpers.export(exports, "ReceiptTextIcon", ()=>(0, _receiptTextJsDefault.default));
parcelHelpers.export(exports, "LucideReceiptTurkishLira", ()=>(0, _receiptTurkishLiraJsDefault.default));
parcelHelpers.export(exports, "ReceiptTurkishLira", ()=>(0, _receiptTurkishLiraJsDefault.default));
parcelHelpers.export(exports, "ReceiptTurkishLiraIcon", ()=>(0, _receiptTurkishLiraJsDefault.default));
parcelHelpers.export(exports, "LucideReceipt", ()=>(0, _receiptJsDefault.default));
parcelHelpers.export(exports, "Receipt", ()=>(0, _receiptJsDefault.default));
parcelHelpers.export(exports, "ReceiptIcon", ()=>(0, _receiptJsDefault.default));
parcelHelpers.export(exports, "LucideRectangleCircle", ()=>(0, _rectangleCircleJsDefault.default));
parcelHelpers.export(exports, "RectangleCircle", ()=>(0, _rectangleCircleJsDefault.default));
parcelHelpers.export(exports, "RectangleCircleIcon", ()=>(0, _rectangleCircleJsDefault.default));
parcelHelpers.export(exports, "LucideRectangleGoggles", ()=>(0, _rectangleGogglesJsDefault.default));
parcelHelpers.export(exports, "RectangleGoggles", ()=>(0, _rectangleGogglesJsDefault.default));
parcelHelpers.export(exports, "RectangleGogglesIcon", ()=>(0, _rectangleGogglesJsDefault.default));
parcelHelpers.export(exports, "LucideRectangleHorizontal", ()=>(0, _rectangleHorizontalJsDefault.default));
parcelHelpers.export(exports, "RectangleHorizontal", ()=>(0, _rectangleHorizontalJsDefault.default));
parcelHelpers.export(exports, "RectangleHorizontalIcon", ()=>(0, _rectangleHorizontalJsDefault.default));
parcelHelpers.export(exports, "LucideRectangleVertical", ()=>(0, _rectangleVerticalJsDefault.default));
parcelHelpers.export(exports, "RectangleVertical", ()=>(0, _rectangleVerticalJsDefault.default));
parcelHelpers.export(exports, "RectangleVerticalIcon", ()=>(0, _rectangleVerticalJsDefault.default));
parcelHelpers.export(exports, "LucideRecycle", ()=>(0, _recycleJsDefault.default));
parcelHelpers.export(exports, "Recycle", ()=>(0, _recycleJsDefault.default));
parcelHelpers.export(exports, "RecycleIcon", ()=>(0, _recycleJsDefault.default));
parcelHelpers.export(exports, "LucideRedo2", ()=>(0, _redo2JsDefault.default));
parcelHelpers.export(exports, "Redo2", ()=>(0, _redo2JsDefault.default));
parcelHelpers.export(exports, "Redo2Icon", ()=>(0, _redo2JsDefault.default));
parcelHelpers.export(exports, "LucideRedoDot", ()=>(0, _redoDotJsDefault.default));
parcelHelpers.export(exports, "RedoDot", ()=>(0, _redoDotJsDefault.default));
parcelHelpers.export(exports, "RedoDotIcon", ()=>(0, _redoDotJsDefault.default));
parcelHelpers.export(exports, "LucideRefreshCcwDot", ()=>(0, _refreshCcwDotJsDefault.default));
parcelHelpers.export(exports, "RefreshCcwDot", ()=>(0, _refreshCcwDotJsDefault.default));
parcelHelpers.export(exports, "RefreshCcwDotIcon", ()=>(0, _refreshCcwDotJsDefault.default));
parcelHelpers.export(exports, "LucideRedo", ()=>(0, _redoJsDefault.default));
parcelHelpers.export(exports, "Redo", ()=>(0, _redoJsDefault.default));
parcelHelpers.export(exports, "RedoIcon", ()=>(0, _redoJsDefault.default));
parcelHelpers.export(exports, "LucideRefreshCcw", ()=>(0, _refreshCcwJsDefault.default));
parcelHelpers.export(exports, "RefreshCcw", ()=>(0, _refreshCcwJsDefault.default));
parcelHelpers.export(exports, "RefreshCcwIcon", ()=>(0, _refreshCcwJsDefault.default));
parcelHelpers.export(exports, "LucideRefreshCwOff", ()=>(0, _refreshCwOffJsDefault.default));
parcelHelpers.export(exports, "RefreshCwOff", ()=>(0, _refreshCwOffJsDefault.default));
parcelHelpers.export(exports, "RefreshCwOffIcon", ()=>(0, _refreshCwOffJsDefault.default));
parcelHelpers.export(exports, "LucideRefreshCw", ()=>(0, _refreshCwJsDefault.default));
parcelHelpers.export(exports, "RefreshCw", ()=>(0, _refreshCwJsDefault.default));
parcelHelpers.export(exports, "RefreshCwIcon", ()=>(0, _refreshCwJsDefault.default));
parcelHelpers.export(exports, "LucideRefrigerator", ()=>(0, _refrigeratorJsDefault.default));
parcelHelpers.export(exports, "Refrigerator", ()=>(0, _refrigeratorJsDefault.default));
parcelHelpers.export(exports, "RefrigeratorIcon", ()=>(0, _refrigeratorJsDefault.default));
parcelHelpers.export(exports, "LucideRegex", ()=>(0, _regexJsDefault.default));
parcelHelpers.export(exports, "Regex", ()=>(0, _regexJsDefault.default));
parcelHelpers.export(exports, "RegexIcon", ()=>(0, _regexJsDefault.default));
parcelHelpers.export(exports, "LucideRemoveFormatting", ()=>(0, _removeFormattingJsDefault.default));
parcelHelpers.export(exports, "RemoveFormatting", ()=>(0, _removeFormattingJsDefault.default));
parcelHelpers.export(exports, "RemoveFormattingIcon", ()=>(0, _removeFormattingJsDefault.default));
parcelHelpers.export(exports, "LucideRepeat1", ()=>(0, _repeat1JsDefault.default));
parcelHelpers.export(exports, "Repeat1", ()=>(0, _repeat1JsDefault.default));
parcelHelpers.export(exports, "Repeat1Icon", ()=>(0, _repeat1JsDefault.default));
parcelHelpers.export(exports, "LucideRepeat2", ()=>(0, _repeat2JsDefault.default));
parcelHelpers.export(exports, "Repeat2", ()=>(0, _repeat2JsDefault.default));
parcelHelpers.export(exports, "Repeat2Icon", ()=>(0, _repeat2JsDefault.default));
parcelHelpers.export(exports, "LucideRepeat", ()=>(0, _repeatJsDefault.default));
parcelHelpers.export(exports, "Repeat", ()=>(0, _repeatJsDefault.default));
parcelHelpers.export(exports, "RepeatIcon", ()=>(0, _repeatJsDefault.default));
parcelHelpers.export(exports, "LucideReplaceAll", ()=>(0, _replaceAllJsDefault.default));
parcelHelpers.export(exports, "ReplaceAll", ()=>(0, _replaceAllJsDefault.default));
parcelHelpers.export(exports, "ReplaceAllIcon", ()=>(0, _replaceAllJsDefault.default));
parcelHelpers.export(exports, "LucideReplace", ()=>(0, _replaceJsDefault.default));
parcelHelpers.export(exports, "Replace", ()=>(0, _replaceJsDefault.default));
parcelHelpers.export(exports, "ReplaceIcon", ()=>(0, _replaceJsDefault.default));
parcelHelpers.export(exports, "LucideReplyAll", ()=>(0, _replyAllJsDefault.default));
parcelHelpers.export(exports, "ReplyAll", ()=>(0, _replyAllJsDefault.default));
parcelHelpers.export(exports, "ReplyAllIcon", ()=>(0, _replyAllJsDefault.default));
parcelHelpers.export(exports, "LucideReply", ()=>(0, _replyJsDefault.default));
parcelHelpers.export(exports, "Reply", ()=>(0, _replyJsDefault.default));
parcelHelpers.export(exports, "ReplyIcon", ()=>(0, _replyJsDefault.default));
parcelHelpers.export(exports, "LucideRewind", ()=>(0, _rewindJsDefault.default));
parcelHelpers.export(exports, "Rewind", ()=>(0, _rewindJsDefault.default));
parcelHelpers.export(exports, "RewindIcon", ()=>(0, _rewindJsDefault.default));
parcelHelpers.export(exports, "LucideRibbon", ()=>(0, _ribbonJsDefault.default));
parcelHelpers.export(exports, "Ribbon", ()=>(0, _ribbonJsDefault.default));
parcelHelpers.export(exports, "RibbonIcon", ()=>(0, _ribbonJsDefault.default));
parcelHelpers.export(exports, "LucideRocket", ()=>(0, _rocketJsDefault.default));
parcelHelpers.export(exports, "Rocket", ()=>(0, _rocketJsDefault.default));
parcelHelpers.export(exports, "RocketIcon", ()=>(0, _rocketJsDefault.default));
parcelHelpers.export(exports, "LucideRockingChair", ()=>(0, _rockingChairJsDefault.default));
parcelHelpers.export(exports, "RockingChair", ()=>(0, _rockingChairJsDefault.default));
parcelHelpers.export(exports, "RockingChairIcon", ()=>(0, _rockingChairJsDefault.default));
parcelHelpers.export(exports, "LucideRose", ()=>(0, _roseJsDefault.default));
parcelHelpers.export(exports, "Rose", ()=>(0, _roseJsDefault.default));
parcelHelpers.export(exports, "RoseIcon", ()=>(0, _roseJsDefault.default));
parcelHelpers.export(exports, "LucideRollerCoaster", ()=>(0, _rollerCoasterJsDefault.default));
parcelHelpers.export(exports, "RollerCoaster", ()=>(0, _rollerCoasterJsDefault.default));
parcelHelpers.export(exports, "RollerCoasterIcon", ()=>(0, _rollerCoasterJsDefault.default));
parcelHelpers.export(exports, "LucideRotateCcwKey", ()=>(0, _rotateCcwKeyJsDefault.default));
parcelHelpers.export(exports, "RotateCcwKey", ()=>(0, _rotateCcwKeyJsDefault.default));
parcelHelpers.export(exports, "RotateCcwKeyIcon", ()=>(0, _rotateCcwKeyJsDefault.default));
parcelHelpers.export(exports, "LucideRotateCcwSquare", ()=>(0, _rotateCcwSquareJsDefault.default));
parcelHelpers.export(exports, "RotateCcwSquare", ()=>(0, _rotateCcwSquareJsDefault.default));
parcelHelpers.export(exports, "RotateCcwSquareIcon", ()=>(0, _rotateCcwSquareJsDefault.default));
parcelHelpers.export(exports, "LucideRotateCcw", ()=>(0, _rotateCcwJsDefault.default));
parcelHelpers.export(exports, "RotateCcw", ()=>(0, _rotateCcwJsDefault.default));
parcelHelpers.export(exports, "RotateCcwIcon", ()=>(0, _rotateCcwJsDefault.default));
parcelHelpers.export(exports, "LucideRotateCwSquare", ()=>(0, _rotateCwSquareJsDefault.default));
parcelHelpers.export(exports, "RotateCwSquare", ()=>(0, _rotateCwSquareJsDefault.default));
parcelHelpers.export(exports, "RotateCwSquareIcon", ()=>(0, _rotateCwSquareJsDefault.default));
parcelHelpers.export(exports, "LucideRotateCw", ()=>(0, _rotateCwJsDefault.default));
parcelHelpers.export(exports, "RotateCw", ()=>(0, _rotateCwJsDefault.default));
parcelHelpers.export(exports, "RotateCwIcon", ()=>(0, _rotateCwJsDefault.default));
parcelHelpers.export(exports, "LucideRouteOff", ()=>(0, _routeOffJsDefault.default));
parcelHelpers.export(exports, "RouteOff", ()=>(0, _routeOffJsDefault.default));
parcelHelpers.export(exports, "RouteOffIcon", ()=>(0, _routeOffJsDefault.default));
parcelHelpers.export(exports, "LucideRoute", ()=>(0, _routeJsDefault.default));
parcelHelpers.export(exports, "Route", ()=>(0, _routeJsDefault.default));
parcelHelpers.export(exports, "RouteIcon", ()=>(0, _routeJsDefault.default));
parcelHelpers.export(exports, "LucideRouter", ()=>(0, _routerJsDefault.default));
parcelHelpers.export(exports, "Router", ()=>(0, _routerJsDefault.default));
parcelHelpers.export(exports, "RouterIcon", ()=>(0, _routerJsDefault.default));
parcelHelpers.export(exports, "LucideRows4", ()=>(0, _rows4JsDefault.default));
parcelHelpers.export(exports, "Rows4", ()=>(0, _rows4JsDefault.default));
parcelHelpers.export(exports, "Rows4Icon", ()=>(0, _rows4JsDefault.default));
parcelHelpers.export(exports, "LucideRss", ()=>(0, _rssJsDefault.default));
parcelHelpers.export(exports, "Rss", ()=>(0, _rssJsDefault.default));
parcelHelpers.export(exports, "RssIcon", ()=>(0, _rssJsDefault.default));
parcelHelpers.export(exports, "LucideRulerDimensionLine", ()=>(0, _rulerDimensionLineJsDefault.default));
parcelHelpers.export(exports, "RulerDimensionLine", ()=>(0, _rulerDimensionLineJsDefault.default));
parcelHelpers.export(exports, "RulerDimensionLineIcon", ()=>(0, _rulerDimensionLineJsDefault.default));
parcelHelpers.export(exports, "LucideRuler", ()=>(0, _rulerJsDefault.default));
parcelHelpers.export(exports, "Ruler", ()=>(0, _rulerJsDefault.default));
parcelHelpers.export(exports, "RulerIcon", ()=>(0, _rulerJsDefault.default));
parcelHelpers.export(exports, "LucideRussianRuble", ()=>(0, _russianRubleJsDefault.default));
parcelHelpers.export(exports, "RussianRuble", ()=>(0, _russianRubleJsDefault.default));
parcelHelpers.export(exports, "RussianRubleIcon", ()=>(0, _russianRubleJsDefault.default));
parcelHelpers.export(exports, "LucideSailboat", ()=>(0, _sailboatJsDefault.default));
parcelHelpers.export(exports, "Sailboat", ()=>(0, _sailboatJsDefault.default));
parcelHelpers.export(exports, "SailboatIcon", ()=>(0, _sailboatJsDefault.default));
parcelHelpers.export(exports, "LucideSalad", ()=>(0, _saladJsDefault.default));
parcelHelpers.export(exports, "Salad", ()=>(0, _saladJsDefault.default));
parcelHelpers.export(exports, "SaladIcon", ()=>(0, _saladJsDefault.default));
parcelHelpers.export(exports, "LucideSandwich", ()=>(0, _sandwichJsDefault.default));
parcelHelpers.export(exports, "Sandwich", ()=>(0, _sandwichJsDefault.default));
parcelHelpers.export(exports, "SandwichIcon", ()=>(0, _sandwichJsDefault.default));
parcelHelpers.export(exports, "LucideSatelliteDish", ()=>(0, _satelliteDishJsDefault.default));
parcelHelpers.export(exports, "SatelliteDish", ()=>(0, _satelliteDishJsDefault.default));
parcelHelpers.export(exports, "SatelliteDishIcon", ()=>(0, _satelliteDishJsDefault.default));
parcelHelpers.export(exports, "LucideSatellite", ()=>(0, _satelliteJsDefault.default));
parcelHelpers.export(exports, "Satellite", ()=>(0, _satelliteJsDefault.default));
parcelHelpers.export(exports, "SatelliteIcon", ()=>(0, _satelliteJsDefault.default));
parcelHelpers.export(exports, "LucideSaudiRiyal", ()=>(0, _saudiRiyalJsDefault.default));
parcelHelpers.export(exports, "SaudiRiyal", ()=>(0, _saudiRiyalJsDefault.default));
parcelHelpers.export(exports, "SaudiRiyalIcon", ()=>(0, _saudiRiyalJsDefault.default));
parcelHelpers.export(exports, "LucideSaveAll", ()=>(0, _saveAllJsDefault.default));
parcelHelpers.export(exports, "SaveAll", ()=>(0, _saveAllJsDefault.default));
parcelHelpers.export(exports, "SaveAllIcon", ()=>(0, _saveAllJsDefault.default));
parcelHelpers.export(exports, "LucideSaveOff", ()=>(0, _saveOffJsDefault.default));
parcelHelpers.export(exports, "SaveOff", ()=>(0, _saveOffJsDefault.default));
parcelHelpers.export(exports, "SaveOffIcon", ()=>(0, _saveOffJsDefault.default));
parcelHelpers.export(exports, "LucideSave", ()=>(0, _saveJsDefault.default));
parcelHelpers.export(exports, "Save", ()=>(0, _saveJsDefault.default));
parcelHelpers.export(exports, "SaveIcon", ()=>(0, _saveJsDefault.default));
parcelHelpers.export(exports, "LucideScale", ()=>(0, _scaleJsDefault.default));
parcelHelpers.export(exports, "Scale", ()=>(0, _scaleJsDefault.default));
parcelHelpers.export(exports, "ScaleIcon", ()=>(0, _scaleJsDefault.default));
parcelHelpers.export(exports, "LucideScaling", ()=>(0, _scalingJsDefault.default));
parcelHelpers.export(exports, "Scaling", ()=>(0, _scalingJsDefault.default));
parcelHelpers.export(exports, "ScalingIcon", ()=>(0, _scalingJsDefault.default));
parcelHelpers.export(exports, "LucideScanBarcode", ()=>(0, _scanBarcodeJsDefault.default));
parcelHelpers.export(exports, "ScanBarcode", ()=>(0, _scanBarcodeJsDefault.default));
parcelHelpers.export(exports, "ScanBarcodeIcon", ()=>(0, _scanBarcodeJsDefault.default));
parcelHelpers.export(exports, "LucideScanEye", ()=>(0, _scanEyeJsDefault.default));
parcelHelpers.export(exports, "ScanEye", ()=>(0, _scanEyeJsDefault.default));
parcelHelpers.export(exports, "ScanEyeIcon", ()=>(0, _scanEyeJsDefault.default));
parcelHelpers.export(exports, "LucideScanFace", ()=>(0, _scanFaceJsDefault.default));
parcelHelpers.export(exports, "ScanFace", ()=>(0, _scanFaceJsDefault.default));
parcelHelpers.export(exports, "ScanFaceIcon", ()=>(0, _scanFaceJsDefault.default));
parcelHelpers.export(exports, "LucideScanHeart", ()=>(0, _scanHeartJsDefault.default));
parcelHelpers.export(exports, "ScanHeart", ()=>(0, _scanHeartJsDefault.default));
parcelHelpers.export(exports, "ScanHeartIcon", ()=>(0, _scanHeartJsDefault.default));
parcelHelpers.export(exports, "LucideScanLine", ()=>(0, _scanLineJsDefault.default));
parcelHelpers.export(exports, "ScanLine", ()=>(0, _scanLineJsDefault.default));
parcelHelpers.export(exports, "ScanLineIcon", ()=>(0, _scanLineJsDefault.default));
parcelHelpers.export(exports, "LucideScanQrCode", ()=>(0, _scanQrCodeJsDefault.default));
parcelHelpers.export(exports, "ScanQrCode", ()=>(0, _scanQrCodeJsDefault.default));
parcelHelpers.export(exports, "ScanQrCodeIcon", ()=>(0, _scanQrCodeJsDefault.default));
parcelHelpers.export(exports, "LucideScanSearch", ()=>(0, _scanSearchJsDefault.default));
parcelHelpers.export(exports, "ScanSearch", ()=>(0, _scanSearchJsDefault.default));
parcelHelpers.export(exports, "ScanSearchIcon", ()=>(0, _scanSearchJsDefault.default));
parcelHelpers.export(exports, "LucideScanText", ()=>(0, _scanTextJsDefault.default));
parcelHelpers.export(exports, "ScanText", ()=>(0, _scanTextJsDefault.default));
parcelHelpers.export(exports, "ScanTextIcon", ()=>(0, _scanTextJsDefault.default));
parcelHelpers.export(exports, "LucideScan", ()=>(0, _scanJsDefault.default));
parcelHelpers.export(exports, "Scan", ()=>(0, _scanJsDefault.default));
parcelHelpers.export(exports, "ScanIcon", ()=>(0, _scanJsDefault.default));
parcelHelpers.export(exports, "LucideSchool", ()=>(0, _schoolJsDefault.default));
parcelHelpers.export(exports, "School", ()=>(0, _schoolJsDefault.default));
parcelHelpers.export(exports, "SchoolIcon", ()=>(0, _schoolJsDefault.default));
parcelHelpers.export(exports, "LucideScissorsLineDashed", ()=>(0, _scissorsLineDashedJsDefault.default));
parcelHelpers.export(exports, "ScissorsLineDashed", ()=>(0, _scissorsLineDashedJsDefault.default));
parcelHelpers.export(exports, "ScissorsLineDashedIcon", ()=>(0, _scissorsLineDashedJsDefault.default));
parcelHelpers.export(exports, "LucideScissors", ()=>(0, _scissorsJsDefault.default));
parcelHelpers.export(exports, "Scissors", ()=>(0, _scissorsJsDefault.default));
parcelHelpers.export(exports, "ScissorsIcon", ()=>(0, _scissorsJsDefault.default));
parcelHelpers.export(exports, "LucideScreenShare", ()=>(0, _screenShareJsDefault.default));
parcelHelpers.export(exports, "ScreenShare", ()=>(0, _screenShareJsDefault.default));
parcelHelpers.export(exports, "ScreenShareIcon", ()=>(0, _screenShareJsDefault.default));
parcelHelpers.export(exports, "LucideScreenShareOff", ()=>(0, _screenShareOffJsDefault.default));
parcelHelpers.export(exports, "ScreenShareOff", ()=>(0, _screenShareOffJsDefault.default));
parcelHelpers.export(exports, "ScreenShareOffIcon", ()=>(0, _screenShareOffJsDefault.default));
parcelHelpers.export(exports, "LucideScrollText", ()=>(0, _scrollTextJsDefault.default));
parcelHelpers.export(exports, "ScrollText", ()=>(0, _scrollTextJsDefault.default));
parcelHelpers.export(exports, "ScrollTextIcon", ()=>(0, _scrollTextJsDefault.default));
parcelHelpers.export(exports, "LucideScroll", ()=>(0, _scrollJsDefault.default));
parcelHelpers.export(exports, "Scroll", ()=>(0, _scrollJsDefault.default));
parcelHelpers.export(exports, "ScrollIcon", ()=>(0, _scrollJsDefault.default));
parcelHelpers.export(exports, "LucideSearchCheck", ()=>(0, _searchCheckJsDefault.default));
parcelHelpers.export(exports, "SearchCheck", ()=>(0, _searchCheckJsDefault.default));
parcelHelpers.export(exports, "SearchCheckIcon", ()=>(0, _searchCheckJsDefault.default));
parcelHelpers.export(exports, "LucideSearchX", ()=>(0, _searchXJsDefault.default));
parcelHelpers.export(exports, "SearchX", ()=>(0, _searchXJsDefault.default));
parcelHelpers.export(exports, "SearchXIcon", ()=>(0, _searchXJsDefault.default));
parcelHelpers.export(exports, "LucideSearchCode", ()=>(0, _searchCodeJsDefault.default));
parcelHelpers.export(exports, "SearchCode", ()=>(0, _searchCodeJsDefault.default));
parcelHelpers.export(exports, "SearchCodeIcon", ()=>(0, _searchCodeJsDefault.default));
parcelHelpers.export(exports, "LucideSearchSlash", ()=>(0, _searchSlashJsDefault.default));
parcelHelpers.export(exports, "SearchSlash", ()=>(0, _searchSlashJsDefault.default));
parcelHelpers.export(exports, "SearchSlashIcon", ()=>(0, _searchSlashJsDefault.default));
parcelHelpers.export(exports, "LucideSearch", ()=>(0, _searchJsDefault.default));
parcelHelpers.export(exports, "Search", ()=>(0, _searchJsDefault.default));
parcelHelpers.export(exports, "SearchIcon", ()=>(0, _searchJsDefault.default));
parcelHelpers.export(exports, "LucideSection", ()=>(0, _sectionJsDefault.default));
parcelHelpers.export(exports, "Section", ()=>(0, _sectionJsDefault.default));
parcelHelpers.export(exports, "SectionIcon", ()=>(0, _sectionJsDefault.default));
parcelHelpers.export(exports, "LucideSend", ()=>(0, _sendJsDefault.default));
parcelHelpers.export(exports, "Send", ()=>(0, _sendJsDefault.default));
parcelHelpers.export(exports, "SendIcon", ()=>(0, _sendJsDefault.default));
parcelHelpers.export(exports, "LucideSendToBack", ()=>(0, _sendToBackJsDefault.default));
parcelHelpers.export(exports, "SendToBack", ()=>(0, _sendToBackJsDefault.default));
parcelHelpers.export(exports, "SendToBackIcon", ()=>(0, _sendToBackJsDefault.default));
parcelHelpers.export(exports, "LucideSeparatorHorizontal", ()=>(0, _separatorHorizontalJsDefault.default));
parcelHelpers.export(exports, "SeparatorHorizontal", ()=>(0, _separatorHorizontalJsDefault.default));
parcelHelpers.export(exports, "SeparatorHorizontalIcon", ()=>(0, _separatorHorizontalJsDefault.default));
parcelHelpers.export(exports, "LucideSeparatorVertical", ()=>(0, _separatorVerticalJsDefault.default));
parcelHelpers.export(exports, "SeparatorVertical", ()=>(0, _separatorVerticalJsDefault.default));
parcelHelpers.export(exports, "SeparatorVerticalIcon", ()=>(0, _separatorVerticalJsDefault.default));
parcelHelpers.export(exports, "LucideServerCog", ()=>(0, _serverCogJsDefault.default));
parcelHelpers.export(exports, "ServerCog", ()=>(0, _serverCogJsDefault.default));
parcelHelpers.export(exports, "ServerCogIcon", ()=>(0, _serverCogJsDefault.default));
parcelHelpers.export(exports, "LucideServerCrash", ()=>(0, _serverCrashJsDefault.default));
parcelHelpers.export(exports, "ServerCrash", ()=>(0, _serverCrashJsDefault.default));
parcelHelpers.export(exports, "ServerCrashIcon", ()=>(0, _serverCrashJsDefault.default));
parcelHelpers.export(exports, "LucideServerOff", ()=>(0, _serverOffJsDefault.default));
parcelHelpers.export(exports, "ServerOff", ()=>(0, _serverOffJsDefault.default));
parcelHelpers.export(exports, "ServerOffIcon", ()=>(0, _serverOffJsDefault.default));
parcelHelpers.export(exports, "LucideServer", ()=>(0, _serverJsDefault.default));
parcelHelpers.export(exports, "Server", ()=>(0, _serverJsDefault.default));
parcelHelpers.export(exports, "ServerIcon", ()=>(0, _serverJsDefault.default));
parcelHelpers.export(exports, "LucideSettings", ()=>(0, _settingsJsDefault.default));
parcelHelpers.export(exports, "Settings", ()=>(0, _settingsJsDefault.default));
parcelHelpers.export(exports, "SettingsIcon", ()=>(0, _settingsJsDefault.default));
parcelHelpers.export(exports, "LucideSettings2", ()=>(0, _settings2JsDefault.default));
parcelHelpers.export(exports, "Settings2", ()=>(0, _settings2JsDefault.default));
parcelHelpers.export(exports, "Settings2Icon", ()=>(0, _settings2JsDefault.default));
parcelHelpers.export(exports, "LucideShapes", ()=>(0, _shapesJsDefault.default));
parcelHelpers.export(exports, "Shapes", ()=>(0, _shapesJsDefault.default));
parcelHelpers.export(exports, "ShapesIcon", ()=>(0, _shapesJsDefault.default));
parcelHelpers.export(exports, "LucideShare2", ()=>(0, _share2JsDefault.default));
parcelHelpers.export(exports, "Share2", ()=>(0, _share2JsDefault.default));
parcelHelpers.export(exports, "Share2Icon", ()=>(0, _share2JsDefault.default));
parcelHelpers.export(exports, "LucideShare", ()=>(0, _shareJsDefault.default));
parcelHelpers.export(exports, "Share", ()=>(0, _shareJsDefault.default));
parcelHelpers.export(exports, "ShareIcon", ()=>(0, _shareJsDefault.default));
parcelHelpers.export(exports, "LucideSheet", ()=>(0, _sheetJsDefault.default));
parcelHelpers.export(exports, "Sheet", ()=>(0, _sheetJsDefault.default));
parcelHelpers.export(exports, "SheetIcon", ()=>(0, _sheetJsDefault.default));
parcelHelpers.export(exports, "LucideShell", ()=>(0, _shellJsDefault.default));
parcelHelpers.export(exports, "Shell", ()=>(0, _shellJsDefault.default));
parcelHelpers.export(exports, "ShellIcon", ()=>(0, _shellJsDefault.default));
parcelHelpers.export(exports, "LucideShieldAlert", ()=>(0, _shieldAlertJsDefault.default));
parcelHelpers.export(exports, "ShieldAlert", ()=>(0, _shieldAlertJsDefault.default));
parcelHelpers.export(exports, "ShieldAlertIcon", ()=>(0, _shieldAlertJsDefault.default));
parcelHelpers.export(exports, "LucideShieldBan", ()=>(0, _shieldBanJsDefault.default));
parcelHelpers.export(exports, "ShieldBan", ()=>(0, _shieldBanJsDefault.default));
parcelHelpers.export(exports, "ShieldBanIcon", ()=>(0, _shieldBanJsDefault.default));
parcelHelpers.export(exports, "LucideShieldCheck", ()=>(0, _shieldCheckJsDefault.default));
parcelHelpers.export(exports, "ShieldCheck", ()=>(0, _shieldCheckJsDefault.default));
parcelHelpers.export(exports, "ShieldCheckIcon", ()=>(0, _shieldCheckJsDefault.default));
parcelHelpers.export(exports, "LucideShieldEllipsis", ()=>(0, _shieldEllipsisJsDefault.default));
parcelHelpers.export(exports, "ShieldEllipsis", ()=>(0, _shieldEllipsisJsDefault.default));
parcelHelpers.export(exports, "ShieldEllipsisIcon", ()=>(0, _shieldEllipsisJsDefault.default));
parcelHelpers.export(exports, "LucideShieldHalf", ()=>(0, _shieldHalfJsDefault.default));
parcelHelpers.export(exports, "ShieldHalf", ()=>(0, _shieldHalfJsDefault.default));
parcelHelpers.export(exports, "ShieldHalfIcon", ()=>(0, _shieldHalfJsDefault.default));
parcelHelpers.export(exports, "LucideShieldMinus", ()=>(0, _shieldMinusJsDefault.default));
parcelHelpers.export(exports, "ShieldMinus", ()=>(0, _shieldMinusJsDefault.default));
parcelHelpers.export(exports, "ShieldMinusIcon", ()=>(0, _shieldMinusJsDefault.default));
parcelHelpers.export(exports, "LucideShieldOff", ()=>(0, _shieldOffJsDefault.default));
parcelHelpers.export(exports, "ShieldOff", ()=>(0, _shieldOffJsDefault.default));
parcelHelpers.export(exports, "ShieldOffIcon", ()=>(0, _shieldOffJsDefault.default));
parcelHelpers.export(exports, "LucideShieldPlus", ()=>(0, _shieldPlusJsDefault.default));
parcelHelpers.export(exports, "ShieldPlus", ()=>(0, _shieldPlusJsDefault.default));
parcelHelpers.export(exports, "ShieldPlusIcon", ()=>(0, _shieldPlusJsDefault.default));
parcelHelpers.export(exports, "LucideShieldUser", ()=>(0, _shieldUserJsDefault.default));
parcelHelpers.export(exports, "ShieldUser", ()=>(0, _shieldUserJsDefault.default));
parcelHelpers.export(exports, "ShieldUserIcon", ()=>(0, _shieldUserJsDefault.default));
parcelHelpers.export(exports, "LucideShield", ()=>(0, _shieldJsDefault.default));
parcelHelpers.export(exports, "Shield", ()=>(0, _shieldJsDefault.default));
parcelHelpers.export(exports, "ShieldIcon", ()=>(0, _shieldJsDefault.default));
parcelHelpers.export(exports, "LucideShipWheel", ()=>(0, _shipWheelJsDefault.default));
parcelHelpers.export(exports, "ShipWheel", ()=>(0, _shipWheelJsDefault.default));
parcelHelpers.export(exports, "ShipWheelIcon", ()=>(0, _shipWheelJsDefault.default));
parcelHelpers.export(exports, "LucideShip", ()=>(0, _shipJsDefault.default));
parcelHelpers.export(exports, "Ship", ()=>(0, _shipJsDefault.default));
parcelHelpers.export(exports, "ShipIcon", ()=>(0, _shipJsDefault.default));
parcelHelpers.export(exports, "LucideShirt", ()=>(0, _shirtJsDefault.default));
parcelHelpers.export(exports, "Shirt", ()=>(0, _shirtJsDefault.default));
parcelHelpers.export(exports, "ShirtIcon", ()=>(0, _shirtJsDefault.default));
parcelHelpers.export(exports, "LucideShoppingBag", ()=>(0, _shoppingBagJsDefault.default));
parcelHelpers.export(exports, "ShoppingBag", ()=>(0, _shoppingBagJsDefault.default));
parcelHelpers.export(exports, "ShoppingBagIcon", ()=>(0, _shoppingBagJsDefault.default));
parcelHelpers.export(exports, "LucideShoppingBasket", ()=>(0, _shoppingBasketJsDefault.default));
parcelHelpers.export(exports, "ShoppingBasket", ()=>(0, _shoppingBasketJsDefault.default));
parcelHelpers.export(exports, "ShoppingBasketIcon", ()=>(0, _shoppingBasketJsDefault.default));
parcelHelpers.export(exports, "LucideShoppingCart", ()=>(0, _shoppingCartJsDefault.default));
parcelHelpers.export(exports, "ShoppingCart", ()=>(0, _shoppingCartJsDefault.default));
parcelHelpers.export(exports, "ShoppingCartIcon", ()=>(0, _shoppingCartJsDefault.default));
parcelHelpers.export(exports, "LucideShovel", ()=>(0, _shovelJsDefault.default));
parcelHelpers.export(exports, "Shovel", ()=>(0, _shovelJsDefault.default));
parcelHelpers.export(exports, "ShovelIcon", ()=>(0, _shovelJsDefault.default));
parcelHelpers.export(exports, "LucideShowerHead", ()=>(0, _showerHeadJsDefault.default));
parcelHelpers.export(exports, "ShowerHead", ()=>(0, _showerHeadJsDefault.default));
parcelHelpers.export(exports, "ShowerHeadIcon", ()=>(0, _showerHeadJsDefault.default));
parcelHelpers.export(exports, "LucideShredder", ()=>(0, _shredderJsDefault.default));
parcelHelpers.export(exports, "Shredder", ()=>(0, _shredderJsDefault.default));
parcelHelpers.export(exports, "ShredderIcon", ()=>(0, _shredderJsDefault.default));
parcelHelpers.export(exports, "LucideShrimp", ()=>(0, _shrimpJsDefault.default));
parcelHelpers.export(exports, "Shrimp", ()=>(0, _shrimpJsDefault.default));
parcelHelpers.export(exports, "ShrimpIcon", ()=>(0, _shrimpJsDefault.default));
parcelHelpers.export(exports, "LucideShrink", ()=>(0, _shrinkJsDefault.default));
parcelHelpers.export(exports, "Shrink", ()=>(0, _shrinkJsDefault.default));
parcelHelpers.export(exports, "ShrinkIcon", ()=>(0, _shrinkJsDefault.default));
parcelHelpers.export(exports, "LucideShrub", ()=>(0, _shrubJsDefault.default));
parcelHelpers.export(exports, "Shrub", ()=>(0, _shrubJsDefault.default));
parcelHelpers.export(exports, "ShrubIcon", ()=>(0, _shrubJsDefault.default));
parcelHelpers.export(exports, "LucideShuffle", ()=>(0, _shuffleJsDefault.default));
parcelHelpers.export(exports, "Shuffle", ()=>(0, _shuffleJsDefault.default));
parcelHelpers.export(exports, "ShuffleIcon", ()=>(0, _shuffleJsDefault.default));
parcelHelpers.export(exports, "LucideSigma", ()=>(0, _sigmaJsDefault.default));
parcelHelpers.export(exports, "Sigma", ()=>(0, _sigmaJsDefault.default));
parcelHelpers.export(exports, "SigmaIcon", ()=>(0, _sigmaJsDefault.default));
parcelHelpers.export(exports, "LucideSignalHigh", ()=>(0, _signalHighJsDefault.default));
parcelHelpers.export(exports, "SignalHigh", ()=>(0, _signalHighJsDefault.default));
parcelHelpers.export(exports, "SignalHighIcon", ()=>(0, _signalHighJsDefault.default));
parcelHelpers.export(exports, "LucideSignalLow", ()=>(0, _signalLowJsDefault.default));
parcelHelpers.export(exports, "SignalLow", ()=>(0, _signalLowJsDefault.default));
parcelHelpers.export(exports, "SignalLowIcon", ()=>(0, _signalLowJsDefault.default));
parcelHelpers.export(exports, "LucideSignalMedium", ()=>(0, _signalMediumJsDefault.default));
parcelHelpers.export(exports, "SignalMedium", ()=>(0, _signalMediumJsDefault.default));
parcelHelpers.export(exports, "SignalMediumIcon", ()=>(0, _signalMediumJsDefault.default));
parcelHelpers.export(exports, "LucideSignalZero", ()=>(0, _signalZeroJsDefault.default));
parcelHelpers.export(exports, "SignalZero", ()=>(0, _signalZeroJsDefault.default));
parcelHelpers.export(exports, "SignalZeroIcon", ()=>(0, _signalZeroJsDefault.default));
parcelHelpers.export(exports, "LucideSignal", ()=>(0, _signalJsDefault.default));
parcelHelpers.export(exports, "Signal", ()=>(0, _signalJsDefault.default));
parcelHelpers.export(exports, "SignalIcon", ()=>(0, _signalJsDefault.default));
parcelHelpers.export(exports, "LucideSignature", ()=>(0, _signatureJsDefault.default));
parcelHelpers.export(exports, "Signature", ()=>(0, _signatureJsDefault.default));
parcelHelpers.export(exports, "SignatureIcon", ()=>(0, _signatureJsDefault.default));
parcelHelpers.export(exports, "LucideSignpostBig", ()=>(0, _signpostBigJsDefault.default));
parcelHelpers.export(exports, "SignpostBig", ()=>(0, _signpostBigJsDefault.default));
parcelHelpers.export(exports, "SignpostBigIcon", ()=>(0, _signpostBigJsDefault.default));
parcelHelpers.export(exports, "LucideSignpost", ()=>(0, _signpostJsDefault.default));
parcelHelpers.export(exports, "Signpost", ()=>(0, _signpostJsDefault.default));
parcelHelpers.export(exports, "SignpostIcon", ()=>(0, _signpostJsDefault.default));
parcelHelpers.export(exports, "LucideSiren", ()=>(0, _sirenJsDefault.default));
parcelHelpers.export(exports, "Siren", ()=>(0, _sirenJsDefault.default));
parcelHelpers.export(exports, "SirenIcon", ()=>(0, _sirenJsDefault.default));
parcelHelpers.export(exports, "LucideSkipBack", ()=>(0, _skipBackJsDefault.default));
parcelHelpers.export(exports, "SkipBack", ()=>(0, _skipBackJsDefault.default));
parcelHelpers.export(exports, "SkipBackIcon", ()=>(0, _skipBackJsDefault.default));
parcelHelpers.export(exports, "LucideSkipForward", ()=>(0, _skipForwardJsDefault.default));
parcelHelpers.export(exports, "SkipForward", ()=>(0, _skipForwardJsDefault.default));
parcelHelpers.export(exports, "SkipForwardIcon", ()=>(0, _skipForwardJsDefault.default));
parcelHelpers.export(exports, "LucideSkull", ()=>(0, _skullJsDefault.default));
parcelHelpers.export(exports, "Skull", ()=>(0, _skullJsDefault.default));
parcelHelpers.export(exports, "SkullIcon", ()=>(0, _skullJsDefault.default));
parcelHelpers.export(exports, "LucideSlack", ()=>(0, _slackJsDefault.default));
parcelHelpers.export(exports, "Slack", ()=>(0, _slackJsDefault.default));
parcelHelpers.export(exports, "SlackIcon", ()=>(0, _slackJsDefault.default));
parcelHelpers.export(exports, "LucideSlash", ()=>(0, _slashJsDefault.default));
parcelHelpers.export(exports, "Slash", ()=>(0, _slashJsDefault.default));
parcelHelpers.export(exports, "SlashIcon", ()=>(0, _slashJsDefault.default));
parcelHelpers.export(exports, "LucideSlice", ()=>(0, _sliceJsDefault.default));
parcelHelpers.export(exports, "Slice", ()=>(0, _sliceJsDefault.default));
parcelHelpers.export(exports, "SliceIcon", ()=>(0, _sliceJsDefault.default));
parcelHelpers.export(exports, "LucideSlidersHorizontal", ()=>(0, _slidersHorizontalJsDefault.default));
parcelHelpers.export(exports, "SlidersHorizontal", ()=>(0, _slidersHorizontalJsDefault.default));
parcelHelpers.export(exports, "SlidersHorizontalIcon", ()=>(0, _slidersHorizontalJsDefault.default));
parcelHelpers.export(exports, "LucideSmartphoneCharging", ()=>(0, _smartphoneChargingJsDefault.default));
parcelHelpers.export(exports, "SmartphoneCharging", ()=>(0, _smartphoneChargingJsDefault.default));
parcelHelpers.export(exports, "SmartphoneChargingIcon", ()=>(0, _smartphoneChargingJsDefault.default));
parcelHelpers.export(exports, "LucideSmartphoneNfc", ()=>(0, _smartphoneNfcJsDefault.default));
parcelHelpers.export(exports, "SmartphoneNfc", ()=>(0, _smartphoneNfcJsDefault.default));
parcelHelpers.export(exports, "SmartphoneNfcIcon", ()=>(0, _smartphoneNfcJsDefault.default));
parcelHelpers.export(exports, "LucideSmartphone", ()=>(0, _smartphoneJsDefault.default));
parcelHelpers.export(exports, "Smartphone", ()=>(0, _smartphoneJsDefault.default));
parcelHelpers.export(exports, "SmartphoneIcon", ()=>(0, _smartphoneJsDefault.default));
parcelHelpers.export(exports, "LucideSmilePlus", ()=>(0, _smilePlusJsDefault.default));
parcelHelpers.export(exports, "SmilePlus", ()=>(0, _smilePlusJsDefault.default));
parcelHelpers.export(exports, "SmilePlusIcon", ()=>(0, _smilePlusJsDefault.default));
parcelHelpers.export(exports, "LucideSmile", ()=>(0, _smileJsDefault.default));
parcelHelpers.export(exports, "Smile", ()=>(0, _smileJsDefault.default));
parcelHelpers.export(exports, "SmileIcon", ()=>(0, _smileJsDefault.default));
parcelHelpers.export(exports, "LucideSnail", ()=>(0, _snailJsDefault.default));
parcelHelpers.export(exports, "Snail", ()=>(0, _snailJsDefault.default));
parcelHelpers.export(exports, "SnailIcon", ()=>(0, _snailJsDefault.default));
parcelHelpers.export(exports, "LucideSnowflake", ()=>(0, _snowflakeJsDefault.default));
parcelHelpers.export(exports, "Snowflake", ()=>(0, _snowflakeJsDefault.default));
parcelHelpers.export(exports, "SnowflakeIcon", ()=>(0, _snowflakeJsDefault.default));
parcelHelpers.export(exports, "LucideSoapDispenserDroplet", ()=>(0, _soapDispenserDropletJsDefault.default));
parcelHelpers.export(exports, "SoapDispenserDroplet", ()=>(0, _soapDispenserDropletJsDefault.default));
parcelHelpers.export(exports, "SoapDispenserDropletIcon", ()=>(0, _soapDispenserDropletJsDefault.default));
parcelHelpers.export(exports, "LucideSofa", ()=>(0, _sofaJsDefault.default));
parcelHelpers.export(exports, "Sofa", ()=>(0, _sofaJsDefault.default));
parcelHelpers.export(exports, "SofaIcon", ()=>(0, _sofaJsDefault.default));
parcelHelpers.export(exports, "LucideSoup", ()=>(0, _soupJsDefault.default));
parcelHelpers.export(exports, "Soup", ()=>(0, _soupJsDefault.default));
parcelHelpers.export(exports, "SoupIcon", ()=>(0, _soupJsDefault.default));
parcelHelpers.export(exports, "LucideSpade", ()=>(0, _spadeJsDefault.default));
parcelHelpers.export(exports, "Spade", ()=>(0, _spadeJsDefault.default));
parcelHelpers.export(exports, "SpadeIcon", ()=>(0, _spadeJsDefault.default));
parcelHelpers.export(exports, "LucideSpace", ()=>(0, _spaceJsDefault.default));
parcelHelpers.export(exports, "Space", ()=>(0, _spaceJsDefault.default));
parcelHelpers.export(exports, "SpaceIcon", ()=>(0, _spaceJsDefault.default));
parcelHelpers.export(exports, "LucideSparkle", ()=>(0, _sparkleJsDefault.default));
parcelHelpers.export(exports, "Sparkle", ()=>(0, _sparkleJsDefault.default));
parcelHelpers.export(exports, "SparkleIcon", ()=>(0, _sparkleJsDefault.default));
parcelHelpers.export(exports, "LucideSpeaker", ()=>(0, _speakerJsDefault.default));
parcelHelpers.export(exports, "Speaker", ()=>(0, _speakerJsDefault.default));
parcelHelpers.export(exports, "SpeakerIcon", ()=>(0, _speakerJsDefault.default));
parcelHelpers.export(exports, "LucideSpeech", ()=>(0, _speechJsDefault.default));
parcelHelpers.export(exports, "Speech", ()=>(0, _speechJsDefault.default));
parcelHelpers.export(exports, "SpeechIcon", ()=>(0, _speechJsDefault.default));
parcelHelpers.export(exports, "LucideSpellCheck2", ()=>(0, _spellCheck2JsDefault.default));
parcelHelpers.export(exports, "SpellCheck2", ()=>(0, _spellCheck2JsDefault.default));
parcelHelpers.export(exports, "SpellCheck2Icon", ()=>(0, _spellCheck2JsDefault.default));
parcelHelpers.export(exports, "LucideSpellCheck", ()=>(0, _spellCheckJsDefault.default));
parcelHelpers.export(exports, "SpellCheck", ()=>(0, _spellCheckJsDefault.default));
parcelHelpers.export(exports, "SpellCheckIcon", ()=>(0, _spellCheckJsDefault.default));
parcelHelpers.export(exports, "LucideSpline", ()=>(0, _splineJsDefault.default));
parcelHelpers.export(exports, "Spline", ()=>(0, _splineJsDefault.default));
parcelHelpers.export(exports, "SplineIcon", ()=>(0, _splineJsDefault.default));
parcelHelpers.export(exports, "LucideSplinePointer", ()=>(0, _splinePointerJsDefault.default));
parcelHelpers.export(exports, "SplinePointer", ()=>(0, _splinePointerJsDefault.default));
parcelHelpers.export(exports, "SplinePointerIcon", ()=>(0, _splinePointerJsDefault.default));
parcelHelpers.export(exports, "LucideSplit", ()=>(0, _splitJsDefault.default));
parcelHelpers.export(exports, "Split", ()=>(0, _splitJsDefault.default));
parcelHelpers.export(exports, "SplitIcon", ()=>(0, _splitJsDefault.default));
parcelHelpers.export(exports, "LucideSpotlight", ()=>(0, _spotlightJsDefault.default));
parcelHelpers.export(exports, "Spotlight", ()=>(0, _spotlightJsDefault.default));
parcelHelpers.export(exports, "SpotlightIcon", ()=>(0, _spotlightJsDefault.default));
parcelHelpers.export(exports, "LucideSpool", ()=>(0, _spoolJsDefault.default));
parcelHelpers.export(exports, "Spool", ()=>(0, _spoolJsDefault.default));
parcelHelpers.export(exports, "SpoolIcon", ()=>(0, _spoolJsDefault.default));
parcelHelpers.export(exports, "LucideSprayCan", ()=>(0, _sprayCanJsDefault.default));
parcelHelpers.export(exports, "SprayCan", ()=>(0, _sprayCanJsDefault.default));
parcelHelpers.export(exports, "SprayCanIcon", ()=>(0, _sprayCanJsDefault.default));
parcelHelpers.export(exports, "LucideSprout", ()=>(0, _sproutJsDefault.default));
parcelHelpers.export(exports, "Sprout", ()=>(0, _sproutJsDefault.default));
parcelHelpers.export(exports, "SproutIcon", ()=>(0, _sproutJsDefault.default));
parcelHelpers.export(exports, "LucideSquareDashedBottomCode", ()=>(0, _squareDashedBottomCodeJsDefault.default));
parcelHelpers.export(exports, "SquareDashedBottomCode", ()=>(0, _squareDashedBottomCodeJsDefault.default));
parcelHelpers.export(exports, "SquareDashedBottomCodeIcon", ()=>(0, _squareDashedBottomCodeJsDefault.default));
parcelHelpers.export(exports, "LucideSquareDashedBottom", ()=>(0, _squareDashedBottomJsDefault.default));
parcelHelpers.export(exports, "SquareDashedBottom", ()=>(0, _squareDashedBottomJsDefault.default));
parcelHelpers.export(exports, "SquareDashedBottomIcon", ()=>(0, _squareDashedBottomJsDefault.default));
parcelHelpers.export(exports, "LucideSquareDashedTopSolid", ()=>(0, _squareDashedTopSolidJsDefault.default));
parcelHelpers.export(exports, "SquareDashedTopSolid", ()=>(0, _squareDashedTopSolidJsDefault.default));
parcelHelpers.export(exports, "SquareDashedTopSolidIcon", ()=>(0, _squareDashedTopSolidJsDefault.default));
parcelHelpers.export(exports, "LucideSquarePause", ()=>(0, _squarePauseJsDefault.default));
parcelHelpers.export(exports, "SquarePause", ()=>(0, _squarePauseJsDefault.default));
parcelHelpers.export(exports, "SquarePauseIcon", ()=>(0, _squarePauseJsDefault.default));
parcelHelpers.export(exports, "LucideSquareRadical", ()=>(0, _squareRadicalJsDefault.default));
parcelHelpers.export(exports, "SquareRadical", ()=>(0, _squareRadicalJsDefault.default));
parcelHelpers.export(exports, "SquareRadicalIcon", ()=>(0, _squareRadicalJsDefault.default));
parcelHelpers.export(exports, "LucideSquareRoundCorner", ()=>(0, _squareRoundCornerJsDefault.default));
parcelHelpers.export(exports, "SquareRoundCorner", ()=>(0, _squareRoundCornerJsDefault.default));
parcelHelpers.export(exports, "SquareRoundCornerIcon", ()=>(0, _squareRoundCornerJsDefault.default));
parcelHelpers.export(exports, "LucideSquareSquare", ()=>(0, _squareSquareJsDefault.default));
parcelHelpers.export(exports, "SquareSquare", ()=>(0, _squareSquareJsDefault.default));
parcelHelpers.export(exports, "SquareSquareIcon", ()=>(0, _squareSquareJsDefault.default));
parcelHelpers.export(exports, "LucideSquareStack", ()=>(0, _squareStackJsDefault.default));
parcelHelpers.export(exports, "SquareStack", ()=>(0, _squareStackJsDefault.default));
parcelHelpers.export(exports, "SquareStackIcon", ()=>(0, _squareStackJsDefault.default));
parcelHelpers.export(exports, "LucideSquareStar", ()=>(0, _squareStarJsDefault.default));
parcelHelpers.export(exports, "SquareStar", ()=>(0, _squareStarJsDefault.default));
parcelHelpers.export(exports, "SquareStarIcon", ()=>(0, _squareStarJsDefault.default));
parcelHelpers.export(exports, "LucideSquareStop", ()=>(0, _squareStopJsDefault.default));
parcelHelpers.export(exports, "SquareStop", ()=>(0, _squareStopJsDefault.default));
parcelHelpers.export(exports, "SquareStopIcon", ()=>(0, _squareStopJsDefault.default));
parcelHelpers.export(exports, "LucideSquare", ()=>(0, _squareJsDefault.default));
parcelHelpers.export(exports, "Square", ()=>(0, _squareJsDefault.default));
parcelHelpers.export(exports, "SquareIcon", ()=>(0, _squareJsDefault.default));
parcelHelpers.export(exports, "LucideSquaresExclude", ()=>(0, _squaresExcludeJsDefault.default));
parcelHelpers.export(exports, "SquaresExclude", ()=>(0, _squaresExcludeJsDefault.default));
parcelHelpers.export(exports, "SquaresExcludeIcon", ()=>(0, _squaresExcludeJsDefault.default));
parcelHelpers.export(exports, "LucideSquaresIntersect", ()=>(0, _squaresIntersectJsDefault.default));
parcelHelpers.export(exports, "SquaresIntersect", ()=>(0, _squaresIntersectJsDefault.default));
parcelHelpers.export(exports, "SquaresIntersectIcon", ()=>(0, _squaresIntersectJsDefault.default));
parcelHelpers.export(exports, "LucideSquaresSubtract", ()=>(0, _squaresSubtractJsDefault.default));
parcelHelpers.export(exports, "SquaresSubtract", ()=>(0, _squaresSubtractJsDefault.default));
parcelHelpers.export(exports, "SquaresSubtractIcon", ()=>(0, _squaresSubtractJsDefault.default));
parcelHelpers.export(exports, "LucideSquaresUnite", ()=>(0, _squaresUniteJsDefault.default));
parcelHelpers.export(exports, "SquaresUnite", ()=>(0, _squaresUniteJsDefault.default));
parcelHelpers.export(exports, "SquaresUniteIcon", ()=>(0, _squaresUniteJsDefault.default));
parcelHelpers.export(exports, "LucideSquircleDashed", ()=>(0, _squircleDashedJsDefault.default));
parcelHelpers.export(exports, "SquircleDashed", ()=>(0, _squircleDashedJsDefault.default));
parcelHelpers.export(exports, "SquircleDashedIcon", ()=>(0, _squircleDashedJsDefault.default));
parcelHelpers.export(exports, "LucideSquircle", ()=>(0, _squircleJsDefault.default));
parcelHelpers.export(exports, "Squircle", ()=>(0, _squircleJsDefault.default));
parcelHelpers.export(exports, "SquircleIcon", ()=>(0, _squircleJsDefault.default));
parcelHelpers.export(exports, "LucideSquirrel", ()=>(0, _squirrelJsDefault.default));
parcelHelpers.export(exports, "Squirrel", ()=>(0, _squirrelJsDefault.default));
parcelHelpers.export(exports, "SquirrelIcon", ()=>(0, _squirrelJsDefault.default));
parcelHelpers.export(exports, "LucideStamp", ()=>(0, _stampJsDefault.default));
parcelHelpers.export(exports, "Stamp", ()=>(0, _stampJsDefault.default));
parcelHelpers.export(exports, "StampIcon", ()=>(0, _stampJsDefault.default));
parcelHelpers.export(exports, "LucideStarHalf", ()=>(0, _starHalfJsDefault.default));
parcelHelpers.export(exports, "StarHalf", ()=>(0, _starHalfJsDefault.default));
parcelHelpers.export(exports, "StarHalfIcon", ()=>(0, _starHalfJsDefault.default));
parcelHelpers.export(exports, "LucideStar", ()=>(0, _starJsDefault.default));
parcelHelpers.export(exports, "Star", ()=>(0, _starJsDefault.default));
parcelHelpers.export(exports, "StarIcon", ()=>(0, _starJsDefault.default));
parcelHelpers.export(exports, "LucideStarOff", ()=>(0, _starOffJsDefault.default));
parcelHelpers.export(exports, "StarOff", ()=>(0, _starOffJsDefault.default));
parcelHelpers.export(exports, "StarOffIcon", ()=>(0, _starOffJsDefault.default));
parcelHelpers.export(exports, "LucideStepBack", ()=>(0, _stepBackJsDefault.default));
parcelHelpers.export(exports, "StepBack", ()=>(0, _stepBackJsDefault.default));
parcelHelpers.export(exports, "StepBackIcon", ()=>(0, _stepBackJsDefault.default));
parcelHelpers.export(exports, "LucideStepForward", ()=>(0, _stepForwardJsDefault.default));
parcelHelpers.export(exports, "StepForward", ()=>(0, _stepForwardJsDefault.default));
parcelHelpers.export(exports, "StepForwardIcon", ()=>(0, _stepForwardJsDefault.default));
parcelHelpers.export(exports, "LucideStethoscope", ()=>(0, _stethoscopeJsDefault.default));
parcelHelpers.export(exports, "Stethoscope", ()=>(0, _stethoscopeJsDefault.default));
parcelHelpers.export(exports, "StethoscopeIcon", ()=>(0, _stethoscopeJsDefault.default));
parcelHelpers.export(exports, "LucideSticker", ()=>(0, _stickerJsDefault.default));
parcelHelpers.export(exports, "Sticker", ()=>(0, _stickerJsDefault.default));
parcelHelpers.export(exports, "StickerIcon", ()=>(0, _stickerJsDefault.default));
parcelHelpers.export(exports, "LucideStickyNote", ()=>(0, _stickyNoteJsDefault.default));
parcelHelpers.export(exports, "StickyNote", ()=>(0, _stickyNoteJsDefault.default));
parcelHelpers.export(exports, "StickyNoteIcon", ()=>(0, _stickyNoteJsDefault.default));
parcelHelpers.export(exports, "LucideStore", ()=>(0, _storeJsDefault.default));
parcelHelpers.export(exports, "Store", ()=>(0, _storeJsDefault.default));
parcelHelpers.export(exports, "StoreIcon", ()=>(0, _storeJsDefault.default));
parcelHelpers.export(exports, "LucideStretchHorizontal", ()=>(0, _stretchHorizontalJsDefault.default));
parcelHelpers.export(exports, "StretchHorizontal", ()=>(0, _stretchHorizontalJsDefault.default));
parcelHelpers.export(exports, "StretchHorizontalIcon", ()=>(0, _stretchHorizontalJsDefault.default));
parcelHelpers.export(exports, "LucideStretchVertical", ()=>(0, _stretchVerticalJsDefault.default));
parcelHelpers.export(exports, "StretchVertical", ()=>(0, _stretchVerticalJsDefault.default));
parcelHelpers.export(exports, "StretchVerticalIcon", ()=>(0, _stretchVerticalJsDefault.default));
parcelHelpers.export(exports, "LucideStrikethrough", ()=>(0, _strikethroughJsDefault.default));
parcelHelpers.export(exports, "Strikethrough", ()=>(0, _strikethroughJsDefault.default));
parcelHelpers.export(exports, "StrikethroughIcon", ()=>(0, _strikethroughJsDefault.default));
parcelHelpers.export(exports, "LucideSubscript", ()=>(0, _subscriptJsDefault.default));
parcelHelpers.export(exports, "Subscript", ()=>(0, _subscriptJsDefault.default));
parcelHelpers.export(exports, "SubscriptIcon", ()=>(0, _subscriptJsDefault.default));
parcelHelpers.export(exports, "LucideSunDim", ()=>(0, _sunDimJsDefault.default));
parcelHelpers.export(exports, "SunDim", ()=>(0, _sunDimJsDefault.default));
parcelHelpers.export(exports, "SunDimIcon", ()=>(0, _sunDimJsDefault.default));
parcelHelpers.export(exports, "LucideSunMedium", ()=>(0, _sunMediumJsDefault.default));
parcelHelpers.export(exports, "SunMedium", ()=>(0, _sunMediumJsDefault.default));
parcelHelpers.export(exports, "SunMediumIcon", ()=>(0, _sunMediumJsDefault.default));
parcelHelpers.export(exports, "LucideSunMoon", ()=>(0, _sunMoonJsDefault.default));
parcelHelpers.export(exports, "SunMoon", ()=>(0, _sunMoonJsDefault.default));
parcelHelpers.export(exports, "SunMoonIcon", ()=>(0, _sunMoonJsDefault.default));
parcelHelpers.export(exports, "LucideSunSnow", ()=>(0, _sunSnowJsDefault.default));
parcelHelpers.export(exports, "SunSnow", ()=>(0, _sunSnowJsDefault.default));
parcelHelpers.export(exports, "SunSnowIcon", ()=>(0, _sunSnowJsDefault.default));
parcelHelpers.export(exports, "LucideSun", ()=>(0, _sunJsDefault.default));
parcelHelpers.export(exports, "Sun", ()=>(0, _sunJsDefault.default));
parcelHelpers.export(exports, "SunIcon", ()=>(0, _sunJsDefault.default));
parcelHelpers.export(exports, "LucideSunrise", ()=>(0, _sunriseJsDefault.default));
parcelHelpers.export(exports, "Sunrise", ()=>(0, _sunriseJsDefault.default));
parcelHelpers.export(exports, "SunriseIcon", ()=>(0, _sunriseJsDefault.default));
parcelHelpers.export(exports, "LucideSunset", ()=>(0, _sunsetJsDefault.default));
parcelHelpers.export(exports, "Sunset", ()=>(0, _sunsetJsDefault.default));
parcelHelpers.export(exports, "SunsetIcon", ()=>(0, _sunsetJsDefault.default));
parcelHelpers.export(exports, "LucideSuperscript", ()=>(0, _superscriptJsDefault.default));
parcelHelpers.export(exports, "Superscript", ()=>(0, _superscriptJsDefault.default));
parcelHelpers.export(exports, "SuperscriptIcon", ()=>(0, _superscriptJsDefault.default));
parcelHelpers.export(exports, "LucideSwatchBook", ()=>(0, _swatchBookJsDefault.default));
parcelHelpers.export(exports, "SwatchBook", ()=>(0, _swatchBookJsDefault.default));
parcelHelpers.export(exports, "SwatchBookIcon", ()=>(0, _swatchBookJsDefault.default));
parcelHelpers.export(exports, "LucideSwissFranc", ()=>(0, _swissFrancJsDefault.default));
parcelHelpers.export(exports, "SwissFranc", ()=>(0, _swissFrancJsDefault.default));
parcelHelpers.export(exports, "SwissFrancIcon", ()=>(0, _swissFrancJsDefault.default));
parcelHelpers.export(exports, "LucideSwitchCamera", ()=>(0, _switchCameraJsDefault.default));
parcelHelpers.export(exports, "SwitchCamera", ()=>(0, _switchCameraJsDefault.default));
parcelHelpers.export(exports, "SwitchCameraIcon", ()=>(0, _switchCameraJsDefault.default));
parcelHelpers.export(exports, "LucideSword", ()=>(0, _swordJsDefault.default));
parcelHelpers.export(exports, "Sword", ()=>(0, _swordJsDefault.default));
parcelHelpers.export(exports, "SwordIcon", ()=>(0, _swordJsDefault.default));
parcelHelpers.export(exports, "LucideSwords", ()=>(0, _swordsJsDefault.default));
parcelHelpers.export(exports, "Swords", ()=>(0, _swordsJsDefault.default));
parcelHelpers.export(exports, "SwordsIcon", ()=>(0, _swordsJsDefault.default));
parcelHelpers.export(exports, "LucideSyringe", ()=>(0, _syringeJsDefault.default));
parcelHelpers.export(exports, "Syringe", ()=>(0, _syringeJsDefault.default));
parcelHelpers.export(exports, "SyringeIcon", ()=>(0, _syringeJsDefault.default));
parcelHelpers.export(exports, "LucideTable2", ()=>(0, _table2JsDefault.default));
parcelHelpers.export(exports, "Table2", ()=>(0, _table2JsDefault.default));
parcelHelpers.export(exports, "Table2Icon", ()=>(0, _table2JsDefault.default));
parcelHelpers.export(exports, "LucideTableCellsMerge", ()=>(0, _tableCellsMergeJsDefault.default));
parcelHelpers.export(exports, "TableCellsMerge", ()=>(0, _tableCellsMergeJsDefault.default));
parcelHelpers.export(exports, "TableCellsMergeIcon", ()=>(0, _tableCellsMergeJsDefault.default));
parcelHelpers.export(exports, "LucideTableCellsSplit", ()=>(0, _tableCellsSplitJsDefault.default));
parcelHelpers.export(exports, "TableCellsSplit", ()=>(0, _tableCellsSplitJsDefault.default));
parcelHelpers.export(exports, "TableCellsSplitIcon", ()=>(0, _tableCellsSplitJsDefault.default));
parcelHelpers.export(exports, "LucideTableColumnsSplit", ()=>(0, _tableColumnsSplitJsDefault.default));
parcelHelpers.export(exports, "TableColumnsSplit", ()=>(0, _tableColumnsSplitJsDefault.default));
parcelHelpers.export(exports, "TableColumnsSplitIcon", ()=>(0, _tableColumnsSplitJsDefault.default));
parcelHelpers.export(exports, "LucideTableProperties", ()=>(0, _tablePropertiesJsDefault.default));
parcelHelpers.export(exports, "TableProperties", ()=>(0, _tablePropertiesJsDefault.default));
parcelHelpers.export(exports, "TablePropertiesIcon", ()=>(0, _tablePropertiesJsDefault.default));
parcelHelpers.export(exports, "LucideTableOfContents", ()=>(0, _tableOfContentsJsDefault.default));
parcelHelpers.export(exports, "TableOfContents", ()=>(0, _tableOfContentsJsDefault.default));
parcelHelpers.export(exports, "TableOfContentsIcon", ()=>(0, _tableOfContentsJsDefault.default));
parcelHelpers.export(exports, "LucideTableRowsSplit", ()=>(0, _tableRowsSplitJsDefault.default));
parcelHelpers.export(exports, "TableRowsSplit", ()=>(0, _tableRowsSplitJsDefault.default));
parcelHelpers.export(exports, "TableRowsSplitIcon", ()=>(0, _tableRowsSplitJsDefault.default));
parcelHelpers.export(exports, "LucideTable", ()=>(0, _tableJsDefault.default));
parcelHelpers.export(exports, "Table", ()=>(0, _tableJsDefault.default));
parcelHelpers.export(exports, "TableIcon", ()=>(0, _tableJsDefault.default));
parcelHelpers.export(exports, "LucideTabletSmartphone", ()=>(0, _tabletSmartphoneJsDefault.default));
parcelHelpers.export(exports, "TabletSmartphone", ()=>(0, _tabletSmartphoneJsDefault.default));
parcelHelpers.export(exports, "TabletSmartphoneIcon", ()=>(0, _tabletSmartphoneJsDefault.default));
parcelHelpers.export(exports, "LucideTablet", ()=>(0, _tabletJsDefault.default));
parcelHelpers.export(exports, "Tablet", ()=>(0, _tabletJsDefault.default));
parcelHelpers.export(exports, "TabletIcon", ()=>(0, _tabletJsDefault.default));
parcelHelpers.export(exports, "LucideTablets", ()=>(0, _tabletsJsDefault.default));
parcelHelpers.export(exports, "Tablets", ()=>(0, _tabletsJsDefault.default));
parcelHelpers.export(exports, "TabletsIcon", ()=>(0, _tabletsJsDefault.default));
parcelHelpers.export(exports, "LucideTags", ()=>(0, _tagsJsDefault.default));
parcelHelpers.export(exports, "Tags", ()=>(0, _tagsJsDefault.default));
parcelHelpers.export(exports, "TagsIcon", ()=>(0, _tagsJsDefault.default));
parcelHelpers.export(exports, "LucideTag", ()=>(0, _tagJsDefault.default));
parcelHelpers.export(exports, "Tag", ()=>(0, _tagJsDefault.default));
parcelHelpers.export(exports, "TagIcon", ()=>(0, _tagJsDefault.default));
parcelHelpers.export(exports, "LucideTally1", ()=>(0, _tally1JsDefault.default));
parcelHelpers.export(exports, "Tally1", ()=>(0, _tally1JsDefault.default));
parcelHelpers.export(exports, "Tally1Icon", ()=>(0, _tally1JsDefault.default));
parcelHelpers.export(exports, "LucideTally2", ()=>(0, _tally2JsDefault.default));
parcelHelpers.export(exports, "Tally2", ()=>(0, _tally2JsDefault.default));
parcelHelpers.export(exports, "Tally2Icon", ()=>(0, _tally2JsDefault.default));
parcelHelpers.export(exports, "LucideTally3", ()=>(0, _tally3JsDefault.default));
parcelHelpers.export(exports, "Tally3", ()=>(0, _tally3JsDefault.default));
parcelHelpers.export(exports, "Tally3Icon", ()=>(0, _tally3JsDefault.default));
parcelHelpers.export(exports, "LucideTally4", ()=>(0, _tally4JsDefault.default));
parcelHelpers.export(exports, "Tally4", ()=>(0, _tally4JsDefault.default));
parcelHelpers.export(exports, "Tally4Icon", ()=>(0, _tally4JsDefault.default));
parcelHelpers.export(exports, "LucideTangent", ()=>(0, _tangentJsDefault.default));
parcelHelpers.export(exports, "Tangent", ()=>(0, _tangentJsDefault.default));
parcelHelpers.export(exports, "TangentIcon", ()=>(0, _tangentJsDefault.default));
parcelHelpers.export(exports, "LucideTally5", ()=>(0, _tally5JsDefault.default));
parcelHelpers.export(exports, "Tally5", ()=>(0, _tally5JsDefault.default));
parcelHelpers.export(exports, "Tally5Icon", ()=>(0, _tally5JsDefault.default));
parcelHelpers.export(exports, "LucideTarget", ()=>(0, _targetJsDefault.default));
parcelHelpers.export(exports, "Target", ()=>(0, _targetJsDefault.default));
parcelHelpers.export(exports, "TargetIcon", ()=>(0, _targetJsDefault.default));
parcelHelpers.export(exports, "LucideTelescope", ()=>(0, _telescopeJsDefault.default));
parcelHelpers.export(exports, "Telescope", ()=>(0, _telescopeJsDefault.default));
parcelHelpers.export(exports, "TelescopeIcon", ()=>(0, _telescopeJsDefault.default));
parcelHelpers.export(exports, "LucideTentTree", ()=>(0, _tentTreeJsDefault.default));
parcelHelpers.export(exports, "TentTree", ()=>(0, _tentTreeJsDefault.default));
parcelHelpers.export(exports, "TentTreeIcon", ()=>(0, _tentTreeJsDefault.default));
parcelHelpers.export(exports, "LucideTent", ()=>(0, _tentJsDefault.default));
parcelHelpers.export(exports, "Tent", ()=>(0, _tentJsDefault.default));
parcelHelpers.export(exports, "TentIcon", ()=>(0, _tentJsDefault.default));
parcelHelpers.export(exports, "LucideTerminal", ()=>(0, _terminalJsDefault.default));
parcelHelpers.export(exports, "Terminal", ()=>(0, _terminalJsDefault.default));
parcelHelpers.export(exports, "TerminalIcon", ()=>(0, _terminalJsDefault.default));
parcelHelpers.export(exports, "LucideTestTube", ()=>(0, _testTubeJsDefault.default));
parcelHelpers.export(exports, "TestTube", ()=>(0, _testTubeJsDefault.default));
parcelHelpers.export(exports, "TestTubeIcon", ()=>(0, _testTubeJsDefault.default));
parcelHelpers.export(exports, "LucideTestTubes", ()=>(0, _testTubesJsDefault.default));
parcelHelpers.export(exports, "TestTubes", ()=>(0, _testTubesJsDefault.default));
parcelHelpers.export(exports, "TestTubesIcon", ()=>(0, _testTubesJsDefault.default));
parcelHelpers.export(exports, "LucideTextCursorInput", ()=>(0, _textCursorInputJsDefault.default));
parcelHelpers.export(exports, "TextCursorInput", ()=>(0, _textCursorInputJsDefault.default));
parcelHelpers.export(exports, "TextCursorInputIcon", ()=>(0, _textCursorInputJsDefault.default));
parcelHelpers.export(exports, "LucideTextCursor", ()=>(0, _textCursorJsDefault.default));
parcelHelpers.export(exports, "TextCursor", ()=>(0, _textCursorJsDefault.default));
parcelHelpers.export(exports, "TextCursorIcon", ()=>(0, _textCursorJsDefault.default));
parcelHelpers.export(exports, "LucideTextQuote", ()=>(0, _textQuoteJsDefault.default));
parcelHelpers.export(exports, "TextQuote", ()=>(0, _textQuoteJsDefault.default));
parcelHelpers.export(exports, "TextQuoteIcon", ()=>(0, _textQuoteJsDefault.default));
parcelHelpers.export(exports, "LucideTextSearch", ()=>(0, _textSearchJsDefault.default));
parcelHelpers.export(exports, "TextSearch", ()=>(0, _textSearchJsDefault.default));
parcelHelpers.export(exports, "TextSearchIcon", ()=>(0, _textSearchJsDefault.default));
parcelHelpers.export(exports, "LucideTheater", ()=>(0, _theaterJsDefault.default));
parcelHelpers.export(exports, "Theater", ()=>(0, _theaterJsDefault.default));
parcelHelpers.export(exports, "TheaterIcon", ()=>(0, _theaterJsDefault.default));
parcelHelpers.export(exports, "LucideThermometerSnowflake", ()=>(0, _thermometerSnowflakeJsDefault.default));
parcelHelpers.export(exports, "ThermometerSnowflake", ()=>(0, _thermometerSnowflakeJsDefault.default));
parcelHelpers.export(exports, "ThermometerSnowflakeIcon", ()=>(0, _thermometerSnowflakeJsDefault.default));
parcelHelpers.export(exports, "LucideThermometerSun", ()=>(0, _thermometerSunJsDefault.default));
parcelHelpers.export(exports, "ThermometerSun", ()=>(0, _thermometerSunJsDefault.default));
parcelHelpers.export(exports, "ThermometerSunIcon", ()=>(0, _thermometerSunJsDefault.default));
parcelHelpers.export(exports, "LucideThermometer", ()=>(0, _thermometerJsDefault.default));
parcelHelpers.export(exports, "Thermometer", ()=>(0, _thermometerJsDefault.default));
parcelHelpers.export(exports, "ThermometerIcon", ()=>(0, _thermometerJsDefault.default));
parcelHelpers.export(exports, "LucideThumbsDown", ()=>(0, _thumbsDownJsDefault.default));
parcelHelpers.export(exports, "ThumbsDown", ()=>(0, _thumbsDownJsDefault.default));
parcelHelpers.export(exports, "ThumbsDownIcon", ()=>(0, _thumbsDownJsDefault.default));
parcelHelpers.export(exports, "LucideThumbsUp", ()=>(0, _thumbsUpJsDefault.default));
parcelHelpers.export(exports, "ThumbsUp", ()=>(0, _thumbsUpJsDefault.default));
parcelHelpers.export(exports, "ThumbsUpIcon", ()=>(0, _thumbsUpJsDefault.default));
parcelHelpers.export(exports, "LucideTicketCheck", ()=>(0, _ticketCheckJsDefault.default));
parcelHelpers.export(exports, "TicketCheck", ()=>(0, _ticketCheckJsDefault.default));
parcelHelpers.export(exports, "TicketCheckIcon", ()=>(0, _ticketCheckJsDefault.default));
parcelHelpers.export(exports, "LucideTicketMinus", ()=>(0, _ticketMinusJsDefault.default));
parcelHelpers.export(exports, "TicketMinus", ()=>(0, _ticketMinusJsDefault.default));
parcelHelpers.export(exports, "TicketMinusIcon", ()=>(0, _ticketMinusJsDefault.default));
parcelHelpers.export(exports, "LucideTicketPercent", ()=>(0, _ticketPercentJsDefault.default));
parcelHelpers.export(exports, "TicketPercent", ()=>(0, _ticketPercentJsDefault.default));
parcelHelpers.export(exports, "TicketPercentIcon", ()=>(0, _ticketPercentJsDefault.default));
parcelHelpers.export(exports, "LucideTicketSlash", ()=>(0, _ticketSlashJsDefault.default));
parcelHelpers.export(exports, "TicketSlash", ()=>(0, _ticketSlashJsDefault.default));
parcelHelpers.export(exports, "TicketSlashIcon", ()=>(0, _ticketSlashJsDefault.default));
parcelHelpers.export(exports, "LucideTicketPlus", ()=>(0, _ticketPlusJsDefault.default));
parcelHelpers.export(exports, "TicketPlus", ()=>(0, _ticketPlusJsDefault.default));
parcelHelpers.export(exports, "TicketPlusIcon", ()=>(0, _ticketPlusJsDefault.default));
parcelHelpers.export(exports, "LucideTicketX", ()=>(0, _ticketXJsDefault.default));
parcelHelpers.export(exports, "TicketX", ()=>(0, _ticketXJsDefault.default));
parcelHelpers.export(exports, "TicketXIcon", ()=>(0, _ticketXJsDefault.default));
parcelHelpers.export(exports, "LucideTicket", ()=>(0, _ticketJsDefault.default));
parcelHelpers.export(exports, "Ticket", ()=>(0, _ticketJsDefault.default));
parcelHelpers.export(exports, "TicketIcon", ()=>(0, _ticketJsDefault.default));
parcelHelpers.export(exports, "LucideTicketsPlane", ()=>(0, _ticketsPlaneJsDefault.default));
parcelHelpers.export(exports, "TicketsPlane", ()=>(0, _ticketsPlaneJsDefault.default));
parcelHelpers.export(exports, "TicketsPlaneIcon", ()=>(0, _ticketsPlaneJsDefault.default));
parcelHelpers.export(exports, "LucideTickets", ()=>(0, _ticketsJsDefault.default));
parcelHelpers.export(exports, "Tickets", ()=>(0, _ticketsJsDefault.default));
parcelHelpers.export(exports, "TicketsIcon", ()=>(0, _ticketsJsDefault.default));
parcelHelpers.export(exports, "LucideTimerOff", ()=>(0, _timerOffJsDefault.default));
parcelHelpers.export(exports, "TimerOff", ()=>(0, _timerOffJsDefault.default));
parcelHelpers.export(exports, "TimerOffIcon", ()=>(0, _timerOffJsDefault.default));
parcelHelpers.export(exports, "LucideTimerReset", ()=>(0, _timerResetJsDefault.default));
parcelHelpers.export(exports, "TimerReset", ()=>(0, _timerResetJsDefault.default));
parcelHelpers.export(exports, "TimerResetIcon", ()=>(0, _timerResetJsDefault.default));
parcelHelpers.export(exports, "LucideTimer", ()=>(0, _timerJsDefault.default));
parcelHelpers.export(exports, "Timer", ()=>(0, _timerJsDefault.default));
parcelHelpers.export(exports, "TimerIcon", ()=>(0, _timerJsDefault.default));
parcelHelpers.export(exports, "LucideToggleLeft", ()=>(0, _toggleLeftJsDefault.default));
parcelHelpers.export(exports, "ToggleLeft", ()=>(0, _toggleLeftJsDefault.default));
parcelHelpers.export(exports, "ToggleLeftIcon", ()=>(0, _toggleLeftJsDefault.default));
parcelHelpers.export(exports, "LucideToggleRight", ()=>(0, _toggleRightJsDefault.default));
parcelHelpers.export(exports, "ToggleRight", ()=>(0, _toggleRightJsDefault.default));
parcelHelpers.export(exports, "ToggleRightIcon", ()=>(0, _toggleRightJsDefault.default));
parcelHelpers.export(exports, "LucideToilet", ()=>(0, _toiletJsDefault.default));
parcelHelpers.export(exports, "Toilet", ()=>(0, _toiletJsDefault.default));
parcelHelpers.export(exports, "ToiletIcon", ()=>(0, _toiletJsDefault.default));
parcelHelpers.export(exports, "LucideTornado", ()=>(0, _tornadoJsDefault.default));
parcelHelpers.export(exports, "Tornado", ()=>(0, _tornadoJsDefault.default));
parcelHelpers.export(exports, "TornadoIcon", ()=>(0, _tornadoJsDefault.default));
parcelHelpers.export(exports, "LucideToolCase", ()=>(0, _toolCaseJsDefault.default));
parcelHelpers.export(exports, "ToolCase", ()=>(0, _toolCaseJsDefault.default));
parcelHelpers.export(exports, "ToolCaseIcon", ()=>(0, _toolCaseJsDefault.default));
parcelHelpers.export(exports, "LucideTorus", ()=>(0, _torusJsDefault.default));
parcelHelpers.export(exports, "Torus", ()=>(0, _torusJsDefault.default));
parcelHelpers.export(exports, "TorusIcon", ()=>(0, _torusJsDefault.default));
parcelHelpers.export(exports, "LucideTouchpadOff", ()=>(0, _touchpadOffJsDefault.default));
parcelHelpers.export(exports, "TouchpadOff", ()=>(0, _touchpadOffJsDefault.default));
parcelHelpers.export(exports, "TouchpadOffIcon", ()=>(0, _touchpadOffJsDefault.default));
parcelHelpers.export(exports, "LucideTouchpad", ()=>(0, _touchpadJsDefault.default));
parcelHelpers.export(exports, "Touchpad", ()=>(0, _touchpadJsDefault.default));
parcelHelpers.export(exports, "TouchpadIcon", ()=>(0, _touchpadJsDefault.default));
parcelHelpers.export(exports, "LucideTowerControl", ()=>(0, _towerControlJsDefault.default));
parcelHelpers.export(exports, "TowerControl", ()=>(0, _towerControlJsDefault.default));
parcelHelpers.export(exports, "TowerControlIcon", ()=>(0, _towerControlJsDefault.default));
parcelHelpers.export(exports, "LucideToyBrick", ()=>(0, _toyBrickJsDefault.default));
parcelHelpers.export(exports, "ToyBrick", ()=>(0, _toyBrickJsDefault.default));
parcelHelpers.export(exports, "ToyBrickIcon", ()=>(0, _toyBrickJsDefault.default));
parcelHelpers.export(exports, "LucideTractor", ()=>(0, _tractorJsDefault.default));
parcelHelpers.export(exports, "Tractor", ()=>(0, _tractorJsDefault.default));
parcelHelpers.export(exports, "TractorIcon", ()=>(0, _tractorJsDefault.default));
parcelHelpers.export(exports, "LucideTrafficCone", ()=>(0, _trafficConeJsDefault.default));
parcelHelpers.export(exports, "TrafficCone", ()=>(0, _trafficConeJsDefault.default));
parcelHelpers.export(exports, "TrafficConeIcon", ()=>(0, _trafficConeJsDefault.default));
parcelHelpers.export(exports, "LucideTrainFrontTunnel", ()=>(0, _trainFrontTunnelJsDefault.default));
parcelHelpers.export(exports, "TrainFrontTunnel", ()=>(0, _trainFrontTunnelJsDefault.default));
parcelHelpers.export(exports, "TrainFrontTunnelIcon", ()=>(0, _trainFrontTunnelJsDefault.default));
parcelHelpers.export(exports, "LucideTrainFront", ()=>(0, _trainFrontJsDefault.default));
parcelHelpers.export(exports, "TrainFront", ()=>(0, _trainFrontJsDefault.default));
parcelHelpers.export(exports, "TrainFrontIcon", ()=>(0, _trainFrontJsDefault.default));
parcelHelpers.export(exports, "LucideTrainTrack", ()=>(0, _trainTrackJsDefault.default));
parcelHelpers.export(exports, "TrainTrack", ()=>(0, _trainTrackJsDefault.default));
parcelHelpers.export(exports, "TrainTrackIcon", ()=>(0, _trainTrackJsDefault.default));
parcelHelpers.export(exports, "LucideTransgender", ()=>(0, _transgenderJsDefault.default));
parcelHelpers.export(exports, "Transgender", ()=>(0, _transgenderJsDefault.default));
parcelHelpers.export(exports, "TransgenderIcon", ()=>(0, _transgenderJsDefault.default));
parcelHelpers.export(exports, "LucideTrash2", ()=>(0, _trash2JsDefault.default));
parcelHelpers.export(exports, "Trash2", ()=>(0, _trash2JsDefault.default));
parcelHelpers.export(exports, "Trash2Icon", ()=>(0, _trash2JsDefault.default));
parcelHelpers.export(exports, "LucideTrash", ()=>(0, _trashJsDefault.default));
parcelHelpers.export(exports, "Trash", ()=>(0, _trashJsDefault.default));
parcelHelpers.export(exports, "TrashIcon", ()=>(0, _trashJsDefault.default));
parcelHelpers.export(exports, "LucideTreeDeciduous", ()=>(0, _treeDeciduousJsDefault.default));
parcelHelpers.export(exports, "TreeDeciduous", ()=>(0, _treeDeciduousJsDefault.default));
parcelHelpers.export(exports, "TreeDeciduousIcon", ()=>(0, _treeDeciduousJsDefault.default));
parcelHelpers.export(exports, "LucideTreePine", ()=>(0, _treePineJsDefault.default));
parcelHelpers.export(exports, "TreePine", ()=>(0, _treePineJsDefault.default));
parcelHelpers.export(exports, "TreePineIcon", ()=>(0, _treePineJsDefault.default));
parcelHelpers.export(exports, "LucideTrees", ()=>(0, _treesJsDefault.default));
parcelHelpers.export(exports, "Trees", ()=>(0, _treesJsDefault.default));
parcelHelpers.export(exports, "TreesIcon", ()=>(0, _treesJsDefault.default));
parcelHelpers.export(exports, "LucideTrello", ()=>(0, _trelloJsDefault.default));
parcelHelpers.export(exports, "Trello", ()=>(0, _trelloJsDefault.default));
parcelHelpers.export(exports, "TrelloIcon", ()=>(0, _trelloJsDefault.default));
parcelHelpers.export(exports, "LucideTrendingDown", ()=>(0, _trendingDownJsDefault.default));
parcelHelpers.export(exports, "TrendingDown", ()=>(0, _trendingDownJsDefault.default));
parcelHelpers.export(exports, "TrendingDownIcon", ()=>(0, _trendingDownJsDefault.default));
parcelHelpers.export(exports, "LucideTrendingUpDown", ()=>(0, _trendingUpDownJsDefault.default));
parcelHelpers.export(exports, "TrendingUpDown", ()=>(0, _trendingUpDownJsDefault.default));
parcelHelpers.export(exports, "TrendingUpDownIcon", ()=>(0, _trendingUpDownJsDefault.default));
parcelHelpers.export(exports, "LucideTrendingUp", ()=>(0, _trendingUpJsDefault.default));
parcelHelpers.export(exports, "TrendingUp", ()=>(0, _trendingUpJsDefault.default));
parcelHelpers.export(exports, "TrendingUpIcon", ()=>(0, _trendingUpJsDefault.default));
parcelHelpers.export(exports, "LucideTriangleDashed", ()=>(0, _triangleDashedJsDefault.default));
parcelHelpers.export(exports, "TriangleDashed", ()=>(0, _triangleDashedJsDefault.default));
parcelHelpers.export(exports, "TriangleDashedIcon", ()=>(0, _triangleDashedJsDefault.default));
parcelHelpers.export(exports, "LucideTriangleRight", ()=>(0, _triangleRightJsDefault.default));
parcelHelpers.export(exports, "TriangleRight", ()=>(0, _triangleRightJsDefault.default));
parcelHelpers.export(exports, "TriangleRightIcon", ()=>(0, _triangleRightJsDefault.default));
parcelHelpers.export(exports, "LucideTriangle", ()=>(0, _triangleJsDefault.default));
parcelHelpers.export(exports, "Triangle", ()=>(0, _triangleJsDefault.default));
parcelHelpers.export(exports, "TriangleIcon", ()=>(0, _triangleJsDefault.default));
parcelHelpers.export(exports, "LucideTrophy", ()=>(0, _trophyJsDefault.default));
parcelHelpers.export(exports, "Trophy", ()=>(0, _trophyJsDefault.default));
parcelHelpers.export(exports, "TrophyIcon", ()=>(0, _trophyJsDefault.default));
parcelHelpers.export(exports, "LucideTruckElectric", ()=>(0, _truckElectricJsDefault.default));
parcelHelpers.export(exports, "TruckElectric", ()=>(0, _truckElectricJsDefault.default));
parcelHelpers.export(exports, "TruckElectricIcon", ()=>(0, _truckElectricJsDefault.default));
parcelHelpers.export(exports, "LucideTruck", ()=>(0, _truckJsDefault.default));
parcelHelpers.export(exports, "Truck", ()=>(0, _truckJsDefault.default));
parcelHelpers.export(exports, "TruckIcon", ()=>(0, _truckJsDefault.default));
parcelHelpers.export(exports, "LucideTurntable", ()=>(0, _turntableJsDefault.default));
parcelHelpers.export(exports, "Turntable", ()=>(0, _turntableJsDefault.default));
parcelHelpers.export(exports, "TurntableIcon", ()=>(0, _turntableJsDefault.default));
parcelHelpers.export(exports, "LucideTurkishLira", ()=>(0, _turkishLiraJsDefault.default));
parcelHelpers.export(exports, "TurkishLira", ()=>(0, _turkishLiraJsDefault.default));
parcelHelpers.export(exports, "TurkishLiraIcon", ()=>(0, _turkishLiraJsDefault.default));
parcelHelpers.export(exports, "LucideTurtle", ()=>(0, _turtleJsDefault.default));
parcelHelpers.export(exports, "Turtle", ()=>(0, _turtleJsDefault.default));
parcelHelpers.export(exports, "TurtleIcon", ()=>(0, _turtleJsDefault.default));
parcelHelpers.export(exports, "LucideTvMinimalPlay", ()=>(0, _tvMinimalPlayJsDefault.default));
parcelHelpers.export(exports, "TvMinimalPlay", ()=>(0, _tvMinimalPlayJsDefault.default));
parcelHelpers.export(exports, "TvMinimalPlayIcon", ()=>(0, _tvMinimalPlayJsDefault.default));
parcelHelpers.export(exports, "LucideTwitch", ()=>(0, _twitchJsDefault.default));
parcelHelpers.export(exports, "Twitch", ()=>(0, _twitchJsDefault.default));
parcelHelpers.export(exports, "TwitchIcon", ()=>(0, _twitchJsDefault.default));
parcelHelpers.export(exports, "LucideTv", ()=>(0, _tvJsDefault.default));
parcelHelpers.export(exports, "Tv", ()=>(0, _tvJsDefault.default));
parcelHelpers.export(exports, "TvIcon", ()=>(0, _tvJsDefault.default));
parcelHelpers.export(exports, "LucideTwitter", ()=>(0, _twitterJsDefault.default));
parcelHelpers.export(exports, "Twitter", ()=>(0, _twitterJsDefault.default));
parcelHelpers.export(exports, "TwitterIcon", ()=>(0, _twitterJsDefault.default));
parcelHelpers.export(exports, "LucideTypeOutline", ()=>(0, _typeOutlineJsDefault.default));
parcelHelpers.export(exports, "TypeOutline", ()=>(0, _typeOutlineJsDefault.default));
parcelHelpers.export(exports, "TypeOutlineIcon", ()=>(0, _typeOutlineJsDefault.default));
parcelHelpers.export(exports, "LucideType", ()=>(0, _typeJsDefault.default));
parcelHelpers.export(exports, "Type", ()=>(0, _typeJsDefault.default));
parcelHelpers.export(exports, "TypeIcon", ()=>(0, _typeJsDefault.default));
parcelHelpers.export(exports, "LucideUmbrellaOff", ()=>(0, _umbrellaOffJsDefault.default));
parcelHelpers.export(exports, "UmbrellaOff", ()=>(0, _umbrellaOffJsDefault.default));
parcelHelpers.export(exports, "UmbrellaOffIcon", ()=>(0, _umbrellaOffJsDefault.default));
parcelHelpers.export(exports, "LucideUmbrella", ()=>(0, _umbrellaJsDefault.default));
parcelHelpers.export(exports, "Umbrella", ()=>(0, _umbrellaJsDefault.default));
parcelHelpers.export(exports, "UmbrellaIcon", ()=>(0, _umbrellaJsDefault.default));
parcelHelpers.export(exports, "LucideUnderline", ()=>(0, _underlineJsDefault.default));
parcelHelpers.export(exports, "Underline", ()=>(0, _underlineJsDefault.default));
parcelHelpers.export(exports, "UnderlineIcon", ()=>(0, _underlineJsDefault.default));
parcelHelpers.export(exports, "LucideUndo2", ()=>(0, _undo2JsDefault.default));
parcelHelpers.export(exports, "Undo2", ()=>(0, _undo2JsDefault.default));
parcelHelpers.export(exports, "Undo2Icon", ()=>(0, _undo2JsDefault.default));
parcelHelpers.export(exports, "LucideUndoDot", ()=>(0, _undoDotJsDefault.default));
parcelHelpers.export(exports, "UndoDot", ()=>(0, _undoDotJsDefault.default));
parcelHelpers.export(exports, "UndoDotIcon", ()=>(0, _undoDotJsDefault.default));
parcelHelpers.export(exports, "LucideUndo", ()=>(0, _undoJsDefault.default));
parcelHelpers.export(exports, "Undo", ()=>(0, _undoJsDefault.default));
parcelHelpers.export(exports, "UndoIcon", ()=>(0, _undoJsDefault.default));
parcelHelpers.export(exports, "LucideUnfoldHorizontal", ()=>(0, _unfoldHorizontalJsDefault.default));
parcelHelpers.export(exports, "UnfoldHorizontal", ()=>(0, _unfoldHorizontalJsDefault.default));
parcelHelpers.export(exports, "UnfoldHorizontalIcon", ()=>(0, _unfoldHorizontalJsDefault.default));
parcelHelpers.export(exports, "LucideUnfoldVertical", ()=>(0, _unfoldVerticalJsDefault.default));
parcelHelpers.export(exports, "UnfoldVertical", ()=>(0, _unfoldVerticalJsDefault.default));
parcelHelpers.export(exports, "UnfoldVerticalIcon", ()=>(0, _unfoldVerticalJsDefault.default));
parcelHelpers.export(exports, "LucideUngroup", ()=>(0, _ungroupJsDefault.default));
parcelHelpers.export(exports, "Ungroup", ()=>(0, _ungroupJsDefault.default));
parcelHelpers.export(exports, "UngroupIcon", ()=>(0, _ungroupJsDefault.default));
parcelHelpers.export(exports, "LucideUnlink", ()=>(0, _unlinkJsDefault.default));
parcelHelpers.export(exports, "Unlink", ()=>(0, _unlinkJsDefault.default));
parcelHelpers.export(exports, "UnlinkIcon", ()=>(0, _unlinkJsDefault.default));
parcelHelpers.export(exports, "LucideUnlink2", ()=>(0, _unlink2JsDefault.default));
parcelHelpers.export(exports, "Unlink2", ()=>(0, _unlink2JsDefault.default));
parcelHelpers.export(exports, "Unlink2Icon", ()=>(0, _unlink2JsDefault.default));
parcelHelpers.export(exports, "LucideUnplug", ()=>(0, _unplugJsDefault.default));
parcelHelpers.export(exports, "Unplug", ()=>(0, _unplugJsDefault.default));
parcelHelpers.export(exports, "UnplugIcon", ()=>(0, _unplugJsDefault.default));
parcelHelpers.export(exports, "LucideUpload", ()=>(0, _uploadJsDefault.default));
parcelHelpers.export(exports, "Upload", ()=>(0, _uploadJsDefault.default));
parcelHelpers.export(exports, "UploadIcon", ()=>(0, _uploadJsDefault.default));
parcelHelpers.export(exports, "LucideUsb", ()=>(0, _usbJsDefault.default));
parcelHelpers.export(exports, "Usb", ()=>(0, _usbJsDefault.default));
parcelHelpers.export(exports, "UsbIcon", ()=>(0, _usbJsDefault.default));
parcelHelpers.export(exports, "LucideUserCheck", ()=>(0, _userCheckJsDefault.default));
parcelHelpers.export(exports, "UserCheck", ()=>(0, _userCheckJsDefault.default));
parcelHelpers.export(exports, "UserCheckIcon", ()=>(0, _userCheckJsDefault.default));
parcelHelpers.export(exports, "LucideUserCog", ()=>(0, _userCogJsDefault.default));
parcelHelpers.export(exports, "UserCog", ()=>(0, _userCogJsDefault.default));
parcelHelpers.export(exports, "UserCogIcon", ()=>(0, _userCogJsDefault.default));
parcelHelpers.export(exports, "LucideUserLock", ()=>(0, _userLockJsDefault.default));
parcelHelpers.export(exports, "UserLock", ()=>(0, _userLockJsDefault.default));
parcelHelpers.export(exports, "UserLockIcon", ()=>(0, _userLockJsDefault.default));
parcelHelpers.export(exports, "LucideUserPen", ()=>(0, _userPenJsDefault.default));
parcelHelpers.export(exports, "UserPen", ()=>(0, _userPenJsDefault.default));
parcelHelpers.export(exports, "UserPenIcon", ()=>(0, _userPenJsDefault.default));
parcelHelpers.export(exports, "LucideUserMinus", ()=>(0, _userMinusJsDefault.default));
parcelHelpers.export(exports, "UserMinus", ()=>(0, _userMinusJsDefault.default));
parcelHelpers.export(exports, "UserMinusIcon", ()=>(0, _userMinusJsDefault.default));
parcelHelpers.export(exports, "LucideUserPlus", ()=>(0, _userPlusJsDefault.default));
parcelHelpers.export(exports, "UserPlus", ()=>(0, _userPlusJsDefault.default));
parcelHelpers.export(exports, "UserPlusIcon", ()=>(0, _userPlusJsDefault.default));
parcelHelpers.export(exports, "LucideUserRoundPen", ()=>(0, _userRoundPenJsDefault.default));
parcelHelpers.export(exports, "UserRoundPen", ()=>(0, _userRoundPenJsDefault.default));
parcelHelpers.export(exports, "UserRoundPenIcon", ()=>(0, _userRoundPenJsDefault.default));
parcelHelpers.export(exports, "LucideUserRoundSearch", ()=>(0, _userRoundSearchJsDefault.default));
parcelHelpers.export(exports, "UserRoundSearch", ()=>(0, _userRoundSearchJsDefault.default));
parcelHelpers.export(exports, "UserRoundSearchIcon", ()=>(0, _userRoundSearchJsDefault.default));
parcelHelpers.export(exports, "LucideUserSearch", ()=>(0, _userSearchJsDefault.default));
parcelHelpers.export(exports, "UserSearch", ()=>(0, _userSearchJsDefault.default));
parcelHelpers.export(exports, "UserSearchIcon", ()=>(0, _userSearchJsDefault.default));
parcelHelpers.export(exports, "LucideUserStar", ()=>(0, _userStarJsDefault.default));
parcelHelpers.export(exports, "UserStar", ()=>(0, _userStarJsDefault.default));
parcelHelpers.export(exports, "UserStarIcon", ()=>(0, _userStarJsDefault.default));
parcelHelpers.export(exports, "LucideUserX", ()=>(0, _userXJsDefault.default));
parcelHelpers.export(exports, "UserX", ()=>(0, _userXJsDefault.default));
parcelHelpers.export(exports, "UserXIcon", ()=>(0, _userXJsDefault.default));
parcelHelpers.export(exports, "LucideUser", ()=>(0, _userJsDefault.default));
parcelHelpers.export(exports, "User", ()=>(0, _userJsDefault.default));
parcelHelpers.export(exports, "UserIcon", ()=>(0, _userJsDefault.default));
parcelHelpers.export(exports, "LucideUsers", ()=>(0, _usersJsDefault.default));
parcelHelpers.export(exports, "Users", ()=>(0, _usersJsDefault.default));
parcelHelpers.export(exports, "UsersIcon", ()=>(0, _usersJsDefault.default));
parcelHelpers.export(exports, "LucideUtilityPole", ()=>(0, _utilityPoleJsDefault.default));
parcelHelpers.export(exports, "UtilityPole", ()=>(0, _utilityPoleJsDefault.default));
parcelHelpers.export(exports, "UtilityPoleIcon", ()=>(0, _utilityPoleJsDefault.default));
parcelHelpers.export(exports, "LucideVariable", ()=>(0, _variableJsDefault.default));
parcelHelpers.export(exports, "Variable", ()=>(0, _variableJsDefault.default));
parcelHelpers.export(exports, "VariableIcon", ()=>(0, _variableJsDefault.default));
parcelHelpers.export(exports, "LucideVault", ()=>(0, _vaultJsDefault.default));
parcelHelpers.export(exports, "Vault", ()=>(0, _vaultJsDefault.default));
parcelHelpers.export(exports, "VaultIcon", ()=>(0, _vaultJsDefault.default));
parcelHelpers.export(exports, "LucideVectorSquare", ()=>(0, _vectorSquareJsDefault.default));
parcelHelpers.export(exports, "VectorSquare", ()=>(0, _vectorSquareJsDefault.default));
parcelHelpers.export(exports, "VectorSquareIcon", ()=>(0, _vectorSquareJsDefault.default));
parcelHelpers.export(exports, "LucideVegan", ()=>(0, _veganJsDefault.default));
parcelHelpers.export(exports, "Vegan", ()=>(0, _veganJsDefault.default));
parcelHelpers.export(exports, "VeganIcon", ()=>(0, _veganJsDefault.default));
parcelHelpers.export(exports, "LucideVenetianMask", ()=>(0, _venetianMaskJsDefault.default));
parcelHelpers.export(exports, "VenetianMask", ()=>(0, _venetianMaskJsDefault.default));
parcelHelpers.export(exports, "VenetianMaskIcon", ()=>(0, _venetianMaskJsDefault.default));
parcelHelpers.export(exports, "LucideVenusAndMars", ()=>(0, _venusAndMarsJsDefault.default));
parcelHelpers.export(exports, "VenusAndMars", ()=>(0, _venusAndMarsJsDefault.default));
parcelHelpers.export(exports, "VenusAndMarsIcon", ()=>(0, _venusAndMarsJsDefault.default));
parcelHelpers.export(exports, "LucideVenus", ()=>(0, _venusJsDefault.default));
parcelHelpers.export(exports, "Venus", ()=>(0, _venusJsDefault.default));
parcelHelpers.export(exports, "VenusIcon", ()=>(0, _venusJsDefault.default));
parcelHelpers.export(exports, "LucideVibrateOff", ()=>(0, _vibrateOffJsDefault.default));
parcelHelpers.export(exports, "VibrateOff", ()=>(0, _vibrateOffJsDefault.default));
parcelHelpers.export(exports, "VibrateOffIcon", ()=>(0, _vibrateOffJsDefault.default));
parcelHelpers.export(exports, "LucideVibrate", ()=>(0, _vibrateJsDefault.default));
parcelHelpers.export(exports, "Vibrate", ()=>(0, _vibrateJsDefault.default));
parcelHelpers.export(exports, "VibrateIcon", ()=>(0, _vibrateJsDefault.default));
parcelHelpers.export(exports, "LucideVideoOff", ()=>(0, _videoOffJsDefault.default));
parcelHelpers.export(exports, "VideoOff", ()=>(0, _videoOffJsDefault.default));
parcelHelpers.export(exports, "VideoOffIcon", ()=>(0, _videoOffJsDefault.default));
parcelHelpers.export(exports, "LucideVideo", ()=>(0, _videoJsDefault.default));
parcelHelpers.export(exports, "Video", ()=>(0, _videoJsDefault.default));
parcelHelpers.export(exports, "VideoIcon", ()=>(0, _videoJsDefault.default));
parcelHelpers.export(exports, "LucideVideotape", ()=>(0, _videotapeJsDefault.default));
parcelHelpers.export(exports, "Videotape", ()=>(0, _videotapeJsDefault.default));
parcelHelpers.export(exports, "VideotapeIcon", ()=>(0, _videotapeJsDefault.default));
parcelHelpers.export(exports, "LucideView", ()=>(0, _viewJsDefault.default));
parcelHelpers.export(exports, "View", ()=>(0, _viewJsDefault.default));
parcelHelpers.export(exports, "ViewIcon", ()=>(0, _viewJsDefault.default));
parcelHelpers.export(exports, "LucideVoicemail", ()=>(0, _voicemailJsDefault.default));
parcelHelpers.export(exports, "Voicemail", ()=>(0, _voicemailJsDefault.default));
parcelHelpers.export(exports, "VoicemailIcon", ()=>(0, _voicemailJsDefault.default));
parcelHelpers.export(exports, "LucideVolleyball", ()=>(0, _volleyballJsDefault.default));
parcelHelpers.export(exports, "Volleyball", ()=>(0, _volleyballJsDefault.default));
parcelHelpers.export(exports, "VolleyballIcon", ()=>(0, _volleyballJsDefault.default));
parcelHelpers.export(exports, "LucideVolume1", ()=>(0, _volume1JsDefault.default));
parcelHelpers.export(exports, "Volume1", ()=>(0, _volume1JsDefault.default));
parcelHelpers.export(exports, "Volume1Icon", ()=>(0, _volume1JsDefault.default));
parcelHelpers.export(exports, "LucideVolume2", ()=>(0, _volume2JsDefault.default));
parcelHelpers.export(exports, "Volume2", ()=>(0, _volume2JsDefault.default));
parcelHelpers.export(exports, "Volume2Icon", ()=>(0, _volume2JsDefault.default));
parcelHelpers.export(exports, "LucideVolumeOff", ()=>(0, _volumeOffJsDefault.default));
parcelHelpers.export(exports, "VolumeOff", ()=>(0, _volumeOffJsDefault.default));
parcelHelpers.export(exports, "VolumeOffIcon", ()=>(0, _volumeOffJsDefault.default));
parcelHelpers.export(exports, "LucideVolumeX", ()=>(0, _volumeXJsDefault.default));
parcelHelpers.export(exports, "VolumeX", ()=>(0, _volumeXJsDefault.default));
parcelHelpers.export(exports, "VolumeXIcon", ()=>(0, _volumeXJsDefault.default));
parcelHelpers.export(exports, "LucideVolume", ()=>(0, _volumeJsDefault.default));
parcelHelpers.export(exports, "Volume", ()=>(0, _volumeJsDefault.default));
parcelHelpers.export(exports, "VolumeIcon", ()=>(0, _volumeJsDefault.default));
parcelHelpers.export(exports, "LucideVote", ()=>(0, _voteJsDefault.default));
parcelHelpers.export(exports, "Vote", ()=>(0, _voteJsDefault.default));
parcelHelpers.export(exports, "VoteIcon", ()=>(0, _voteJsDefault.default));
parcelHelpers.export(exports, "LucideWalletCards", ()=>(0, _walletCardsJsDefault.default));
parcelHelpers.export(exports, "WalletCards", ()=>(0, _walletCardsJsDefault.default));
parcelHelpers.export(exports, "WalletCardsIcon", ()=>(0, _walletCardsJsDefault.default));
parcelHelpers.export(exports, "LucideWallet", ()=>(0, _walletJsDefault.default));
parcelHelpers.export(exports, "Wallet", ()=>(0, _walletJsDefault.default));
parcelHelpers.export(exports, "WalletIcon", ()=>(0, _walletJsDefault.default));
parcelHelpers.export(exports, "LucideWallpaper", ()=>(0, _wallpaperJsDefault.default));
parcelHelpers.export(exports, "Wallpaper", ()=>(0, _wallpaperJsDefault.default));
parcelHelpers.export(exports, "WallpaperIcon", ()=>(0, _wallpaperJsDefault.default));
parcelHelpers.export(exports, "LucideWand", ()=>(0, _wandJsDefault.default));
parcelHelpers.export(exports, "Wand", ()=>(0, _wandJsDefault.default));
parcelHelpers.export(exports, "WandIcon", ()=>(0, _wandJsDefault.default));
parcelHelpers.export(exports, "LucideWarehouse", ()=>(0, _warehouseJsDefault.default));
parcelHelpers.export(exports, "Warehouse", ()=>(0, _warehouseJsDefault.default));
parcelHelpers.export(exports, "WarehouseIcon", ()=>(0, _warehouseJsDefault.default));
parcelHelpers.export(exports, "LucideWashingMachine", ()=>(0, _washingMachineJsDefault.default));
parcelHelpers.export(exports, "WashingMachine", ()=>(0, _washingMachineJsDefault.default));
parcelHelpers.export(exports, "WashingMachineIcon", ()=>(0, _washingMachineJsDefault.default));
parcelHelpers.export(exports, "LucideWatch", ()=>(0, _watchJsDefault.default));
parcelHelpers.export(exports, "Watch", ()=>(0, _watchJsDefault.default));
parcelHelpers.export(exports, "WatchIcon", ()=>(0, _watchJsDefault.default));
parcelHelpers.export(exports, "LucideWavesLadder", ()=>(0, _wavesLadderJsDefault.default));
parcelHelpers.export(exports, "WavesLadder", ()=>(0, _wavesLadderJsDefault.default));
parcelHelpers.export(exports, "WavesLadderIcon", ()=>(0, _wavesLadderJsDefault.default));
parcelHelpers.export(exports, "LucideWaves", ()=>(0, _wavesJsDefault.default));
parcelHelpers.export(exports, "Waves", ()=>(0, _wavesJsDefault.default));
parcelHelpers.export(exports, "WavesIcon", ()=>(0, _wavesJsDefault.default));
parcelHelpers.export(exports, "LucideWebcam", ()=>(0, _webcamJsDefault.default));
parcelHelpers.export(exports, "Webcam", ()=>(0, _webcamJsDefault.default));
parcelHelpers.export(exports, "WebcamIcon", ()=>(0, _webcamJsDefault.default));
parcelHelpers.export(exports, "LucideWaypoints", ()=>(0, _waypointsJsDefault.default));
parcelHelpers.export(exports, "Waypoints", ()=>(0, _waypointsJsDefault.default));
parcelHelpers.export(exports, "WaypointsIcon", ()=>(0, _waypointsJsDefault.default));
parcelHelpers.export(exports, "LucideWebhook", ()=>(0, _webhookJsDefault.default));
parcelHelpers.export(exports, "Webhook", ()=>(0, _webhookJsDefault.default));
parcelHelpers.export(exports, "WebhookIcon", ()=>(0, _webhookJsDefault.default));
parcelHelpers.export(exports, "LucideWebhookOff", ()=>(0, _webhookOffJsDefault.default));
parcelHelpers.export(exports, "WebhookOff", ()=>(0, _webhookOffJsDefault.default));
parcelHelpers.export(exports, "WebhookOffIcon", ()=>(0, _webhookOffJsDefault.default));
parcelHelpers.export(exports, "LucideWeight", ()=>(0, _weightJsDefault.default));
parcelHelpers.export(exports, "Weight", ()=>(0, _weightJsDefault.default));
parcelHelpers.export(exports, "WeightIcon", ()=>(0, _weightJsDefault.default));
parcelHelpers.export(exports, "LucideWheatOff", ()=>(0, _wheatOffJsDefault.default));
parcelHelpers.export(exports, "WheatOff", ()=>(0, _wheatOffJsDefault.default));
parcelHelpers.export(exports, "WheatOffIcon", ()=>(0, _wheatOffJsDefault.default));
parcelHelpers.export(exports, "LucideWheat", ()=>(0, _wheatJsDefault.default));
parcelHelpers.export(exports, "Wheat", ()=>(0, _wheatJsDefault.default));
parcelHelpers.export(exports, "WheatIcon", ()=>(0, _wheatJsDefault.default));
parcelHelpers.export(exports, "LucideWifiCog", ()=>(0, _wifiCogJsDefault.default));
parcelHelpers.export(exports, "WifiCog", ()=>(0, _wifiCogJsDefault.default));
parcelHelpers.export(exports, "WifiCogIcon", ()=>(0, _wifiCogJsDefault.default));
parcelHelpers.export(exports, "LucideWholeWord", ()=>(0, _wholeWordJsDefault.default));
parcelHelpers.export(exports, "WholeWord", ()=>(0, _wholeWordJsDefault.default));
parcelHelpers.export(exports, "WholeWordIcon", ()=>(0, _wholeWordJsDefault.default));
parcelHelpers.export(exports, "LucideWifiHigh", ()=>(0, _wifiHighJsDefault.default));
parcelHelpers.export(exports, "WifiHigh", ()=>(0, _wifiHighJsDefault.default));
parcelHelpers.export(exports, "WifiHighIcon", ()=>(0, _wifiHighJsDefault.default));
parcelHelpers.export(exports, "LucideWifiLow", ()=>(0, _wifiLowJsDefault.default));
parcelHelpers.export(exports, "WifiLow", ()=>(0, _wifiLowJsDefault.default));
parcelHelpers.export(exports, "WifiLowIcon", ()=>(0, _wifiLowJsDefault.default));
parcelHelpers.export(exports, "LucideWifiOff", ()=>(0, _wifiOffJsDefault.default));
parcelHelpers.export(exports, "WifiOff", ()=>(0, _wifiOffJsDefault.default));
parcelHelpers.export(exports, "WifiOffIcon", ()=>(0, _wifiOffJsDefault.default));
parcelHelpers.export(exports, "LucideWifiPen", ()=>(0, _wifiPenJsDefault.default));
parcelHelpers.export(exports, "WifiPen", ()=>(0, _wifiPenJsDefault.default));
parcelHelpers.export(exports, "WifiPenIcon", ()=>(0, _wifiPenJsDefault.default));
parcelHelpers.export(exports, "LucideWifiSync", ()=>(0, _wifiSyncJsDefault.default));
parcelHelpers.export(exports, "WifiSync", ()=>(0, _wifiSyncJsDefault.default));
parcelHelpers.export(exports, "WifiSyncIcon", ()=>(0, _wifiSyncJsDefault.default));
parcelHelpers.export(exports, "LucideWifiZero", ()=>(0, _wifiZeroJsDefault.default));
parcelHelpers.export(exports, "WifiZero", ()=>(0, _wifiZeroJsDefault.default));
parcelHelpers.export(exports, "WifiZeroIcon", ()=>(0, _wifiZeroJsDefault.default));
parcelHelpers.export(exports, "LucideWifi", ()=>(0, _wifiJsDefault.default));
parcelHelpers.export(exports, "Wifi", ()=>(0, _wifiJsDefault.default));
parcelHelpers.export(exports, "WifiIcon", ()=>(0, _wifiJsDefault.default));
parcelHelpers.export(exports, "LucideWindArrowDown", ()=>(0, _windArrowDownJsDefault.default));
parcelHelpers.export(exports, "WindArrowDown", ()=>(0, _windArrowDownJsDefault.default));
parcelHelpers.export(exports, "WindArrowDownIcon", ()=>(0, _windArrowDownJsDefault.default));
parcelHelpers.export(exports, "LucideWind", ()=>(0, _windJsDefault.default));
parcelHelpers.export(exports, "Wind", ()=>(0, _windJsDefault.default));
parcelHelpers.export(exports, "WindIcon", ()=>(0, _windJsDefault.default));
parcelHelpers.export(exports, "LucideWineOff", ()=>(0, _wineOffJsDefault.default));
parcelHelpers.export(exports, "WineOff", ()=>(0, _wineOffJsDefault.default));
parcelHelpers.export(exports, "WineOffIcon", ()=>(0, _wineOffJsDefault.default));
parcelHelpers.export(exports, "LucideWine", ()=>(0, _wineJsDefault.default));
parcelHelpers.export(exports, "Wine", ()=>(0, _wineJsDefault.default));
parcelHelpers.export(exports, "WineIcon", ()=>(0, _wineJsDefault.default));
parcelHelpers.export(exports, "LucideWorkflow", ()=>(0, _workflowJsDefault.default));
parcelHelpers.export(exports, "Workflow", ()=>(0, _workflowJsDefault.default));
parcelHelpers.export(exports, "WorkflowIcon", ()=>(0, _workflowJsDefault.default));
parcelHelpers.export(exports, "LucideWorm", ()=>(0, _wormJsDefault.default));
parcelHelpers.export(exports, "Worm", ()=>(0, _wormJsDefault.default));
parcelHelpers.export(exports, "WormIcon", ()=>(0, _wormJsDefault.default));
parcelHelpers.export(exports, "LucideWrench", ()=>(0, _wrenchJsDefault.default));
parcelHelpers.export(exports, "Wrench", ()=>(0, _wrenchJsDefault.default));
parcelHelpers.export(exports, "WrenchIcon", ()=>(0, _wrenchJsDefault.default));
parcelHelpers.export(exports, "LucideX", ()=>(0, _xJsDefault.default));
parcelHelpers.export(exports, "X", ()=>(0, _xJsDefault.default));
parcelHelpers.export(exports, "XIcon", ()=>(0, _xJsDefault.default));
parcelHelpers.export(exports, "LucideYoutube", ()=>(0, _youtubeJsDefault.default));
parcelHelpers.export(exports, "Youtube", ()=>(0, _youtubeJsDefault.default));
parcelHelpers.export(exports, "YoutubeIcon", ()=>(0, _youtubeJsDefault.default));
parcelHelpers.export(exports, "LucideZapOff", ()=>(0, _zapOffJsDefault.default));
parcelHelpers.export(exports, "ZapOff", ()=>(0, _zapOffJsDefault.default));
parcelHelpers.export(exports, "ZapOffIcon", ()=>(0, _zapOffJsDefault.default));
parcelHelpers.export(exports, "LucideZap", ()=>(0, _zapJsDefault.default));
parcelHelpers.export(exports, "Zap", ()=>(0, _zapJsDefault.default));
parcelHelpers.export(exports, "ZapIcon", ()=>(0, _zapJsDefault.default));
parcelHelpers.export(exports, "LucideZoomIn", ()=>(0, _zoomInJsDefault.default));
parcelHelpers.export(exports, "ZoomIn", ()=>(0, _zoomInJsDefault.default));
parcelHelpers.export(exports, "ZoomInIcon", ()=>(0, _zoomInJsDefault.default));
parcelHelpers.export(exports, "LucideZoomOut", ()=>(0, _zoomOutJsDefault.default));
parcelHelpers.export(exports, "ZoomOut", ()=>(0, _zoomOutJsDefault.default));
parcelHelpers.export(exports, "ZoomOutIcon", ()=>(0, _zoomOutJsDefault.default));
parcelHelpers.export(exports, "ArrowDown10", ()=>(0, _arrowDown10JsDefault.default));
parcelHelpers.export(exports, "ArrowDown10Icon", ()=>(0, _arrowDown10JsDefault.default));
parcelHelpers.export(exports, "LucideArrowDown10", ()=>(0, _arrowDown10JsDefault.default));
parcelHelpers.export(exports, "ArrowDown01", ()=>(0, _arrowDown01JsDefault.default));
parcelHelpers.export(exports, "ArrowDown01Icon", ()=>(0, _arrowDown01JsDefault.default));
parcelHelpers.export(exports, "LucideArrowDown01", ()=>(0, _arrowDown01JsDefault.default));
parcelHelpers.export(exports, "ArrowUp01", ()=>(0, _arrowUp01JsDefault.default));
parcelHelpers.export(exports, "ArrowUp01Icon", ()=>(0, _arrowUp01JsDefault.default));
parcelHelpers.export(exports, "LucideArrowUp01", ()=>(0, _arrowUp01JsDefault.default));
parcelHelpers.export(exports, "ArrowUp10", ()=>(0, _arrowUp10JsDefault.default));
parcelHelpers.export(exports, "ArrowUp10Icon", ()=>(0, _arrowUp10JsDefault.default));
parcelHelpers.export(exports, "LucideArrowUp10", ()=>(0, _arrowUp10JsDefault.default));
parcelHelpers.export(exports, "createLucideIcon", ()=>(0, _createLucideIconJsDefault.default));
parcelHelpers.export(exports, "Icon", ()=>(0, _iconJsDefault.default));
parcelHelpers.export(exports, "icons", ()=>_indexJs);
var _indexJs = require("./icons/index.js");
var _alarmClockMinusJs = require("./icons/alarm-clock-minus.js");
var _alarmClockMinusJsDefault = parcelHelpers.interopDefault(_alarmClockMinusJs);
var _alarmClockCheckJs = require("./icons/alarm-clock-check.js");
var _alarmClockCheckJsDefault = parcelHelpers.interopDefault(_alarmClockCheckJs);
var _alarmClockPlusJs = require("./icons/alarm-clock-plus.js");
var _alarmClockPlusJsDefault = parcelHelpers.interopDefault(_alarmClockPlusJs);
var _arrowDownAZJs = require("./icons/arrow-down-a-z.js");
var _arrowDownAZJsDefault = parcelHelpers.interopDefault(_arrowDownAZJs);
var _arrowDownWideNarrowJs = require("./icons/arrow-down-wide-narrow.js");
var _arrowDownWideNarrowJsDefault = parcelHelpers.interopDefault(_arrowDownWideNarrowJs);
var _arrowDownZAJs = require("./icons/arrow-down-z-a.js");
var _arrowDownZAJsDefault = parcelHelpers.interopDefault(_arrowDownZAJs);
var _arrowUpAZJs = require("./icons/arrow-up-a-z.js");
var _arrowUpAZJsDefault = parcelHelpers.interopDefault(_arrowUpAZJs);
var _arrowUpNarrowWideJs = require("./icons/arrow-up-narrow-wide.js");
var _arrowUpNarrowWideJsDefault = parcelHelpers.interopDefault(_arrowUpNarrowWideJs);
var _arrowUpZAJs = require("./icons/arrow-up-z-a.js");
var _arrowUpZAJsDefault = parcelHelpers.interopDefault(_arrowUpZAJs);
var _axis3DJs = require("./icons/axis-3d.js");
var _axis3DJsDefault = parcelHelpers.interopDefault(_axis3DJs);
var _badgeCheckJs = require("./icons/badge-check.js");
var _badgeCheckJsDefault = parcelHelpers.interopDefault(_badgeCheckJs);
var _badgeQuestionMarkJs = require("./icons/badge-question-mark.js");
var _badgeQuestionMarkJsDefault = parcelHelpers.interopDefault(_badgeQuestionMarkJs);
var _betweenHorizontalEndJs = require("./icons/between-horizontal-end.js");
var _betweenHorizontalEndJsDefault = parcelHelpers.interopDefault(_betweenHorizontalEndJs);
var _betweenHorizontalStartJs = require("./icons/between-horizontal-start.js");
var _betweenHorizontalStartJsDefault = parcelHelpers.interopDefault(_betweenHorizontalStartJs);
var _bookDashedJs = require("./icons/book-dashed.js");
var _bookDashedJsDefault = parcelHelpers.interopDefault(_bookDashedJs);
var _bracesJs = require("./icons/braces.js");
var _bracesJsDefault = parcelHelpers.interopDefault(_bracesJs);
var _captionsJs = require("./icons/captions.js");
var _captionsJsDefault = parcelHelpers.interopDefault(_captionsJs);
var _chartAreaJs = require("./icons/chart-area.js");
var _chartAreaJsDefault = parcelHelpers.interopDefault(_chartAreaJs);
var _chartBarBigJs = require("./icons/chart-bar-big.js");
var _chartBarBigJsDefault = parcelHelpers.interopDefault(_chartBarBigJs);
var _chartBarJs = require("./icons/chart-bar.js");
var _chartBarJsDefault = parcelHelpers.interopDefault(_chartBarJs);
var _chartCandlestickJs = require("./icons/chart-candlestick.js");
var _chartCandlestickJsDefault = parcelHelpers.interopDefault(_chartCandlestickJs);
var _chartColumnIncreasingJs = require("./icons/chart-column-increasing.js");
var _chartColumnIncreasingJsDefault = parcelHelpers.interopDefault(_chartColumnIncreasingJs);
var _chartColumnBigJs = require("./icons/chart-column-big.js");
var _chartColumnBigJsDefault = parcelHelpers.interopDefault(_chartColumnBigJs);
var _chartColumnJs = require("./icons/chart-column.js");
var _chartColumnJsDefault = parcelHelpers.interopDefault(_chartColumnJs);
var _chartLineJs = require("./icons/chart-line.js");
var _chartLineJsDefault = parcelHelpers.interopDefault(_chartLineJs);
var _chartNoAxesColumnIncreasingJs = require("./icons/chart-no-axes-column-increasing.js");
var _chartNoAxesColumnIncreasingJsDefault = parcelHelpers.interopDefault(_chartNoAxesColumnIncreasingJs);
var _chartNoAxesColumnJs = require("./icons/chart-no-axes-column.js");
var _chartNoAxesColumnJsDefault = parcelHelpers.interopDefault(_chartNoAxesColumnJs);
var _chartPieJs = require("./icons/chart-pie.js");
var _chartPieJsDefault = parcelHelpers.interopDefault(_chartPieJs);
var _chartNoAxesGanttJs = require("./icons/chart-no-axes-gantt.js");
var _chartNoAxesGanttJsDefault = parcelHelpers.interopDefault(_chartNoAxesGanttJs);
var _chartScatterJs = require("./icons/chart-scatter.js");
var _chartScatterJsDefault = parcelHelpers.interopDefault(_chartScatterJs);
var _chromiumJs = require("./icons/chromium.js");
var _chromiumJsDefault = parcelHelpers.interopDefault(_chromiumJs);
var _circleAlertJs = require("./icons/circle-alert.js");
var _circleAlertJsDefault = parcelHelpers.interopDefault(_circleAlertJs);
var _circleArrowDownJs = require("./icons/circle-arrow-down.js");
var _circleArrowDownJsDefault = parcelHelpers.interopDefault(_circleArrowDownJs);
var _circleArrowLeftJs = require("./icons/circle-arrow-left.js");
var _circleArrowLeftJsDefault = parcelHelpers.interopDefault(_circleArrowLeftJs);
var _circleArrowOutDownLeftJs = require("./icons/circle-arrow-out-down-left.js");
var _circleArrowOutDownLeftJsDefault = parcelHelpers.interopDefault(_circleArrowOutDownLeftJs);
var _circleArrowOutDownRightJs = require("./icons/circle-arrow-out-down-right.js");
var _circleArrowOutDownRightJsDefault = parcelHelpers.interopDefault(_circleArrowOutDownRightJs);
var _circleArrowOutUpLeftJs = require("./icons/circle-arrow-out-up-left.js");
var _circleArrowOutUpLeftJsDefault = parcelHelpers.interopDefault(_circleArrowOutUpLeftJs);
var _circleArrowOutUpRightJs = require("./icons/circle-arrow-out-up-right.js");
var _circleArrowOutUpRightJsDefault = parcelHelpers.interopDefault(_circleArrowOutUpRightJs);
var _circleArrowRightJs = require("./icons/circle-arrow-right.js");
var _circleArrowRightJsDefault = parcelHelpers.interopDefault(_circleArrowRightJs);
var _circleCheckBigJs = require("./icons/circle-check-big.js");
var _circleCheckBigJsDefault = parcelHelpers.interopDefault(_circleCheckBigJs);
var _circleArrowUpJs = require("./icons/circle-arrow-up.js");
var _circleArrowUpJsDefault = parcelHelpers.interopDefault(_circleArrowUpJs);
var _circleCheckJs = require("./icons/circle-check.js");
var _circleCheckJsDefault = parcelHelpers.interopDefault(_circleCheckJs);
var _circleChevronLeftJs = require("./icons/circle-chevron-left.js");
var _circleChevronLeftJsDefault = parcelHelpers.interopDefault(_circleChevronLeftJs);
var _circleChevronRightJs = require("./icons/circle-chevron-right.js");
var _circleChevronRightJsDefault = parcelHelpers.interopDefault(_circleChevronRightJs);
var _circleChevronDownJs = require("./icons/circle-chevron-down.js");
var _circleChevronDownJsDefault = parcelHelpers.interopDefault(_circleChevronDownJs);
var _circleChevronUpJs = require("./icons/circle-chevron-up.js");
var _circleChevronUpJsDefault = parcelHelpers.interopDefault(_circleChevronUpJs);
var _circleDivideJs = require("./icons/circle-divide.js");
var _circleDivideJsDefault = parcelHelpers.interopDefault(_circleDivideJs);
var _circleGaugeJs = require("./icons/circle-gauge.js");
var _circleGaugeJsDefault = parcelHelpers.interopDefault(_circleGaugeJs);
var _circleMinusJs = require("./icons/circle-minus.js");
var _circleMinusJsDefault = parcelHelpers.interopDefault(_circleMinusJs);
var _circleParkingOffJs = require("./icons/circle-parking-off.js");
var _circleParkingOffJsDefault = parcelHelpers.interopDefault(_circleParkingOffJs);
var _circleParkingJs = require("./icons/circle-parking.js");
var _circleParkingJsDefault = parcelHelpers.interopDefault(_circleParkingJs);
var _circlePauseJs = require("./icons/circle-pause.js");
var _circlePauseJsDefault = parcelHelpers.interopDefault(_circlePauseJs);
var _circlePercentJs = require("./icons/circle-percent.js");
var _circlePercentJsDefault = parcelHelpers.interopDefault(_circlePercentJs);
var _circlePlayJs = require("./icons/circle-play.js");
var _circlePlayJsDefault = parcelHelpers.interopDefault(_circlePlayJs);
var _circlePlusJs = require("./icons/circle-plus.js");
var _circlePlusJsDefault = parcelHelpers.interopDefault(_circlePlusJs);
var _circlePowerJs = require("./icons/circle-power.js");
var _circlePowerJsDefault = parcelHelpers.interopDefault(_circlePowerJs);
var _circleQuestionMarkJs = require("./icons/circle-question-mark.js");
var _circleQuestionMarkJsDefault = parcelHelpers.interopDefault(_circleQuestionMarkJs);
var _circleSlash2Js = require("./icons/circle-slash-2.js");
var _circleSlash2JsDefault = parcelHelpers.interopDefault(_circleSlash2Js);
var _circleStopJs = require("./icons/circle-stop.js");
var _circleStopJsDefault = parcelHelpers.interopDefault(_circleStopJs);
var _circleUserJs = require("./icons/circle-user.js");
var _circleUserJsDefault = parcelHelpers.interopDefault(_circleUserJs);
var _circleXJs = require("./icons/circle-x.js");
var _circleXJsDefault = parcelHelpers.interopDefault(_circleXJs);
var _circleUserRoundJs = require("./icons/circle-user-round.js");
var _circleUserRoundJsDefault = parcelHelpers.interopDefault(_circleUserRoundJs);
var _clipboardPenLineJs = require("./icons/clipboard-pen-line.js");
var _clipboardPenLineJsDefault = parcelHelpers.interopDefault(_clipboardPenLineJs);
var _clipboardPenJs = require("./icons/clipboard-pen.js");
var _clipboardPenJsDefault = parcelHelpers.interopDefault(_clipboardPenJs);
var _cloudDownloadJs = require("./icons/cloud-download.js");
var _cloudDownloadJsDefault = parcelHelpers.interopDefault(_cloudDownloadJs);
var _cloudUploadJs = require("./icons/cloud-upload.js");
var _cloudUploadJsDefault = parcelHelpers.interopDefault(_cloudUploadJs);
var _codeXmlJs = require("./icons/code-xml.js");
var _codeXmlJsDefault = parcelHelpers.interopDefault(_codeXmlJs);
var _columns2Js = require("./icons/columns-2.js");
var _columns2JsDefault = parcelHelpers.interopDefault(_columns2Js);
var _columns3CogJs = require("./icons/columns-3-cog.js");
var _columns3CogJsDefault = parcelHelpers.interopDefault(_columns3CogJs);
var _columns3Js = require("./icons/columns-3.js");
var _columns3JsDefault = parcelHelpers.interopDefault(_columns3Js);
var _contactRoundJs = require("./icons/contact-round.js");
var _contactRoundJsDefault = parcelHelpers.interopDefault(_contactRoundJs);
var _diamondPercentJs = require("./icons/diamond-percent.js");
var _diamondPercentJsDefault = parcelHelpers.interopDefault(_diamondPercentJs);
var _earthJs = require("./icons/earth.js");
var _earthJsDefault = parcelHelpers.interopDefault(_earthJs);
var _ellipsisVerticalJs = require("./icons/ellipsis-vertical.js");
var _ellipsisVerticalJsDefault = parcelHelpers.interopDefault(_ellipsisVerticalJs);
var _ellipsisJs = require("./icons/ellipsis.js");
var _ellipsisJsDefault = parcelHelpers.interopDefault(_ellipsisJs);
var _fileAxis3DJs = require("./icons/file-axis-3d.js");
var _fileAxis3DJsDefault = parcelHelpers.interopDefault(_fileAxis3DJs);
var _fileChartColumnIncreasingJs = require("./icons/file-chart-column-increasing.js");
var _fileChartColumnIncreasingJsDefault = parcelHelpers.interopDefault(_fileChartColumnIncreasingJs);
var _fileChartColumnJs = require("./icons/file-chart-column.js");
var _fileChartColumnJsDefault = parcelHelpers.interopDefault(_fileChartColumnJs);
var _fileChartLineJs = require("./icons/file-chart-line.js");
var _fileChartLineJsDefault = parcelHelpers.interopDefault(_fileChartLineJs);
var _fileChartPieJs = require("./icons/file-chart-pie.js");
var _fileChartPieJsDefault = parcelHelpers.interopDefault(_fileChartPieJs);
var _fileCogJs = require("./icons/file-cog.js");
var _fileCogJsDefault = parcelHelpers.interopDefault(_fileCogJs);
var _filePenLineJs = require("./icons/file-pen-line.js");
var _filePenLineJsDefault = parcelHelpers.interopDefault(_filePenLineJs);
var _filePenJs = require("./icons/file-pen.js");
var _filePenJsDefault = parcelHelpers.interopDefault(_filePenJs);
var _filePlayJs = require("./icons/file-play.js");
var _filePlayJsDefault = parcelHelpers.interopDefault(_filePlayJs);
var _fileQuestionMarkJs = require("./icons/file-question-mark.js");
var _fileQuestionMarkJsDefault = parcelHelpers.interopDefault(_fileQuestionMarkJs);
var _fileVideoCameraJs = require("./icons/file-video-camera.js");
var _fileVideoCameraJsDefault = parcelHelpers.interopDefault(_fileVideoCameraJs);
var _folderCogJs = require("./icons/folder-cog.js");
var _folderCogJsDefault = parcelHelpers.interopDefault(_folderCogJs);
var _folderPenJs = require("./icons/folder-pen.js");
var _folderPenJsDefault = parcelHelpers.interopDefault(_folderPenJs);
var _funnelXJs = require("./icons/funnel-x.js");
var _funnelXJsDefault = parcelHelpers.interopDefault(_funnelXJs);
var _funnelJs = require("./icons/funnel.js");
var _funnelJsDefault = parcelHelpers.interopDefault(_funnelJs);
var _gitCommitHorizontalJs = require("./icons/git-commit-horizontal.js");
var _gitCommitHorizontalJsDefault = parcelHelpers.interopDefault(_gitCommitHorizontalJs);
var _grid2X2CheckJs = require("./icons/grid-2x2-check.js");
var _grid2X2CheckJsDefault = parcelHelpers.interopDefault(_grid2X2CheckJs);
var _grid2X2PlusJs = require("./icons/grid-2x2-plus.js");
var _grid2X2PlusJsDefault = parcelHelpers.interopDefault(_grid2X2PlusJs);
var _grid2X2XJs = require("./icons/grid-2x2-x.js");
var _grid2X2XJsDefault = parcelHelpers.interopDefault(_grid2X2XJs);
var _grid2X2Js = require("./icons/grid-2x2.js");
var _grid2X2JsDefault = parcelHelpers.interopDefault(_grid2X2Js);
var _grid3X3Js = require("./icons/grid-3x3.js");
var _grid3X3JsDefault = parcelHelpers.interopDefault(_grid3X3Js);
var _handGrabJs = require("./icons/hand-grab.js");
var _handGrabJsDefault = parcelHelpers.interopDefault(_handGrabJs);
var _handHelpingJs = require("./icons/hand-helping.js");
var _handHelpingJsDefault = parcelHelpers.interopDefault(_handHelpingJs);
var _houseJs = require("./icons/house.js");
var _houseJsDefault = parcelHelpers.interopDefault(_houseJs);
var _iceCreamBowlJs = require("./icons/ice-cream-bowl.js");
var _iceCreamBowlJsDefault = parcelHelpers.interopDefault(_iceCreamBowlJs);
var _iceCreamConeJs = require("./icons/ice-cream-cone.js");
var _iceCreamConeJsDefault = parcelHelpers.interopDefault(_iceCreamConeJs);
var _laptopMinimalJs = require("./icons/laptop-minimal.js");
var _laptopMinimalJsDefault = parcelHelpers.interopDefault(_laptopMinimalJs);
var _layersJs = require("./icons/layers.js");
var _layersJsDefault = parcelHelpers.interopDefault(_layersJs);
var _listIndentDecreaseJs = require("./icons/list-indent-decrease.js");
var _listIndentDecreaseJsDefault = parcelHelpers.interopDefault(_listIndentDecreaseJs);
var _listIndentIncreaseJs = require("./icons/list-indent-increase.js");
var _listIndentIncreaseJsDefault = parcelHelpers.interopDefault(_listIndentIncreaseJs);
var _loaderCircleJs = require("./icons/loader-circle.js");
var _loaderCircleJsDefault = parcelHelpers.interopDefault(_loaderCircleJs);
var _lockKeyholeOpenJs = require("./icons/lock-keyhole-open.js");
var _lockKeyholeOpenJsDefault = parcelHelpers.interopDefault(_lockKeyholeOpenJs);
var _lockOpenJs = require("./icons/lock-open.js");
var _lockOpenJsDefault = parcelHelpers.interopDefault(_lockOpenJs);
var _mailQuestionMarkJs = require("./icons/mail-question-mark.js");
var _mailQuestionMarkJsDefault = parcelHelpers.interopDefault(_mailQuestionMarkJs);
var _mapPinPenJs = require("./icons/map-pin-pen.js");
var _mapPinPenJsDefault = parcelHelpers.interopDefault(_mapPinPenJs);
var _messageCircleQuestionMarkJs = require("./icons/message-circle-question-mark.js");
var _messageCircleQuestionMarkJsDefault = parcelHelpers.interopDefault(_messageCircleQuestionMarkJs);
var _micVocalJs = require("./icons/mic-vocal.js");
var _micVocalJsDefault = parcelHelpers.interopDefault(_micVocalJs);
var _move3DJs = require("./icons/move-3d.js");
var _move3DJsDefault = parcelHelpers.interopDefault(_move3DJs);
var _octagonAlertJs = require("./icons/octagon-alert.js");
var _octagonAlertJsDefault = parcelHelpers.interopDefault(_octagonAlertJs);
var _octagonPauseJs = require("./icons/octagon-pause.js");
var _octagonPauseJsDefault = parcelHelpers.interopDefault(_octagonPauseJs);
var _octagonXJs = require("./icons/octagon-x.js");
var _octagonXJsDefault = parcelHelpers.interopDefault(_octagonXJs);
var _paintbrushVerticalJs = require("./icons/paintbrush-vertical.js");
var _paintbrushVerticalJsDefault = parcelHelpers.interopDefault(_paintbrushVerticalJs);
var _panelBottomDashedJs = require("./icons/panel-bottom-dashed.js");
var _panelBottomDashedJsDefault = parcelHelpers.interopDefault(_panelBottomDashedJs);
var _panelLeftCloseJs = require("./icons/panel-left-close.js");
var _panelLeftCloseJsDefault = parcelHelpers.interopDefault(_panelLeftCloseJs);
var _panelLeftDashedJs = require("./icons/panel-left-dashed.js");
var _panelLeftDashedJsDefault = parcelHelpers.interopDefault(_panelLeftDashedJs);
var _panelLeftOpenJs = require("./icons/panel-left-open.js");
var _panelLeftOpenJsDefault = parcelHelpers.interopDefault(_panelLeftOpenJs);
var _panelLeftJs = require("./icons/panel-left.js");
var _panelLeftJsDefault = parcelHelpers.interopDefault(_panelLeftJs);
var _panelRightDashedJs = require("./icons/panel-right-dashed.js");
var _panelRightDashedJsDefault = parcelHelpers.interopDefault(_panelRightDashedJs);
var _panelTopDashedJs = require("./icons/panel-top-dashed.js");
var _panelTopDashedJsDefault = parcelHelpers.interopDefault(_panelTopDashedJs);
var _panelsTopLeftJs = require("./icons/panels-top-left.js");
var _panelsTopLeftJsDefault = parcelHelpers.interopDefault(_panelsTopLeftJs);
var _penLineJs = require("./icons/pen-line.js");
var _penLineJsDefault = parcelHelpers.interopDefault(_penLineJs);
var _penJs = require("./icons/pen.js");
var _penJsDefault = parcelHelpers.interopDefault(_penJs);
var _plugZapJs = require("./icons/plug-zap.js");
var _plugZapJsDefault = parcelHelpers.interopDefault(_plugZapJs);
var _rectangleEllipsisJs = require("./icons/rectangle-ellipsis.js");
var _rectangleEllipsisJsDefault = parcelHelpers.interopDefault(_rectangleEllipsisJs);
var _rotate3DJs = require("./icons/rotate-3d.js");
var _rotate3DJsDefault = parcelHelpers.interopDefault(_rotate3DJs);
var _rows2Js = require("./icons/rows-2.js");
var _rows2JsDefault = parcelHelpers.interopDefault(_rows2Js);
var _rows3Js = require("./icons/rows-3.js");
var _rows3JsDefault = parcelHelpers.interopDefault(_rows3Js);
var _scale3DJs = require("./icons/scale-3d.js");
var _scale3DJsDefault = parcelHelpers.interopDefault(_scale3DJs);
var _sendHorizontalJs = require("./icons/send-horizontal.js");
var _sendHorizontalJsDefault = parcelHelpers.interopDefault(_sendHorizontalJs);
var _shieldQuestionMarkJs = require("./icons/shield-question-mark.js");
var _shieldQuestionMarkJsDefault = parcelHelpers.interopDefault(_shieldQuestionMarkJs);
var _shieldXJs = require("./icons/shield-x.js");
var _shieldXJsDefault = parcelHelpers.interopDefault(_shieldXJs);
var _slidersVerticalJs = require("./icons/sliders-vertical.js");
var _slidersVerticalJsDefault = parcelHelpers.interopDefault(_slidersVerticalJs);
var _sparklesJs = require("./icons/sparkles.js");
var _sparklesJsDefault = parcelHelpers.interopDefault(_sparklesJs);
var _squareActivityJs = require("./icons/square-activity.js");
var _squareActivityJsDefault = parcelHelpers.interopDefault(_squareActivityJs);
var _squareArrowDownLeftJs = require("./icons/square-arrow-down-left.js");
var _squareArrowDownLeftJsDefault = parcelHelpers.interopDefault(_squareArrowDownLeftJs);
var _squareArrowDownRightJs = require("./icons/square-arrow-down-right.js");
var _squareArrowDownRightJsDefault = parcelHelpers.interopDefault(_squareArrowDownRightJs);
var _squareArrowLeftJs = require("./icons/square-arrow-left.js");
var _squareArrowLeftJsDefault = parcelHelpers.interopDefault(_squareArrowLeftJs);
var _squareArrowDownJs = require("./icons/square-arrow-down.js");
var _squareArrowDownJsDefault = parcelHelpers.interopDefault(_squareArrowDownJs);
var _squareArrowOutDownLeftJs = require("./icons/square-arrow-out-down-left.js");
var _squareArrowOutDownLeftJsDefault = parcelHelpers.interopDefault(_squareArrowOutDownLeftJs);
var _squareArrowOutDownRightJs = require("./icons/square-arrow-out-down-right.js");
var _squareArrowOutDownRightJsDefault = parcelHelpers.interopDefault(_squareArrowOutDownRightJs);
var _squareArrowOutUpLeftJs = require("./icons/square-arrow-out-up-left.js");
var _squareArrowOutUpLeftJsDefault = parcelHelpers.interopDefault(_squareArrowOutUpLeftJs);
var _squareArrowOutUpRightJs = require("./icons/square-arrow-out-up-right.js");
var _squareArrowOutUpRightJsDefault = parcelHelpers.interopDefault(_squareArrowOutUpRightJs);
var _squareArrowRightJs = require("./icons/square-arrow-right.js");
var _squareArrowRightJsDefault = parcelHelpers.interopDefault(_squareArrowRightJs);
var _squareArrowUpLeftJs = require("./icons/square-arrow-up-left.js");
var _squareArrowUpLeftJsDefault = parcelHelpers.interopDefault(_squareArrowUpLeftJs);
var _squareArrowUpRightJs = require("./icons/square-arrow-up-right.js");
var _squareArrowUpRightJsDefault = parcelHelpers.interopDefault(_squareArrowUpRightJs);
var _squareArrowUpJs = require("./icons/square-arrow-up.js");
var _squareArrowUpJsDefault = parcelHelpers.interopDefault(_squareArrowUpJs);
var _squareAsteriskJs = require("./icons/square-asterisk.js");
var _squareAsteriskJsDefault = parcelHelpers.interopDefault(_squareAsteriskJs);
var _squareBottomDashedScissorsJs = require("./icons/square-bottom-dashed-scissors.js");
var _squareBottomDashedScissorsJsDefault = parcelHelpers.interopDefault(_squareBottomDashedScissorsJs);
var _squareChartGanttJs = require("./icons/square-chart-gantt.js");
var _squareChartGanttJsDefault = parcelHelpers.interopDefault(_squareChartGanttJs);
var _squareCheckBigJs = require("./icons/square-check-big.js");
var _squareCheckBigJsDefault = parcelHelpers.interopDefault(_squareCheckBigJs);
var _squareCheckJs = require("./icons/square-check.js");
var _squareCheckJsDefault = parcelHelpers.interopDefault(_squareCheckJs);
var _squareChevronDownJs = require("./icons/square-chevron-down.js");
var _squareChevronDownJsDefault = parcelHelpers.interopDefault(_squareChevronDownJs);
var _squareChevronLeftJs = require("./icons/square-chevron-left.js");
var _squareChevronLeftJsDefault = parcelHelpers.interopDefault(_squareChevronLeftJs);
var _squareChevronUpJs = require("./icons/square-chevron-up.js");
var _squareChevronUpJsDefault = parcelHelpers.interopDefault(_squareChevronUpJs);
var _squareChevronRightJs = require("./icons/square-chevron-right.js");
var _squareChevronRightJsDefault = parcelHelpers.interopDefault(_squareChevronRightJs);
var _squareCodeJs = require("./icons/square-code.js");
var _squareCodeJsDefault = parcelHelpers.interopDefault(_squareCodeJs);
var _squareDashedKanbanJs = require("./icons/square-dashed-kanban.js");
var _squareDashedKanbanJsDefault = parcelHelpers.interopDefault(_squareDashedKanbanJs);
var _squareDashedMousePointerJs = require("./icons/square-dashed-mouse-pointer.js");
var _squareDashedMousePointerJsDefault = parcelHelpers.interopDefault(_squareDashedMousePointerJs);
var _squareDashedJs = require("./icons/square-dashed.js");
var _squareDashedJsDefault = parcelHelpers.interopDefault(_squareDashedJs);
var _squareDivideJs = require("./icons/square-divide.js");
var _squareDivideJsDefault = parcelHelpers.interopDefault(_squareDivideJs);
var _squareDotJs = require("./icons/square-dot.js");
var _squareDotJsDefault = parcelHelpers.interopDefault(_squareDotJs);
var _squareEqualJs = require("./icons/square-equal.js");
var _squareEqualJsDefault = parcelHelpers.interopDefault(_squareEqualJs);
var _squareFunctionJs = require("./icons/square-function.js");
var _squareFunctionJsDefault = parcelHelpers.interopDefault(_squareFunctionJs);
var _squareKanbanJs = require("./icons/square-kanban.js");
var _squareKanbanJsDefault = parcelHelpers.interopDefault(_squareKanbanJs);
var _squareLibraryJs = require("./icons/square-library.js");
var _squareLibraryJsDefault = parcelHelpers.interopDefault(_squareLibraryJs);
var _squareMJs = require("./icons/square-m.js");
var _squareMJsDefault = parcelHelpers.interopDefault(_squareMJs);
var _squareMenuJs = require("./icons/square-menu.js");
var _squareMenuJsDefault = parcelHelpers.interopDefault(_squareMenuJs);
var _squareMinusJs = require("./icons/square-minus.js");
var _squareMinusJsDefault = parcelHelpers.interopDefault(_squareMinusJs);
var _squareMousePointerJs = require("./icons/square-mouse-pointer.js");
var _squareMousePointerJsDefault = parcelHelpers.interopDefault(_squareMousePointerJs);
var _squareParkingOffJs = require("./icons/square-parking-off.js");
var _squareParkingOffJsDefault = parcelHelpers.interopDefault(_squareParkingOffJs);
var _squareParkingJs = require("./icons/square-parking.js");
var _squareParkingJsDefault = parcelHelpers.interopDefault(_squareParkingJs);
var _squarePenJs = require("./icons/square-pen.js");
var _squarePenJsDefault = parcelHelpers.interopDefault(_squarePenJs);
var _squarePercentJs = require("./icons/square-percent.js");
var _squarePercentJsDefault = parcelHelpers.interopDefault(_squarePercentJs);
var _squarePiJs = require("./icons/square-pi.js");
var _squarePiJsDefault = parcelHelpers.interopDefault(_squarePiJs);
var _squarePilcrowJs = require("./icons/square-pilcrow.js");
var _squarePilcrowJsDefault = parcelHelpers.interopDefault(_squarePilcrowJs);
var _squarePlayJs = require("./icons/square-play.js");
var _squarePlayJsDefault = parcelHelpers.interopDefault(_squarePlayJs);
var _squarePlusJs = require("./icons/square-plus.js");
var _squarePlusJsDefault = parcelHelpers.interopDefault(_squarePlusJs);
var _squarePowerJs = require("./icons/square-power.js");
var _squarePowerJsDefault = parcelHelpers.interopDefault(_squarePowerJs);
var _squareScissorsJs = require("./icons/square-scissors.js");
var _squareScissorsJsDefault = parcelHelpers.interopDefault(_squareScissorsJs);
var _squareSigmaJs = require("./icons/square-sigma.js");
var _squareSigmaJsDefault = parcelHelpers.interopDefault(_squareSigmaJs);
var _squareSlashJs = require("./icons/square-slash.js");
var _squareSlashJsDefault = parcelHelpers.interopDefault(_squareSlashJs);
var _squareSplitHorizontalJs = require("./icons/square-split-horizontal.js");
var _squareSplitHorizontalJsDefault = parcelHelpers.interopDefault(_squareSplitHorizontalJs);
var _squareSplitVerticalJs = require("./icons/square-split-vertical.js");
var _squareSplitVerticalJsDefault = parcelHelpers.interopDefault(_squareSplitVerticalJs);
var _squareTerminalJs = require("./icons/square-terminal.js");
var _squareTerminalJsDefault = parcelHelpers.interopDefault(_squareTerminalJs);
var _squareUserRoundJs = require("./icons/square-user-round.js");
var _squareUserRoundJsDefault = parcelHelpers.interopDefault(_squareUserRoundJs);
var _squareUserJs = require("./icons/square-user.js");
var _squareUserJsDefault = parcelHelpers.interopDefault(_squareUserJs);
var _squareXJs = require("./icons/square-x.js");
var _squareXJsDefault = parcelHelpers.interopDefault(_squareXJs);
var _testTubeDiagonalJs = require("./icons/test-tube-diagonal.js");
var _testTubeDiagonalJsDefault = parcelHelpers.interopDefault(_testTubeDiagonalJs);
var _textAlignCenterJs = require("./icons/text-align-center.js");
var _textAlignCenterJsDefault = parcelHelpers.interopDefault(_textAlignCenterJs);
var _textAlignEndJs = require("./icons/text-align-end.js");
var _textAlignEndJsDefault = parcelHelpers.interopDefault(_textAlignEndJs);
var _textAlignJustifyJs = require("./icons/text-align-justify.js");
var _textAlignJustifyJsDefault = parcelHelpers.interopDefault(_textAlignJustifyJs);
var _textAlignStartJs = require("./icons/text-align-start.js");
var _textAlignStartJsDefault = parcelHelpers.interopDefault(_textAlignStartJs);
var _textInitialJs = require("./icons/text-initial.js");
var _textInitialJsDefault = parcelHelpers.interopDefault(_textInitialJs);
var _textSelectJs = require("./icons/text-select.js");
var _textSelectJsDefault = parcelHelpers.interopDefault(_textSelectJs);
var _textWrapJs = require("./icons/text-wrap.js");
var _textWrapJsDefault = parcelHelpers.interopDefault(_textWrapJs);
var _tramFrontJs = require("./icons/tram-front.js");
var _tramFrontJsDefault = parcelHelpers.interopDefault(_tramFrontJs);
var _treePalmJs = require("./icons/tree-palm.js");
var _treePalmJsDefault = parcelHelpers.interopDefault(_treePalmJs);
var _triangleAlertJs = require("./icons/triangle-alert.js");
var _triangleAlertJsDefault = parcelHelpers.interopDefault(_triangleAlertJs);
var _tvMinimalJs = require("./icons/tv-minimal.js");
var _tvMinimalJsDefault = parcelHelpers.interopDefault(_tvMinimalJs);
var _universityJs = require("./icons/university.js");
var _universityJsDefault = parcelHelpers.interopDefault(_universityJs);
var _userRoundCheckJs = require("./icons/user-round-check.js");
var _userRoundCheckJsDefault = parcelHelpers.interopDefault(_userRoundCheckJs);
var _userRoundCogJs = require("./icons/user-round-cog.js");
var _userRoundCogJsDefault = parcelHelpers.interopDefault(_userRoundCogJs);
var _userRoundMinusJs = require("./icons/user-round-minus.js");
var _userRoundMinusJsDefault = parcelHelpers.interopDefault(_userRoundMinusJs);
var _userRoundPlusJs = require("./icons/user-round-plus.js");
var _userRoundPlusJsDefault = parcelHelpers.interopDefault(_userRoundPlusJs);
var _userRoundXJs = require("./icons/user-round-x.js");
var _userRoundXJsDefault = parcelHelpers.interopDefault(_userRoundXJs);
var _userRoundJs = require("./icons/user-round.js");
var _userRoundJsDefault = parcelHelpers.interopDefault(_userRoundJs);
var _usersRoundJs = require("./icons/users-round.js");
var _usersRoundJsDefault = parcelHelpers.interopDefault(_usersRoundJs);
var _utensilsCrossedJs = require("./icons/utensils-crossed.js");
var _utensilsCrossedJsDefault = parcelHelpers.interopDefault(_utensilsCrossedJs);
var _utensilsJs = require("./icons/utensils.js");
var _utensilsJsDefault = parcelHelpers.interopDefault(_utensilsJs);
var _walletMinimalJs = require("./icons/wallet-minimal.js");
var _walletMinimalJsDefault = parcelHelpers.interopDefault(_walletMinimalJs);
var _wandSparklesJs = require("./icons/wand-sparkles.js");
var _wandSparklesJsDefault = parcelHelpers.interopDefault(_wandSparklesJs);
var _aArrowDownJs = require("./icons/a-arrow-down.js");
var _aArrowDownJsDefault = parcelHelpers.interopDefault(_aArrowDownJs);
var _aArrowUpJs = require("./icons/a-arrow-up.js");
var _aArrowUpJsDefault = parcelHelpers.interopDefault(_aArrowUpJs);
var _aLargeSmallJs = require("./icons/a-large-small.js");
var _aLargeSmallJsDefault = parcelHelpers.interopDefault(_aLargeSmallJs);
var _accessibilityJs = require("./icons/accessibility.js");
var _accessibilityJsDefault = parcelHelpers.interopDefault(_accessibilityJs);
var _activityJs = require("./icons/activity.js");
var _activityJsDefault = parcelHelpers.interopDefault(_activityJs);
var _airVentJs = require("./icons/air-vent.js");
var _airVentJsDefault = parcelHelpers.interopDefault(_airVentJs);
var _airplayJs = require("./icons/airplay.js");
var _airplayJsDefault = parcelHelpers.interopDefault(_airplayJs);
var _alarmClockOffJs = require("./icons/alarm-clock-off.js");
var _alarmClockOffJsDefault = parcelHelpers.interopDefault(_alarmClockOffJs);
var _alarmClockJs = require("./icons/alarm-clock.js");
var _alarmClockJsDefault = parcelHelpers.interopDefault(_alarmClockJs);
var _albumJs = require("./icons/album.js");
var _albumJsDefault = parcelHelpers.interopDefault(_albumJs);
var _alarmSmokeJs = require("./icons/alarm-smoke.js");
var _alarmSmokeJsDefault = parcelHelpers.interopDefault(_alarmSmokeJs);
var _alignCenterHorizontalJs = require("./icons/align-center-horizontal.js");
var _alignCenterHorizontalJsDefault = parcelHelpers.interopDefault(_alignCenterHorizontalJs);
var _alignCenterVerticalJs = require("./icons/align-center-vertical.js");
var _alignCenterVerticalJsDefault = parcelHelpers.interopDefault(_alignCenterVerticalJs);
var _alignEndHorizontalJs = require("./icons/align-end-horizontal.js");
var _alignEndHorizontalJsDefault = parcelHelpers.interopDefault(_alignEndHorizontalJs);
var _alignEndVerticalJs = require("./icons/align-end-vertical.js");
var _alignEndVerticalJsDefault = parcelHelpers.interopDefault(_alignEndVerticalJs);
var _alignHorizontalDistributeCenterJs = require("./icons/align-horizontal-distribute-center.js");
var _alignHorizontalDistributeCenterJsDefault = parcelHelpers.interopDefault(_alignHorizontalDistributeCenterJs);
var _alignHorizontalDistributeEndJs = require("./icons/align-horizontal-distribute-end.js");
var _alignHorizontalDistributeEndJsDefault = parcelHelpers.interopDefault(_alignHorizontalDistributeEndJs);
var _alignHorizontalDistributeStartJs = require("./icons/align-horizontal-distribute-start.js");
var _alignHorizontalDistributeStartJsDefault = parcelHelpers.interopDefault(_alignHorizontalDistributeStartJs);
var _alignHorizontalJustifyCenterJs = require("./icons/align-horizontal-justify-center.js");
var _alignHorizontalJustifyCenterJsDefault = parcelHelpers.interopDefault(_alignHorizontalJustifyCenterJs);
var _alignHorizontalJustifyEndJs = require("./icons/align-horizontal-justify-end.js");
var _alignHorizontalJustifyEndJsDefault = parcelHelpers.interopDefault(_alignHorizontalJustifyEndJs);
var _alignHorizontalJustifyStartJs = require("./icons/align-horizontal-justify-start.js");
var _alignHorizontalJustifyStartJsDefault = parcelHelpers.interopDefault(_alignHorizontalJustifyStartJs);
var _alignHorizontalSpaceAroundJs = require("./icons/align-horizontal-space-around.js");
var _alignHorizontalSpaceAroundJsDefault = parcelHelpers.interopDefault(_alignHorizontalSpaceAroundJs);
var _alignHorizontalSpaceBetweenJs = require("./icons/align-horizontal-space-between.js");
var _alignHorizontalSpaceBetweenJsDefault = parcelHelpers.interopDefault(_alignHorizontalSpaceBetweenJs);
var _alignStartHorizontalJs = require("./icons/align-start-horizontal.js");
var _alignStartHorizontalJsDefault = parcelHelpers.interopDefault(_alignStartHorizontalJs);
var _alignStartVerticalJs = require("./icons/align-start-vertical.js");
var _alignStartVerticalJsDefault = parcelHelpers.interopDefault(_alignStartVerticalJs);
var _alignVerticalDistributeCenterJs = require("./icons/align-vertical-distribute-center.js");
var _alignVerticalDistributeCenterJsDefault = parcelHelpers.interopDefault(_alignVerticalDistributeCenterJs);
var _alignVerticalDistributeEndJs = require("./icons/align-vertical-distribute-end.js");
var _alignVerticalDistributeEndJsDefault = parcelHelpers.interopDefault(_alignVerticalDistributeEndJs);
var _alignVerticalDistributeStartJs = require("./icons/align-vertical-distribute-start.js");
var _alignVerticalDistributeStartJsDefault = parcelHelpers.interopDefault(_alignVerticalDistributeStartJs);
var _alignVerticalJustifyCenterJs = require("./icons/align-vertical-justify-center.js");
var _alignVerticalJustifyCenterJsDefault = parcelHelpers.interopDefault(_alignVerticalJustifyCenterJs);
var _alignVerticalJustifyEndJs = require("./icons/align-vertical-justify-end.js");
var _alignVerticalJustifyEndJsDefault = parcelHelpers.interopDefault(_alignVerticalJustifyEndJs);
var _alignVerticalJustifyStartJs = require("./icons/align-vertical-justify-start.js");
var _alignVerticalJustifyStartJsDefault = parcelHelpers.interopDefault(_alignVerticalJustifyStartJs);
var _alignVerticalSpaceAroundJs = require("./icons/align-vertical-space-around.js");
var _alignVerticalSpaceAroundJsDefault = parcelHelpers.interopDefault(_alignVerticalSpaceAroundJs);
var _alignVerticalSpaceBetweenJs = require("./icons/align-vertical-space-between.js");
var _alignVerticalSpaceBetweenJsDefault = parcelHelpers.interopDefault(_alignVerticalSpaceBetweenJs);
var _ambulanceJs = require("./icons/ambulance.js");
var _ambulanceJsDefault = parcelHelpers.interopDefault(_ambulanceJs);
var _ampersandJs = require("./icons/ampersand.js");
var _ampersandJsDefault = parcelHelpers.interopDefault(_ampersandJs);
var _ampersandsJs = require("./icons/ampersands.js");
var _ampersandsJsDefault = parcelHelpers.interopDefault(_ampersandsJs);
var _amphoraJs = require("./icons/amphora.js");
var _amphoraJsDefault = parcelHelpers.interopDefault(_amphoraJs);
var _anchorJs = require("./icons/anchor.js");
var _anchorJsDefault = parcelHelpers.interopDefault(_anchorJs);
var _angryJs = require("./icons/angry.js");
var _angryJsDefault = parcelHelpers.interopDefault(_angryJs);
var _annoyedJs = require("./icons/annoyed.js");
var _annoyedJsDefault = parcelHelpers.interopDefault(_annoyedJs);
var _antennaJs = require("./icons/antenna.js");
var _antennaJsDefault = parcelHelpers.interopDefault(_antennaJs);
var _anvilJs = require("./icons/anvil.js");
var _anvilJsDefault = parcelHelpers.interopDefault(_anvilJs);
var _appWindowMacJs = require("./icons/app-window-mac.js");
var _appWindowMacJsDefault = parcelHelpers.interopDefault(_appWindowMacJs);
var _apertureJs = require("./icons/aperture.js");
var _apertureJsDefault = parcelHelpers.interopDefault(_apertureJs);
var _appWindowJs = require("./icons/app-window.js");
var _appWindowJsDefault = parcelHelpers.interopDefault(_appWindowJs);
var _appleJs = require("./icons/apple.js");
var _appleJsDefault = parcelHelpers.interopDefault(_appleJs);
var _archiveRestoreJs = require("./icons/archive-restore.js");
var _archiveRestoreJsDefault = parcelHelpers.interopDefault(_archiveRestoreJs);
var _archiveXJs = require("./icons/archive-x.js");
var _archiveXJsDefault = parcelHelpers.interopDefault(_archiveXJs);
var _archiveJs = require("./icons/archive.js");
var _archiveJsDefault = parcelHelpers.interopDefault(_archiveJs);
var _armchairJs = require("./icons/armchair.js");
var _armchairJsDefault = parcelHelpers.interopDefault(_armchairJs);
var _arrowBigDownDashJs = require("./icons/arrow-big-down-dash.js");
var _arrowBigDownDashJsDefault = parcelHelpers.interopDefault(_arrowBigDownDashJs);
var _arrowBigDownJs = require("./icons/arrow-big-down.js");
var _arrowBigDownJsDefault = parcelHelpers.interopDefault(_arrowBigDownJs);
var _arrowBigLeftDashJs = require("./icons/arrow-big-left-dash.js");
var _arrowBigLeftDashJsDefault = parcelHelpers.interopDefault(_arrowBigLeftDashJs);
var _arrowBigLeftJs = require("./icons/arrow-big-left.js");
var _arrowBigLeftJsDefault = parcelHelpers.interopDefault(_arrowBigLeftJs);
var _arrowBigRightDashJs = require("./icons/arrow-big-right-dash.js");
var _arrowBigRightDashJsDefault = parcelHelpers.interopDefault(_arrowBigRightDashJs);
var _arrowBigUpDashJs = require("./icons/arrow-big-up-dash.js");
var _arrowBigUpDashJsDefault = parcelHelpers.interopDefault(_arrowBigUpDashJs);
var _arrowBigRightJs = require("./icons/arrow-big-right.js");
var _arrowBigRightJsDefault = parcelHelpers.interopDefault(_arrowBigRightJs);
var _arrowBigUpJs = require("./icons/arrow-big-up.js");
var _arrowBigUpJsDefault = parcelHelpers.interopDefault(_arrowBigUpJs);
var _arrowDownFromLineJs = require("./icons/arrow-down-from-line.js");
var _arrowDownFromLineJsDefault = parcelHelpers.interopDefault(_arrowDownFromLineJs);
var _arrowDownLeftJs = require("./icons/arrow-down-left.js");
var _arrowDownLeftJsDefault = parcelHelpers.interopDefault(_arrowDownLeftJs);
var _arrowDownNarrowWideJs = require("./icons/arrow-down-narrow-wide.js");
var _arrowDownNarrowWideJsDefault = parcelHelpers.interopDefault(_arrowDownNarrowWideJs);
var _arrowDownRightJs = require("./icons/arrow-down-right.js");
var _arrowDownRightJsDefault = parcelHelpers.interopDefault(_arrowDownRightJs);
var _arrowDownToDotJs = require("./icons/arrow-down-to-dot.js");
var _arrowDownToDotJsDefault = parcelHelpers.interopDefault(_arrowDownToDotJs);
var _arrowDownToLineJs = require("./icons/arrow-down-to-line.js");
var _arrowDownToLineJsDefault = parcelHelpers.interopDefault(_arrowDownToLineJs);
var _arrowDownUpJs = require("./icons/arrow-down-up.js");
var _arrowDownUpJsDefault = parcelHelpers.interopDefault(_arrowDownUpJs);
var _arrowDownJs = require("./icons/arrow-down.js");
var _arrowDownJsDefault = parcelHelpers.interopDefault(_arrowDownJs);
var _arrowLeftFromLineJs = require("./icons/arrow-left-from-line.js");
var _arrowLeftFromLineJsDefault = parcelHelpers.interopDefault(_arrowLeftFromLineJs);
var _arrowLeftRightJs = require("./icons/arrow-left-right.js");
var _arrowLeftRightJsDefault = parcelHelpers.interopDefault(_arrowLeftRightJs);
var _arrowLeftToLineJs = require("./icons/arrow-left-to-line.js");
var _arrowLeftToLineJsDefault = parcelHelpers.interopDefault(_arrowLeftToLineJs);
var _arrowLeftJs = require("./icons/arrow-left.js");
var _arrowLeftJsDefault = parcelHelpers.interopDefault(_arrowLeftJs);
var _arrowRightFromLineJs = require("./icons/arrow-right-from-line.js");
var _arrowRightFromLineJsDefault = parcelHelpers.interopDefault(_arrowRightFromLineJs);
var _arrowRightLeftJs = require("./icons/arrow-right-left.js");
var _arrowRightLeftJsDefault = parcelHelpers.interopDefault(_arrowRightLeftJs);
var _arrowRightToLineJs = require("./icons/arrow-right-to-line.js");
var _arrowRightToLineJsDefault = parcelHelpers.interopDefault(_arrowRightToLineJs);
var _arrowRightJs = require("./icons/arrow-right.js");
var _arrowRightJsDefault = parcelHelpers.interopDefault(_arrowRightJs);
var _arrowUpDownJs = require("./icons/arrow-up-down.js");
var _arrowUpDownJsDefault = parcelHelpers.interopDefault(_arrowUpDownJs);
var _arrowUpFromDotJs = require("./icons/arrow-up-from-dot.js");
var _arrowUpFromDotJsDefault = parcelHelpers.interopDefault(_arrowUpFromDotJs);
var _arrowUpFromLineJs = require("./icons/arrow-up-from-line.js");
var _arrowUpFromLineJsDefault = parcelHelpers.interopDefault(_arrowUpFromLineJs);
var _arrowUpLeftJs = require("./icons/arrow-up-left.js");
var _arrowUpLeftJsDefault = parcelHelpers.interopDefault(_arrowUpLeftJs);
var _arrowUpRightJs = require("./icons/arrow-up-right.js");
var _arrowUpRightJsDefault = parcelHelpers.interopDefault(_arrowUpRightJs);
var _arrowUpToLineJs = require("./icons/arrow-up-to-line.js");
var _arrowUpToLineJsDefault = parcelHelpers.interopDefault(_arrowUpToLineJs);
var _arrowUpWideNarrowJs = require("./icons/arrow-up-wide-narrow.js");
var _arrowUpWideNarrowJsDefault = parcelHelpers.interopDefault(_arrowUpWideNarrowJs);
var _arrowUpJs = require("./icons/arrow-up.js");
var _arrowUpJsDefault = parcelHelpers.interopDefault(_arrowUpJs);
var _arrowsUpFromLineJs = require("./icons/arrows-up-from-line.js");
var _arrowsUpFromLineJsDefault = parcelHelpers.interopDefault(_arrowsUpFromLineJs);
var _asteriskJs = require("./icons/asterisk.js");
var _asteriskJsDefault = parcelHelpers.interopDefault(_asteriskJs);
var _atSignJs = require("./icons/at-sign.js");
var _atSignJsDefault = parcelHelpers.interopDefault(_atSignJs);
var _atomJs = require("./icons/atom.js");
var _atomJsDefault = parcelHelpers.interopDefault(_atomJs);
var _audioLinesJs = require("./icons/audio-lines.js");
var _audioLinesJsDefault = parcelHelpers.interopDefault(_audioLinesJs);
var _awardJs = require("./icons/award.js");
var _awardJsDefault = parcelHelpers.interopDefault(_awardJs);
var _audioWaveformJs = require("./icons/audio-waveform.js");
var _audioWaveformJsDefault = parcelHelpers.interopDefault(_audioWaveformJs);
var _axeJs = require("./icons/axe.js");
var _axeJsDefault = parcelHelpers.interopDefault(_axeJs);
var _babyJs = require("./icons/baby.js");
var _babyJsDefault = parcelHelpers.interopDefault(_babyJs);
var _backpackJs = require("./icons/backpack.js");
var _backpackJsDefault = parcelHelpers.interopDefault(_backpackJs);
var _badgeAlertJs = require("./icons/badge-alert.js");
var _badgeAlertJsDefault = parcelHelpers.interopDefault(_badgeAlertJs);
var _badgeCentJs = require("./icons/badge-cent.js");
var _badgeCentJsDefault = parcelHelpers.interopDefault(_badgeCentJs);
var _badgeDollarSignJs = require("./icons/badge-dollar-sign.js");
var _badgeDollarSignJsDefault = parcelHelpers.interopDefault(_badgeDollarSignJs);
var _badgeEuroJs = require("./icons/badge-euro.js");
var _badgeEuroJsDefault = parcelHelpers.interopDefault(_badgeEuroJs);
var _badgeIndianRupeeJs = require("./icons/badge-indian-rupee.js");
var _badgeIndianRupeeJsDefault = parcelHelpers.interopDefault(_badgeIndianRupeeJs);
var _badgeInfoJs = require("./icons/badge-info.js");
var _badgeInfoJsDefault = parcelHelpers.interopDefault(_badgeInfoJs);
var _badgeJapaneseYenJs = require("./icons/badge-japanese-yen.js");
var _badgeJapaneseYenJsDefault = parcelHelpers.interopDefault(_badgeJapaneseYenJs);
var _badgeMinusJs = require("./icons/badge-minus.js");
var _badgeMinusJsDefault = parcelHelpers.interopDefault(_badgeMinusJs);
var _badgePlusJs = require("./icons/badge-plus.js");
var _badgePlusJsDefault = parcelHelpers.interopDefault(_badgePlusJs);
var _badgePoundSterlingJs = require("./icons/badge-pound-sterling.js");
var _badgePoundSterlingJsDefault = parcelHelpers.interopDefault(_badgePoundSterlingJs);
var _badgePercentJs = require("./icons/badge-percent.js");
var _badgePercentJsDefault = parcelHelpers.interopDefault(_badgePercentJs);
var _badgeRussianRubleJs = require("./icons/badge-russian-ruble.js");
var _badgeRussianRubleJsDefault = parcelHelpers.interopDefault(_badgeRussianRubleJs);
var _badgeSwissFrancJs = require("./icons/badge-swiss-franc.js");
var _badgeSwissFrancJsDefault = parcelHelpers.interopDefault(_badgeSwissFrancJs);
var _badgeTurkishLiraJs = require("./icons/badge-turkish-lira.js");
var _badgeTurkishLiraJsDefault = parcelHelpers.interopDefault(_badgeTurkishLiraJs);
var _badgeXJs = require("./icons/badge-x.js");
var _badgeXJsDefault = parcelHelpers.interopDefault(_badgeXJs);
var _badgeJs = require("./icons/badge.js");
var _badgeJsDefault = parcelHelpers.interopDefault(_badgeJs);
var _baggageClaimJs = require("./icons/baggage-claim.js");
var _baggageClaimJsDefault = parcelHelpers.interopDefault(_baggageClaimJs);
var _banJs = require("./icons/ban.js");
var _banJsDefault = parcelHelpers.interopDefault(_banJs);
var _bananaJs = require("./icons/banana.js");
var _bananaJsDefault = parcelHelpers.interopDefault(_bananaJs);
var _bandageJs = require("./icons/bandage.js");
var _bandageJsDefault = parcelHelpers.interopDefault(_bandageJs);
var _banknoteArrowDownJs = require("./icons/banknote-arrow-down.js");
var _banknoteArrowDownJsDefault = parcelHelpers.interopDefault(_banknoteArrowDownJs);
var _banknoteXJs = require("./icons/banknote-x.js");
var _banknoteXJsDefault = parcelHelpers.interopDefault(_banknoteXJs);
var _banknoteArrowUpJs = require("./icons/banknote-arrow-up.js");
var _banknoteArrowUpJsDefault = parcelHelpers.interopDefault(_banknoteArrowUpJs);
var _banknoteJs = require("./icons/banknote.js");
var _banknoteJsDefault = parcelHelpers.interopDefault(_banknoteJs);
var _barcodeJs = require("./icons/barcode.js");
var _barcodeJsDefault = parcelHelpers.interopDefault(_barcodeJs);
var _baselineJs = require("./icons/baseline.js");
var _baselineJsDefault = parcelHelpers.interopDefault(_baselineJs);
var _barrelJs = require("./icons/barrel.js");
var _barrelJsDefault = parcelHelpers.interopDefault(_barrelJs);
var _bathJs = require("./icons/bath.js");
var _bathJsDefault = parcelHelpers.interopDefault(_bathJs);
var _batteryChargingJs = require("./icons/battery-charging.js");
var _batteryChargingJsDefault = parcelHelpers.interopDefault(_batteryChargingJs);
var _batteryFullJs = require("./icons/battery-full.js");
var _batteryFullJsDefault = parcelHelpers.interopDefault(_batteryFullJs);
var _batteryLowJs = require("./icons/battery-low.js");
var _batteryLowJsDefault = parcelHelpers.interopDefault(_batteryLowJs);
var _batteryMediumJs = require("./icons/battery-medium.js");
var _batteryMediumJsDefault = parcelHelpers.interopDefault(_batteryMediumJs);
var _batteryPlusJs = require("./icons/battery-plus.js");
var _batteryPlusJsDefault = parcelHelpers.interopDefault(_batteryPlusJs);
var _batteryWarningJs = require("./icons/battery-warning.js");
var _batteryWarningJsDefault = parcelHelpers.interopDefault(_batteryWarningJs);
var _batteryJs = require("./icons/battery.js");
var _batteryJsDefault = parcelHelpers.interopDefault(_batteryJs);
var _beakerJs = require("./icons/beaker.js");
var _beakerJsDefault = parcelHelpers.interopDefault(_beakerJs);
var _beanOffJs = require("./icons/bean-off.js");
var _beanOffJsDefault = parcelHelpers.interopDefault(_beanOffJs);
var _beanJs = require("./icons/bean.js");
var _beanJsDefault = parcelHelpers.interopDefault(_beanJs);
var _bedDoubleJs = require("./icons/bed-double.js");
var _bedDoubleJsDefault = parcelHelpers.interopDefault(_bedDoubleJs);
var _bedSingleJs = require("./icons/bed-single.js");
var _bedSingleJsDefault = parcelHelpers.interopDefault(_bedSingleJs);
var _bedJs = require("./icons/bed.js");
var _bedJsDefault = parcelHelpers.interopDefault(_bedJs);
var _beefJs = require("./icons/beef.js");
var _beefJsDefault = parcelHelpers.interopDefault(_beefJs);
var _beerOffJs = require("./icons/beer-off.js");
var _beerOffJsDefault = parcelHelpers.interopDefault(_beerOffJs);
var _bellDotJs = require("./icons/bell-dot.js");
var _bellDotJsDefault = parcelHelpers.interopDefault(_bellDotJs);
var _beerJs = require("./icons/beer.js");
var _beerJsDefault = parcelHelpers.interopDefault(_beerJs);
var _bellElectricJs = require("./icons/bell-electric.js");
var _bellElectricJsDefault = parcelHelpers.interopDefault(_bellElectricJs);
var _bellMinusJs = require("./icons/bell-minus.js");
var _bellMinusJsDefault = parcelHelpers.interopDefault(_bellMinusJs);
var _bellOffJs = require("./icons/bell-off.js");
var _bellOffJsDefault = parcelHelpers.interopDefault(_bellOffJs);
var _bellPlusJs = require("./icons/bell-plus.js");
var _bellPlusJsDefault = parcelHelpers.interopDefault(_bellPlusJs);
var _bellRingJs = require("./icons/bell-ring.js");
var _bellRingJsDefault = parcelHelpers.interopDefault(_bellRingJs);
var _bellJs = require("./icons/bell.js");
var _bellJsDefault = parcelHelpers.interopDefault(_bellJs);
var _betweenVerticalEndJs = require("./icons/between-vertical-end.js");
var _betweenVerticalEndJsDefault = parcelHelpers.interopDefault(_betweenVerticalEndJs);
var _betweenVerticalStartJs = require("./icons/between-vertical-start.js");
var _betweenVerticalStartJsDefault = parcelHelpers.interopDefault(_betweenVerticalStartJs);
var _bicepsFlexedJs = require("./icons/biceps-flexed.js");
var _bicepsFlexedJsDefault = parcelHelpers.interopDefault(_bicepsFlexedJs);
var _bikeJs = require("./icons/bike.js");
var _bikeJsDefault = parcelHelpers.interopDefault(_bikeJs);
var _binaryJs = require("./icons/binary.js");
var _binaryJsDefault = parcelHelpers.interopDefault(_binaryJs);
var _binocularsJs = require("./icons/binoculars.js");
var _binocularsJsDefault = parcelHelpers.interopDefault(_binocularsJs);
var _biohazardJs = require("./icons/biohazard.js");
var _biohazardJsDefault = parcelHelpers.interopDefault(_biohazardJs);
var _birdJs = require("./icons/bird.js");
var _birdJsDefault = parcelHelpers.interopDefault(_birdJs);
var _bitcoinJs = require("./icons/bitcoin.js");
var _bitcoinJsDefault = parcelHelpers.interopDefault(_bitcoinJs);
var _blendJs = require("./icons/blend.js");
var _blendJsDefault = parcelHelpers.interopDefault(_blendJs);
var _blindsJs = require("./icons/blinds.js");
var _blindsJsDefault = parcelHelpers.interopDefault(_blindsJs);
var _blocksJs = require("./icons/blocks.js");
var _blocksJsDefault = parcelHelpers.interopDefault(_blocksJs);
var _bluetoothConnectedJs = require("./icons/bluetooth-connected.js");
var _bluetoothConnectedJsDefault = parcelHelpers.interopDefault(_bluetoothConnectedJs);
var _bluetoothOffJs = require("./icons/bluetooth-off.js");
var _bluetoothOffJsDefault = parcelHelpers.interopDefault(_bluetoothOffJs);
var _bluetoothJs = require("./icons/bluetooth.js");
var _bluetoothJsDefault = parcelHelpers.interopDefault(_bluetoothJs);
var _bluetoothSearchingJs = require("./icons/bluetooth-searching.js");
var _bluetoothSearchingJsDefault = parcelHelpers.interopDefault(_bluetoothSearchingJs);
var _boldJs = require("./icons/bold.js");
var _boldJsDefault = parcelHelpers.interopDefault(_boldJs);
var _boltJs = require("./icons/bolt.js");
var _boltJsDefault = parcelHelpers.interopDefault(_boltJs);
var _bombJs = require("./icons/bomb.js");
var _bombJsDefault = parcelHelpers.interopDefault(_bombJs);
var _boneJs = require("./icons/bone.js");
var _boneJsDefault = parcelHelpers.interopDefault(_boneJs);
var _bookAJs = require("./icons/book-a.js");
var _bookAJsDefault = parcelHelpers.interopDefault(_bookAJs);
var _bookAlertJs = require("./icons/book-alert.js");
var _bookAlertJsDefault = parcelHelpers.interopDefault(_bookAlertJs);
var _bookAudioJs = require("./icons/book-audio.js");
var _bookAudioJsDefault = parcelHelpers.interopDefault(_bookAudioJs);
var _bookCheckJs = require("./icons/book-check.js");
var _bookCheckJsDefault = parcelHelpers.interopDefault(_bookCheckJs);
var _bookCopyJs = require("./icons/book-copy.js");
var _bookCopyJsDefault = parcelHelpers.interopDefault(_bookCopyJs);
var _bookDownJs = require("./icons/book-down.js");
var _bookDownJsDefault = parcelHelpers.interopDefault(_bookDownJs);
var _bookHeadphonesJs = require("./icons/book-headphones.js");
var _bookHeadphonesJsDefault = parcelHelpers.interopDefault(_bookHeadphonesJs);
var _bookHeartJs = require("./icons/book-heart.js");
var _bookHeartJsDefault = parcelHelpers.interopDefault(_bookHeartJs);
var _bookImageJs = require("./icons/book-image.js");
var _bookImageJsDefault = parcelHelpers.interopDefault(_bookImageJs);
var _bookKeyJs = require("./icons/book-key.js");
var _bookKeyJsDefault = parcelHelpers.interopDefault(_bookKeyJs);
var _bookLockJs = require("./icons/book-lock.js");
var _bookLockJsDefault = parcelHelpers.interopDefault(_bookLockJs);
var _bookMarkedJs = require("./icons/book-marked.js");
var _bookMarkedJsDefault = parcelHelpers.interopDefault(_bookMarkedJs);
var _bookMinusJs = require("./icons/book-minus.js");
var _bookMinusJsDefault = parcelHelpers.interopDefault(_bookMinusJs);
var _bookOpenCheckJs = require("./icons/book-open-check.js");
var _bookOpenCheckJsDefault = parcelHelpers.interopDefault(_bookOpenCheckJs);
var _bookOpenTextJs = require("./icons/book-open-text.js");
var _bookOpenTextJsDefault = parcelHelpers.interopDefault(_bookOpenTextJs);
var _bookOpenJs = require("./icons/book-open.js");
var _bookOpenJsDefault = parcelHelpers.interopDefault(_bookOpenJs);
var _bookPlusJs = require("./icons/book-plus.js");
var _bookPlusJsDefault = parcelHelpers.interopDefault(_bookPlusJs);
var _bookTypeJs = require("./icons/book-type.js");
var _bookTypeJsDefault = parcelHelpers.interopDefault(_bookTypeJs);
var _bookTextJs = require("./icons/book-text.js");
var _bookTextJsDefault = parcelHelpers.interopDefault(_bookTextJs);
var _bookUp2Js = require("./icons/book-up-2.js");
var _bookUp2JsDefault = parcelHelpers.interopDefault(_bookUp2Js);
var _bookUpJs = require("./icons/book-up.js");
var _bookUpJsDefault = parcelHelpers.interopDefault(_bookUpJs);
var _bookUserJs = require("./icons/book-user.js");
var _bookUserJsDefault = parcelHelpers.interopDefault(_bookUserJs);
var _bookXJs = require("./icons/book-x.js");
var _bookXJsDefault = parcelHelpers.interopDefault(_bookXJs);
var _bookJs = require("./icons/book.js");
var _bookJsDefault = parcelHelpers.interopDefault(_bookJs);
var _bookmarkCheckJs = require("./icons/bookmark-check.js");
var _bookmarkCheckJsDefault = parcelHelpers.interopDefault(_bookmarkCheckJs);
var _bookmarkPlusJs = require("./icons/bookmark-plus.js");
var _bookmarkPlusJsDefault = parcelHelpers.interopDefault(_bookmarkPlusJs);
var _bookmarkMinusJs = require("./icons/bookmark-minus.js");
var _bookmarkMinusJsDefault = parcelHelpers.interopDefault(_bookmarkMinusJs);
var _bookmarkXJs = require("./icons/bookmark-x.js");
var _bookmarkXJsDefault = parcelHelpers.interopDefault(_bookmarkXJs);
var _bookmarkJs = require("./icons/bookmark.js");
var _bookmarkJsDefault = parcelHelpers.interopDefault(_bookmarkJs);
var _boomBoxJs = require("./icons/boom-box.js");
var _boomBoxJsDefault = parcelHelpers.interopDefault(_boomBoxJs);
var _botMessageSquareJs = require("./icons/bot-message-square.js");
var _botMessageSquareJsDefault = parcelHelpers.interopDefault(_botMessageSquareJs);
var _botOffJs = require("./icons/bot-off.js");
var _botOffJsDefault = parcelHelpers.interopDefault(_botOffJs);
var _botJs = require("./icons/bot.js");
var _botJsDefault = parcelHelpers.interopDefault(_botJs);
var _bottleWineJs = require("./icons/bottle-wine.js");
var _bottleWineJsDefault = parcelHelpers.interopDefault(_bottleWineJs);
var _bowArrowJs = require("./icons/bow-arrow.js");
var _bowArrowJsDefault = parcelHelpers.interopDefault(_bowArrowJs);
var _boxJs = require("./icons/box.js");
var _boxJsDefault = parcelHelpers.interopDefault(_boxJs);
var _boxesJs = require("./icons/boxes.js");
var _boxesJsDefault = parcelHelpers.interopDefault(_boxesJs);
var _bracketsJs = require("./icons/brackets.js");
var _bracketsJsDefault = parcelHelpers.interopDefault(_bracketsJs);
var _brainCircuitJs = require("./icons/brain-circuit.js");
var _brainCircuitJsDefault = parcelHelpers.interopDefault(_brainCircuitJs);
var _brainCogJs = require("./icons/brain-cog.js");
var _brainCogJsDefault = parcelHelpers.interopDefault(_brainCogJs);
var _brainJs = require("./icons/brain.js");
var _brainJsDefault = parcelHelpers.interopDefault(_brainJs);
var _brickWallFireJs = require("./icons/brick-wall-fire.js");
var _brickWallFireJsDefault = parcelHelpers.interopDefault(_brickWallFireJs);
var _brickWallShieldJs = require("./icons/brick-wall-shield.js");
var _brickWallShieldJsDefault = parcelHelpers.interopDefault(_brickWallShieldJs);
var _brickWallJs = require("./icons/brick-wall.js");
var _brickWallJsDefault = parcelHelpers.interopDefault(_brickWallJs);
var _briefcaseBusinessJs = require("./icons/briefcase-business.js");
var _briefcaseBusinessJsDefault = parcelHelpers.interopDefault(_briefcaseBusinessJs);
var _briefcaseConveyorBeltJs = require("./icons/briefcase-conveyor-belt.js");
var _briefcaseConveyorBeltJsDefault = parcelHelpers.interopDefault(_briefcaseConveyorBeltJs);
var _briefcaseMedicalJs = require("./icons/briefcase-medical.js");
var _briefcaseMedicalJsDefault = parcelHelpers.interopDefault(_briefcaseMedicalJs);
var _briefcaseJs = require("./icons/briefcase.js");
var _briefcaseJsDefault = parcelHelpers.interopDefault(_briefcaseJs);
var _bringToFrontJs = require("./icons/bring-to-front.js");
var _bringToFrontJsDefault = parcelHelpers.interopDefault(_bringToFrontJs);
var _brushCleaningJs = require("./icons/brush-cleaning.js");
var _brushCleaningJsDefault = parcelHelpers.interopDefault(_brushCleaningJs);
var _brushJs = require("./icons/brush.js");
var _brushJsDefault = parcelHelpers.interopDefault(_brushJs);
var _bubblesJs = require("./icons/bubbles.js");
var _bubblesJsDefault = parcelHelpers.interopDefault(_bubblesJs);
var _bugPlayJs = require("./icons/bug-play.js");
var _bugPlayJsDefault = parcelHelpers.interopDefault(_bugPlayJs);
var _bugOffJs = require("./icons/bug-off.js");
var _bugOffJsDefault = parcelHelpers.interopDefault(_bugOffJs);
var _bugJs = require("./icons/bug.js");
var _bugJsDefault = parcelHelpers.interopDefault(_bugJs);
var _building2Js = require("./icons/building-2.js");
var _building2JsDefault = parcelHelpers.interopDefault(_building2Js);
var _buildingJs = require("./icons/building.js");
var _buildingJsDefault = parcelHelpers.interopDefault(_buildingJs);
var _busFrontJs = require("./icons/bus-front.js");
var _busFrontJsDefault = parcelHelpers.interopDefault(_busFrontJs);
var _busJs = require("./icons/bus.js");
var _busJsDefault = parcelHelpers.interopDefault(_busJs);
var _cableCarJs = require("./icons/cable-car.js");
var _cableCarJsDefault = parcelHelpers.interopDefault(_cableCarJs);
var _cableJs = require("./icons/cable.js");
var _cableJsDefault = parcelHelpers.interopDefault(_cableJs);
var _cakeSliceJs = require("./icons/cake-slice.js");
var _cakeSliceJsDefault = parcelHelpers.interopDefault(_cakeSliceJs);
var _cakeJs = require("./icons/cake.js");
var _cakeJsDefault = parcelHelpers.interopDefault(_cakeJs);
var _calculatorJs = require("./icons/calculator.js");
var _calculatorJsDefault = parcelHelpers.interopDefault(_calculatorJs);
var _calendar1Js = require("./icons/calendar-1.js");
var _calendar1JsDefault = parcelHelpers.interopDefault(_calendar1Js);
var _calendarArrowDownJs = require("./icons/calendar-arrow-down.js");
var _calendarArrowDownJsDefault = parcelHelpers.interopDefault(_calendarArrowDownJs);
var _calendarArrowUpJs = require("./icons/calendar-arrow-up.js");
var _calendarArrowUpJsDefault = parcelHelpers.interopDefault(_calendarArrowUpJs);
var _calendarCheck2Js = require("./icons/calendar-check-2.js");
var _calendarCheck2JsDefault = parcelHelpers.interopDefault(_calendarCheck2Js);
var _calendarClockJs = require("./icons/calendar-clock.js");
var _calendarClockJsDefault = parcelHelpers.interopDefault(_calendarClockJs);
var _calendarCheckJs = require("./icons/calendar-check.js");
var _calendarCheckJsDefault = parcelHelpers.interopDefault(_calendarCheckJs);
var _calendarCogJs = require("./icons/calendar-cog.js");
var _calendarCogJsDefault = parcelHelpers.interopDefault(_calendarCogJs);
var _calendarDaysJs = require("./icons/calendar-days.js");
var _calendarDaysJsDefault = parcelHelpers.interopDefault(_calendarDaysJs);
var _calendarFoldJs = require("./icons/calendar-fold.js");
var _calendarFoldJsDefault = parcelHelpers.interopDefault(_calendarFoldJs);
var _calendarHeartJs = require("./icons/calendar-heart.js");
var _calendarHeartJsDefault = parcelHelpers.interopDefault(_calendarHeartJs);
var _calendarMinusJs = require("./icons/calendar-minus.js");
var _calendarMinusJsDefault = parcelHelpers.interopDefault(_calendarMinusJs);
var _calendarMinus2Js = require("./icons/calendar-minus-2.js");
var _calendarMinus2JsDefault = parcelHelpers.interopDefault(_calendarMinus2Js);
var _calendarOffJs = require("./icons/calendar-off.js");
var _calendarOffJsDefault = parcelHelpers.interopDefault(_calendarOffJs);
var _calendarPlus2Js = require("./icons/calendar-plus-2.js");
var _calendarPlus2JsDefault = parcelHelpers.interopDefault(_calendarPlus2Js);
var _calendarPlusJs = require("./icons/calendar-plus.js");
var _calendarPlusJsDefault = parcelHelpers.interopDefault(_calendarPlusJs);
var _calendarRangeJs = require("./icons/calendar-range.js");
var _calendarRangeJsDefault = parcelHelpers.interopDefault(_calendarRangeJs);
var _calendarSearchJs = require("./icons/calendar-search.js");
var _calendarSearchJsDefault = parcelHelpers.interopDefault(_calendarSearchJs);
var _calendarSyncJs = require("./icons/calendar-sync.js");
var _calendarSyncJsDefault = parcelHelpers.interopDefault(_calendarSyncJs);
var _calendarX2Js = require("./icons/calendar-x-2.js");
var _calendarX2JsDefault = parcelHelpers.interopDefault(_calendarX2Js);
var _calendarXJs = require("./icons/calendar-x.js");
var _calendarXJsDefault = parcelHelpers.interopDefault(_calendarXJs);
var _calendarJs = require("./icons/calendar.js");
var _calendarJsDefault = parcelHelpers.interopDefault(_calendarJs);
var _cameraJs = require("./icons/camera.js");
var _cameraJsDefault = parcelHelpers.interopDefault(_cameraJs);
var _cameraOffJs = require("./icons/camera-off.js");
var _cameraOffJsDefault = parcelHelpers.interopDefault(_cameraOffJs);
var _candyCaneJs = require("./icons/candy-cane.js");
var _candyCaneJsDefault = parcelHelpers.interopDefault(_candyCaneJs);
var _candyOffJs = require("./icons/candy-off.js");
var _candyOffJsDefault = parcelHelpers.interopDefault(_candyOffJs);
var _candyJs = require("./icons/candy.js");
var _candyJsDefault = parcelHelpers.interopDefault(_candyJs);
var _cannabisJs = require("./icons/cannabis.js");
var _cannabisJsDefault = parcelHelpers.interopDefault(_cannabisJs);
var _captionsOffJs = require("./icons/captions-off.js");
var _captionsOffJsDefault = parcelHelpers.interopDefault(_captionsOffJs);
var _carFrontJs = require("./icons/car-front.js");
var _carFrontJsDefault = parcelHelpers.interopDefault(_carFrontJs);
var _carTaxiFrontJs = require("./icons/car-taxi-front.js");
var _carTaxiFrontJsDefault = parcelHelpers.interopDefault(_carTaxiFrontJs);
var _carJs = require("./icons/car.js");
var _carJsDefault = parcelHelpers.interopDefault(_carJs);
var _caravanJs = require("./icons/caravan.js");
var _caravanJsDefault = parcelHelpers.interopDefault(_caravanJs);
var _cardSimJs = require("./icons/card-sim.js");
var _cardSimJsDefault = parcelHelpers.interopDefault(_cardSimJs);
var _carrotJs = require("./icons/carrot.js");
var _carrotJsDefault = parcelHelpers.interopDefault(_carrotJs);
var _caseLowerJs = require("./icons/case-lower.js");
var _caseLowerJsDefault = parcelHelpers.interopDefault(_caseLowerJs);
var _caseSensitiveJs = require("./icons/case-sensitive.js");
var _caseSensitiveJsDefault = parcelHelpers.interopDefault(_caseSensitiveJs);
var _caseUpperJs = require("./icons/case-upper.js");
var _caseUpperJsDefault = parcelHelpers.interopDefault(_caseUpperJs);
var _castJs = require("./icons/cast.js");
var _castJsDefault = parcelHelpers.interopDefault(_castJs);
var _cassetteTapeJs = require("./icons/cassette-tape.js");
var _cassetteTapeJsDefault = parcelHelpers.interopDefault(_cassetteTapeJs);
var _castleJs = require("./icons/castle.js");
var _castleJsDefault = parcelHelpers.interopDefault(_castleJs);
var _catJs = require("./icons/cat.js");
var _catJsDefault = parcelHelpers.interopDefault(_catJs);
var _cctvJs = require("./icons/cctv.js");
var _cctvJsDefault = parcelHelpers.interopDefault(_cctvJs);
var _chartBarDecreasingJs = require("./icons/chart-bar-decreasing.js");
var _chartBarDecreasingJsDefault = parcelHelpers.interopDefault(_chartBarDecreasingJs);
var _chartBarIncreasingJs = require("./icons/chart-bar-increasing.js");
var _chartBarIncreasingJsDefault = parcelHelpers.interopDefault(_chartBarIncreasingJs);
var _chartBarStackedJs = require("./icons/chart-bar-stacked.js");
var _chartBarStackedJsDefault = parcelHelpers.interopDefault(_chartBarStackedJs);
var _chartColumnDecreasingJs = require("./icons/chart-column-decreasing.js");
var _chartColumnDecreasingJsDefault = parcelHelpers.interopDefault(_chartColumnDecreasingJs);
var _chartColumnStackedJs = require("./icons/chart-column-stacked.js");
var _chartColumnStackedJsDefault = parcelHelpers.interopDefault(_chartColumnStackedJs);
var _chartGanttJs = require("./icons/chart-gantt.js");
var _chartGanttJsDefault = parcelHelpers.interopDefault(_chartGanttJs);
var _chartNetworkJs = require("./icons/chart-network.js");
var _chartNetworkJsDefault = parcelHelpers.interopDefault(_chartNetworkJs);
var _chartNoAxesColumnDecreasingJs = require("./icons/chart-no-axes-column-decreasing.js");
var _chartNoAxesColumnDecreasingJsDefault = parcelHelpers.interopDefault(_chartNoAxesColumnDecreasingJs);
var _chartNoAxesCombinedJs = require("./icons/chart-no-axes-combined.js");
var _chartNoAxesCombinedJsDefault = parcelHelpers.interopDefault(_chartNoAxesCombinedJs);
var _chartSplineJs = require("./icons/chart-spline.js");
var _chartSplineJsDefault = parcelHelpers.interopDefault(_chartSplineJs);
var _checkCheckJs = require("./icons/check-check.js");
var _checkCheckJsDefault = parcelHelpers.interopDefault(_checkCheckJs);
var _checkLineJs = require("./icons/check-line.js");
var _checkLineJsDefault = parcelHelpers.interopDefault(_checkLineJs);
var _chefHatJs = require("./icons/chef-hat.js");
var _chefHatJsDefault = parcelHelpers.interopDefault(_chefHatJs);
var _checkJs = require("./icons/check.js");
var _checkJsDefault = parcelHelpers.interopDefault(_checkJs);
var _cherryJs = require("./icons/cherry.js");
var _cherryJsDefault = parcelHelpers.interopDefault(_cherryJs);
var _chevronDownJs = require("./icons/chevron-down.js");
var _chevronDownJsDefault = parcelHelpers.interopDefault(_chevronDownJs);
var _chevronFirstJs = require("./icons/chevron-first.js");
var _chevronFirstJsDefault = parcelHelpers.interopDefault(_chevronFirstJs);
var _chevronLastJs = require("./icons/chevron-last.js");
var _chevronLastJsDefault = parcelHelpers.interopDefault(_chevronLastJs);
var _chevronLeftJs = require("./icons/chevron-left.js");
var _chevronLeftJsDefault = parcelHelpers.interopDefault(_chevronLeftJs);
var _chevronRightJs = require("./icons/chevron-right.js");
var _chevronRightJsDefault = parcelHelpers.interopDefault(_chevronRightJs);
var _chevronUpJs = require("./icons/chevron-up.js");
var _chevronUpJsDefault = parcelHelpers.interopDefault(_chevronUpJs);
var _chevronsDownUpJs = require("./icons/chevrons-down-up.js");
var _chevronsDownUpJsDefault = parcelHelpers.interopDefault(_chevronsDownUpJs);
var _chevronsDownJs = require("./icons/chevrons-down.js");
var _chevronsDownJsDefault = parcelHelpers.interopDefault(_chevronsDownJs);
var _chevronsLeftRightEllipsisJs = require("./icons/chevrons-left-right-ellipsis.js");
var _chevronsLeftRightEllipsisJsDefault = parcelHelpers.interopDefault(_chevronsLeftRightEllipsisJs);
var _chevronsLeftRightJs = require("./icons/chevrons-left-right.js");
var _chevronsLeftRightJsDefault = parcelHelpers.interopDefault(_chevronsLeftRightJs);
var _chevronsLeftJs = require("./icons/chevrons-left.js");
var _chevronsLeftJsDefault = parcelHelpers.interopDefault(_chevronsLeftJs);
var _chevronsRightLeftJs = require("./icons/chevrons-right-left.js");
var _chevronsRightLeftJsDefault = parcelHelpers.interopDefault(_chevronsRightLeftJs);
var _chevronsRightJs = require("./icons/chevrons-right.js");
var _chevronsRightJsDefault = parcelHelpers.interopDefault(_chevronsRightJs);
var _chevronsUpDownJs = require("./icons/chevrons-up-down.js");
var _chevronsUpDownJsDefault = parcelHelpers.interopDefault(_chevronsUpDownJs);
var _chevronsUpJs = require("./icons/chevrons-up.js");
var _chevronsUpJsDefault = parcelHelpers.interopDefault(_chevronsUpJs);
var _churchJs = require("./icons/church.js");
var _churchJsDefault = parcelHelpers.interopDefault(_churchJs);
var _cigaretteOffJs = require("./icons/cigarette-off.js");
var _cigaretteOffJsDefault = parcelHelpers.interopDefault(_cigaretteOffJs);
var _cigaretteJs = require("./icons/cigarette.js");
var _cigaretteJsDefault = parcelHelpers.interopDefault(_cigaretteJs);
var _circleDashedJs = require("./icons/circle-dashed.js");
var _circleDashedJsDefault = parcelHelpers.interopDefault(_circleDashedJs);
var _circleDollarSignJs = require("./icons/circle-dollar-sign.js");
var _circleDollarSignJsDefault = parcelHelpers.interopDefault(_circleDollarSignJs);
var _circleDotDashedJs = require("./icons/circle-dot-dashed.js");
var _circleDotDashedJsDefault = parcelHelpers.interopDefault(_circleDotDashedJs);
var _circleDotJs = require("./icons/circle-dot.js");
var _circleDotJsDefault = parcelHelpers.interopDefault(_circleDotJs);
var _circleEllipsisJs = require("./icons/circle-ellipsis.js");
var _circleEllipsisJsDefault = parcelHelpers.interopDefault(_circleEllipsisJs);
var _circleEqualJs = require("./icons/circle-equal.js");
var _circleEqualJsDefault = parcelHelpers.interopDefault(_circleEqualJs);
var _circleFadingArrowUpJs = require("./icons/circle-fading-arrow-up.js");
var _circleFadingArrowUpJsDefault = parcelHelpers.interopDefault(_circleFadingArrowUpJs);
var _circleFadingPlusJs = require("./icons/circle-fading-plus.js");
var _circleFadingPlusJsDefault = parcelHelpers.interopDefault(_circleFadingPlusJs);
var _circleOffJs = require("./icons/circle-off.js");
var _circleOffJsDefault = parcelHelpers.interopDefault(_circleOffJs);
var _circlePoundSterlingJs = require("./icons/circle-pound-sterling.js");
var _circlePoundSterlingJsDefault = parcelHelpers.interopDefault(_circlePoundSterlingJs);
var _circleSlashJs = require("./icons/circle-slash.js");
var _circleSlashJsDefault = parcelHelpers.interopDefault(_circleSlashJs);
var _circleSmallJs = require("./icons/circle-small.js");
var _circleSmallJsDefault = parcelHelpers.interopDefault(_circleSmallJs);
var _circleStarJs = require("./icons/circle-star.js");
var _circleStarJsDefault = parcelHelpers.interopDefault(_circleStarJs);
var _circleJs = require("./icons/circle.js");
var _circleJsDefault = parcelHelpers.interopDefault(_circleJs);
var _circuitBoardJs = require("./icons/circuit-board.js");
var _circuitBoardJsDefault = parcelHelpers.interopDefault(_circuitBoardJs);
var _citrusJs = require("./icons/citrus.js");
var _citrusJsDefault = parcelHelpers.interopDefault(_citrusJs);
var _clapperboardJs = require("./icons/clapperboard.js");
var _clapperboardJsDefault = parcelHelpers.interopDefault(_clapperboardJs);
var _clipboardCheckJs = require("./icons/clipboard-check.js");
var _clipboardCheckJsDefault = parcelHelpers.interopDefault(_clipboardCheckJs);
var _clipboardCopyJs = require("./icons/clipboard-copy.js");
var _clipboardCopyJsDefault = parcelHelpers.interopDefault(_clipboardCopyJs);
var _clipboardClockJs = require("./icons/clipboard-clock.js");
var _clipboardClockJsDefault = parcelHelpers.interopDefault(_clipboardClockJs);
var _clipboardListJs = require("./icons/clipboard-list.js");
var _clipboardListJsDefault = parcelHelpers.interopDefault(_clipboardListJs);
var _clipboardMinusJs = require("./icons/clipboard-minus.js");
var _clipboardMinusJsDefault = parcelHelpers.interopDefault(_clipboardMinusJs);
var _clipboardPasteJs = require("./icons/clipboard-paste.js");
var _clipboardPasteJsDefault = parcelHelpers.interopDefault(_clipboardPasteJs);
var _clipboardPlusJs = require("./icons/clipboard-plus.js");
var _clipboardPlusJsDefault = parcelHelpers.interopDefault(_clipboardPlusJs);
var _clipboardTypeJs = require("./icons/clipboard-type.js");
var _clipboardTypeJsDefault = parcelHelpers.interopDefault(_clipboardTypeJs);
var _clipboardXJs = require("./icons/clipboard-x.js");
var _clipboardXJsDefault = parcelHelpers.interopDefault(_clipboardXJs);
var _clipboardJs = require("./icons/clipboard.js");
var _clipboardJsDefault = parcelHelpers.interopDefault(_clipboardJs);
var _clock1Js = require("./icons/clock-1.js");
var _clock1JsDefault = parcelHelpers.interopDefault(_clock1Js);
var _clock10Js = require("./icons/clock-10.js");
var _clock10JsDefault = parcelHelpers.interopDefault(_clock10Js);
var _clock11Js = require("./icons/clock-11.js");
var _clock11JsDefault = parcelHelpers.interopDefault(_clock11Js);
var _clock12Js = require("./icons/clock-12.js");
var _clock12JsDefault = parcelHelpers.interopDefault(_clock12Js);
var _clock2Js = require("./icons/clock-2.js");
var _clock2JsDefault = parcelHelpers.interopDefault(_clock2Js);
var _clock3Js = require("./icons/clock-3.js");
var _clock3JsDefault = parcelHelpers.interopDefault(_clock3Js);
var _clock5Js = require("./icons/clock-5.js");
var _clock5JsDefault = parcelHelpers.interopDefault(_clock5Js);
var _clock4Js = require("./icons/clock-4.js");
var _clock4JsDefault = parcelHelpers.interopDefault(_clock4Js);
var _clock6Js = require("./icons/clock-6.js");
var _clock6JsDefault = parcelHelpers.interopDefault(_clock6Js);
var _clock7Js = require("./icons/clock-7.js");
var _clock7JsDefault = parcelHelpers.interopDefault(_clock7Js);
var _clock8Js = require("./icons/clock-8.js");
var _clock8JsDefault = parcelHelpers.interopDefault(_clock8Js);
var _clock9Js = require("./icons/clock-9.js");
var _clock9JsDefault = parcelHelpers.interopDefault(_clock9Js);
var _clockArrowDownJs = require("./icons/clock-arrow-down.js");
var _clockArrowDownJsDefault = parcelHelpers.interopDefault(_clockArrowDownJs);
var _clockAlertJs = require("./icons/clock-alert.js");
var _clockAlertJsDefault = parcelHelpers.interopDefault(_clockAlertJs);
var _clockArrowUpJs = require("./icons/clock-arrow-up.js");
var _clockArrowUpJsDefault = parcelHelpers.interopDefault(_clockArrowUpJs);
var _clockFadingJs = require("./icons/clock-fading.js");
var _clockFadingJsDefault = parcelHelpers.interopDefault(_clockFadingJs);
var _clockPlusJs = require("./icons/clock-plus.js");
var _clockPlusJsDefault = parcelHelpers.interopDefault(_clockPlusJs);
var _clockJs = require("./icons/clock.js");
var _clockJsDefault = parcelHelpers.interopDefault(_clockJs);
var _closedCaptionJs = require("./icons/closed-caption.js");
var _closedCaptionJsDefault = parcelHelpers.interopDefault(_closedCaptionJs);
var _cloudAlertJs = require("./icons/cloud-alert.js");
var _cloudAlertJsDefault = parcelHelpers.interopDefault(_cloudAlertJs);
var _cloudCheckJs = require("./icons/cloud-check.js");
var _cloudCheckJsDefault = parcelHelpers.interopDefault(_cloudCheckJs);
var _cloudCogJs = require("./icons/cloud-cog.js");
var _cloudCogJsDefault = parcelHelpers.interopDefault(_cloudCogJs);
var _cloudDrizzleJs = require("./icons/cloud-drizzle.js");
var _cloudDrizzleJsDefault = parcelHelpers.interopDefault(_cloudDrizzleJs);
var _cloudFogJs = require("./icons/cloud-fog.js");
var _cloudFogJsDefault = parcelHelpers.interopDefault(_cloudFogJs);
var _cloudHailJs = require("./icons/cloud-hail.js");
var _cloudHailJsDefault = parcelHelpers.interopDefault(_cloudHailJs);
var _cloudLightningJs = require("./icons/cloud-lightning.js");
var _cloudLightningJsDefault = parcelHelpers.interopDefault(_cloudLightningJs);
var _cloudMoonRainJs = require("./icons/cloud-moon-rain.js");
var _cloudMoonRainJsDefault = parcelHelpers.interopDefault(_cloudMoonRainJs);
var _cloudOffJs = require("./icons/cloud-off.js");
var _cloudOffJsDefault = parcelHelpers.interopDefault(_cloudOffJs);
var _cloudMoonJs = require("./icons/cloud-moon.js");
var _cloudMoonJsDefault = parcelHelpers.interopDefault(_cloudMoonJs);
var _cloudRainWindJs = require("./icons/cloud-rain-wind.js");
var _cloudRainWindJsDefault = parcelHelpers.interopDefault(_cloudRainWindJs);
var _cloudRainJs = require("./icons/cloud-rain.js");
var _cloudRainJsDefault = parcelHelpers.interopDefault(_cloudRainJs);
var _cloudSnowJs = require("./icons/cloud-snow.js");
var _cloudSnowJsDefault = parcelHelpers.interopDefault(_cloudSnowJs);
var _cloudSunRainJs = require("./icons/cloud-sun-rain.js");
var _cloudSunRainJsDefault = parcelHelpers.interopDefault(_cloudSunRainJs);
var _cloudSunJs = require("./icons/cloud-sun.js");
var _cloudSunJsDefault = parcelHelpers.interopDefault(_cloudSunJs);
var _cloudJs = require("./icons/cloud.js");
var _cloudJsDefault = parcelHelpers.interopDefault(_cloudJs);
var _cloudyJs = require("./icons/cloudy.js");
var _cloudyJsDefault = parcelHelpers.interopDefault(_cloudyJs);
var _cloverJs = require("./icons/clover.js");
var _cloverJsDefault = parcelHelpers.interopDefault(_cloverJs);
var _clubJs = require("./icons/club.js");
var _clubJsDefault = parcelHelpers.interopDefault(_clubJs);
var _codeJs = require("./icons/code.js");
var _codeJsDefault = parcelHelpers.interopDefault(_codeJs);
var _codepenJs = require("./icons/codepen.js");
var _codepenJsDefault = parcelHelpers.interopDefault(_codepenJs);
var _codesandboxJs = require("./icons/codesandbox.js");
var _codesandboxJsDefault = parcelHelpers.interopDefault(_codesandboxJs);
var _coffeeJs = require("./icons/coffee.js");
var _coffeeJsDefault = parcelHelpers.interopDefault(_coffeeJs);
var _cogJs = require("./icons/cog.js");
var _cogJsDefault = parcelHelpers.interopDefault(_cogJs);
var _coinsJs = require("./icons/coins.js");
var _coinsJsDefault = parcelHelpers.interopDefault(_coinsJs);
var _columns4Js = require("./icons/columns-4.js");
var _columns4JsDefault = parcelHelpers.interopDefault(_columns4Js);
var _combineJs = require("./icons/combine.js");
var _combineJsDefault = parcelHelpers.interopDefault(_combineJs);
var _commandJs = require("./icons/command.js");
var _commandJsDefault = parcelHelpers.interopDefault(_commandJs);
var _compassJs = require("./icons/compass.js");
var _compassJsDefault = parcelHelpers.interopDefault(_compassJs);
var _componentJs = require("./icons/component.js");
var _componentJsDefault = parcelHelpers.interopDefault(_componentJs);
var _computerJs = require("./icons/computer.js");
var _computerJsDefault = parcelHelpers.interopDefault(_computerJs);
var _conciergeBellJs = require("./icons/concierge-bell.js");
var _conciergeBellJsDefault = parcelHelpers.interopDefault(_conciergeBellJs);
var _constructionJs = require("./icons/construction.js");
var _constructionJsDefault = parcelHelpers.interopDefault(_constructionJs);
var _coneJs = require("./icons/cone.js");
var _coneJsDefault = parcelHelpers.interopDefault(_coneJs);
var _contactJs = require("./icons/contact.js");
var _contactJsDefault = parcelHelpers.interopDefault(_contactJs);
var _containerJs = require("./icons/container.js");
var _containerJsDefault = parcelHelpers.interopDefault(_containerJs);
var _contrastJs = require("./icons/contrast.js");
var _contrastJsDefault = parcelHelpers.interopDefault(_contrastJs);
var _cookieJs = require("./icons/cookie.js");
var _cookieJsDefault = parcelHelpers.interopDefault(_cookieJs);
var _copyCheckJs = require("./icons/copy-check.js");
var _copyCheckJsDefault = parcelHelpers.interopDefault(_copyCheckJs);
var _cookingPotJs = require("./icons/cooking-pot.js");
var _cookingPotJsDefault = parcelHelpers.interopDefault(_cookingPotJs);
var _copyMinusJs = require("./icons/copy-minus.js");
var _copyMinusJsDefault = parcelHelpers.interopDefault(_copyMinusJs);
var _copyPlusJs = require("./icons/copy-plus.js");
var _copyPlusJsDefault = parcelHelpers.interopDefault(_copyPlusJs);
var _copySlashJs = require("./icons/copy-slash.js");
var _copySlashJsDefault = parcelHelpers.interopDefault(_copySlashJs);
var _copyXJs = require("./icons/copy-x.js");
var _copyXJsDefault = parcelHelpers.interopDefault(_copyXJs);
var _copyJs = require("./icons/copy.js");
var _copyJsDefault = parcelHelpers.interopDefault(_copyJs);
var _copyleftJs = require("./icons/copyleft.js");
var _copyleftJsDefault = parcelHelpers.interopDefault(_copyleftJs);
var _copyrightJs = require("./icons/copyright.js");
var _copyrightJsDefault = parcelHelpers.interopDefault(_copyrightJs);
var _cornerDownLeftJs = require("./icons/corner-down-left.js");
var _cornerDownLeftJsDefault = parcelHelpers.interopDefault(_cornerDownLeftJs);
var _cornerDownRightJs = require("./icons/corner-down-right.js");
var _cornerDownRightJsDefault = parcelHelpers.interopDefault(_cornerDownRightJs);
var _cornerLeftDownJs = require("./icons/corner-left-down.js");
var _cornerLeftDownJsDefault = parcelHelpers.interopDefault(_cornerLeftDownJs);
var _cornerLeftUpJs = require("./icons/corner-left-up.js");
var _cornerLeftUpJsDefault = parcelHelpers.interopDefault(_cornerLeftUpJs);
var _cornerRightDownJs = require("./icons/corner-right-down.js");
var _cornerRightDownJsDefault = parcelHelpers.interopDefault(_cornerRightDownJs);
var _cornerRightUpJs = require("./icons/corner-right-up.js");
var _cornerRightUpJsDefault = parcelHelpers.interopDefault(_cornerRightUpJs);
var _cornerUpLeftJs = require("./icons/corner-up-left.js");
var _cornerUpLeftJsDefault = parcelHelpers.interopDefault(_cornerUpLeftJs);
var _cornerUpRightJs = require("./icons/corner-up-right.js");
var _cornerUpRightJsDefault = parcelHelpers.interopDefault(_cornerUpRightJs);
var _cpuJs = require("./icons/cpu.js");
var _cpuJsDefault = parcelHelpers.interopDefault(_cpuJs);
var _creativeCommonsJs = require("./icons/creative-commons.js");
var _creativeCommonsJsDefault = parcelHelpers.interopDefault(_creativeCommonsJs);
var _creditCardJs = require("./icons/credit-card.js");
var _creditCardJsDefault = parcelHelpers.interopDefault(_creditCardJs);
var _croissantJs = require("./icons/croissant.js");
var _croissantJsDefault = parcelHelpers.interopDefault(_croissantJs);
var _cropJs = require("./icons/crop.js");
var _cropJsDefault = parcelHelpers.interopDefault(_cropJs);
var _crossJs = require("./icons/cross.js");
var _crossJsDefault = parcelHelpers.interopDefault(_crossJs);
var _crosshairJs = require("./icons/crosshair.js");
var _crosshairJsDefault = parcelHelpers.interopDefault(_crosshairJs);
var _crownJs = require("./icons/crown.js");
var _crownJsDefault = parcelHelpers.interopDefault(_crownJs);
var _cuboidJs = require("./icons/cuboid.js");
var _cuboidJsDefault = parcelHelpers.interopDefault(_cuboidJs);
var _cupSodaJs = require("./icons/cup-soda.js");
var _cupSodaJsDefault = parcelHelpers.interopDefault(_cupSodaJs);
var _currencyJs = require("./icons/currency.js");
var _currencyJsDefault = parcelHelpers.interopDefault(_currencyJs);
var _cylinderJs = require("./icons/cylinder.js");
var _cylinderJsDefault = parcelHelpers.interopDefault(_cylinderJs);
var _damJs = require("./icons/dam.js");
var _damJsDefault = parcelHelpers.interopDefault(_damJs);
var _databaseBackupJs = require("./icons/database-backup.js");
var _databaseBackupJsDefault = parcelHelpers.interopDefault(_databaseBackupJs);
var _databaseZapJs = require("./icons/database-zap.js");
var _databaseZapJsDefault = parcelHelpers.interopDefault(_databaseZapJs);
var _decimalsArrowLeftJs = require("./icons/decimals-arrow-left.js");
var _decimalsArrowLeftJsDefault = parcelHelpers.interopDefault(_decimalsArrowLeftJs);
var _databaseJs = require("./icons/database.js");
var _databaseJsDefault = parcelHelpers.interopDefault(_databaseJs);
var _decimalsArrowRightJs = require("./icons/decimals-arrow-right.js");
var _decimalsArrowRightJsDefault = parcelHelpers.interopDefault(_decimalsArrowRightJs);
var _deleteJs = require("./icons/delete.js");
var _deleteJsDefault = parcelHelpers.interopDefault(_deleteJs);
var _dessertJs = require("./icons/dessert.js");
var _dessertJsDefault = parcelHelpers.interopDefault(_dessertJs);
var _diameterJs = require("./icons/diameter.js");
var _diameterJsDefault = parcelHelpers.interopDefault(_diameterJs);
var _diamondMinusJs = require("./icons/diamond-minus.js");
var _diamondMinusJsDefault = parcelHelpers.interopDefault(_diamondMinusJs);
var _diamondPlusJs = require("./icons/diamond-plus.js");
var _diamondPlusJsDefault = parcelHelpers.interopDefault(_diamondPlusJs);
var _diamondJs = require("./icons/diamond.js");
var _diamondJsDefault = parcelHelpers.interopDefault(_diamondJs);
var _dice1Js = require("./icons/dice-1.js");
var _dice1JsDefault = parcelHelpers.interopDefault(_dice1Js);
var _dice2Js = require("./icons/dice-2.js");
var _dice2JsDefault = parcelHelpers.interopDefault(_dice2Js);
var _dice3Js = require("./icons/dice-3.js");
var _dice3JsDefault = parcelHelpers.interopDefault(_dice3Js);
var _dice4Js = require("./icons/dice-4.js");
var _dice4JsDefault = parcelHelpers.interopDefault(_dice4Js);
var _dice5Js = require("./icons/dice-5.js");
var _dice5JsDefault = parcelHelpers.interopDefault(_dice5Js);
var _dice6Js = require("./icons/dice-6.js");
var _dice6JsDefault = parcelHelpers.interopDefault(_dice6Js);
var _dicesJs = require("./icons/dices.js");
var _dicesJsDefault = parcelHelpers.interopDefault(_dicesJs);
var _diffJs = require("./icons/diff.js");
var _diffJsDefault = parcelHelpers.interopDefault(_diffJs);
var _disc2Js = require("./icons/disc-2.js");
var _disc2JsDefault = parcelHelpers.interopDefault(_disc2Js);
var _disc3Js = require("./icons/disc-3.js");
var _disc3JsDefault = parcelHelpers.interopDefault(_disc3Js);
var _discAlbumJs = require("./icons/disc-album.js");
var _discAlbumJsDefault = parcelHelpers.interopDefault(_discAlbumJs);
var _discJs = require("./icons/disc.js");
var _discJsDefault = parcelHelpers.interopDefault(_discJs);
var _divideJs = require("./icons/divide.js");
var _divideJsDefault = parcelHelpers.interopDefault(_divideJs);
var _dnaOffJs = require("./icons/dna-off.js");
var _dnaOffJsDefault = parcelHelpers.interopDefault(_dnaOffJs);
var _dnaJs = require("./icons/dna.js");
var _dnaJsDefault = parcelHelpers.interopDefault(_dnaJs);
var _dockJs = require("./icons/dock.js");
var _dockJsDefault = parcelHelpers.interopDefault(_dockJs);
var _dogJs = require("./icons/dog.js");
var _dogJsDefault = parcelHelpers.interopDefault(_dogJs);
var _dollarSignJs = require("./icons/dollar-sign.js");
var _dollarSignJsDefault = parcelHelpers.interopDefault(_dollarSignJs);
var _donutJs = require("./icons/donut.js");
var _donutJsDefault = parcelHelpers.interopDefault(_donutJs);
var _doorClosedLockedJs = require("./icons/door-closed-locked.js");
var _doorClosedLockedJsDefault = parcelHelpers.interopDefault(_doorClosedLockedJs);
var _doorClosedJs = require("./icons/door-closed.js");
var _doorClosedJsDefault = parcelHelpers.interopDefault(_doorClosedJs);
var _doorOpenJs = require("./icons/door-open.js");
var _doorOpenJsDefault = parcelHelpers.interopDefault(_doorOpenJs);
var _dotJs = require("./icons/dot.js");
var _dotJsDefault = parcelHelpers.interopDefault(_dotJs);
var _downloadJs = require("./icons/download.js");
var _downloadJsDefault = parcelHelpers.interopDefault(_downloadJs);
var _draftingCompassJs = require("./icons/drafting-compass.js");
var _draftingCompassJsDefault = parcelHelpers.interopDefault(_draftingCompassJs);
var _dramaJs = require("./icons/drama.js");
var _dramaJsDefault = parcelHelpers.interopDefault(_dramaJs);
var _dribbbleJs = require("./icons/dribbble.js");
var _dribbbleJsDefault = parcelHelpers.interopDefault(_dribbbleJs);
var _drillJs = require("./icons/drill.js");
var _drillJsDefault = parcelHelpers.interopDefault(_drillJs);
var _droneJs = require("./icons/drone.js");
var _droneJsDefault = parcelHelpers.interopDefault(_droneJs);
var _dropletOffJs = require("./icons/droplet-off.js");
var _dropletOffJsDefault = parcelHelpers.interopDefault(_dropletOffJs);
var _dropletJs = require("./icons/droplet.js");
var _dropletJsDefault = parcelHelpers.interopDefault(_dropletJs);
var _dropletsJs = require("./icons/droplets.js");
var _dropletsJsDefault = parcelHelpers.interopDefault(_dropletsJs);
var _drumJs = require("./icons/drum.js");
var _drumJsDefault = parcelHelpers.interopDefault(_drumJs);
var _drumstickJs = require("./icons/drumstick.js");
var _drumstickJsDefault = parcelHelpers.interopDefault(_drumstickJs);
var _dumbbellJs = require("./icons/dumbbell.js");
var _dumbbellJsDefault = parcelHelpers.interopDefault(_dumbbellJs);
var _earOffJs = require("./icons/ear-off.js");
var _earOffJsDefault = parcelHelpers.interopDefault(_earOffJs);
var _earJs = require("./icons/ear.js");
var _earJsDefault = parcelHelpers.interopDefault(_earJs);
var _earthLockJs = require("./icons/earth-lock.js");
var _earthLockJsDefault = parcelHelpers.interopDefault(_earthLockJs);
var _eclipseJs = require("./icons/eclipse.js");
var _eclipseJsDefault = parcelHelpers.interopDefault(_eclipseJs);
var _eggFriedJs = require("./icons/egg-fried.js");
var _eggFriedJsDefault = parcelHelpers.interopDefault(_eggFriedJs);
var _eggOffJs = require("./icons/egg-off.js");
var _eggOffJsDefault = parcelHelpers.interopDefault(_eggOffJs);
var _eggJs = require("./icons/egg.js");
var _eggJsDefault = parcelHelpers.interopDefault(_eggJs);
var _equalApproximatelyJs = require("./icons/equal-approximately.js");
var _equalApproximatelyJsDefault = parcelHelpers.interopDefault(_equalApproximatelyJs);
var _equalNotJs = require("./icons/equal-not.js");
var _equalNotJsDefault = parcelHelpers.interopDefault(_equalNotJs);
var _equalJs = require("./icons/equal.js");
var _equalJsDefault = parcelHelpers.interopDefault(_equalJs);
var _eraserJs = require("./icons/eraser.js");
var _eraserJsDefault = parcelHelpers.interopDefault(_eraserJs);
var _euroJs = require("./icons/euro.js");
var _euroJsDefault = parcelHelpers.interopDefault(_euroJs);
var _ethernetPortJs = require("./icons/ethernet-port.js");
var _ethernetPortJsDefault = parcelHelpers.interopDefault(_ethernetPortJs);
var _evChargerJs = require("./icons/ev-charger.js");
var _evChargerJsDefault = parcelHelpers.interopDefault(_evChargerJs);
var _expandJs = require("./icons/expand.js");
var _expandJsDefault = parcelHelpers.interopDefault(_expandJs);
var _externalLinkJs = require("./icons/external-link.js");
var _externalLinkJsDefault = parcelHelpers.interopDefault(_externalLinkJs);
var _eyeOffJs = require("./icons/eye-off.js");
var _eyeOffJsDefault = parcelHelpers.interopDefault(_eyeOffJs);
var _eyeClosedJs = require("./icons/eye-closed.js");
var _eyeClosedJsDefault = parcelHelpers.interopDefault(_eyeClosedJs);
var _eyeJs = require("./icons/eye.js");
var _eyeJsDefault = parcelHelpers.interopDefault(_eyeJs);
var _facebookJs = require("./icons/facebook.js");
var _facebookJsDefault = parcelHelpers.interopDefault(_facebookJs);
var _factoryJs = require("./icons/factory.js");
var _factoryJsDefault = parcelHelpers.interopDefault(_factoryJs);
var _fanJs = require("./icons/fan.js");
var _fanJsDefault = parcelHelpers.interopDefault(_fanJs);
var _fastForwardJs = require("./icons/fast-forward.js");
var _fastForwardJsDefault = parcelHelpers.interopDefault(_fastForwardJs);
var _featherJs = require("./icons/feather.js");
var _featherJsDefault = parcelHelpers.interopDefault(_featherJs);
var _fenceJs = require("./icons/fence.js");
var _fenceJsDefault = parcelHelpers.interopDefault(_fenceJs);
var _ferrisWheelJs = require("./icons/ferris-wheel.js");
var _ferrisWheelJsDefault = parcelHelpers.interopDefault(_ferrisWheelJs);
var _figmaJs = require("./icons/figma.js");
var _figmaJsDefault = parcelHelpers.interopDefault(_figmaJs);
var _fileArchiveJs = require("./icons/file-archive.js");
var _fileArchiveJsDefault = parcelHelpers.interopDefault(_fileArchiveJs);
var _fileAudio2Js = require("./icons/file-audio-2.js");
var _fileAudio2JsDefault = parcelHelpers.interopDefault(_fileAudio2Js);
var _fileAudioJs = require("./icons/file-audio.js");
var _fileAudioJsDefault = parcelHelpers.interopDefault(_fileAudioJs);
var _fileBadge2Js = require("./icons/file-badge-2.js");
var _fileBadge2JsDefault = parcelHelpers.interopDefault(_fileBadge2Js);
var _fileBoxJs = require("./icons/file-box.js");
var _fileBoxJsDefault = parcelHelpers.interopDefault(_fileBoxJs);
var _fileBadgeJs = require("./icons/file-badge.js");
var _fileBadgeJsDefault = parcelHelpers.interopDefault(_fileBadgeJs);
var _fileCheck2Js = require("./icons/file-check-2.js");
var _fileCheck2JsDefault = parcelHelpers.interopDefault(_fileCheck2Js);
var _fileCheckJs = require("./icons/file-check.js");
var _fileCheckJsDefault = parcelHelpers.interopDefault(_fileCheckJs);
var _fileCode2Js = require("./icons/file-code-2.js");
var _fileCode2JsDefault = parcelHelpers.interopDefault(_fileCode2Js);
var _fileClockJs = require("./icons/file-clock.js");
var _fileClockJsDefault = parcelHelpers.interopDefault(_fileClockJs);
var _fileCodeJs = require("./icons/file-code.js");
var _fileCodeJsDefault = parcelHelpers.interopDefault(_fileCodeJs);
var _fileDiffJs = require("./icons/file-diff.js");
var _fileDiffJsDefault = parcelHelpers.interopDefault(_fileDiffJs);
var _fileDigitJs = require("./icons/file-digit.js");
var _fileDigitJsDefault = parcelHelpers.interopDefault(_fileDigitJs);
var _fileDownJs = require("./icons/file-down.js");
var _fileDownJsDefault = parcelHelpers.interopDefault(_fileDownJs);
var _fileHeartJs = require("./icons/file-heart.js");
var _fileHeartJsDefault = parcelHelpers.interopDefault(_fileHeartJs);
var _fileImageJs = require("./icons/file-image.js");
var _fileImageJsDefault = parcelHelpers.interopDefault(_fileImageJs);
var _fileInputJs = require("./icons/file-input.js");
var _fileInputJsDefault = parcelHelpers.interopDefault(_fileInputJs);
var _fileJson2Js = require("./icons/file-json-2.js");
var _fileJson2JsDefault = parcelHelpers.interopDefault(_fileJson2Js);
var _fileJsonJs = require("./icons/file-json.js");
var _fileJsonJsDefault = parcelHelpers.interopDefault(_fileJsonJs);
var _fileKey2Js = require("./icons/file-key-2.js");
var _fileKey2JsDefault = parcelHelpers.interopDefault(_fileKey2Js);
var _fileKeyJs = require("./icons/file-key.js");
var _fileKeyJsDefault = parcelHelpers.interopDefault(_fileKeyJs);
var _fileLock2Js = require("./icons/file-lock-2.js");
var _fileLock2JsDefault = parcelHelpers.interopDefault(_fileLock2Js);
var _fileLockJs = require("./icons/file-lock.js");
var _fileLockJsDefault = parcelHelpers.interopDefault(_fileLockJs);
var _fileMinus2Js = require("./icons/file-minus-2.js");
var _fileMinus2JsDefault = parcelHelpers.interopDefault(_fileMinus2Js);
var _fileMinusJs = require("./icons/file-minus.js");
var _fileMinusJsDefault = parcelHelpers.interopDefault(_fileMinusJs);
var _fileMusicJs = require("./icons/file-music.js");
var _fileMusicJsDefault = parcelHelpers.interopDefault(_fileMusicJs);
var _fileOutputJs = require("./icons/file-output.js");
var _fileOutputJsDefault = parcelHelpers.interopDefault(_fileOutputJs);
var _filePlus2Js = require("./icons/file-plus-2.js");
var _filePlus2JsDefault = parcelHelpers.interopDefault(_filePlus2Js);
var _filePlusJs = require("./icons/file-plus.js");
var _filePlusJsDefault = parcelHelpers.interopDefault(_filePlusJs);
var _fileScanJs = require("./icons/file-scan.js");
var _fileScanJsDefault = parcelHelpers.interopDefault(_fileScanJs);
var _fileSearch2Js = require("./icons/file-search-2.js");
var _fileSearch2JsDefault = parcelHelpers.interopDefault(_fileSearch2Js);
var _fileSearchJs = require("./icons/file-search.js");
var _fileSearchJsDefault = parcelHelpers.interopDefault(_fileSearchJs);
var _fileSlidersJs = require("./icons/file-sliders.js");
var _fileSlidersJsDefault = parcelHelpers.interopDefault(_fileSlidersJs);
var _fileSpreadsheetJs = require("./icons/file-spreadsheet.js");
var _fileSpreadsheetJsDefault = parcelHelpers.interopDefault(_fileSpreadsheetJs);
var _fileStackJs = require("./icons/file-stack.js");
var _fileStackJsDefault = parcelHelpers.interopDefault(_fileStackJs);
var _fileSymlinkJs = require("./icons/file-symlink.js");
var _fileSymlinkJsDefault = parcelHelpers.interopDefault(_fileSymlinkJs);
var _fileTerminalJs = require("./icons/file-terminal.js");
var _fileTerminalJsDefault = parcelHelpers.interopDefault(_fileTerminalJs);
var _fileTextJs = require("./icons/file-text.js");
var _fileTextJsDefault = parcelHelpers.interopDefault(_fileTextJs);
var _fileType2Js = require("./icons/file-type-2.js");
var _fileType2JsDefault = parcelHelpers.interopDefault(_fileType2Js);
var _fileTypeJs = require("./icons/file-type.js");
var _fileTypeJsDefault = parcelHelpers.interopDefault(_fileTypeJs);
var _fileUpJs = require("./icons/file-up.js");
var _fileUpJsDefault = parcelHelpers.interopDefault(_fileUpJs);
var _fileUserJs = require("./icons/file-user.js");
var _fileUserJsDefault = parcelHelpers.interopDefault(_fileUserJs);
var _fileVolume2Js = require("./icons/file-volume-2.js");
var _fileVolume2JsDefault = parcelHelpers.interopDefault(_fileVolume2Js);
var _fileVolumeJs = require("./icons/file-volume.js");
var _fileVolumeJsDefault = parcelHelpers.interopDefault(_fileVolumeJs);
var _fileWarningJs = require("./icons/file-warning.js");
var _fileWarningJsDefault = parcelHelpers.interopDefault(_fileWarningJs);
var _fileX2Js = require("./icons/file-x-2.js");
var _fileX2JsDefault = parcelHelpers.interopDefault(_fileX2Js);
var _fileXJs = require("./icons/file-x.js");
var _fileXJsDefault = parcelHelpers.interopDefault(_fileXJs);
var _fileJs = require("./icons/file.js");
var _fileJsDefault = parcelHelpers.interopDefault(_fileJs);
var _filmJs = require("./icons/film.js");
var _filmJsDefault = parcelHelpers.interopDefault(_filmJs);
var _filesJs = require("./icons/files.js");
var _filesJsDefault = parcelHelpers.interopDefault(_filesJs);
var _fingerprintJs = require("./icons/fingerprint.js");
var _fingerprintJsDefault = parcelHelpers.interopDefault(_fingerprintJs);
var _fireExtinguisherJs = require("./icons/fire-extinguisher.js");
var _fireExtinguisherJsDefault = parcelHelpers.interopDefault(_fireExtinguisherJs);
var _fishOffJs = require("./icons/fish-off.js");
var _fishOffJsDefault = parcelHelpers.interopDefault(_fishOffJs);
var _fishSymbolJs = require("./icons/fish-symbol.js");
var _fishSymbolJsDefault = parcelHelpers.interopDefault(_fishSymbolJs);
var _fishJs = require("./icons/fish.js");
var _fishJsDefault = parcelHelpers.interopDefault(_fishJs);
var _flagOffJs = require("./icons/flag-off.js");
var _flagOffJsDefault = parcelHelpers.interopDefault(_flagOffJs);
var _flagTriangleLeftJs = require("./icons/flag-triangle-left.js");
var _flagTriangleLeftJsDefault = parcelHelpers.interopDefault(_flagTriangleLeftJs);
var _flagTriangleRightJs = require("./icons/flag-triangle-right.js");
var _flagTriangleRightJsDefault = parcelHelpers.interopDefault(_flagTriangleRightJs);
var _flagJs = require("./icons/flag.js");
var _flagJsDefault = parcelHelpers.interopDefault(_flagJs);
var _flameKindlingJs = require("./icons/flame-kindling.js");
var _flameKindlingJsDefault = parcelHelpers.interopDefault(_flameKindlingJs);
var _flameJs = require("./icons/flame.js");
var _flameJsDefault = parcelHelpers.interopDefault(_flameJs);
var _flashlightOffJs = require("./icons/flashlight-off.js");
var _flashlightOffJsDefault = parcelHelpers.interopDefault(_flashlightOffJs);
var _flashlightJs = require("./icons/flashlight.js");
var _flashlightJsDefault = parcelHelpers.interopDefault(_flashlightJs);
var _flaskConicalOffJs = require("./icons/flask-conical-off.js");
var _flaskConicalOffJsDefault = parcelHelpers.interopDefault(_flaskConicalOffJs);
var _flaskConicalJs = require("./icons/flask-conical.js");
var _flaskConicalJsDefault = parcelHelpers.interopDefault(_flaskConicalJs);
var _flaskRoundJs = require("./icons/flask-round.js");
var _flaskRoundJsDefault = parcelHelpers.interopDefault(_flaskRoundJs);
var _flipHorizontal2Js = require("./icons/flip-horizontal-2.js");
var _flipHorizontal2JsDefault = parcelHelpers.interopDefault(_flipHorizontal2Js);
var _flipHorizontalJs = require("./icons/flip-horizontal.js");
var _flipHorizontalJsDefault = parcelHelpers.interopDefault(_flipHorizontalJs);
var _flipVertical2Js = require("./icons/flip-vertical-2.js");
var _flipVertical2JsDefault = parcelHelpers.interopDefault(_flipVertical2Js);
var _flipVerticalJs = require("./icons/flip-vertical.js");
var _flipVerticalJsDefault = parcelHelpers.interopDefault(_flipVerticalJs);
var _flower2Js = require("./icons/flower-2.js");
var _flower2JsDefault = parcelHelpers.interopDefault(_flower2Js);
var _flowerJs = require("./icons/flower.js");
var _flowerJsDefault = parcelHelpers.interopDefault(_flowerJs);
var _focusJs = require("./icons/focus.js");
var _focusJsDefault = parcelHelpers.interopDefault(_focusJs);
var _foldHorizontalJs = require("./icons/fold-horizontal.js");
var _foldHorizontalJsDefault = parcelHelpers.interopDefault(_foldHorizontalJs);
var _foldVerticalJs = require("./icons/fold-vertical.js");
var _foldVerticalJsDefault = parcelHelpers.interopDefault(_foldVerticalJs);
var _folderArchiveJs = require("./icons/folder-archive.js");
var _folderArchiveJsDefault = parcelHelpers.interopDefault(_folderArchiveJs);
var _folderCheckJs = require("./icons/folder-check.js");
var _folderCheckJsDefault = parcelHelpers.interopDefault(_folderCheckJs);
var _folderClockJs = require("./icons/folder-clock.js");
var _folderClockJsDefault = parcelHelpers.interopDefault(_folderClockJs);
var _folderCodeJs = require("./icons/folder-code.js");
var _folderCodeJsDefault = parcelHelpers.interopDefault(_folderCodeJs);
var _folderDotJs = require("./icons/folder-dot.js");
var _folderDotJsDefault = parcelHelpers.interopDefault(_folderDotJs);
var _folderClosedJs = require("./icons/folder-closed.js");
var _folderClosedJsDefault = parcelHelpers.interopDefault(_folderClosedJs);
var _folderDownJs = require("./icons/folder-down.js");
var _folderDownJsDefault = parcelHelpers.interopDefault(_folderDownJs);
var _folderGit2Js = require("./icons/folder-git-2.js");
var _folderGit2JsDefault = parcelHelpers.interopDefault(_folderGit2Js);
var _folderGitJs = require("./icons/folder-git.js");
var _folderGitJsDefault = parcelHelpers.interopDefault(_folderGitJs);
var _folderHeartJs = require("./icons/folder-heart.js");
var _folderHeartJsDefault = parcelHelpers.interopDefault(_folderHeartJs);
var _folderInputJs = require("./icons/folder-input.js");
var _folderInputJsDefault = parcelHelpers.interopDefault(_folderInputJs);
var _folderKanbanJs = require("./icons/folder-kanban.js");
var _folderKanbanJsDefault = parcelHelpers.interopDefault(_folderKanbanJs);
var _folderKeyJs = require("./icons/folder-key.js");
var _folderKeyJsDefault = parcelHelpers.interopDefault(_folderKeyJs);
var _folderLockJs = require("./icons/folder-lock.js");
var _folderLockJsDefault = parcelHelpers.interopDefault(_folderLockJs);
var _folderMinusJs = require("./icons/folder-minus.js");
var _folderMinusJsDefault = parcelHelpers.interopDefault(_folderMinusJs);
var _folderOpenDotJs = require("./icons/folder-open-dot.js");
var _folderOpenDotJsDefault = parcelHelpers.interopDefault(_folderOpenDotJs);
var _folderOpenJs = require("./icons/folder-open.js");
var _folderOpenJsDefault = parcelHelpers.interopDefault(_folderOpenJs);
var _folderOutputJs = require("./icons/folder-output.js");
var _folderOutputJsDefault = parcelHelpers.interopDefault(_folderOutputJs);
var _folderPlusJs = require("./icons/folder-plus.js");
var _folderPlusJsDefault = parcelHelpers.interopDefault(_folderPlusJs);
var _folderRootJs = require("./icons/folder-root.js");
var _folderRootJsDefault = parcelHelpers.interopDefault(_folderRootJs);
var _folderSearch2Js = require("./icons/folder-search-2.js");
var _folderSearch2JsDefault = parcelHelpers.interopDefault(_folderSearch2Js);
var _folderSearchJs = require("./icons/folder-search.js");
var _folderSearchJsDefault = parcelHelpers.interopDefault(_folderSearchJs);
var _folderSymlinkJs = require("./icons/folder-symlink.js");
var _folderSymlinkJsDefault = parcelHelpers.interopDefault(_folderSymlinkJs);
var _folderSyncJs = require("./icons/folder-sync.js");
var _folderSyncJsDefault = parcelHelpers.interopDefault(_folderSyncJs);
var _folderTreeJs = require("./icons/folder-tree.js");
var _folderTreeJsDefault = parcelHelpers.interopDefault(_folderTreeJs);
var _folderUpJs = require("./icons/folder-up.js");
var _folderUpJsDefault = parcelHelpers.interopDefault(_folderUpJs);
var _folderXJs = require("./icons/folder-x.js");
var _folderXJsDefault = parcelHelpers.interopDefault(_folderXJs);
var _folderJs = require("./icons/folder.js");
var _folderJsDefault = parcelHelpers.interopDefault(_folderJs);
var _foldersJs = require("./icons/folders.js");
var _foldersJsDefault = parcelHelpers.interopDefault(_foldersJs);
var _footprintsJs = require("./icons/footprints.js");
var _footprintsJsDefault = parcelHelpers.interopDefault(_footprintsJs);
var _forkliftJs = require("./icons/forklift.js");
var _forkliftJsDefault = parcelHelpers.interopDefault(_forkliftJs);
var _forwardJs = require("./icons/forward.js");
var _forwardJsDefault = parcelHelpers.interopDefault(_forwardJs);
var _frameJs = require("./icons/frame.js");
var _frameJsDefault = parcelHelpers.interopDefault(_frameJs);
var _framerJs = require("./icons/framer.js");
var _framerJsDefault = parcelHelpers.interopDefault(_framerJs);
var _frownJs = require("./icons/frown.js");
var _frownJsDefault = parcelHelpers.interopDefault(_frownJs);
var _fuelJs = require("./icons/fuel.js");
var _fuelJsDefault = parcelHelpers.interopDefault(_fuelJs);
var _fullscreenJs = require("./icons/fullscreen.js");
var _fullscreenJsDefault = parcelHelpers.interopDefault(_fullscreenJs);
var _funnelPlusJs = require("./icons/funnel-plus.js");
var _funnelPlusJsDefault = parcelHelpers.interopDefault(_funnelPlusJs);
var _galleryHorizontalEndJs = require("./icons/gallery-horizontal-end.js");
var _galleryHorizontalEndJsDefault = parcelHelpers.interopDefault(_galleryHorizontalEndJs);
var _galleryHorizontalJs = require("./icons/gallery-horizontal.js");
var _galleryHorizontalJsDefault = parcelHelpers.interopDefault(_galleryHorizontalJs);
var _galleryThumbnailsJs = require("./icons/gallery-thumbnails.js");
var _galleryThumbnailsJsDefault = parcelHelpers.interopDefault(_galleryThumbnailsJs);
var _galleryVerticalEndJs = require("./icons/gallery-vertical-end.js");
var _galleryVerticalEndJsDefault = parcelHelpers.interopDefault(_galleryVerticalEndJs);
var _galleryVerticalJs = require("./icons/gallery-vertical.js");
var _galleryVerticalJsDefault = parcelHelpers.interopDefault(_galleryVerticalJs);
var _gamepad2Js = require("./icons/gamepad-2.js");
var _gamepad2JsDefault = parcelHelpers.interopDefault(_gamepad2Js);
var _gamepadJs = require("./icons/gamepad.js");
var _gamepadJsDefault = parcelHelpers.interopDefault(_gamepadJs);
var _gaugeJs = require("./icons/gauge.js");
var _gaugeJsDefault = parcelHelpers.interopDefault(_gaugeJs);
var _gavelJs = require("./icons/gavel.js");
var _gavelJsDefault = parcelHelpers.interopDefault(_gavelJs);
var _gemJs = require("./icons/gem.js");
var _gemJsDefault = parcelHelpers.interopDefault(_gemJs);
var _georgianLariJs = require("./icons/georgian-lari.js");
var _georgianLariJsDefault = parcelHelpers.interopDefault(_georgianLariJs);
var _ghostJs = require("./icons/ghost.js");
var _ghostJsDefault = parcelHelpers.interopDefault(_ghostJs);
var _giftJs = require("./icons/gift.js");
var _giftJsDefault = parcelHelpers.interopDefault(_giftJs);
var _gitBranchPlusJs = require("./icons/git-branch-plus.js");
var _gitBranchPlusJsDefault = parcelHelpers.interopDefault(_gitBranchPlusJs);
var _gitBranchJs = require("./icons/git-branch.js");
var _gitBranchJsDefault = parcelHelpers.interopDefault(_gitBranchJs);
var _gitCommitVerticalJs = require("./icons/git-commit-vertical.js");
var _gitCommitVerticalJsDefault = parcelHelpers.interopDefault(_gitCommitVerticalJs);
var _gitCompareArrowsJs = require("./icons/git-compare-arrows.js");
var _gitCompareArrowsJsDefault = parcelHelpers.interopDefault(_gitCompareArrowsJs);
var _gitCompareJs = require("./icons/git-compare.js");
var _gitCompareJsDefault = parcelHelpers.interopDefault(_gitCompareJs);
var _gitForkJs = require("./icons/git-fork.js");
var _gitForkJsDefault = parcelHelpers.interopDefault(_gitForkJs);
var _gitGraphJs = require("./icons/git-graph.js");
var _gitGraphJsDefault = parcelHelpers.interopDefault(_gitGraphJs);
var _gitMergeJs = require("./icons/git-merge.js");
var _gitMergeJsDefault = parcelHelpers.interopDefault(_gitMergeJs);
var _gitPullRequestArrowJs = require("./icons/git-pull-request-arrow.js");
var _gitPullRequestArrowJsDefault = parcelHelpers.interopDefault(_gitPullRequestArrowJs);
var _gitPullRequestClosedJs = require("./icons/git-pull-request-closed.js");
var _gitPullRequestClosedJsDefault = parcelHelpers.interopDefault(_gitPullRequestClosedJs);
var _gitPullRequestCreateArrowJs = require("./icons/git-pull-request-create-arrow.js");
var _gitPullRequestCreateArrowJsDefault = parcelHelpers.interopDefault(_gitPullRequestCreateArrowJs);
var _gitPullRequestCreateJs = require("./icons/git-pull-request-create.js");
var _gitPullRequestCreateJsDefault = parcelHelpers.interopDefault(_gitPullRequestCreateJs);
var _gitPullRequestDraftJs = require("./icons/git-pull-request-draft.js");
var _gitPullRequestDraftJsDefault = parcelHelpers.interopDefault(_gitPullRequestDraftJs);
var _gitPullRequestJs = require("./icons/git-pull-request.js");
var _gitPullRequestJsDefault = parcelHelpers.interopDefault(_gitPullRequestJs);
var _githubJs = require("./icons/github.js");
var _githubJsDefault = parcelHelpers.interopDefault(_githubJs);
var _glassWaterJs = require("./icons/glass-water.js");
var _glassWaterJsDefault = parcelHelpers.interopDefault(_glassWaterJs);
var _gitlabJs = require("./icons/gitlab.js");
var _gitlabJsDefault = parcelHelpers.interopDefault(_gitlabJs);
var _glassesJs = require("./icons/glasses.js");
var _glassesJsDefault = parcelHelpers.interopDefault(_glassesJs);
var _globeLockJs = require("./icons/globe-lock.js");
var _globeLockJsDefault = parcelHelpers.interopDefault(_globeLockJs);
var _globeJs = require("./icons/globe.js");
var _globeJsDefault = parcelHelpers.interopDefault(_globeJs);
var _goalJs = require("./icons/goal.js");
var _goalJsDefault = parcelHelpers.interopDefault(_goalJs);
var _gpuJs = require("./icons/gpu.js");
var _gpuJsDefault = parcelHelpers.interopDefault(_gpuJs);
var _graduationCapJs = require("./icons/graduation-cap.js");
var _graduationCapJsDefault = parcelHelpers.interopDefault(_graduationCapJs);
var _grapeJs = require("./icons/grape.js");
var _grapeJsDefault = parcelHelpers.interopDefault(_grapeJs);
var _grid3X2Js = require("./icons/grid-3x2.js");
var _grid3X2JsDefault = parcelHelpers.interopDefault(_grid3X2Js);
var _gripHorizontalJs = require("./icons/grip-horizontal.js");
var _gripHorizontalJsDefault = parcelHelpers.interopDefault(_gripHorizontalJs);
var _gripVerticalJs = require("./icons/grip-vertical.js");
var _gripVerticalJsDefault = parcelHelpers.interopDefault(_gripVerticalJs);
var _gripJs = require("./icons/grip.js");
var _gripJsDefault = parcelHelpers.interopDefault(_gripJs);
var _guitarJs = require("./icons/guitar.js");
var _guitarJsDefault = parcelHelpers.interopDefault(_guitarJs);
var _groupJs = require("./icons/group.js");
var _groupJsDefault = parcelHelpers.interopDefault(_groupJs);
var _hamJs = require("./icons/ham.js");
var _hamJsDefault = parcelHelpers.interopDefault(_hamJs);
var _hamburgerJs = require("./icons/hamburger.js");
var _hamburgerJsDefault = parcelHelpers.interopDefault(_hamburgerJs);
var _handCoinsJs = require("./icons/hand-coins.js");
var _handCoinsJsDefault = parcelHelpers.interopDefault(_handCoinsJs);
var _hammerJs = require("./icons/hammer.js");
var _hammerJsDefault = parcelHelpers.interopDefault(_hammerJs);
var _handFistJs = require("./icons/hand-fist.js");
var _handFistJsDefault = parcelHelpers.interopDefault(_handFistJs);
var _handHeartJs = require("./icons/hand-heart.js");
var _handHeartJsDefault = parcelHelpers.interopDefault(_handHeartJs);
var _handMetalJs = require("./icons/hand-metal.js");
var _handMetalJsDefault = parcelHelpers.interopDefault(_handMetalJs);
var _handPlatterJs = require("./icons/hand-platter.js");
var _handPlatterJsDefault = parcelHelpers.interopDefault(_handPlatterJs);
var _handJs = require("./icons/hand.js");
var _handJsDefault = parcelHelpers.interopDefault(_handJs);
var _handbagJs = require("./icons/handbag.js");
var _handbagJsDefault = parcelHelpers.interopDefault(_handbagJs);
var _handshakeJs = require("./icons/handshake.js");
var _handshakeJsDefault = parcelHelpers.interopDefault(_handshakeJs);
var _hardDriveDownloadJs = require("./icons/hard-drive-download.js");
var _hardDriveDownloadJsDefault = parcelHelpers.interopDefault(_hardDriveDownloadJs);
var _hardDriveUploadJs = require("./icons/hard-drive-upload.js");
var _hardDriveUploadJsDefault = parcelHelpers.interopDefault(_hardDriveUploadJs);
var _hardDriveJs = require("./icons/hard-drive.js");
var _hardDriveJsDefault = parcelHelpers.interopDefault(_hardDriveJs);
var _hardHatJs = require("./icons/hard-hat.js");
var _hardHatJsDefault = parcelHelpers.interopDefault(_hardHatJs);
var _hashJs = require("./icons/hash.js");
var _hashJsDefault = parcelHelpers.interopDefault(_hashJs);
var _hatGlassesJs = require("./icons/hat-glasses.js");
var _hatGlassesJsDefault = parcelHelpers.interopDefault(_hatGlassesJs);
var _hazeJs = require("./icons/haze.js");
var _hazeJsDefault = parcelHelpers.interopDefault(_hazeJs);
var _heading1Js = require("./icons/heading-1.js");
var _heading1JsDefault = parcelHelpers.interopDefault(_heading1Js);
var _hdmiPortJs = require("./icons/hdmi-port.js");
var _hdmiPortJsDefault = parcelHelpers.interopDefault(_hdmiPortJs);
var _heading2Js = require("./icons/heading-2.js");
var _heading2JsDefault = parcelHelpers.interopDefault(_heading2Js);
var _heading3Js = require("./icons/heading-3.js");
var _heading3JsDefault = parcelHelpers.interopDefault(_heading3Js);
var _heading5Js = require("./icons/heading-5.js");
var _heading5JsDefault = parcelHelpers.interopDefault(_heading5Js);
var _heading4Js = require("./icons/heading-4.js");
var _heading4JsDefault = parcelHelpers.interopDefault(_heading4Js);
var _heading6Js = require("./icons/heading-6.js");
var _heading6JsDefault = parcelHelpers.interopDefault(_heading6Js);
var _headingJs = require("./icons/heading.js");
var _headingJsDefault = parcelHelpers.interopDefault(_headingJs);
var _headphoneOffJs = require("./icons/headphone-off.js");
var _headphoneOffJsDefault = parcelHelpers.interopDefault(_headphoneOffJs);
var _headphonesJs = require("./icons/headphones.js");
var _headphonesJsDefault = parcelHelpers.interopDefault(_headphonesJs);
var _headsetJs = require("./icons/headset.js");
var _headsetJsDefault = parcelHelpers.interopDefault(_headsetJs);
var _heartCrackJs = require("./icons/heart-crack.js");
var _heartCrackJsDefault = parcelHelpers.interopDefault(_heartCrackJs);
var _heartHandshakeJs = require("./icons/heart-handshake.js");
var _heartHandshakeJsDefault = parcelHelpers.interopDefault(_heartHandshakeJs);
var _heartMinusJs = require("./icons/heart-minus.js");
var _heartMinusJsDefault = parcelHelpers.interopDefault(_heartMinusJs);
var _heartOffJs = require("./icons/heart-off.js");
var _heartOffJsDefault = parcelHelpers.interopDefault(_heartOffJs);
var _heartPlusJs = require("./icons/heart-plus.js");
var _heartPlusJsDefault = parcelHelpers.interopDefault(_heartPlusJs);
var _heartPulseJs = require("./icons/heart-pulse.js");
var _heartPulseJsDefault = parcelHelpers.interopDefault(_heartPulseJs);
var _heartJs = require("./icons/heart.js");
var _heartJsDefault = parcelHelpers.interopDefault(_heartJs);
var _heaterJs = require("./icons/heater.js");
var _heaterJsDefault = parcelHelpers.interopDefault(_heaterJs);
var _hexagonJs = require("./icons/hexagon.js");
var _hexagonJsDefault = parcelHelpers.interopDefault(_hexagonJs);
var _highlighterJs = require("./icons/highlighter.js");
var _highlighterJsDefault = parcelHelpers.interopDefault(_highlighterJs);
var _historyJs = require("./icons/history.js");
var _historyJsDefault = parcelHelpers.interopDefault(_historyJs);
var _hopOffJs = require("./icons/hop-off.js");
var _hopOffJsDefault = parcelHelpers.interopDefault(_hopOffJs);
var _hopJs = require("./icons/hop.js");
var _hopJsDefault = parcelHelpers.interopDefault(_hopJs);
var _hotelJs = require("./icons/hotel.js");
var _hotelJsDefault = parcelHelpers.interopDefault(_hotelJs);
var _hospitalJs = require("./icons/hospital.js");
var _hospitalJsDefault = parcelHelpers.interopDefault(_hospitalJs);
var _hourglassJs = require("./icons/hourglass.js");
var _hourglassJsDefault = parcelHelpers.interopDefault(_hourglassJs);
var _houseHeartJs = require("./icons/house-heart.js");
var _houseHeartJsDefault = parcelHelpers.interopDefault(_houseHeartJs);
var _housePlugJs = require("./icons/house-plug.js");
var _housePlugJsDefault = parcelHelpers.interopDefault(_housePlugJs);
var _housePlusJs = require("./icons/house-plus.js");
var _housePlusJsDefault = parcelHelpers.interopDefault(_housePlusJs);
var _houseWifiJs = require("./icons/house-wifi.js");
var _houseWifiJsDefault = parcelHelpers.interopDefault(_houseWifiJs);
var _idCardLanyardJs = require("./icons/id-card-lanyard.js");
var _idCardLanyardJsDefault = parcelHelpers.interopDefault(_idCardLanyardJs);
var _idCardJs = require("./icons/id-card.js");
var _idCardJsDefault = parcelHelpers.interopDefault(_idCardJs);
var _imageDownJs = require("./icons/image-down.js");
var _imageDownJsDefault = parcelHelpers.interopDefault(_imageDownJs);
var _imageMinusJs = require("./icons/image-minus.js");
var _imageMinusJsDefault = parcelHelpers.interopDefault(_imageMinusJs);
var _imageOffJs = require("./icons/image-off.js");
var _imageOffJsDefault = parcelHelpers.interopDefault(_imageOffJs);
var _imagePlayJs = require("./icons/image-play.js");
var _imagePlayJsDefault = parcelHelpers.interopDefault(_imagePlayJs);
var _imagePlusJs = require("./icons/image-plus.js");
var _imagePlusJsDefault = parcelHelpers.interopDefault(_imagePlusJs);
var _imageUpscaleJs = require("./icons/image-upscale.js");
var _imageUpscaleJsDefault = parcelHelpers.interopDefault(_imageUpscaleJs);
var _imageUpJs = require("./icons/image-up.js");
var _imageUpJsDefault = parcelHelpers.interopDefault(_imageUpJs);
var _imageJs = require("./icons/image.js");
var _imageJsDefault = parcelHelpers.interopDefault(_imageJs);
var _imagesJs = require("./icons/images.js");
var _imagesJsDefault = parcelHelpers.interopDefault(_imagesJs);
var _importJs = require("./icons/import.js");
var _importJsDefault = parcelHelpers.interopDefault(_importJs);
var _inboxJs = require("./icons/inbox.js");
var _inboxJsDefault = parcelHelpers.interopDefault(_inboxJs);
var _indianRupeeJs = require("./icons/indian-rupee.js");
var _indianRupeeJsDefault = parcelHelpers.interopDefault(_indianRupeeJs);
var _infinityJs = require("./icons/infinity.js");
var _infinityJsDefault = parcelHelpers.interopDefault(_infinityJs);
var _infoJs = require("./icons/info.js");
var _infoJsDefault = parcelHelpers.interopDefault(_infoJs);
var _inspectionPanelJs = require("./icons/inspection-panel.js");
var _inspectionPanelJsDefault = parcelHelpers.interopDefault(_inspectionPanelJs);
var _instagramJs = require("./icons/instagram.js");
var _instagramJsDefault = parcelHelpers.interopDefault(_instagramJs);
var _italicJs = require("./icons/italic.js");
var _italicJsDefault = parcelHelpers.interopDefault(_italicJs);
var _iterationCcwJs = require("./icons/iteration-ccw.js");
var _iterationCcwJsDefault = parcelHelpers.interopDefault(_iterationCcwJs);
var _iterationCwJs = require("./icons/iteration-cw.js");
var _iterationCwJsDefault = parcelHelpers.interopDefault(_iterationCwJs);
var _japaneseYenJs = require("./icons/japanese-yen.js");
var _japaneseYenJsDefault = parcelHelpers.interopDefault(_japaneseYenJs);
var _joystickJs = require("./icons/joystick.js");
var _joystickJsDefault = parcelHelpers.interopDefault(_joystickJs);
var _kanbanJs = require("./icons/kanban.js");
var _kanbanJsDefault = parcelHelpers.interopDefault(_kanbanJs);
var _kayakJs = require("./icons/kayak.js");
var _kayakJsDefault = parcelHelpers.interopDefault(_kayakJs);
var _keySquareJs = require("./icons/key-square.js");
var _keySquareJsDefault = parcelHelpers.interopDefault(_keySquareJs);
var _keyRoundJs = require("./icons/key-round.js");
var _keyRoundJsDefault = parcelHelpers.interopDefault(_keyRoundJs);
var _keyJs = require("./icons/key.js");
var _keyJsDefault = parcelHelpers.interopDefault(_keyJs);
var _keyboardMusicJs = require("./icons/keyboard-music.js");
var _keyboardMusicJsDefault = parcelHelpers.interopDefault(_keyboardMusicJs);
var _keyboardOffJs = require("./icons/keyboard-off.js");
var _keyboardOffJsDefault = parcelHelpers.interopDefault(_keyboardOffJs);
var _keyboardJs = require("./icons/keyboard.js");
var _keyboardJsDefault = parcelHelpers.interopDefault(_keyboardJs);
var _lampCeilingJs = require("./icons/lamp-ceiling.js");
var _lampCeilingJsDefault = parcelHelpers.interopDefault(_lampCeilingJs);
var _lampDeskJs = require("./icons/lamp-desk.js");
var _lampDeskJsDefault = parcelHelpers.interopDefault(_lampDeskJs);
var _lampWallDownJs = require("./icons/lamp-wall-down.js");
var _lampWallDownJsDefault = parcelHelpers.interopDefault(_lampWallDownJs);
var _lampFloorJs = require("./icons/lamp-floor.js");
var _lampFloorJsDefault = parcelHelpers.interopDefault(_lampFloorJs);
var _lampWallUpJs = require("./icons/lamp-wall-up.js");
var _lampWallUpJsDefault = parcelHelpers.interopDefault(_lampWallUpJs);
var _lampJs = require("./icons/lamp.js");
var _lampJsDefault = parcelHelpers.interopDefault(_lampJs);
var _landPlotJs = require("./icons/land-plot.js");
var _landPlotJsDefault = parcelHelpers.interopDefault(_landPlotJs);
var _landmarkJs = require("./icons/landmark.js");
var _landmarkJsDefault = parcelHelpers.interopDefault(_landmarkJs);
var _laptopMinimalCheckJs = require("./icons/laptop-minimal-check.js");
var _laptopMinimalCheckJsDefault = parcelHelpers.interopDefault(_laptopMinimalCheckJs);
var _languagesJs = require("./icons/languages.js");
var _languagesJsDefault = parcelHelpers.interopDefault(_languagesJs);
var _laptopJs = require("./icons/laptop.js");
var _laptopJsDefault = parcelHelpers.interopDefault(_laptopJs);
var _lassoSelectJs = require("./icons/lasso-select.js");
var _lassoSelectJsDefault = parcelHelpers.interopDefault(_lassoSelectJs);
var _lassoJs = require("./icons/lasso.js");
var _lassoJsDefault = parcelHelpers.interopDefault(_lassoJs);
var _laughJs = require("./icons/laugh.js");
var _laughJsDefault = parcelHelpers.interopDefault(_laughJs);
var _layers2Js = require("./icons/layers-2.js");
var _layers2JsDefault = parcelHelpers.interopDefault(_layers2Js);
var _layoutDashboardJs = require("./icons/layout-dashboard.js");
var _layoutDashboardJsDefault = parcelHelpers.interopDefault(_layoutDashboardJs);
var _layoutGridJs = require("./icons/layout-grid.js");
var _layoutGridJsDefault = parcelHelpers.interopDefault(_layoutGridJs);
var _layoutPanelLeftJs = require("./icons/layout-panel-left.js");
var _layoutPanelLeftJsDefault = parcelHelpers.interopDefault(_layoutPanelLeftJs);
var _layoutListJs = require("./icons/layout-list.js");
var _layoutListJsDefault = parcelHelpers.interopDefault(_layoutListJs);
var _layoutPanelTopJs = require("./icons/layout-panel-top.js");
var _layoutPanelTopJsDefault = parcelHelpers.interopDefault(_layoutPanelTopJs);
var _layoutTemplateJs = require("./icons/layout-template.js");
var _layoutTemplateJsDefault = parcelHelpers.interopDefault(_layoutTemplateJs);
var _leafJs = require("./icons/leaf.js");
var _leafJsDefault = parcelHelpers.interopDefault(_leafJs);
var _lecternJs = require("./icons/lectern.js");
var _lecternJsDefault = parcelHelpers.interopDefault(_lecternJs);
var _libraryBigJs = require("./icons/library-big.js");
var _libraryBigJsDefault = parcelHelpers.interopDefault(_libraryBigJs);
var _leafyGreenJs = require("./icons/leafy-green.js");
var _leafyGreenJsDefault = parcelHelpers.interopDefault(_leafyGreenJs);
var _libraryJs = require("./icons/library.js");
var _libraryJsDefault = parcelHelpers.interopDefault(_libraryJs);
var _lifeBuoyJs = require("./icons/life-buoy.js");
var _lifeBuoyJsDefault = parcelHelpers.interopDefault(_lifeBuoyJs);
var _ligatureJs = require("./icons/ligature.js");
var _ligatureJsDefault = parcelHelpers.interopDefault(_ligatureJs);
var _lightbulbOffJs = require("./icons/lightbulb-off.js");
var _lightbulbOffJsDefault = parcelHelpers.interopDefault(_lightbulbOffJs);
var _lightbulbJs = require("./icons/lightbulb.js");
var _lightbulbJsDefault = parcelHelpers.interopDefault(_lightbulbJs);
var _lineSquiggleJs = require("./icons/line-squiggle.js");
var _lineSquiggleJsDefault = parcelHelpers.interopDefault(_lineSquiggleJs);
var _link2OffJs = require("./icons/link-2-off.js");
var _link2OffJsDefault = parcelHelpers.interopDefault(_link2OffJs);
var _link2Js = require("./icons/link-2.js");
var _link2JsDefault = parcelHelpers.interopDefault(_link2Js);
var _linkedinJs = require("./icons/linkedin.js");
var _linkedinJsDefault = parcelHelpers.interopDefault(_linkedinJs);
var _listCheckJs = require("./icons/list-check.js");
var _listCheckJsDefault = parcelHelpers.interopDefault(_listCheckJs);
var _linkJs = require("./icons/link.js");
var _linkJsDefault = parcelHelpers.interopDefault(_linkJs);
var _listChecksJs = require("./icons/list-checks.js");
var _listChecksJsDefault = parcelHelpers.interopDefault(_listChecksJs);
var _listChevronsDownUpJs = require("./icons/list-chevrons-down-up.js");
var _listChevronsDownUpJsDefault = parcelHelpers.interopDefault(_listChevronsDownUpJs);
var _listChevronsUpDownJs = require("./icons/list-chevrons-up-down.js");
var _listChevronsUpDownJsDefault = parcelHelpers.interopDefault(_listChevronsUpDownJs);
var _listCollapseJs = require("./icons/list-collapse.js");
var _listCollapseJsDefault = parcelHelpers.interopDefault(_listCollapseJs);
var _listEndJs = require("./icons/list-end.js");
var _listEndJsDefault = parcelHelpers.interopDefault(_listEndJs);
var _listFilterPlusJs = require("./icons/list-filter-plus.js");
var _listFilterPlusJsDefault = parcelHelpers.interopDefault(_listFilterPlusJs);
var _listFilterJs = require("./icons/list-filter.js");
var _listFilterJsDefault = parcelHelpers.interopDefault(_listFilterJs);
var _listMinusJs = require("./icons/list-minus.js");
var _listMinusJsDefault = parcelHelpers.interopDefault(_listMinusJs);
var _listMusicJs = require("./icons/list-music.js");
var _listMusicJsDefault = parcelHelpers.interopDefault(_listMusicJs);
var _listOrderedJs = require("./icons/list-ordered.js");
var _listOrderedJsDefault = parcelHelpers.interopDefault(_listOrderedJs);
var _listPlusJs = require("./icons/list-plus.js");
var _listPlusJsDefault = parcelHelpers.interopDefault(_listPlusJs);
var _listRestartJs = require("./icons/list-restart.js");
var _listRestartJsDefault = parcelHelpers.interopDefault(_listRestartJs);
var _listStartJs = require("./icons/list-start.js");
var _listStartJsDefault = parcelHelpers.interopDefault(_listStartJs);
var _listTodoJs = require("./icons/list-todo.js");
var _listTodoJsDefault = parcelHelpers.interopDefault(_listTodoJs);
var _listTreeJs = require("./icons/list-tree.js");
var _listTreeJsDefault = parcelHelpers.interopDefault(_listTreeJs);
var _listVideoJs = require("./icons/list-video.js");
var _listVideoJsDefault = parcelHelpers.interopDefault(_listVideoJs);
var _listXJs = require("./icons/list-x.js");
var _listXJsDefault = parcelHelpers.interopDefault(_listXJs);
var _listJs = require("./icons/list.js");
var _listJsDefault = parcelHelpers.interopDefault(_listJs);
var _loaderPinwheelJs = require("./icons/loader-pinwheel.js");
var _loaderPinwheelJsDefault = parcelHelpers.interopDefault(_loaderPinwheelJs);
var _loaderJs = require("./icons/loader.js");
var _loaderJsDefault = parcelHelpers.interopDefault(_loaderJs);
var _locateFixedJs = require("./icons/locate-fixed.js");
var _locateFixedJsDefault = parcelHelpers.interopDefault(_locateFixedJs);
var _locateOffJs = require("./icons/locate-off.js");
var _locateOffJsDefault = parcelHelpers.interopDefault(_locateOffJs);
var _locateJs = require("./icons/locate.js");
var _locateJsDefault = parcelHelpers.interopDefault(_locateJs);
var _lockKeyholeJs = require("./icons/lock-keyhole.js");
var _lockKeyholeJsDefault = parcelHelpers.interopDefault(_lockKeyholeJs);
var _lockJs = require("./icons/lock.js");
var _lockJsDefault = parcelHelpers.interopDefault(_lockJs);
var _logInJs = require("./icons/log-in.js");
var _logInJsDefault = parcelHelpers.interopDefault(_logInJs);
var _logOutJs = require("./icons/log-out.js");
var _logOutJsDefault = parcelHelpers.interopDefault(_logOutJs);
var _logsJs = require("./icons/logs.js");
var _logsJsDefault = parcelHelpers.interopDefault(_logsJs);
var _lollipopJs = require("./icons/lollipop.js");
var _lollipopJsDefault = parcelHelpers.interopDefault(_lollipopJs);
var _luggageJs = require("./icons/luggage.js");
var _luggageJsDefault = parcelHelpers.interopDefault(_luggageJs);
var _magnetJs = require("./icons/magnet.js");
var _magnetJsDefault = parcelHelpers.interopDefault(_magnetJs);
var _mailCheckJs = require("./icons/mail-check.js");
var _mailCheckJsDefault = parcelHelpers.interopDefault(_mailCheckJs);
var _mailOpenJs = require("./icons/mail-open.js");
var _mailOpenJsDefault = parcelHelpers.interopDefault(_mailOpenJs);
var _mailMinusJs = require("./icons/mail-minus.js");
var _mailMinusJsDefault = parcelHelpers.interopDefault(_mailMinusJs);
var _mailPlusJs = require("./icons/mail-plus.js");
var _mailPlusJsDefault = parcelHelpers.interopDefault(_mailPlusJs);
var _mailSearchJs = require("./icons/mail-search.js");
var _mailSearchJsDefault = parcelHelpers.interopDefault(_mailSearchJs);
var _mailWarningJs = require("./icons/mail-warning.js");
var _mailWarningJsDefault = parcelHelpers.interopDefault(_mailWarningJs);
var _mailXJs = require("./icons/mail-x.js");
var _mailXJsDefault = parcelHelpers.interopDefault(_mailXJs);
var _mailJs = require("./icons/mail.js");
var _mailJsDefault = parcelHelpers.interopDefault(_mailJs);
var _mailboxJs = require("./icons/mailbox.js");
var _mailboxJsDefault = parcelHelpers.interopDefault(_mailboxJs);
var _mailsJs = require("./icons/mails.js");
var _mailsJsDefault = parcelHelpers.interopDefault(_mailsJs);
var _mapMinusJs = require("./icons/map-minus.js");
var _mapMinusJsDefault = parcelHelpers.interopDefault(_mapMinusJs);
var _mapPinCheckJs = require("./icons/map-pin-check.js");
var _mapPinCheckJsDefault = parcelHelpers.interopDefault(_mapPinCheckJs);
var _mapPinCheckInsideJs = require("./icons/map-pin-check-inside.js");
var _mapPinCheckInsideJsDefault = parcelHelpers.interopDefault(_mapPinCheckInsideJs);
var _mapPinHouseJs = require("./icons/map-pin-house.js");
var _mapPinHouseJsDefault = parcelHelpers.interopDefault(_mapPinHouseJs);
var _mapPinMinusInsideJs = require("./icons/map-pin-minus-inside.js");
var _mapPinMinusInsideJsDefault = parcelHelpers.interopDefault(_mapPinMinusInsideJs);
var _mapPinMinusJs = require("./icons/map-pin-minus.js");
var _mapPinMinusJsDefault = parcelHelpers.interopDefault(_mapPinMinusJs);
var _mapPinOffJs = require("./icons/map-pin-off.js");
var _mapPinOffJsDefault = parcelHelpers.interopDefault(_mapPinOffJs);
var _mapPinPlusInsideJs = require("./icons/map-pin-plus-inside.js");
var _mapPinPlusInsideJsDefault = parcelHelpers.interopDefault(_mapPinPlusInsideJs);
var _mapPinPlusJs = require("./icons/map-pin-plus.js");
var _mapPinPlusJsDefault = parcelHelpers.interopDefault(_mapPinPlusJs);
var _mapPinXInsideJs = require("./icons/map-pin-x-inside.js");
var _mapPinXInsideJsDefault = parcelHelpers.interopDefault(_mapPinXInsideJs);
var _mapPinJs = require("./icons/map-pin.js");
var _mapPinJsDefault = parcelHelpers.interopDefault(_mapPinJs);
var _mapPinXJs = require("./icons/map-pin-x.js");
var _mapPinXJsDefault = parcelHelpers.interopDefault(_mapPinXJs);
var _mapPinnedJs = require("./icons/map-pinned.js");
var _mapPinnedJsDefault = parcelHelpers.interopDefault(_mapPinnedJs);
var _mapPlusJs = require("./icons/map-plus.js");
var _mapPlusJsDefault = parcelHelpers.interopDefault(_mapPlusJs);
var _mapJs = require("./icons/map.js");
var _mapJsDefault = parcelHelpers.interopDefault(_mapJs);
var _marsStrokeJs = require("./icons/mars-stroke.js");
var _marsStrokeJsDefault = parcelHelpers.interopDefault(_marsStrokeJs);
var _marsJs = require("./icons/mars.js");
var _marsJsDefault = parcelHelpers.interopDefault(_marsJs);
var _maximize2Js = require("./icons/maximize-2.js");
var _maximize2JsDefault = parcelHelpers.interopDefault(_maximize2Js);
var _martiniJs = require("./icons/martini.js");
var _martiniJsDefault = parcelHelpers.interopDefault(_martiniJs);
var _maximizeJs = require("./icons/maximize.js");
var _maximizeJsDefault = parcelHelpers.interopDefault(_maximizeJs);
var _medalJs = require("./icons/medal.js");
var _medalJsDefault = parcelHelpers.interopDefault(_medalJs);
var _megaphoneOffJs = require("./icons/megaphone-off.js");
var _megaphoneOffJsDefault = parcelHelpers.interopDefault(_megaphoneOffJs);
var _megaphoneJs = require("./icons/megaphone.js");
var _megaphoneJsDefault = parcelHelpers.interopDefault(_megaphoneJs);
var _mehJs = require("./icons/meh.js");
var _mehJsDefault = parcelHelpers.interopDefault(_mehJs);
var _memoryStickJs = require("./icons/memory-stick.js");
var _memoryStickJsDefault = parcelHelpers.interopDefault(_memoryStickJs);
var _menuJs = require("./icons/menu.js");
var _menuJsDefault = parcelHelpers.interopDefault(_menuJs);
var _messageCircleCodeJs = require("./icons/message-circle-code.js");
var _messageCircleCodeJsDefault = parcelHelpers.interopDefault(_messageCircleCodeJs);
var _mergeJs = require("./icons/merge.js");
var _mergeJsDefault = parcelHelpers.interopDefault(_mergeJs);
var _messageCircleHeartJs = require("./icons/message-circle-heart.js");
var _messageCircleHeartJsDefault = parcelHelpers.interopDefault(_messageCircleHeartJs);
var _messageCircleDashedJs = require("./icons/message-circle-dashed.js");
var _messageCircleDashedJsDefault = parcelHelpers.interopDefault(_messageCircleDashedJs);
var _messageCircleMoreJs = require("./icons/message-circle-more.js");
var _messageCircleMoreJsDefault = parcelHelpers.interopDefault(_messageCircleMoreJs);
var _messageCircleOffJs = require("./icons/message-circle-off.js");
var _messageCircleOffJsDefault = parcelHelpers.interopDefault(_messageCircleOffJs);
var _messageCirclePlusJs = require("./icons/message-circle-plus.js");
var _messageCirclePlusJsDefault = parcelHelpers.interopDefault(_messageCirclePlusJs);
var _messageCircleReplyJs = require("./icons/message-circle-reply.js");
var _messageCircleReplyJsDefault = parcelHelpers.interopDefault(_messageCircleReplyJs);
var _messageCircleWarningJs = require("./icons/message-circle-warning.js");
var _messageCircleWarningJsDefault = parcelHelpers.interopDefault(_messageCircleWarningJs);
var _messageCircleXJs = require("./icons/message-circle-x.js");
var _messageCircleXJsDefault = parcelHelpers.interopDefault(_messageCircleXJs);
var _messageCircleJs = require("./icons/message-circle.js");
var _messageCircleJsDefault = parcelHelpers.interopDefault(_messageCircleJs);
var _messageSquareCodeJs = require("./icons/message-square-code.js");
var _messageSquareCodeJsDefault = parcelHelpers.interopDefault(_messageSquareCodeJs);
var _messageSquareDashedJs = require("./icons/message-square-dashed.js");
var _messageSquareDashedJsDefault = parcelHelpers.interopDefault(_messageSquareDashedJs);
var _messageSquareDotJs = require("./icons/message-square-dot.js");
var _messageSquareDotJsDefault = parcelHelpers.interopDefault(_messageSquareDotJs);
var _messageSquareDiffJs = require("./icons/message-square-diff.js");
var _messageSquareDiffJsDefault = parcelHelpers.interopDefault(_messageSquareDiffJs);
var _messageSquareHeartJs = require("./icons/message-square-heart.js");
var _messageSquareHeartJsDefault = parcelHelpers.interopDefault(_messageSquareHeartJs);
var _messageSquareLockJs = require("./icons/message-square-lock.js");
var _messageSquareLockJsDefault = parcelHelpers.interopDefault(_messageSquareLockJs);
var _messageSquareMoreJs = require("./icons/message-square-more.js");
var _messageSquareMoreJsDefault = parcelHelpers.interopDefault(_messageSquareMoreJs);
var _messageSquareOffJs = require("./icons/message-square-off.js");
var _messageSquareOffJsDefault = parcelHelpers.interopDefault(_messageSquareOffJs);
var _messageSquarePlusJs = require("./icons/message-square-plus.js");
var _messageSquarePlusJsDefault = parcelHelpers.interopDefault(_messageSquarePlusJs);
var _messageSquareReplyJs = require("./icons/message-square-reply.js");
var _messageSquareReplyJsDefault = parcelHelpers.interopDefault(_messageSquareReplyJs);
var _messageSquareQuoteJs = require("./icons/message-square-quote.js");
var _messageSquareQuoteJsDefault = parcelHelpers.interopDefault(_messageSquareQuoteJs);
var _messageSquareTextJs = require("./icons/message-square-text.js");
var _messageSquareTextJsDefault = parcelHelpers.interopDefault(_messageSquareTextJs);
var _messageSquareShareJs = require("./icons/message-square-share.js");
var _messageSquareShareJsDefault = parcelHelpers.interopDefault(_messageSquareShareJs);
var _messageSquareWarningJs = require("./icons/message-square-warning.js");
var _messageSquareWarningJsDefault = parcelHelpers.interopDefault(_messageSquareWarningJs);
var _messageSquareXJs = require("./icons/message-square-x.js");
var _messageSquareXJsDefault = parcelHelpers.interopDefault(_messageSquareXJs);
var _messageSquareJs = require("./icons/message-square.js");
var _messageSquareJsDefault = parcelHelpers.interopDefault(_messageSquareJs);
var _messagesSquareJs = require("./icons/messages-square.js");
var _messagesSquareJsDefault = parcelHelpers.interopDefault(_messagesSquareJs);
var _micOffJs = require("./icons/mic-off.js");
var _micOffJsDefault = parcelHelpers.interopDefault(_micOffJs);
var _micJs = require("./icons/mic.js");
var _micJsDefault = parcelHelpers.interopDefault(_micJs);
var _microchipJs = require("./icons/microchip.js");
var _microchipJsDefault = parcelHelpers.interopDefault(_microchipJs);
var _microscopeJs = require("./icons/microscope.js");
var _microscopeJsDefault = parcelHelpers.interopDefault(_microscopeJs);
var _microwaveJs = require("./icons/microwave.js");
var _microwaveJsDefault = parcelHelpers.interopDefault(_microwaveJs);
var _milestoneJs = require("./icons/milestone.js");
var _milestoneJsDefault = parcelHelpers.interopDefault(_milestoneJs);
var _milkOffJs = require("./icons/milk-off.js");
var _milkOffJsDefault = parcelHelpers.interopDefault(_milkOffJs);
var _milkJs = require("./icons/milk.js");
var _milkJsDefault = parcelHelpers.interopDefault(_milkJs);
var _minimize2Js = require("./icons/minimize-2.js");
var _minimize2JsDefault = parcelHelpers.interopDefault(_minimize2Js);
var _minimizeJs = require("./icons/minimize.js");
var _minimizeJsDefault = parcelHelpers.interopDefault(_minimizeJs);
var _minusJs = require("./icons/minus.js");
var _minusJsDefault = parcelHelpers.interopDefault(_minusJs);
var _monitorCheckJs = require("./icons/monitor-check.js");
var _monitorCheckJsDefault = parcelHelpers.interopDefault(_monitorCheckJs);
var _monitorCogJs = require("./icons/monitor-cog.js");
var _monitorCogJsDefault = parcelHelpers.interopDefault(_monitorCogJs);
var _monitorDownJs = require("./icons/monitor-down.js");
var _monitorDownJsDefault = parcelHelpers.interopDefault(_monitorDownJs);
var _monitorDotJs = require("./icons/monitor-dot.js");
var _monitorDotJsDefault = parcelHelpers.interopDefault(_monitorDotJs);
var _monitorOffJs = require("./icons/monitor-off.js");
var _monitorOffJsDefault = parcelHelpers.interopDefault(_monitorOffJs);
var _monitorPlayJs = require("./icons/monitor-play.js");
var _monitorPlayJsDefault = parcelHelpers.interopDefault(_monitorPlayJs);
var _monitorPauseJs = require("./icons/monitor-pause.js");
var _monitorPauseJsDefault = parcelHelpers.interopDefault(_monitorPauseJs);
var _monitorSmartphoneJs = require("./icons/monitor-smartphone.js");
var _monitorSmartphoneJsDefault = parcelHelpers.interopDefault(_monitorSmartphoneJs);
var _monitorStopJs = require("./icons/monitor-stop.js");
var _monitorStopJsDefault = parcelHelpers.interopDefault(_monitorStopJs);
var _monitorSpeakerJs = require("./icons/monitor-speaker.js");
var _monitorSpeakerJsDefault = parcelHelpers.interopDefault(_monitorSpeakerJs);
var _monitorUpJs = require("./icons/monitor-up.js");
var _monitorUpJsDefault = parcelHelpers.interopDefault(_monitorUpJs);
var _monitorXJs = require("./icons/monitor-x.js");
var _monitorXJsDefault = parcelHelpers.interopDefault(_monitorXJs);
var _monitorJs = require("./icons/monitor.js");
var _monitorJsDefault = parcelHelpers.interopDefault(_monitorJs);
var _moonStarJs = require("./icons/moon-star.js");
var _moonStarJsDefault = parcelHelpers.interopDefault(_moonStarJs);
var _moonJs = require("./icons/moon.js");
var _moonJsDefault = parcelHelpers.interopDefault(_moonJs);
var _mountainSnowJs = require("./icons/mountain-snow.js");
var _mountainSnowJsDefault = parcelHelpers.interopDefault(_mountainSnowJs);
var _mountainJs = require("./icons/mountain.js");
var _mountainJsDefault = parcelHelpers.interopDefault(_mountainJs);
var _mouseOffJs = require("./icons/mouse-off.js");
var _mouseOffJsDefault = parcelHelpers.interopDefault(_mouseOffJs);
var _mousePointer2Js = require("./icons/mouse-pointer-2.js");
var _mousePointer2JsDefault = parcelHelpers.interopDefault(_mousePointer2Js);
var _mousePointerBanJs = require("./icons/mouse-pointer-ban.js");
var _mousePointerBanJsDefault = parcelHelpers.interopDefault(_mousePointerBanJs);
var _mousePointerClickJs = require("./icons/mouse-pointer-click.js");
var _mousePointerClickJsDefault = parcelHelpers.interopDefault(_mousePointerClickJs);
var _mousePointerJs = require("./icons/mouse-pointer.js");
var _mousePointerJsDefault = parcelHelpers.interopDefault(_mousePointerJs);
var _mouseJs = require("./icons/mouse.js");
var _mouseJsDefault = parcelHelpers.interopDefault(_mouseJs);
var _moveDiagonalJs = require("./icons/move-diagonal.js");
var _moveDiagonalJsDefault = parcelHelpers.interopDefault(_moveDiagonalJs);
var _moveDiagonal2Js = require("./icons/move-diagonal-2.js");
var _moveDiagonal2JsDefault = parcelHelpers.interopDefault(_moveDiagonal2Js);
var _moveDownLeftJs = require("./icons/move-down-left.js");
var _moveDownLeftJsDefault = parcelHelpers.interopDefault(_moveDownLeftJs);
var _moveDownRightJs = require("./icons/move-down-right.js");
var _moveDownRightJsDefault = parcelHelpers.interopDefault(_moveDownRightJs);
var _moveDownJs = require("./icons/move-down.js");
var _moveDownJsDefault = parcelHelpers.interopDefault(_moveDownJs);
var _moveHorizontalJs = require("./icons/move-horizontal.js");
var _moveHorizontalJsDefault = parcelHelpers.interopDefault(_moveHorizontalJs);
var _moveLeftJs = require("./icons/move-left.js");
var _moveLeftJsDefault = parcelHelpers.interopDefault(_moveLeftJs);
var _moveRightJs = require("./icons/move-right.js");
var _moveRightJsDefault = parcelHelpers.interopDefault(_moveRightJs);
var _moveUpLeftJs = require("./icons/move-up-left.js");
var _moveUpLeftJsDefault = parcelHelpers.interopDefault(_moveUpLeftJs);
var _moveUpRightJs = require("./icons/move-up-right.js");
var _moveUpRightJsDefault = parcelHelpers.interopDefault(_moveUpRightJs);
var _moveUpJs = require("./icons/move-up.js");
var _moveUpJsDefault = parcelHelpers.interopDefault(_moveUpJs);
var _moveVerticalJs = require("./icons/move-vertical.js");
var _moveVerticalJsDefault = parcelHelpers.interopDefault(_moveVerticalJs);
var _moveJs = require("./icons/move.js");
var _moveJsDefault = parcelHelpers.interopDefault(_moveJs);
var _music2Js = require("./icons/music-2.js");
var _music2JsDefault = parcelHelpers.interopDefault(_music2Js);
var _music3Js = require("./icons/music-3.js");
var _music3JsDefault = parcelHelpers.interopDefault(_music3Js);
var _music4Js = require("./icons/music-4.js");
var _music4JsDefault = parcelHelpers.interopDefault(_music4Js);
var _musicJs = require("./icons/music.js");
var _musicJsDefault = parcelHelpers.interopDefault(_musicJs);
var _navigation2OffJs = require("./icons/navigation-2-off.js");
var _navigation2OffJsDefault = parcelHelpers.interopDefault(_navigation2OffJs);
var _navigation2Js = require("./icons/navigation-2.js");
var _navigation2JsDefault = parcelHelpers.interopDefault(_navigation2Js);
var _navigationOffJs = require("./icons/navigation-off.js");
var _navigationOffJsDefault = parcelHelpers.interopDefault(_navigationOffJs);
var _navigationJs = require("./icons/navigation.js");
var _navigationJsDefault = parcelHelpers.interopDefault(_navigationJs);
var _networkJs = require("./icons/network.js");
var _networkJsDefault = parcelHelpers.interopDefault(_networkJs);
var _newspaperJs = require("./icons/newspaper.js");
var _newspaperJsDefault = parcelHelpers.interopDefault(_newspaperJs);
var _nfcJs = require("./icons/nfc.js");
var _nfcJsDefault = parcelHelpers.interopDefault(_nfcJs);
var _nonBinaryJs = require("./icons/non-binary.js");
var _nonBinaryJsDefault = parcelHelpers.interopDefault(_nonBinaryJs);
var _notebookPenJs = require("./icons/notebook-pen.js");
var _notebookPenJsDefault = parcelHelpers.interopDefault(_notebookPenJs);
var _notebookTextJs = require("./icons/notebook-text.js");
var _notebookTextJsDefault = parcelHelpers.interopDefault(_notebookTextJs);
var _notebookTabsJs = require("./icons/notebook-tabs.js");
var _notebookTabsJsDefault = parcelHelpers.interopDefault(_notebookTabsJs);
var _notebookJs = require("./icons/notebook.js");
var _notebookJsDefault = parcelHelpers.interopDefault(_notebookJs);
var _notepadTextJs = require("./icons/notepad-text.js");
var _notepadTextJsDefault = parcelHelpers.interopDefault(_notepadTextJs);
var _notepadTextDashedJs = require("./icons/notepad-text-dashed.js");
var _notepadTextDashedJsDefault = parcelHelpers.interopDefault(_notepadTextDashedJs);
var _nutOffJs = require("./icons/nut-off.js");
var _nutOffJsDefault = parcelHelpers.interopDefault(_nutOffJs);
var _nutJs = require("./icons/nut.js");
var _nutJsDefault = parcelHelpers.interopDefault(_nutJs);
var _octagonMinusJs = require("./icons/octagon-minus.js");
var _octagonMinusJsDefault = parcelHelpers.interopDefault(_octagonMinusJs);
var _octagonJs = require("./icons/octagon.js");
var _octagonJsDefault = parcelHelpers.interopDefault(_octagonJs);
var _omegaJs = require("./icons/omega.js");
var _omegaJsDefault = parcelHelpers.interopDefault(_omegaJs);
var _optionJs = require("./icons/option.js");
var _optionJsDefault = parcelHelpers.interopDefault(_optionJs);
var _orbitJs = require("./icons/orbit.js");
var _orbitJsDefault = parcelHelpers.interopDefault(_orbitJs);
var _origamiJs = require("./icons/origami.js");
var _origamiJsDefault = parcelHelpers.interopDefault(_origamiJs);
var _packageCheckJs = require("./icons/package-check.js");
var _packageCheckJsDefault = parcelHelpers.interopDefault(_packageCheckJs);
var _package2Js = require("./icons/package-2.js");
var _package2JsDefault = parcelHelpers.interopDefault(_package2Js);
var _packageMinusJs = require("./icons/package-minus.js");
var _packageMinusJsDefault = parcelHelpers.interopDefault(_packageMinusJs);
var _packageOpenJs = require("./icons/package-open.js");
var _packageOpenJsDefault = parcelHelpers.interopDefault(_packageOpenJs);
var _packagePlusJs = require("./icons/package-plus.js");
var _packagePlusJsDefault = parcelHelpers.interopDefault(_packagePlusJs);
var _packageSearchJs = require("./icons/package-search.js");
var _packageSearchJsDefault = parcelHelpers.interopDefault(_packageSearchJs);
var _packageXJs = require("./icons/package-x.js");
var _packageXJsDefault = parcelHelpers.interopDefault(_packageXJs);
var _packageJs = require("./icons/package.js");
var _packageJsDefault = parcelHelpers.interopDefault(_packageJs);
var _paintBucketJs = require("./icons/paint-bucket.js");
var _paintBucketJsDefault = parcelHelpers.interopDefault(_paintBucketJs);
var _paintRollerJs = require("./icons/paint-roller.js");
var _paintRollerJsDefault = parcelHelpers.interopDefault(_paintRollerJs);
var _paintbrushJs = require("./icons/paintbrush.js");
var _paintbrushJsDefault = parcelHelpers.interopDefault(_paintbrushJs);
var _paletteJs = require("./icons/palette.js");
var _paletteJsDefault = parcelHelpers.interopDefault(_paletteJs);
var _pandaJs = require("./icons/panda.js");
var _pandaJsDefault = parcelHelpers.interopDefault(_pandaJs);
var _panelBottomCloseJs = require("./icons/panel-bottom-close.js");
var _panelBottomCloseJsDefault = parcelHelpers.interopDefault(_panelBottomCloseJs);
var _panelBottomJs = require("./icons/panel-bottom.js");
var _panelBottomJsDefault = parcelHelpers.interopDefault(_panelBottomJs);
var _panelBottomOpenJs = require("./icons/panel-bottom-open.js");
var _panelBottomOpenJsDefault = parcelHelpers.interopDefault(_panelBottomOpenJs);
var _panelLeftRightDashedJs = require("./icons/panel-left-right-dashed.js");
var _panelLeftRightDashedJsDefault = parcelHelpers.interopDefault(_panelLeftRightDashedJs);
var _panelRightCloseJs = require("./icons/panel-right-close.js");
var _panelRightCloseJsDefault = parcelHelpers.interopDefault(_panelRightCloseJs);
var _panelRightOpenJs = require("./icons/panel-right-open.js");
var _panelRightOpenJsDefault = parcelHelpers.interopDefault(_panelRightOpenJs);
var _panelRightJs = require("./icons/panel-right.js");
var _panelRightJsDefault = parcelHelpers.interopDefault(_panelRightJs);
var _panelTopBottomDashedJs = require("./icons/panel-top-bottom-dashed.js");
var _panelTopBottomDashedJsDefault = parcelHelpers.interopDefault(_panelTopBottomDashedJs);
var _panelTopCloseJs = require("./icons/panel-top-close.js");
var _panelTopCloseJsDefault = parcelHelpers.interopDefault(_panelTopCloseJs);
var _panelTopOpenJs = require("./icons/panel-top-open.js");
var _panelTopOpenJsDefault = parcelHelpers.interopDefault(_panelTopOpenJs);
var _panelTopJs = require("./icons/panel-top.js");
var _panelTopJsDefault = parcelHelpers.interopDefault(_panelTopJs);
var _panelsLeftBottomJs = require("./icons/panels-left-bottom.js");
var _panelsLeftBottomJsDefault = parcelHelpers.interopDefault(_panelsLeftBottomJs);
var _panelsRightBottomJs = require("./icons/panels-right-bottom.js");
var _panelsRightBottomJsDefault = parcelHelpers.interopDefault(_panelsRightBottomJs);
var _paperclipJs = require("./icons/paperclip.js");
var _paperclipJsDefault = parcelHelpers.interopDefault(_paperclipJs);
var _parenthesesJs = require("./icons/parentheses.js");
var _parenthesesJsDefault = parcelHelpers.interopDefault(_parenthesesJs);
var _parkingMeterJs = require("./icons/parking-meter.js");
var _parkingMeterJsDefault = parcelHelpers.interopDefault(_parkingMeterJs);
var _partyPopperJs = require("./icons/party-popper.js");
var _partyPopperJsDefault = parcelHelpers.interopDefault(_partyPopperJs);
var _pauseJs = require("./icons/pause.js");
var _pauseJsDefault = parcelHelpers.interopDefault(_pauseJs);
var _pawPrintJs = require("./icons/paw-print.js");
var _pawPrintJsDefault = parcelHelpers.interopDefault(_pawPrintJs);
var _pcCaseJs = require("./icons/pc-case.js");
var _pcCaseJsDefault = parcelHelpers.interopDefault(_pcCaseJs);
var _penOffJs = require("./icons/pen-off.js");
var _penOffJsDefault = parcelHelpers.interopDefault(_penOffJs);
var _penToolJs = require("./icons/pen-tool.js");
var _penToolJsDefault = parcelHelpers.interopDefault(_penToolJs);
var _pencilLineJs = require("./icons/pencil-line.js");
var _pencilLineJsDefault = parcelHelpers.interopDefault(_pencilLineJs);
var _pencilOffJs = require("./icons/pencil-off.js");
var _pencilOffJsDefault = parcelHelpers.interopDefault(_pencilOffJs);
var _pencilRulerJs = require("./icons/pencil-ruler.js");
var _pencilRulerJsDefault = parcelHelpers.interopDefault(_pencilRulerJs);
var _pencilJs = require("./icons/pencil.js");
var _pencilJsDefault = parcelHelpers.interopDefault(_pencilJs);
var _pentagonJs = require("./icons/pentagon.js");
var _pentagonJsDefault = parcelHelpers.interopDefault(_pentagonJs);
var _percentJs = require("./icons/percent.js");
var _percentJsDefault = parcelHelpers.interopDefault(_percentJs);
var _personStandingJs = require("./icons/person-standing.js");
var _personStandingJsDefault = parcelHelpers.interopDefault(_personStandingJs);
var _philippinePesoJs = require("./icons/philippine-peso.js");
var _philippinePesoJsDefault = parcelHelpers.interopDefault(_philippinePesoJs);
var _phoneCallJs = require("./icons/phone-call.js");
var _phoneCallJsDefault = parcelHelpers.interopDefault(_phoneCallJs);
var _phoneForwardedJs = require("./icons/phone-forwarded.js");
var _phoneForwardedJsDefault = parcelHelpers.interopDefault(_phoneForwardedJs);
var _phoneIncomingJs = require("./icons/phone-incoming.js");
var _phoneIncomingJsDefault = parcelHelpers.interopDefault(_phoneIncomingJs);
var _phoneMissedJs = require("./icons/phone-missed.js");
var _phoneMissedJsDefault = parcelHelpers.interopDefault(_phoneMissedJs);
var _phoneOffJs = require("./icons/phone-off.js");
var _phoneOffJsDefault = parcelHelpers.interopDefault(_phoneOffJs);
var _phoneOutgoingJs = require("./icons/phone-outgoing.js");
var _phoneOutgoingJsDefault = parcelHelpers.interopDefault(_phoneOutgoingJs);
var _phoneJs = require("./icons/phone.js");
var _phoneJsDefault = parcelHelpers.interopDefault(_phoneJs);
var _piJs = require("./icons/pi.js");
var _piJsDefault = parcelHelpers.interopDefault(_piJs);
var _pickaxeJs = require("./icons/pickaxe.js");
var _pickaxeJsDefault = parcelHelpers.interopDefault(_pickaxeJs);
var _pianoJs = require("./icons/piano.js");
var _pianoJsDefault = parcelHelpers.interopDefault(_pianoJs);
var _pictureInPicture2Js = require("./icons/picture-in-picture-2.js");
var _pictureInPicture2JsDefault = parcelHelpers.interopDefault(_pictureInPicture2Js);
var _pictureInPictureJs = require("./icons/picture-in-picture.js");
var _pictureInPictureJsDefault = parcelHelpers.interopDefault(_pictureInPictureJs);
var _pilcrowLeftJs = require("./icons/pilcrow-left.js");
var _pilcrowLeftJsDefault = parcelHelpers.interopDefault(_pilcrowLeftJs);
var _piggyBankJs = require("./icons/piggy-bank.js");
var _piggyBankJsDefault = parcelHelpers.interopDefault(_piggyBankJs);
var _pilcrowRightJs = require("./icons/pilcrow-right.js");
var _pilcrowRightJsDefault = parcelHelpers.interopDefault(_pilcrowRightJs);
var _pilcrowJs = require("./icons/pilcrow.js");
var _pilcrowJsDefault = parcelHelpers.interopDefault(_pilcrowJs);
var _pillBottleJs = require("./icons/pill-bottle.js");
var _pillBottleJsDefault = parcelHelpers.interopDefault(_pillBottleJs);
var _pillJs = require("./icons/pill.js");
var _pillJsDefault = parcelHelpers.interopDefault(_pillJs);
var _pinOffJs = require("./icons/pin-off.js");
var _pinOffJsDefault = parcelHelpers.interopDefault(_pinOffJs);
var _pinJs = require("./icons/pin.js");
var _pinJsDefault = parcelHelpers.interopDefault(_pinJs);
var _pipetteJs = require("./icons/pipette.js");
var _pipetteJsDefault = parcelHelpers.interopDefault(_pipetteJs);
var _pizzaJs = require("./icons/pizza.js");
var _pizzaJsDefault = parcelHelpers.interopDefault(_pizzaJs);
var _planeLandingJs = require("./icons/plane-landing.js");
var _planeLandingJsDefault = parcelHelpers.interopDefault(_planeLandingJs);
var _planeTakeoffJs = require("./icons/plane-takeoff.js");
var _planeTakeoffJsDefault = parcelHelpers.interopDefault(_planeTakeoffJs);
var _planeJs = require("./icons/plane.js");
var _planeJsDefault = parcelHelpers.interopDefault(_planeJs);
var _playJs = require("./icons/play.js");
var _playJsDefault = parcelHelpers.interopDefault(_playJs);
var _plug2Js = require("./icons/plug-2.js");
var _plug2JsDefault = parcelHelpers.interopDefault(_plug2Js);
var _plugJs = require("./icons/plug.js");
var _plugJsDefault = parcelHelpers.interopDefault(_plugJs);
var _plusJs = require("./icons/plus.js");
var _plusJsDefault = parcelHelpers.interopDefault(_plusJs);
var _pocketKnifeJs = require("./icons/pocket-knife.js");
var _pocketKnifeJsDefault = parcelHelpers.interopDefault(_pocketKnifeJs);
var _pocketJs = require("./icons/pocket.js");
var _pocketJsDefault = parcelHelpers.interopDefault(_pocketJs);
var _podcastJs = require("./icons/podcast.js");
var _podcastJsDefault = parcelHelpers.interopDefault(_podcastJs);
var _pointerOffJs = require("./icons/pointer-off.js");
var _pointerOffJsDefault = parcelHelpers.interopDefault(_pointerOffJs);
var _pointerJs = require("./icons/pointer.js");
var _pointerJsDefault = parcelHelpers.interopDefault(_pointerJs);
var _popcornJs = require("./icons/popcorn.js");
var _popcornJsDefault = parcelHelpers.interopDefault(_popcornJs);
var _popsicleJs = require("./icons/popsicle.js");
var _popsicleJsDefault = parcelHelpers.interopDefault(_popsicleJs);
var _poundSterlingJs = require("./icons/pound-sterling.js");
var _poundSterlingJsDefault = parcelHelpers.interopDefault(_poundSterlingJs);
var _powerJs = require("./icons/power.js");
var _powerJsDefault = parcelHelpers.interopDefault(_powerJs);
var _powerOffJs = require("./icons/power-off.js");
var _powerOffJsDefault = parcelHelpers.interopDefault(_powerOffJs);
var _presentationJs = require("./icons/presentation.js");
var _presentationJsDefault = parcelHelpers.interopDefault(_presentationJs);
var _printerCheckJs = require("./icons/printer-check.js");
var _printerCheckJsDefault = parcelHelpers.interopDefault(_printerCheckJs);
var _printerJs = require("./icons/printer.js");
var _printerJsDefault = parcelHelpers.interopDefault(_printerJs);
var _projectorJs = require("./icons/projector.js");
var _projectorJsDefault = parcelHelpers.interopDefault(_projectorJs);
var _proportionsJs = require("./icons/proportions.js");
var _proportionsJsDefault = parcelHelpers.interopDefault(_proportionsJs);
var _puzzleJs = require("./icons/puzzle.js");
var _puzzleJsDefault = parcelHelpers.interopDefault(_puzzleJs);
var _pyramidJs = require("./icons/pyramid.js");
var _pyramidJsDefault = parcelHelpers.interopDefault(_pyramidJs);
var _qrCodeJs = require("./icons/qr-code.js");
var _qrCodeJsDefault = parcelHelpers.interopDefault(_qrCodeJs);
var _quoteJs = require("./icons/quote.js");
var _quoteJsDefault = parcelHelpers.interopDefault(_quoteJs);
var _rabbitJs = require("./icons/rabbit.js");
var _rabbitJsDefault = parcelHelpers.interopDefault(_rabbitJs);
var _radarJs = require("./icons/radar.js");
var _radarJsDefault = parcelHelpers.interopDefault(_radarJs);
var _radiationJs = require("./icons/radiation.js");
var _radiationJsDefault = parcelHelpers.interopDefault(_radiationJs);
var _radicalJs = require("./icons/radical.js");
var _radicalJsDefault = parcelHelpers.interopDefault(_radicalJs);
var _radioReceiverJs = require("./icons/radio-receiver.js");
var _radioReceiverJsDefault = parcelHelpers.interopDefault(_radioReceiverJs);
var _radioTowerJs = require("./icons/radio-tower.js");
var _radioTowerJsDefault = parcelHelpers.interopDefault(_radioTowerJs);
var _radioJs = require("./icons/radio.js");
var _radioJsDefault = parcelHelpers.interopDefault(_radioJs);
var _radiusJs = require("./icons/radius.js");
var _radiusJsDefault = parcelHelpers.interopDefault(_radiusJs);
var _railSymbolJs = require("./icons/rail-symbol.js");
var _railSymbolJsDefault = parcelHelpers.interopDefault(_railSymbolJs);
var _rainbowJs = require("./icons/rainbow.js");
var _rainbowJsDefault = parcelHelpers.interopDefault(_rainbowJs);
var _ratJs = require("./icons/rat.js");
var _ratJsDefault = parcelHelpers.interopDefault(_ratJs);
var _ratioJs = require("./icons/ratio.js");
var _ratioJsDefault = parcelHelpers.interopDefault(_ratioJs);
var _receiptCentJs = require("./icons/receipt-cent.js");
var _receiptCentJsDefault = parcelHelpers.interopDefault(_receiptCentJs);
var _receiptIndianRupeeJs = require("./icons/receipt-indian-rupee.js");
var _receiptIndianRupeeJsDefault = parcelHelpers.interopDefault(_receiptIndianRupeeJs);
var _receiptEuroJs = require("./icons/receipt-euro.js");
var _receiptEuroJsDefault = parcelHelpers.interopDefault(_receiptEuroJs);
var _receiptJapaneseYenJs = require("./icons/receipt-japanese-yen.js");
var _receiptJapaneseYenJsDefault = parcelHelpers.interopDefault(_receiptJapaneseYenJs);
var _receiptPoundSterlingJs = require("./icons/receipt-pound-sterling.js");
var _receiptPoundSterlingJsDefault = parcelHelpers.interopDefault(_receiptPoundSterlingJs);
var _receiptRussianRubleJs = require("./icons/receipt-russian-ruble.js");
var _receiptRussianRubleJsDefault = parcelHelpers.interopDefault(_receiptRussianRubleJs);
var _receiptSwissFrancJs = require("./icons/receipt-swiss-franc.js");
var _receiptSwissFrancJsDefault = parcelHelpers.interopDefault(_receiptSwissFrancJs);
var _receiptTextJs = require("./icons/receipt-text.js");
var _receiptTextJsDefault = parcelHelpers.interopDefault(_receiptTextJs);
var _receiptTurkishLiraJs = require("./icons/receipt-turkish-lira.js");
var _receiptTurkishLiraJsDefault = parcelHelpers.interopDefault(_receiptTurkishLiraJs);
var _receiptJs = require("./icons/receipt.js");
var _receiptJsDefault = parcelHelpers.interopDefault(_receiptJs);
var _rectangleCircleJs = require("./icons/rectangle-circle.js");
var _rectangleCircleJsDefault = parcelHelpers.interopDefault(_rectangleCircleJs);
var _rectangleGogglesJs = require("./icons/rectangle-goggles.js");
var _rectangleGogglesJsDefault = parcelHelpers.interopDefault(_rectangleGogglesJs);
var _rectangleHorizontalJs = require("./icons/rectangle-horizontal.js");
var _rectangleHorizontalJsDefault = parcelHelpers.interopDefault(_rectangleHorizontalJs);
var _rectangleVerticalJs = require("./icons/rectangle-vertical.js");
var _rectangleVerticalJsDefault = parcelHelpers.interopDefault(_rectangleVerticalJs);
var _recycleJs = require("./icons/recycle.js");
var _recycleJsDefault = parcelHelpers.interopDefault(_recycleJs);
var _redo2Js = require("./icons/redo-2.js");
var _redo2JsDefault = parcelHelpers.interopDefault(_redo2Js);
var _redoDotJs = require("./icons/redo-dot.js");
var _redoDotJsDefault = parcelHelpers.interopDefault(_redoDotJs);
var _refreshCcwDotJs = require("./icons/refresh-ccw-dot.js");
var _refreshCcwDotJsDefault = parcelHelpers.interopDefault(_refreshCcwDotJs);
var _redoJs = require("./icons/redo.js");
var _redoJsDefault = parcelHelpers.interopDefault(_redoJs);
var _refreshCcwJs = require("./icons/refresh-ccw.js");
var _refreshCcwJsDefault = parcelHelpers.interopDefault(_refreshCcwJs);
var _refreshCwOffJs = require("./icons/refresh-cw-off.js");
var _refreshCwOffJsDefault = parcelHelpers.interopDefault(_refreshCwOffJs);
var _refreshCwJs = require("./icons/refresh-cw.js");
var _refreshCwJsDefault = parcelHelpers.interopDefault(_refreshCwJs);
var _refrigeratorJs = require("./icons/refrigerator.js");
var _refrigeratorJsDefault = parcelHelpers.interopDefault(_refrigeratorJs);
var _regexJs = require("./icons/regex.js");
var _regexJsDefault = parcelHelpers.interopDefault(_regexJs);
var _removeFormattingJs = require("./icons/remove-formatting.js");
var _removeFormattingJsDefault = parcelHelpers.interopDefault(_removeFormattingJs);
var _repeat1Js = require("./icons/repeat-1.js");
var _repeat1JsDefault = parcelHelpers.interopDefault(_repeat1Js);
var _repeat2Js = require("./icons/repeat-2.js");
var _repeat2JsDefault = parcelHelpers.interopDefault(_repeat2Js);
var _repeatJs = require("./icons/repeat.js");
var _repeatJsDefault = parcelHelpers.interopDefault(_repeatJs);
var _replaceAllJs = require("./icons/replace-all.js");
var _replaceAllJsDefault = parcelHelpers.interopDefault(_replaceAllJs);
var _replaceJs = require("./icons/replace.js");
var _replaceJsDefault = parcelHelpers.interopDefault(_replaceJs);
var _replyAllJs = require("./icons/reply-all.js");
var _replyAllJsDefault = parcelHelpers.interopDefault(_replyAllJs);
var _replyJs = require("./icons/reply.js");
var _replyJsDefault = parcelHelpers.interopDefault(_replyJs);
var _rewindJs = require("./icons/rewind.js");
var _rewindJsDefault = parcelHelpers.interopDefault(_rewindJs);
var _ribbonJs = require("./icons/ribbon.js");
var _ribbonJsDefault = parcelHelpers.interopDefault(_ribbonJs);
var _rocketJs = require("./icons/rocket.js");
var _rocketJsDefault = parcelHelpers.interopDefault(_rocketJs);
var _rockingChairJs = require("./icons/rocking-chair.js");
var _rockingChairJsDefault = parcelHelpers.interopDefault(_rockingChairJs);
var _roseJs = require("./icons/rose.js");
var _roseJsDefault = parcelHelpers.interopDefault(_roseJs);
var _rollerCoasterJs = require("./icons/roller-coaster.js");
var _rollerCoasterJsDefault = parcelHelpers.interopDefault(_rollerCoasterJs);
var _rotateCcwKeyJs = require("./icons/rotate-ccw-key.js");
var _rotateCcwKeyJsDefault = parcelHelpers.interopDefault(_rotateCcwKeyJs);
var _rotateCcwSquareJs = require("./icons/rotate-ccw-square.js");
var _rotateCcwSquareJsDefault = parcelHelpers.interopDefault(_rotateCcwSquareJs);
var _rotateCcwJs = require("./icons/rotate-ccw.js");
var _rotateCcwJsDefault = parcelHelpers.interopDefault(_rotateCcwJs);
var _rotateCwSquareJs = require("./icons/rotate-cw-square.js");
var _rotateCwSquareJsDefault = parcelHelpers.interopDefault(_rotateCwSquareJs);
var _rotateCwJs = require("./icons/rotate-cw.js");
var _rotateCwJsDefault = parcelHelpers.interopDefault(_rotateCwJs);
var _routeOffJs = require("./icons/route-off.js");
var _routeOffJsDefault = parcelHelpers.interopDefault(_routeOffJs);
var _routeJs = require("./icons/route.js");
var _routeJsDefault = parcelHelpers.interopDefault(_routeJs);
var _routerJs = require("./icons/router.js");
var _routerJsDefault = parcelHelpers.interopDefault(_routerJs);
var _rows4Js = require("./icons/rows-4.js");
var _rows4JsDefault = parcelHelpers.interopDefault(_rows4Js);
var _rssJs = require("./icons/rss.js");
var _rssJsDefault = parcelHelpers.interopDefault(_rssJs);
var _rulerDimensionLineJs = require("./icons/ruler-dimension-line.js");
var _rulerDimensionLineJsDefault = parcelHelpers.interopDefault(_rulerDimensionLineJs);
var _rulerJs = require("./icons/ruler.js");
var _rulerJsDefault = parcelHelpers.interopDefault(_rulerJs);
var _russianRubleJs = require("./icons/russian-ruble.js");
var _russianRubleJsDefault = parcelHelpers.interopDefault(_russianRubleJs);
var _sailboatJs = require("./icons/sailboat.js");
var _sailboatJsDefault = parcelHelpers.interopDefault(_sailboatJs);
var _saladJs = require("./icons/salad.js");
var _saladJsDefault = parcelHelpers.interopDefault(_saladJs);
var _sandwichJs = require("./icons/sandwich.js");
var _sandwichJsDefault = parcelHelpers.interopDefault(_sandwichJs);
var _satelliteDishJs = require("./icons/satellite-dish.js");
var _satelliteDishJsDefault = parcelHelpers.interopDefault(_satelliteDishJs);
var _satelliteJs = require("./icons/satellite.js");
var _satelliteJsDefault = parcelHelpers.interopDefault(_satelliteJs);
var _saudiRiyalJs = require("./icons/saudi-riyal.js");
var _saudiRiyalJsDefault = parcelHelpers.interopDefault(_saudiRiyalJs);
var _saveAllJs = require("./icons/save-all.js");
var _saveAllJsDefault = parcelHelpers.interopDefault(_saveAllJs);
var _saveOffJs = require("./icons/save-off.js");
var _saveOffJsDefault = parcelHelpers.interopDefault(_saveOffJs);
var _saveJs = require("./icons/save.js");
var _saveJsDefault = parcelHelpers.interopDefault(_saveJs);
var _scaleJs = require("./icons/scale.js");
var _scaleJsDefault = parcelHelpers.interopDefault(_scaleJs);
var _scalingJs = require("./icons/scaling.js");
var _scalingJsDefault = parcelHelpers.interopDefault(_scalingJs);
var _scanBarcodeJs = require("./icons/scan-barcode.js");
var _scanBarcodeJsDefault = parcelHelpers.interopDefault(_scanBarcodeJs);
var _scanEyeJs = require("./icons/scan-eye.js");
var _scanEyeJsDefault = parcelHelpers.interopDefault(_scanEyeJs);
var _scanFaceJs = require("./icons/scan-face.js");
var _scanFaceJsDefault = parcelHelpers.interopDefault(_scanFaceJs);
var _scanHeartJs = require("./icons/scan-heart.js");
var _scanHeartJsDefault = parcelHelpers.interopDefault(_scanHeartJs);
var _scanLineJs = require("./icons/scan-line.js");
var _scanLineJsDefault = parcelHelpers.interopDefault(_scanLineJs);
var _scanQrCodeJs = require("./icons/scan-qr-code.js");
var _scanQrCodeJsDefault = parcelHelpers.interopDefault(_scanQrCodeJs);
var _scanSearchJs = require("./icons/scan-search.js");
var _scanSearchJsDefault = parcelHelpers.interopDefault(_scanSearchJs);
var _scanTextJs = require("./icons/scan-text.js");
var _scanTextJsDefault = parcelHelpers.interopDefault(_scanTextJs);
var _scanJs = require("./icons/scan.js");
var _scanJsDefault = parcelHelpers.interopDefault(_scanJs);
var _schoolJs = require("./icons/school.js");
var _schoolJsDefault = parcelHelpers.interopDefault(_schoolJs);
var _scissorsLineDashedJs = require("./icons/scissors-line-dashed.js");
var _scissorsLineDashedJsDefault = parcelHelpers.interopDefault(_scissorsLineDashedJs);
var _scissorsJs = require("./icons/scissors.js");
var _scissorsJsDefault = parcelHelpers.interopDefault(_scissorsJs);
var _screenShareJs = require("./icons/screen-share.js");
var _screenShareJsDefault = parcelHelpers.interopDefault(_screenShareJs);
var _screenShareOffJs = require("./icons/screen-share-off.js");
var _screenShareOffJsDefault = parcelHelpers.interopDefault(_screenShareOffJs);
var _scrollTextJs = require("./icons/scroll-text.js");
var _scrollTextJsDefault = parcelHelpers.interopDefault(_scrollTextJs);
var _scrollJs = require("./icons/scroll.js");
var _scrollJsDefault = parcelHelpers.interopDefault(_scrollJs);
var _searchCheckJs = require("./icons/search-check.js");
var _searchCheckJsDefault = parcelHelpers.interopDefault(_searchCheckJs);
var _searchXJs = require("./icons/search-x.js");
var _searchXJsDefault = parcelHelpers.interopDefault(_searchXJs);
var _searchCodeJs = require("./icons/search-code.js");
var _searchCodeJsDefault = parcelHelpers.interopDefault(_searchCodeJs);
var _searchSlashJs = require("./icons/search-slash.js");
var _searchSlashJsDefault = parcelHelpers.interopDefault(_searchSlashJs);
var _searchJs = require("./icons/search.js");
var _searchJsDefault = parcelHelpers.interopDefault(_searchJs);
var _sectionJs = require("./icons/section.js");
var _sectionJsDefault = parcelHelpers.interopDefault(_sectionJs);
var _sendJs = require("./icons/send.js");
var _sendJsDefault = parcelHelpers.interopDefault(_sendJs);
var _sendToBackJs = require("./icons/send-to-back.js");
var _sendToBackJsDefault = parcelHelpers.interopDefault(_sendToBackJs);
var _separatorHorizontalJs = require("./icons/separator-horizontal.js");
var _separatorHorizontalJsDefault = parcelHelpers.interopDefault(_separatorHorizontalJs);
var _separatorVerticalJs = require("./icons/separator-vertical.js");
var _separatorVerticalJsDefault = parcelHelpers.interopDefault(_separatorVerticalJs);
var _serverCogJs = require("./icons/server-cog.js");
var _serverCogJsDefault = parcelHelpers.interopDefault(_serverCogJs);
var _serverCrashJs = require("./icons/server-crash.js");
var _serverCrashJsDefault = parcelHelpers.interopDefault(_serverCrashJs);
var _serverOffJs = require("./icons/server-off.js");
var _serverOffJsDefault = parcelHelpers.interopDefault(_serverOffJs);
var _serverJs = require("./icons/server.js");
var _serverJsDefault = parcelHelpers.interopDefault(_serverJs);
var _settingsJs = require("./icons/settings.js");
var _settingsJsDefault = parcelHelpers.interopDefault(_settingsJs);
var _settings2Js = require("./icons/settings-2.js");
var _settings2JsDefault = parcelHelpers.interopDefault(_settings2Js);
var _shapesJs = require("./icons/shapes.js");
var _shapesJsDefault = parcelHelpers.interopDefault(_shapesJs);
var _share2Js = require("./icons/share-2.js");
var _share2JsDefault = parcelHelpers.interopDefault(_share2Js);
var _shareJs = require("./icons/share.js");
var _shareJsDefault = parcelHelpers.interopDefault(_shareJs);
var _sheetJs = require("./icons/sheet.js");
var _sheetJsDefault = parcelHelpers.interopDefault(_sheetJs);
var _shellJs = require("./icons/shell.js");
var _shellJsDefault = parcelHelpers.interopDefault(_shellJs);
var _shieldAlertJs = require("./icons/shield-alert.js");
var _shieldAlertJsDefault = parcelHelpers.interopDefault(_shieldAlertJs);
var _shieldBanJs = require("./icons/shield-ban.js");
var _shieldBanJsDefault = parcelHelpers.interopDefault(_shieldBanJs);
var _shieldCheckJs = require("./icons/shield-check.js");
var _shieldCheckJsDefault = parcelHelpers.interopDefault(_shieldCheckJs);
var _shieldEllipsisJs = require("./icons/shield-ellipsis.js");
var _shieldEllipsisJsDefault = parcelHelpers.interopDefault(_shieldEllipsisJs);
var _shieldHalfJs = require("./icons/shield-half.js");
var _shieldHalfJsDefault = parcelHelpers.interopDefault(_shieldHalfJs);
var _shieldMinusJs = require("./icons/shield-minus.js");
var _shieldMinusJsDefault = parcelHelpers.interopDefault(_shieldMinusJs);
var _shieldOffJs = require("./icons/shield-off.js");
var _shieldOffJsDefault = parcelHelpers.interopDefault(_shieldOffJs);
var _shieldPlusJs = require("./icons/shield-plus.js");
var _shieldPlusJsDefault = parcelHelpers.interopDefault(_shieldPlusJs);
var _shieldUserJs = require("./icons/shield-user.js");
var _shieldUserJsDefault = parcelHelpers.interopDefault(_shieldUserJs);
var _shieldJs = require("./icons/shield.js");
var _shieldJsDefault = parcelHelpers.interopDefault(_shieldJs);
var _shipWheelJs = require("./icons/ship-wheel.js");
var _shipWheelJsDefault = parcelHelpers.interopDefault(_shipWheelJs);
var _shipJs = require("./icons/ship.js");
var _shipJsDefault = parcelHelpers.interopDefault(_shipJs);
var _shirtJs = require("./icons/shirt.js");
var _shirtJsDefault = parcelHelpers.interopDefault(_shirtJs);
var _shoppingBagJs = require("./icons/shopping-bag.js");
var _shoppingBagJsDefault = parcelHelpers.interopDefault(_shoppingBagJs);
var _shoppingBasketJs = require("./icons/shopping-basket.js");
var _shoppingBasketJsDefault = parcelHelpers.interopDefault(_shoppingBasketJs);
var _shoppingCartJs = require("./icons/shopping-cart.js");
var _shoppingCartJsDefault = parcelHelpers.interopDefault(_shoppingCartJs);
var _shovelJs = require("./icons/shovel.js");
var _shovelJsDefault = parcelHelpers.interopDefault(_shovelJs);
var _showerHeadJs = require("./icons/shower-head.js");
var _showerHeadJsDefault = parcelHelpers.interopDefault(_showerHeadJs);
var _shredderJs = require("./icons/shredder.js");
var _shredderJsDefault = parcelHelpers.interopDefault(_shredderJs);
var _shrimpJs = require("./icons/shrimp.js");
var _shrimpJsDefault = parcelHelpers.interopDefault(_shrimpJs);
var _shrinkJs = require("./icons/shrink.js");
var _shrinkJsDefault = parcelHelpers.interopDefault(_shrinkJs);
var _shrubJs = require("./icons/shrub.js");
var _shrubJsDefault = parcelHelpers.interopDefault(_shrubJs);
var _shuffleJs = require("./icons/shuffle.js");
var _shuffleJsDefault = parcelHelpers.interopDefault(_shuffleJs);
var _sigmaJs = require("./icons/sigma.js");
var _sigmaJsDefault = parcelHelpers.interopDefault(_sigmaJs);
var _signalHighJs = require("./icons/signal-high.js");
var _signalHighJsDefault = parcelHelpers.interopDefault(_signalHighJs);
var _signalLowJs = require("./icons/signal-low.js");
var _signalLowJsDefault = parcelHelpers.interopDefault(_signalLowJs);
var _signalMediumJs = require("./icons/signal-medium.js");
var _signalMediumJsDefault = parcelHelpers.interopDefault(_signalMediumJs);
var _signalZeroJs = require("./icons/signal-zero.js");
var _signalZeroJsDefault = parcelHelpers.interopDefault(_signalZeroJs);
var _signalJs = require("./icons/signal.js");
var _signalJsDefault = parcelHelpers.interopDefault(_signalJs);
var _signatureJs = require("./icons/signature.js");
var _signatureJsDefault = parcelHelpers.interopDefault(_signatureJs);
var _signpostBigJs = require("./icons/signpost-big.js");
var _signpostBigJsDefault = parcelHelpers.interopDefault(_signpostBigJs);
var _signpostJs = require("./icons/signpost.js");
var _signpostJsDefault = parcelHelpers.interopDefault(_signpostJs);
var _sirenJs = require("./icons/siren.js");
var _sirenJsDefault = parcelHelpers.interopDefault(_sirenJs);
var _skipBackJs = require("./icons/skip-back.js");
var _skipBackJsDefault = parcelHelpers.interopDefault(_skipBackJs);
var _skipForwardJs = require("./icons/skip-forward.js");
var _skipForwardJsDefault = parcelHelpers.interopDefault(_skipForwardJs);
var _skullJs = require("./icons/skull.js");
var _skullJsDefault = parcelHelpers.interopDefault(_skullJs);
var _slackJs = require("./icons/slack.js");
var _slackJsDefault = parcelHelpers.interopDefault(_slackJs);
var _slashJs = require("./icons/slash.js");
var _slashJsDefault = parcelHelpers.interopDefault(_slashJs);
var _sliceJs = require("./icons/slice.js");
var _sliceJsDefault = parcelHelpers.interopDefault(_sliceJs);
var _slidersHorizontalJs = require("./icons/sliders-horizontal.js");
var _slidersHorizontalJsDefault = parcelHelpers.interopDefault(_slidersHorizontalJs);
var _smartphoneChargingJs = require("./icons/smartphone-charging.js");
var _smartphoneChargingJsDefault = parcelHelpers.interopDefault(_smartphoneChargingJs);
var _smartphoneNfcJs = require("./icons/smartphone-nfc.js");
var _smartphoneNfcJsDefault = parcelHelpers.interopDefault(_smartphoneNfcJs);
var _smartphoneJs = require("./icons/smartphone.js");
var _smartphoneJsDefault = parcelHelpers.interopDefault(_smartphoneJs);
var _smilePlusJs = require("./icons/smile-plus.js");
var _smilePlusJsDefault = parcelHelpers.interopDefault(_smilePlusJs);
var _smileJs = require("./icons/smile.js");
var _smileJsDefault = parcelHelpers.interopDefault(_smileJs);
var _snailJs = require("./icons/snail.js");
var _snailJsDefault = parcelHelpers.interopDefault(_snailJs);
var _snowflakeJs = require("./icons/snowflake.js");
var _snowflakeJsDefault = parcelHelpers.interopDefault(_snowflakeJs);
var _soapDispenserDropletJs = require("./icons/soap-dispenser-droplet.js");
var _soapDispenserDropletJsDefault = parcelHelpers.interopDefault(_soapDispenserDropletJs);
var _sofaJs = require("./icons/sofa.js");
var _sofaJsDefault = parcelHelpers.interopDefault(_sofaJs);
var _soupJs = require("./icons/soup.js");
var _soupJsDefault = parcelHelpers.interopDefault(_soupJs);
var _spadeJs = require("./icons/spade.js");
var _spadeJsDefault = parcelHelpers.interopDefault(_spadeJs);
var _spaceJs = require("./icons/space.js");
var _spaceJsDefault = parcelHelpers.interopDefault(_spaceJs);
var _sparkleJs = require("./icons/sparkle.js");
var _sparkleJsDefault = parcelHelpers.interopDefault(_sparkleJs);
var _speakerJs = require("./icons/speaker.js");
var _speakerJsDefault = parcelHelpers.interopDefault(_speakerJs);
var _speechJs = require("./icons/speech.js");
var _speechJsDefault = parcelHelpers.interopDefault(_speechJs);
var _spellCheck2Js = require("./icons/spell-check-2.js");
var _spellCheck2JsDefault = parcelHelpers.interopDefault(_spellCheck2Js);
var _spellCheckJs = require("./icons/spell-check.js");
var _spellCheckJsDefault = parcelHelpers.interopDefault(_spellCheckJs);
var _splineJs = require("./icons/spline.js");
var _splineJsDefault = parcelHelpers.interopDefault(_splineJs);
var _splinePointerJs = require("./icons/spline-pointer.js");
var _splinePointerJsDefault = parcelHelpers.interopDefault(_splinePointerJs);
var _splitJs = require("./icons/split.js");
var _splitJsDefault = parcelHelpers.interopDefault(_splitJs);
var _spotlightJs = require("./icons/spotlight.js");
var _spotlightJsDefault = parcelHelpers.interopDefault(_spotlightJs);
var _spoolJs = require("./icons/spool.js");
var _spoolJsDefault = parcelHelpers.interopDefault(_spoolJs);
var _sprayCanJs = require("./icons/spray-can.js");
var _sprayCanJsDefault = parcelHelpers.interopDefault(_sprayCanJs);
var _sproutJs = require("./icons/sprout.js");
var _sproutJsDefault = parcelHelpers.interopDefault(_sproutJs);
var _squareDashedBottomCodeJs = require("./icons/square-dashed-bottom-code.js");
var _squareDashedBottomCodeJsDefault = parcelHelpers.interopDefault(_squareDashedBottomCodeJs);
var _squareDashedBottomJs = require("./icons/square-dashed-bottom.js");
var _squareDashedBottomJsDefault = parcelHelpers.interopDefault(_squareDashedBottomJs);
var _squareDashedTopSolidJs = require("./icons/square-dashed-top-solid.js");
var _squareDashedTopSolidJsDefault = parcelHelpers.interopDefault(_squareDashedTopSolidJs);
var _squarePauseJs = require("./icons/square-pause.js");
var _squarePauseJsDefault = parcelHelpers.interopDefault(_squarePauseJs);
var _squareRadicalJs = require("./icons/square-radical.js");
var _squareRadicalJsDefault = parcelHelpers.interopDefault(_squareRadicalJs);
var _squareRoundCornerJs = require("./icons/square-round-corner.js");
var _squareRoundCornerJsDefault = parcelHelpers.interopDefault(_squareRoundCornerJs);
var _squareSquareJs = require("./icons/square-square.js");
var _squareSquareJsDefault = parcelHelpers.interopDefault(_squareSquareJs);
var _squareStackJs = require("./icons/square-stack.js");
var _squareStackJsDefault = parcelHelpers.interopDefault(_squareStackJs);
var _squareStarJs = require("./icons/square-star.js");
var _squareStarJsDefault = parcelHelpers.interopDefault(_squareStarJs);
var _squareStopJs = require("./icons/square-stop.js");
var _squareStopJsDefault = parcelHelpers.interopDefault(_squareStopJs);
var _squareJs = require("./icons/square.js");
var _squareJsDefault = parcelHelpers.interopDefault(_squareJs);
var _squaresExcludeJs = require("./icons/squares-exclude.js");
var _squaresExcludeJsDefault = parcelHelpers.interopDefault(_squaresExcludeJs);
var _squaresIntersectJs = require("./icons/squares-intersect.js");
var _squaresIntersectJsDefault = parcelHelpers.interopDefault(_squaresIntersectJs);
var _squaresSubtractJs = require("./icons/squares-subtract.js");
var _squaresSubtractJsDefault = parcelHelpers.interopDefault(_squaresSubtractJs);
var _squaresUniteJs = require("./icons/squares-unite.js");
var _squaresUniteJsDefault = parcelHelpers.interopDefault(_squaresUniteJs);
var _squircleDashedJs = require("./icons/squircle-dashed.js");
var _squircleDashedJsDefault = parcelHelpers.interopDefault(_squircleDashedJs);
var _squircleJs = require("./icons/squircle.js");
var _squircleJsDefault = parcelHelpers.interopDefault(_squircleJs);
var _squirrelJs = require("./icons/squirrel.js");
var _squirrelJsDefault = parcelHelpers.interopDefault(_squirrelJs);
var _stampJs = require("./icons/stamp.js");
var _stampJsDefault = parcelHelpers.interopDefault(_stampJs);
var _starHalfJs = require("./icons/star-half.js");
var _starHalfJsDefault = parcelHelpers.interopDefault(_starHalfJs);
var _starJs = require("./icons/star.js");
var _starJsDefault = parcelHelpers.interopDefault(_starJs);
var _starOffJs = require("./icons/star-off.js");
var _starOffJsDefault = parcelHelpers.interopDefault(_starOffJs);
var _stepBackJs = require("./icons/step-back.js");
var _stepBackJsDefault = parcelHelpers.interopDefault(_stepBackJs);
var _stepForwardJs = require("./icons/step-forward.js");
var _stepForwardJsDefault = parcelHelpers.interopDefault(_stepForwardJs);
var _stethoscopeJs = require("./icons/stethoscope.js");
var _stethoscopeJsDefault = parcelHelpers.interopDefault(_stethoscopeJs);
var _stickerJs = require("./icons/sticker.js");
var _stickerJsDefault = parcelHelpers.interopDefault(_stickerJs);
var _stickyNoteJs = require("./icons/sticky-note.js");
var _stickyNoteJsDefault = parcelHelpers.interopDefault(_stickyNoteJs);
var _storeJs = require("./icons/store.js");
var _storeJsDefault = parcelHelpers.interopDefault(_storeJs);
var _stretchHorizontalJs = require("./icons/stretch-horizontal.js");
var _stretchHorizontalJsDefault = parcelHelpers.interopDefault(_stretchHorizontalJs);
var _stretchVerticalJs = require("./icons/stretch-vertical.js");
var _stretchVerticalJsDefault = parcelHelpers.interopDefault(_stretchVerticalJs);
var _strikethroughJs = require("./icons/strikethrough.js");
var _strikethroughJsDefault = parcelHelpers.interopDefault(_strikethroughJs);
var _subscriptJs = require("./icons/subscript.js");
var _subscriptJsDefault = parcelHelpers.interopDefault(_subscriptJs);
var _sunDimJs = require("./icons/sun-dim.js");
var _sunDimJsDefault = parcelHelpers.interopDefault(_sunDimJs);
var _sunMediumJs = require("./icons/sun-medium.js");
var _sunMediumJsDefault = parcelHelpers.interopDefault(_sunMediumJs);
var _sunMoonJs = require("./icons/sun-moon.js");
var _sunMoonJsDefault = parcelHelpers.interopDefault(_sunMoonJs);
var _sunSnowJs = require("./icons/sun-snow.js");
var _sunSnowJsDefault = parcelHelpers.interopDefault(_sunSnowJs);
var _sunJs = require("./icons/sun.js");
var _sunJsDefault = parcelHelpers.interopDefault(_sunJs);
var _sunriseJs = require("./icons/sunrise.js");
var _sunriseJsDefault = parcelHelpers.interopDefault(_sunriseJs);
var _sunsetJs = require("./icons/sunset.js");
var _sunsetJsDefault = parcelHelpers.interopDefault(_sunsetJs);
var _superscriptJs = require("./icons/superscript.js");
var _superscriptJsDefault = parcelHelpers.interopDefault(_superscriptJs);
var _swatchBookJs = require("./icons/swatch-book.js");
var _swatchBookJsDefault = parcelHelpers.interopDefault(_swatchBookJs);
var _swissFrancJs = require("./icons/swiss-franc.js");
var _swissFrancJsDefault = parcelHelpers.interopDefault(_swissFrancJs);
var _switchCameraJs = require("./icons/switch-camera.js");
var _switchCameraJsDefault = parcelHelpers.interopDefault(_switchCameraJs);
var _swordJs = require("./icons/sword.js");
var _swordJsDefault = parcelHelpers.interopDefault(_swordJs);
var _swordsJs = require("./icons/swords.js");
var _swordsJsDefault = parcelHelpers.interopDefault(_swordsJs);
var _syringeJs = require("./icons/syringe.js");
var _syringeJsDefault = parcelHelpers.interopDefault(_syringeJs);
var _table2Js = require("./icons/table-2.js");
var _table2JsDefault = parcelHelpers.interopDefault(_table2Js);
var _tableCellsMergeJs = require("./icons/table-cells-merge.js");
var _tableCellsMergeJsDefault = parcelHelpers.interopDefault(_tableCellsMergeJs);
var _tableCellsSplitJs = require("./icons/table-cells-split.js");
var _tableCellsSplitJsDefault = parcelHelpers.interopDefault(_tableCellsSplitJs);
var _tableColumnsSplitJs = require("./icons/table-columns-split.js");
var _tableColumnsSplitJsDefault = parcelHelpers.interopDefault(_tableColumnsSplitJs);
var _tablePropertiesJs = require("./icons/table-properties.js");
var _tablePropertiesJsDefault = parcelHelpers.interopDefault(_tablePropertiesJs);
var _tableOfContentsJs = require("./icons/table-of-contents.js");
var _tableOfContentsJsDefault = parcelHelpers.interopDefault(_tableOfContentsJs);
var _tableRowsSplitJs = require("./icons/table-rows-split.js");
var _tableRowsSplitJsDefault = parcelHelpers.interopDefault(_tableRowsSplitJs);
var _tableJs = require("./icons/table.js");
var _tableJsDefault = parcelHelpers.interopDefault(_tableJs);
var _tabletSmartphoneJs = require("./icons/tablet-smartphone.js");
var _tabletSmartphoneJsDefault = parcelHelpers.interopDefault(_tabletSmartphoneJs);
var _tabletJs = require("./icons/tablet.js");
var _tabletJsDefault = parcelHelpers.interopDefault(_tabletJs);
var _tabletsJs = require("./icons/tablets.js");
var _tabletsJsDefault = parcelHelpers.interopDefault(_tabletsJs);
var _tagsJs = require("./icons/tags.js");
var _tagsJsDefault = parcelHelpers.interopDefault(_tagsJs);
var _tagJs = require("./icons/tag.js");
var _tagJsDefault = parcelHelpers.interopDefault(_tagJs);
var _tally1Js = require("./icons/tally-1.js");
var _tally1JsDefault = parcelHelpers.interopDefault(_tally1Js);
var _tally2Js = require("./icons/tally-2.js");
var _tally2JsDefault = parcelHelpers.interopDefault(_tally2Js);
var _tally3Js = require("./icons/tally-3.js");
var _tally3JsDefault = parcelHelpers.interopDefault(_tally3Js);
var _tally4Js = require("./icons/tally-4.js");
var _tally4JsDefault = parcelHelpers.interopDefault(_tally4Js);
var _tangentJs = require("./icons/tangent.js");
var _tangentJsDefault = parcelHelpers.interopDefault(_tangentJs);
var _tally5Js = require("./icons/tally-5.js");
var _tally5JsDefault = parcelHelpers.interopDefault(_tally5Js);
var _targetJs = require("./icons/target.js");
var _targetJsDefault = parcelHelpers.interopDefault(_targetJs);
var _telescopeJs = require("./icons/telescope.js");
var _telescopeJsDefault = parcelHelpers.interopDefault(_telescopeJs);
var _tentTreeJs = require("./icons/tent-tree.js");
var _tentTreeJsDefault = parcelHelpers.interopDefault(_tentTreeJs);
var _tentJs = require("./icons/tent.js");
var _tentJsDefault = parcelHelpers.interopDefault(_tentJs);
var _terminalJs = require("./icons/terminal.js");
var _terminalJsDefault = parcelHelpers.interopDefault(_terminalJs);
var _testTubeJs = require("./icons/test-tube.js");
var _testTubeJsDefault = parcelHelpers.interopDefault(_testTubeJs);
var _testTubesJs = require("./icons/test-tubes.js");
var _testTubesJsDefault = parcelHelpers.interopDefault(_testTubesJs);
var _textCursorInputJs = require("./icons/text-cursor-input.js");
var _textCursorInputJsDefault = parcelHelpers.interopDefault(_textCursorInputJs);
var _textCursorJs = require("./icons/text-cursor.js");
var _textCursorJsDefault = parcelHelpers.interopDefault(_textCursorJs);
var _textQuoteJs = require("./icons/text-quote.js");
var _textQuoteJsDefault = parcelHelpers.interopDefault(_textQuoteJs);
var _textSearchJs = require("./icons/text-search.js");
var _textSearchJsDefault = parcelHelpers.interopDefault(_textSearchJs);
var _theaterJs = require("./icons/theater.js");
var _theaterJsDefault = parcelHelpers.interopDefault(_theaterJs);
var _thermometerSnowflakeJs = require("./icons/thermometer-snowflake.js");
var _thermometerSnowflakeJsDefault = parcelHelpers.interopDefault(_thermometerSnowflakeJs);
var _thermometerSunJs = require("./icons/thermometer-sun.js");
var _thermometerSunJsDefault = parcelHelpers.interopDefault(_thermometerSunJs);
var _thermometerJs = require("./icons/thermometer.js");
var _thermometerJsDefault = parcelHelpers.interopDefault(_thermometerJs);
var _thumbsDownJs = require("./icons/thumbs-down.js");
var _thumbsDownJsDefault = parcelHelpers.interopDefault(_thumbsDownJs);
var _thumbsUpJs = require("./icons/thumbs-up.js");
var _thumbsUpJsDefault = parcelHelpers.interopDefault(_thumbsUpJs);
var _ticketCheckJs = require("./icons/ticket-check.js");
var _ticketCheckJsDefault = parcelHelpers.interopDefault(_ticketCheckJs);
var _ticketMinusJs = require("./icons/ticket-minus.js");
var _ticketMinusJsDefault = parcelHelpers.interopDefault(_ticketMinusJs);
var _ticketPercentJs = require("./icons/ticket-percent.js");
var _ticketPercentJsDefault = parcelHelpers.interopDefault(_ticketPercentJs);
var _ticketSlashJs = require("./icons/ticket-slash.js");
var _ticketSlashJsDefault = parcelHelpers.interopDefault(_ticketSlashJs);
var _ticketPlusJs = require("./icons/ticket-plus.js");
var _ticketPlusJsDefault = parcelHelpers.interopDefault(_ticketPlusJs);
var _ticketXJs = require("./icons/ticket-x.js");
var _ticketXJsDefault = parcelHelpers.interopDefault(_ticketXJs);
var _ticketJs = require("./icons/ticket.js");
var _ticketJsDefault = parcelHelpers.interopDefault(_ticketJs);
var _ticketsPlaneJs = require("./icons/tickets-plane.js");
var _ticketsPlaneJsDefault = parcelHelpers.interopDefault(_ticketsPlaneJs);
var _ticketsJs = require("./icons/tickets.js");
var _ticketsJsDefault = parcelHelpers.interopDefault(_ticketsJs);
var _timerOffJs = require("./icons/timer-off.js");
var _timerOffJsDefault = parcelHelpers.interopDefault(_timerOffJs);
var _timerResetJs = require("./icons/timer-reset.js");
var _timerResetJsDefault = parcelHelpers.interopDefault(_timerResetJs);
var _timerJs = require("./icons/timer.js");
var _timerJsDefault = parcelHelpers.interopDefault(_timerJs);
var _toggleLeftJs = require("./icons/toggle-left.js");
var _toggleLeftJsDefault = parcelHelpers.interopDefault(_toggleLeftJs);
var _toggleRightJs = require("./icons/toggle-right.js");
var _toggleRightJsDefault = parcelHelpers.interopDefault(_toggleRightJs);
var _toiletJs = require("./icons/toilet.js");
var _toiletJsDefault = parcelHelpers.interopDefault(_toiletJs);
var _tornadoJs = require("./icons/tornado.js");
var _tornadoJsDefault = parcelHelpers.interopDefault(_tornadoJs);
var _toolCaseJs = require("./icons/tool-case.js");
var _toolCaseJsDefault = parcelHelpers.interopDefault(_toolCaseJs);
var _torusJs = require("./icons/torus.js");
var _torusJsDefault = parcelHelpers.interopDefault(_torusJs);
var _touchpadOffJs = require("./icons/touchpad-off.js");
var _touchpadOffJsDefault = parcelHelpers.interopDefault(_touchpadOffJs);
var _touchpadJs = require("./icons/touchpad.js");
var _touchpadJsDefault = parcelHelpers.interopDefault(_touchpadJs);
var _towerControlJs = require("./icons/tower-control.js");
var _towerControlJsDefault = parcelHelpers.interopDefault(_towerControlJs);
var _toyBrickJs = require("./icons/toy-brick.js");
var _toyBrickJsDefault = parcelHelpers.interopDefault(_toyBrickJs);
var _tractorJs = require("./icons/tractor.js");
var _tractorJsDefault = parcelHelpers.interopDefault(_tractorJs);
var _trafficConeJs = require("./icons/traffic-cone.js");
var _trafficConeJsDefault = parcelHelpers.interopDefault(_trafficConeJs);
var _trainFrontTunnelJs = require("./icons/train-front-tunnel.js");
var _trainFrontTunnelJsDefault = parcelHelpers.interopDefault(_trainFrontTunnelJs);
var _trainFrontJs = require("./icons/train-front.js");
var _trainFrontJsDefault = parcelHelpers.interopDefault(_trainFrontJs);
var _trainTrackJs = require("./icons/train-track.js");
var _trainTrackJsDefault = parcelHelpers.interopDefault(_trainTrackJs);
var _transgenderJs = require("./icons/transgender.js");
var _transgenderJsDefault = parcelHelpers.interopDefault(_transgenderJs);
var _trash2Js = require("./icons/trash-2.js");
var _trash2JsDefault = parcelHelpers.interopDefault(_trash2Js);
var _trashJs = require("./icons/trash.js");
var _trashJsDefault = parcelHelpers.interopDefault(_trashJs);
var _treeDeciduousJs = require("./icons/tree-deciduous.js");
var _treeDeciduousJsDefault = parcelHelpers.interopDefault(_treeDeciduousJs);
var _treePineJs = require("./icons/tree-pine.js");
var _treePineJsDefault = parcelHelpers.interopDefault(_treePineJs);
var _treesJs = require("./icons/trees.js");
var _treesJsDefault = parcelHelpers.interopDefault(_treesJs);
var _trelloJs = require("./icons/trello.js");
var _trelloJsDefault = parcelHelpers.interopDefault(_trelloJs);
var _trendingDownJs = require("./icons/trending-down.js");
var _trendingDownJsDefault = parcelHelpers.interopDefault(_trendingDownJs);
var _trendingUpDownJs = require("./icons/trending-up-down.js");
var _trendingUpDownJsDefault = parcelHelpers.interopDefault(_trendingUpDownJs);
var _trendingUpJs = require("./icons/trending-up.js");
var _trendingUpJsDefault = parcelHelpers.interopDefault(_trendingUpJs);
var _triangleDashedJs = require("./icons/triangle-dashed.js");
var _triangleDashedJsDefault = parcelHelpers.interopDefault(_triangleDashedJs);
var _triangleRightJs = require("./icons/triangle-right.js");
var _triangleRightJsDefault = parcelHelpers.interopDefault(_triangleRightJs);
var _triangleJs = require("./icons/triangle.js");
var _triangleJsDefault = parcelHelpers.interopDefault(_triangleJs);
var _trophyJs = require("./icons/trophy.js");
var _trophyJsDefault = parcelHelpers.interopDefault(_trophyJs);
var _truckElectricJs = require("./icons/truck-electric.js");
var _truckElectricJsDefault = parcelHelpers.interopDefault(_truckElectricJs);
var _truckJs = require("./icons/truck.js");
var _truckJsDefault = parcelHelpers.interopDefault(_truckJs);
var _turntableJs = require("./icons/turntable.js");
var _turntableJsDefault = parcelHelpers.interopDefault(_turntableJs);
var _turkishLiraJs = require("./icons/turkish-lira.js");
var _turkishLiraJsDefault = parcelHelpers.interopDefault(_turkishLiraJs);
var _turtleJs = require("./icons/turtle.js");
var _turtleJsDefault = parcelHelpers.interopDefault(_turtleJs);
var _tvMinimalPlayJs = require("./icons/tv-minimal-play.js");
var _tvMinimalPlayJsDefault = parcelHelpers.interopDefault(_tvMinimalPlayJs);
var _twitchJs = require("./icons/twitch.js");
var _twitchJsDefault = parcelHelpers.interopDefault(_twitchJs);
var _tvJs = require("./icons/tv.js");
var _tvJsDefault = parcelHelpers.interopDefault(_tvJs);
var _twitterJs = require("./icons/twitter.js");
var _twitterJsDefault = parcelHelpers.interopDefault(_twitterJs);
var _typeOutlineJs = require("./icons/type-outline.js");
var _typeOutlineJsDefault = parcelHelpers.interopDefault(_typeOutlineJs);
var _typeJs = require("./icons/type.js");
var _typeJsDefault = parcelHelpers.interopDefault(_typeJs);
var _umbrellaOffJs = require("./icons/umbrella-off.js");
var _umbrellaOffJsDefault = parcelHelpers.interopDefault(_umbrellaOffJs);
var _umbrellaJs = require("./icons/umbrella.js");
var _umbrellaJsDefault = parcelHelpers.interopDefault(_umbrellaJs);
var _underlineJs = require("./icons/underline.js");
var _underlineJsDefault = parcelHelpers.interopDefault(_underlineJs);
var _undo2Js = require("./icons/undo-2.js");
var _undo2JsDefault = parcelHelpers.interopDefault(_undo2Js);
var _undoDotJs = require("./icons/undo-dot.js");
var _undoDotJsDefault = parcelHelpers.interopDefault(_undoDotJs);
var _undoJs = require("./icons/undo.js");
var _undoJsDefault = parcelHelpers.interopDefault(_undoJs);
var _unfoldHorizontalJs = require("./icons/unfold-horizontal.js");
var _unfoldHorizontalJsDefault = parcelHelpers.interopDefault(_unfoldHorizontalJs);
var _unfoldVerticalJs = require("./icons/unfold-vertical.js");
var _unfoldVerticalJsDefault = parcelHelpers.interopDefault(_unfoldVerticalJs);
var _ungroupJs = require("./icons/ungroup.js");
var _ungroupJsDefault = parcelHelpers.interopDefault(_ungroupJs);
var _unlinkJs = require("./icons/unlink.js");
var _unlinkJsDefault = parcelHelpers.interopDefault(_unlinkJs);
var _unlink2Js = require("./icons/unlink-2.js");
var _unlink2JsDefault = parcelHelpers.interopDefault(_unlink2Js);
var _unplugJs = require("./icons/unplug.js");
var _unplugJsDefault = parcelHelpers.interopDefault(_unplugJs);
var _uploadJs = require("./icons/upload.js");
var _uploadJsDefault = parcelHelpers.interopDefault(_uploadJs);
var _usbJs = require("./icons/usb.js");
var _usbJsDefault = parcelHelpers.interopDefault(_usbJs);
var _userCheckJs = require("./icons/user-check.js");
var _userCheckJsDefault = parcelHelpers.interopDefault(_userCheckJs);
var _userCogJs = require("./icons/user-cog.js");
var _userCogJsDefault = parcelHelpers.interopDefault(_userCogJs);
var _userLockJs = require("./icons/user-lock.js");
var _userLockJsDefault = parcelHelpers.interopDefault(_userLockJs);
var _userPenJs = require("./icons/user-pen.js");
var _userPenJsDefault = parcelHelpers.interopDefault(_userPenJs);
var _userMinusJs = require("./icons/user-minus.js");
var _userMinusJsDefault = parcelHelpers.interopDefault(_userMinusJs);
var _userPlusJs = require("./icons/user-plus.js");
var _userPlusJsDefault = parcelHelpers.interopDefault(_userPlusJs);
var _userRoundPenJs = require("./icons/user-round-pen.js");
var _userRoundPenJsDefault = parcelHelpers.interopDefault(_userRoundPenJs);
var _userRoundSearchJs = require("./icons/user-round-search.js");
var _userRoundSearchJsDefault = parcelHelpers.interopDefault(_userRoundSearchJs);
var _userSearchJs = require("./icons/user-search.js");
var _userSearchJsDefault = parcelHelpers.interopDefault(_userSearchJs);
var _userStarJs = require("./icons/user-star.js");
var _userStarJsDefault = parcelHelpers.interopDefault(_userStarJs);
var _userXJs = require("./icons/user-x.js");
var _userXJsDefault = parcelHelpers.interopDefault(_userXJs);
var _userJs = require("./icons/user.js");
var _userJsDefault = parcelHelpers.interopDefault(_userJs);
var _usersJs = require("./icons/users.js");
var _usersJsDefault = parcelHelpers.interopDefault(_usersJs);
var _utilityPoleJs = require("./icons/utility-pole.js");
var _utilityPoleJsDefault = parcelHelpers.interopDefault(_utilityPoleJs);
var _variableJs = require("./icons/variable.js");
var _variableJsDefault = parcelHelpers.interopDefault(_variableJs);
var _vaultJs = require("./icons/vault.js");
var _vaultJsDefault = parcelHelpers.interopDefault(_vaultJs);
var _vectorSquareJs = require("./icons/vector-square.js");
var _vectorSquareJsDefault = parcelHelpers.interopDefault(_vectorSquareJs);
var _veganJs = require("./icons/vegan.js");
var _veganJsDefault = parcelHelpers.interopDefault(_veganJs);
var _venetianMaskJs = require("./icons/venetian-mask.js");
var _venetianMaskJsDefault = parcelHelpers.interopDefault(_venetianMaskJs);
var _venusAndMarsJs = require("./icons/venus-and-mars.js");
var _venusAndMarsJsDefault = parcelHelpers.interopDefault(_venusAndMarsJs);
var _venusJs = require("./icons/venus.js");
var _venusJsDefault = parcelHelpers.interopDefault(_venusJs);
var _vibrateOffJs = require("./icons/vibrate-off.js");
var _vibrateOffJsDefault = parcelHelpers.interopDefault(_vibrateOffJs);
var _vibrateJs = require("./icons/vibrate.js");
var _vibrateJsDefault = parcelHelpers.interopDefault(_vibrateJs);
var _videoOffJs = require("./icons/video-off.js");
var _videoOffJsDefault = parcelHelpers.interopDefault(_videoOffJs);
var _videoJs = require("./icons/video.js");
var _videoJsDefault = parcelHelpers.interopDefault(_videoJs);
var _videotapeJs = require("./icons/videotape.js");
var _videotapeJsDefault = parcelHelpers.interopDefault(_videotapeJs);
var _viewJs = require("./icons/view.js");
var _viewJsDefault = parcelHelpers.interopDefault(_viewJs);
var _voicemailJs = require("./icons/voicemail.js");
var _voicemailJsDefault = parcelHelpers.interopDefault(_voicemailJs);
var _volleyballJs = require("./icons/volleyball.js");
var _volleyballJsDefault = parcelHelpers.interopDefault(_volleyballJs);
var _volume1Js = require("./icons/volume-1.js");
var _volume1JsDefault = parcelHelpers.interopDefault(_volume1Js);
var _volume2Js = require("./icons/volume-2.js");
var _volume2JsDefault = parcelHelpers.interopDefault(_volume2Js);
var _volumeOffJs = require("./icons/volume-off.js");
var _volumeOffJsDefault = parcelHelpers.interopDefault(_volumeOffJs);
var _volumeXJs = require("./icons/volume-x.js");
var _volumeXJsDefault = parcelHelpers.interopDefault(_volumeXJs);
var _volumeJs = require("./icons/volume.js");
var _volumeJsDefault = parcelHelpers.interopDefault(_volumeJs);
var _voteJs = require("./icons/vote.js");
var _voteJsDefault = parcelHelpers.interopDefault(_voteJs);
var _walletCardsJs = require("./icons/wallet-cards.js");
var _walletCardsJsDefault = parcelHelpers.interopDefault(_walletCardsJs);
var _walletJs = require("./icons/wallet.js");
var _walletJsDefault = parcelHelpers.interopDefault(_walletJs);
var _wallpaperJs = require("./icons/wallpaper.js");
var _wallpaperJsDefault = parcelHelpers.interopDefault(_wallpaperJs);
var _wandJs = require("./icons/wand.js");
var _wandJsDefault = parcelHelpers.interopDefault(_wandJs);
var _warehouseJs = require("./icons/warehouse.js");
var _warehouseJsDefault = parcelHelpers.interopDefault(_warehouseJs);
var _washingMachineJs = require("./icons/washing-machine.js");
var _washingMachineJsDefault = parcelHelpers.interopDefault(_washingMachineJs);
var _watchJs = require("./icons/watch.js");
var _watchJsDefault = parcelHelpers.interopDefault(_watchJs);
var _wavesLadderJs = require("./icons/waves-ladder.js");
var _wavesLadderJsDefault = parcelHelpers.interopDefault(_wavesLadderJs);
var _wavesJs = require("./icons/waves.js");
var _wavesJsDefault = parcelHelpers.interopDefault(_wavesJs);
var _webcamJs = require("./icons/webcam.js");
var _webcamJsDefault = parcelHelpers.interopDefault(_webcamJs);
var _waypointsJs = require("./icons/waypoints.js");
var _waypointsJsDefault = parcelHelpers.interopDefault(_waypointsJs);
var _webhookJs = require("./icons/webhook.js");
var _webhookJsDefault = parcelHelpers.interopDefault(_webhookJs);
var _webhookOffJs = require("./icons/webhook-off.js");
var _webhookOffJsDefault = parcelHelpers.interopDefault(_webhookOffJs);
var _weightJs = require("./icons/weight.js");
var _weightJsDefault = parcelHelpers.interopDefault(_weightJs);
var _wheatOffJs = require("./icons/wheat-off.js");
var _wheatOffJsDefault = parcelHelpers.interopDefault(_wheatOffJs);
var _wheatJs = require("./icons/wheat.js");
var _wheatJsDefault = parcelHelpers.interopDefault(_wheatJs);
var _wifiCogJs = require("./icons/wifi-cog.js");
var _wifiCogJsDefault = parcelHelpers.interopDefault(_wifiCogJs);
var _wholeWordJs = require("./icons/whole-word.js");
var _wholeWordJsDefault = parcelHelpers.interopDefault(_wholeWordJs);
var _wifiHighJs = require("./icons/wifi-high.js");
var _wifiHighJsDefault = parcelHelpers.interopDefault(_wifiHighJs);
var _wifiLowJs = require("./icons/wifi-low.js");
var _wifiLowJsDefault = parcelHelpers.interopDefault(_wifiLowJs);
var _wifiOffJs = require("./icons/wifi-off.js");
var _wifiOffJsDefault = parcelHelpers.interopDefault(_wifiOffJs);
var _wifiPenJs = require("./icons/wifi-pen.js");
var _wifiPenJsDefault = parcelHelpers.interopDefault(_wifiPenJs);
var _wifiSyncJs = require("./icons/wifi-sync.js");
var _wifiSyncJsDefault = parcelHelpers.interopDefault(_wifiSyncJs);
var _wifiZeroJs = require("./icons/wifi-zero.js");
var _wifiZeroJsDefault = parcelHelpers.interopDefault(_wifiZeroJs);
var _wifiJs = require("./icons/wifi.js");
var _wifiJsDefault = parcelHelpers.interopDefault(_wifiJs);
var _windArrowDownJs = require("./icons/wind-arrow-down.js");
var _windArrowDownJsDefault = parcelHelpers.interopDefault(_windArrowDownJs);
var _windJs = require("./icons/wind.js");
var _windJsDefault = parcelHelpers.interopDefault(_windJs);
var _wineOffJs = require("./icons/wine-off.js");
var _wineOffJsDefault = parcelHelpers.interopDefault(_wineOffJs);
var _wineJs = require("./icons/wine.js");
var _wineJsDefault = parcelHelpers.interopDefault(_wineJs);
var _workflowJs = require("./icons/workflow.js");
var _workflowJsDefault = parcelHelpers.interopDefault(_workflowJs);
var _wormJs = require("./icons/worm.js");
var _wormJsDefault = parcelHelpers.interopDefault(_wormJs);
var _wrenchJs = require("./icons/wrench.js");
var _wrenchJsDefault = parcelHelpers.interopDefault(_wrenchJs);
var _xJs = require("./icons/x.js");
var _xJsDefault = parcelHelpers.interopDefault(_xJs);
var _youtubeJs = require("./icons/youtube.js");
var _youtubeJsDefault = parcelHelpers.interopDefault(_youtubeJs);
var _zapOffJs = require("./icons/zap-off.js");
var _zapOffJsDefault = parcelHelpers.interopDefault(_zapOffJs);
var _zapJs = require("./icons/zap.js");
var _zapJsDefault = parcelHelpers.interopDefault(_zapJs);
var _zoomInJs = require("./icons/zoom-in.js");
var _zoomInJsDefault = parcelHelpers.interopDefault(_zoomInJs);
var _zoomOutJs = require("./icons/zoom-out.js");
var _zoomOutJsDefault = parcelHelpers.interopDefault(_zoomOutJs);
var _arrowDown10Js = require("./icons/arrow-down-1-0.js");
var _arrowDown10JsDefault = parcelHelpers.interopDefault(_arrowDown10Js);
var _arrowDown01Js = require("./icons/arrow-down-0-1.js");
var _arrowDown01JsDefault = parcelHelpers.interopDefault(_arrowDown01Js);
var _arrowUp01Js = require("./icons/arrow-up-0-1.js");
var _arrowUp01JsDefault = parcelHelpers.interopDefault(_arrowUp01Js);
var _arrowUp10Js = require("./icons/arrow-up-1-0.js");
var _arrowUp10JsDefault = parcelHelpers.interopDefault(_arrowUp10Js);
var _createLucideIconJs = require("./createLucideIcon.js");
var _createLucideIconJsDefault = parcelHelpers.interopDefault(_createLucideIconJs);
var _iconJs = require("./Icon.js");
var _iconJsDefault = parcelHelpers.interopDefault(_iconJs);

},{"./icons/index.js":false,"./icons/alarm-clock-minus.js":false,"./icons/alarm-clock-check.js":false,"./icons/alarm-clock-plus.js":false,"./icons/arrow-down-a-z.js":false,"./icons/arrow-down-wide-narrow.js":false,"./icons/arrow-down-z-a.js":false,"./icons/arrow-up-a-z.js":false,"./icons/arrow-up-narrow-wide.js":false,"./icons/arrow-up-z-a.js":false,"./icons/axis-3d.js":false,"./icons/badge-check.js":false,"./icons/badge-question-mark.js":false,"./icons/between-horizontal-end.js":false,"./icons/between-horizontal-start.js":false,"./icons/book-dashed.js":false,"./icons/braces.js":false,"./icons/captions.js":false,"./icons/chart-area.js":false,"./icons/chart-bar-big.js":false,"./icons/chart-bar.js":false,"./icons/chart-candlestick.js":false,"./icons/chart-column-increasing.js":false,"./icons/chart-column-big.js":false,"./icons/chart-column.js":false,"./icons/chart-line.js":false,"./icons/chart-no-axes-column-increasing.js":false,"./icons/chart-no-axes-column.js":false,"./icons/chart-pie.js":false,"./icons/chart-no-axes-gantt.js":false,"./icons/chart-scatter.js":false,"./icons/chromium.js":false,"./icons/circle-alert.js":false,"./icons/circle-arrow-down.js":false,"./icons/circle-arrow-left.js":false,"./icons/circle-arrow-out-down-left.js":false,"./icons/circle-arrow-out-down-right.js":false,"./icons/circle-arrow-out-up-left.js":false,"./icons/circle-arrow-out-up-right.js":false,"./icons/circle-arrow-right.js":false,"./icons/circle-check-big.js":false,"./icons/circle-arrow-up.js":false,"./icons/circle-check.js":false,"./icons/circle-chevron-left.js":false,"./icons/circle-chevron-right.js":false,"./icons/circle-chevron-down.js":false,"./icons/circle-chevron-up.js":false,"./icons/circle-divide.js":false,"./icons/circle-gauge.js":false,"./icons/circle-minus.js":false,"./icons/circle-parking-off.js":false,"./icons/circle-parking.js":false,"./icons/circle-pause.js":false,"./icons/circle-percent.js":false,"./icons/circle-play.js":false,"./icons/circle-plus.js":false,"./icons/circle-power.js":false,"./icons/circle-question-mark.js":false,"./icons/circle-slash-2.js":false,"./icons/circle-stop.js":false,"./icons/circle-user.js":false,"./icons/circle-x.js":false,"./icons/circle-user-round.js":false,"./icons/clipboard-pen-line.js":false,"./icons/clipboard-pen.js":false,"./icons/cloud-download.js":false,"./icons/cloud-upload.js":false,"./icons/code-xml.js":false,"./icons/columns-2.js":false,"./icons/columns-3-cog.js":false,"./icons/columns-3.js":false,"./icons/contact-round.js":false,"./icons/diamond-percent.js":false,"./icons/earth.js":false,"./icons/ellipsis-vertical.js":false,"./icons/ellipsis.js":false,"./icons/file-axis-3d.js":false,"./icons/file-chart-column-increasing.js":false,"./icons/file-chart-column.js":false,"./icons/file-chart-line.js":false,"./icons/file-chart-pie.js":false,"./icons/file-cog.js":false,"./icons/file-pen-line.js":false,"./icons/file-pen.js":false,"./icons/file-play.js":false,"./icons/file-question-mark.js":false,"./icons/file-video-camera.js":false,"./icons/folder-cog.js":false,"./icons/folder-pen.js":false,"./icons/funnel-x.js":false,"./icons/funnel.js":false,"./icons/git-commit-horizontal.js":false,"./icons/grid-2x2-check.js":false,"./icons/grid-2x2-plus.js":false,"./icons/grid-2x2-x.js":false,"./icons/grid-2x2.js":false,"./icons/grid-3x3.js":false,"./icons/hand-grab.js":false,"./icons/hand-helping.js":false,"./icons/house.js":false,"./icons/ice-cream-bowl.js":false,"./icons/ice-cream-cone.js":false,"./icons/laptop-minimal.js":false,"./icons/layers.js":false,"./icons/list-indent-decrease.js":false,"./icons/list-indent-increase.js":false,"./icons/loader-circle.js":false,"./icons/lock-keyhole-open.js":false,"./icons/lock-open.js":false,"./icons/mail-question-mark.js":false,"./icons/map-pin-pen.js":false,"./icons/message-circle-question-mark.js":false,"./icons/mic-vocal.js":false,"./icons/move-3d.js":false,"./icons/octagon-alert.js":false,"./icons/octagon-pause.js":false,"./icons/octagon-x.js":false,"./icons/paintbrush-vertical.js":false,"./icons/panel-bottom-dashed.js":false,"./icons/panel-left-close.js":false,"./icons/panel-left-dashed.js":false,"./icons/panel-left-open.js":false,"./icons/panel-left.js":false,"./icons/panel-right-dashed.js":false,"./icons/panel-top-dashed.js":false,"./icons/panels-top-left.js":false,"./icons/pen-line.js":false,"./icons/pen.js":false,"./icons/plug-zap.js":false,"./icons/rectangle-ellipsis.js":false,"./icons/rotate-3d.js":false,"./icons/rows-2.js":false,"./icons/rows-3.js":false,"./icons/scale-3d.js":false,"./icons/send-horizontal.js":false,"./icons/shield-question-mark.js":false,"./icons/shield-x.js":false,"./icons/sliders-vertical.js":false,"./icons/sparkles.js":false,"./icons/square-activity.js":false,"./icons/square-arrow-down-left.js":false,"./icons/square-arrow-down-right.js":false,"./icons/square-arrow-left.js":false,"./icons/square-arrow-down.js":false,"./icons/square-arrow-out-down-left.js":false,"./icons/square-arrow-out-down-right.js":false,"./icons/square-arrow-out-up-left.js":false,"./icons/square-arrow-out-up-right.js":false,"./icons/square-arrow-right.js":false,"./icons/square-arrow-up-left.js":false,"./icons/square-arrow-up-right.js":false,"./icons/square-arrow-up.js":false,"./icons/square-asterisk.js":false,"./icons/square-bottom-dashed-scissors.js":false,"./icons/square-chart-gantt.js":false,"./icons/square-check-big.js":false,"./icons/square-check.js":false,"./icons/square-chevron-down.js":false,"./icons/square-chevron-left.js":false,"./icons/square-chevron-up.js":false,"./icons/square-chevron-right.js":false,"./icons/square-code.js":false,"./icons/square-dashed-kanban.js":false,"./icons/square-dashed-mouse-pointer.js":false,"./icons/square-dashed.js":false,"./icons/square-divide.js":false,"./icons/square-dot.js":false,"./icons/square-equal.js":false,"./icons/square-function.js":false,"./icons/square-kanban.js":false,"./icons/square-library.js":false,"./icons/square-m.js":false,"./icons/square-menu.js":false,"./icons/square-minus.js":false,"./icons/square-mouse-pointer.js":false,"./icons/square-parking-off.js":false,"./icons/square-parking.js":false,"./icons/square-pen.js":false,"./icons/square-percent.js":false,"./icons/square-pi.js":false,"./icons/square-pilcrow.js":false,"./icons/square-play.js":false,"./icons/square-plus.js":false,"./icons/square-power.js":false,"./icons/square-scissors.js":false,"./icons/square-sigma.js":false,"./icons/square-slash.js":false,"./icons/square-split-horizontal.js":false,"./icons/square-split-vertical.js":false,"./icons/square-terminal.js":false,"./icons/square-user-round.js":false,"./icons/square-user.js":false,"./icons/square-x.js":false,"./icons/test-tube-diagonal.js":false,"./icons/text-align-center.js":false,"./icons/text-align-end.js":false,"./icons/text-align-justify.js":false,"./icons/text-align-start.js":false,"./icons/text-initial.js":false,"./icons/text-select.js":false,"./icons/text-wrap.js":false,"./icons/tram-front.js":false,"./icons/tree-palm.js":false,"./icons/triangle-alert.js":false,"./icons/tv-minimal.js":false,"./icons/university.js":false,"./icons/user-round-check.js":false,"./icons/user-round-cog.js":false,"./icons/user-round-minus.js":false,"./icons/user-round-plus.js":false,"./icons/user-round-x.js":false,"./icons/user-round.js":false,"./icons/users-round.js":false,"./icons/utensils-crossed.js":false,"./icons/utensils.js":"jGFMs","./icons/wallet-minimal.js":false,"./icons/wand-sparkles.js":false,"./icons/a-arrow-down.js":false,"./icons/a-arrow-up.js":false,"./icons/a-large-small.js":false,"./icons/accessibility.js":false,"./icons/activity.js":false,"./icons/air-vent.js":false,"./icons/airplay.js":false,"./icons/alarm-clock-off.js":false,"./icons/alarm-clock.js":false,"./icons/album.js":false,"./icons/alarm-smoke.js":false,"./icons/align-center-horizontal.js":false,"./icons/align-center-vertical.js":false,"./icons/align-end-horizontal.js":false,"./icons/align-end-vertical.js":false,"./icons/align-horizontal-distribute-center.js":false,"./icons/align-horizontal-distribute-end.js":false,"./icons/align-horizontal-distribute-start.js":false,"./icons/align-horizontal-justify-center.js":false,"./icons/align-horizontal-justify-end.js":false,"./icons/align-horizontal-justify-start.js":false,"./icons/align-horizontal-space-around.js":false,"./icons/align-horizontal-space-between.js":false,"./icons/align-start-horizontal.js":false,"./icons/align-start-vertical.js":false,"./icons/align-vertical-distribute-center.js":false,"./icons/align-vertical-distribute-end.js":false,"./icons/align-vertical-distribute-start.js":false,"./icons/align-vertical-justify-center.js":false,"./icons/align-vertical-justify-end.js":false,"./icons/align-vertical-justify-start.js":false,"./icons/align-vertical-space-around.js":false,"./icons/align-vertical-space-between.js":false,"./icons/ambulance.js":false,"./icons/ampersand.js":false,"./icons/ampersands.js":false,"./icons/amphora.js":false,"./icons/anchor.js":false,"./icons/angry.js":false,"./icons/annoyed.js":false,"./icons/antenna.js":false,"./icons/anvil.js":false,"./icons/app-window-mac.js":false,"./icons/aperture.js":false,"./icons/app-window.js":false,"./icons/apple.js":false,"./icons/archive-restore.js":false,"./icons/archive-x.js":false,"./icons/archive.js":false,"./icons/armchair.js":false,"./icons/arrow-big-down-dash.js":false,"./icons/arrow-big-down.js":false,"./icons/arrow-big-left-dash.js":false,"./icons/arrow-big-left.js":false,"./icons/arrow-big-right-dash.js":false,"./icons/arrow-big-up-dash.js":false,"./icons/arrow-big-right.js":false,"./icons/arrow-big-up.js":false,"./icons/arrow-down-from-line.js":false,"./icons/arrow-down-left.js":false,"./icons/arrow-down-narrow-wide.js":false,"./icons/arrow-down-right.js":false,"./icons/arrow-down-to-dot.js":false,"./icons/arrow-down-to-line.js":false,"./icons/arrow-down-up.js":false,"./icons/arrow-down.js":false,"./icons/arrow-left-from-line.js":false,"./icons/arrow-left-right.js":false,"./icons/arrow-left-to-line.js":false,"./icons/arrow-left.js":false,"./icons/arrow-right-from-line.js":false,"./icons/arrow-right-left.js":false,"./icons/arrow-right-to-line.js":false,"./icons/arrow-right.js":false,"./icons/arrow-up-down.js":false,"./icons/arrow-up-from-dot.js":false,"./icons/arrow-up-from-line.js":false,"./icons/arrow-up-left.js":false,"./icons/arrow-up-right.js":false,"./icons/arrow-up-to-line.js":false,"./icons/arrow-up-wide-narrow.js":false,"./icons/arrow-up.js":false,"./icons/arrows-up-from-line.js":false,"./icons/asterisk.js":false,"./icons/at-sign.js":false,"./icons/atom.js":false,"./icons/audio-lines.js":false,"./icons/award.js":"7bDKz","./icons/audio-waveform.js":false,"./icons/axe.js":false,"./icons/baby.js":false,"./icons/backpack.js":false,"./icons/badge-alert.js":false,"./icons/badge-cent.js":false,"./icons/badge-dollar-sign.js":false,"./icons/badge-euro.js":false,"./icons/badge-indian-rupee.js":false,"./icons/badge-info.js":false,"./icons/badge-japanese-yen.js":false,"./icons/badge-minus.js":false,"./icons/badge-plus.js":false,"./icons/badge-pound-sterling.js":false,"./icons/badge-percent.js":false,"./icons/badge-russian-ruble.js":false,"./icons/badge-swiss-franc.js":false,"./icons/badge-turkish-lira.js":false,"./icons/badge-x.js":false,"./icons/badge.js":false,"./icons/baggage-claim.js":false,"./icons/ban.js":false,"./icons/banana.js":false,"./icons/bandage.js":false,"./icons/banknote-arrow-down.js":false,"./icons/banknote-x.js":false,"./icons/banknote-arrow-up.js":false,"./icons/banknote.js":false,"./icons/barcode.js":false,"./icons/baseline.js":false,"./icons/barrel.js":false,"./icons/bath.js":false,"./icons/battery-charging.js":false,"./icons/battery-full.js":false,"./icons/battery-low.js":false,"./icons/battery-medium.js":false,"./icons/battery-plus.js":false,"./icons/battery-warning.js":false,"./icons/battery.js":false,"./icons/beaker.js":false,"./icons/bean-off.js":false,"./icons/bean.js":false,"./icons/bed-double.js":false,"./icons/bed-single.js":false,"./icons/bed.js":false,"./icons/beef.js":false,"./icons/beer-off.js":false,"./icons/bell-dot.js":false,"./icons/beer.js":false,"./icons/bell-electric.js":false,"./icons/bell-minus.js":false,"./icons/bell-off.js":false,"./icons/bell-plus.js":false,"./icons/bell-ring.js":false,"./icons/bell.js":false,"./icons/between-vertical-end.js":false,"./icons/between-vertical-start.js":false,"./icons/biceps-flexed.js":false,"./icons/bike.js":false,"./icons/binary.js":false,"./icons/binoculars.js":false,"./icons/biohazard.js":false,"./icons/bird.js":false,"./icons/bitcoin.js":false,"./icons/blend.js":false,"./icons/blinds.js":false,"./icons/blocks.js":false,"./icons/bluetooth-connected.js":false,"./icons/bluetooth-off.js":false,"./icons/bluetooth.js":false,"./icons/bluetooth-searching.js":false,"./icons/bold.js":false,"./icons/bolt.js":false,"./icons/bomb.js":false,"./icons/bone.js":false,"./icons/book-a.js":false,"./icons/book-alert.js":false,"./icons/book-audio.js":false,"./icons/book-check.js":false,"./icons/book-copy.js":false,"./icons/book-down.js":false,"./icons/book-headphones.js":false,"./icons/book-heart.js":false,"./icons/book-image.js":false,"./icons/book-key.js":false,"./icons/book-lock.js":false,"./icons/book-marked.js":false,"./icons/book-minus.js":false,"./icons/book-open-check.js":false,"./icons/book-open-text.js":false,"./icons/book-open.js":false,"./icons/book-plus.js":false,"./icons/book-type.js":false,"./icons/book-text.js":false,"./icons/book-up-2.js":false,"./icons/book-up.js":false,"./icons/book-user.js":false,"./icons/book-x.js":false,"./icons/book.js":false,"./icons/bookmark-check.js":false,"./icons/bookmark-plus.js":false,"./icons/bookmark-minus.js":false,"./icons/bookmark-x.js":false,"./icons/bookmark.js":false,"./icons/boom-box.js":false,"./icons/bot-message-square.js":false,"./icons/bot-off.js":false,"./icons/bot.js":false,"./icons/bottle-wine.js":false,"./icons/bow-arrow.js":false,"./icons/box.js":false,"./icons/boxes.js":false,"./icons/brackets.js":false,"./icons/brain-circuit.js":false,"./icons/brain-cog.js":false,"./icons/brain.js":false,"./icons/brick-wall-fire.js":false,"./icons/brick-wall-shield.js":false,"./icons/brick-wall.js":false,"./icons/briefcase-business.js":false,"./icons/briefcase-conveyor-belt.js":false,"./icons/briefcase-medical.js":false,"./icons/briefcase.js":false,"./icons/bring-to-front.js":false,"./icons/brush-cleaning.js":false,"./icons/brush.js":false,"./icons/bubbles.js":false,"./icons/bug-play.js":false,"./icons/bug-off.js":false,"./icons/bug.js":false,"./icons/building-2.js":false,"./icons/building.js":false,"./icons/bus-front.js":false,"./icons/bus.js":false,"./icons/cable-car.js":false,"./icons/cable.js":false,"./icons/cake-slice.js":false,"./icons/cake.js":false,"./icons/calculator.js":false,"./icons/calendar-1.js":false,"./icons/calendar-arrow-down.js":false,"./icons/calendar-arrow-up.js":false,"./icons/calendar-check-2.js":false,"./icons/calendar-clock.js":false,"./icons/calendar-check.js":false,"./icons/calendar-cog.js":false,"./icons/calendar-days.js":false,"./icons/calendar-fold.js":false,"./icons/calendar-heart.js":false,"./icons/calendar-minus.js":false,"./icons/calendar-minus-2.js":false,"./icons/calendar-off.js":false,"./icons/calendar-plus-2.js":false,"./icons/calendar-plus.js":false,"./icons/calendar-range.js":false,"./icons/calendar-search.js":false,"./icons/calendar-sync.js":false,"./icons/calendar-x-2.js":false,"./icons/calendar-x.js":false,"./icons/calendar.js":false,"./icons/camera.js":false,"./icons/camera-off.js":false,"./icons/candy-cane.js":false,"./icons/candy-off.js":false,"./icons/candy.js":false,"./icons/cannabis.js":false,"./icons/captions-off.js":false,"./icons/car-front.js":false,"./icons/car-taxi-front.js":false,"./icons/car.js":false,"./icons/caravan.js":false,"./icons/card-sim.js":false,"./icons/carrot.js":false,"./icons/case-lower.js":false,"./icons/case-sensitive.js":false,"./icons/case-upper.js":false,"./icons/cast.js":false,"./icons/cassette-tape.js":false,"./icons/castle.js":false,"./icons/cat.js":false,"./icons/cctv.js":false,"./icons/chart-bar-decreasing.js":false,"./icons/chart-bar-increasing.js":false,"./icons/chart-bar-stacked.js":false,"./icons/chart-column-decreasing.js":false,"./icons/chart-column-stacked.js":false,"./icons/chart-gantt.js":false,"./icons/chart-network.js":false,"./icons/chart-no-axes-column-decreasing.js":false,"./icons/chart-no-axes-combined.js":false,"./icons/chart-spline.js":false,"./icons/check-check.js":false,"./icons/check-line.js":false,"./icons/chef-hat.js":false,"./icons/check.js":"irEtD","./icons/cherry.js":false,"./icons/chevron-down.js":"jfA6v","./icons/chevron-first.js":false,"./icons/chevron-last.js":false,"./icons/chevron-left.js":false,"./icons/chevron-right.js":false,"./icons/chevron-up.js":"33IhA","./icons/chevrons-down-up.js":false,"./icons/chevrons-down.js":false,"./icons/chevrons-left-right-ellipsis.js":false,"./icons/chevrons-left-right.js":false,"./icons/chevrons-left.js":false,"./icons/chevrons-right-left.js":false,"./icons/chevrons-right.js":false,"./icons/chevrons-up-down.js":false,"./icons/chevrons-up.js":false,"./icons/church.js":false,"./icons/cigarette-off.js":false,"./icons/cigarette.js":false,"./icons/circle-dashed.js":false,"./icons/circle-dollar-sign.js":false,"./icons/circle-dot-dashed.js":false,"./icons/circle-dot.js":false,"./icons/circle-ellipsis.js":false,"./icons/circle-equal.js":false,"./icons/circle-fading-arrow-up.js":false,"./icons/circle-fading-plus.js":false,"./icons/circle-off.js":false,"./icons/circle-pound-sterling.js":false,"./icons/circle-slash.js":false,"./icons/circle-small.js":false,"./icons/circle-star.js":false,"./icons/circle.js":"hzfLK","./icons/circuit-board.js":false,"./icons/citrus.js":false,"./icons/clapperboard.js":false,"./icons/clipboard-check.js":false,"./icons/clipboard-copy.js":false,"./icons/clipboard-clock.js":false,"./icons/clipboard-list.js":false,"./icons/clipboard-minus.js":false,"./icons/clipboard-paste.js":false,"./icons/clipboard-plus.js":false,"./icons/clipboard-type.js":false,"./icons/clipboard-x.js":false,"./icons/clipboard.js":false,"./icons/clock-1.js":false,"./icons/clock-10.js":false,"./icons/clock-11.js":false,"./icons/clock-12.js":false,"./icons/clock-2.js":false,"./icons/clock-3.js":false,"./icons/clock-5.js":false,"./icons/clock-4.js":false,"./icons/clock-6.js":false,"./icons/clock-7.js":false,"./icons/clock-8.js":false,"./icons/clock-9.js":false,"./icons/clock-arrow-down.js":false,"./icons/clock-alert.js":false,"./icons/clock-arrow-up.js":false,"./icons/clock-fading.js":false,"./icons/clock-plus.js":false,"./icons/clock.js":false,"./icons/closed-caption.js":false,"./icons/cloud-alert.js":false,"./icons/cloud-check.js":false,"./icons/cloud-cog.js":false,"./icons/cloud-drizzle.js":false,"./icons/cloud-fog.js":false,"./icons/cloud-hail.js":false,"./icons/cloud-lightning.js":false,"./icons/cloud-moon-rain.js":false,"./icons/cloud-off.js":false,"./icons/cloud-moon.js":false,"./icons/cloud-rain-wind.js":false,"./icons/cloud-rain.js":false,"./icons/cloud-snow.js":false,"./icons/cloud-sun-rain.js":false,"./icons/cloud-sun.js":false,"./icons/cloud.js":false,"./icons/cloudy.js":false,"./icons/clover.js":false,"./icons/club.js":false,"./icons/code.js":false,"./icons/codepen.js":false,"./icons/codesandbox.js":false,"./icons/coffee.js":false,"./icons/cog.js":false,"./icons/coins.js":false,"./icons/columns-4.js":false,"./icons/combine.js":false,"./icons/command.js":false,"./icons/compass.js":false,"./icons/component.js":false,"./icons/computer.js":false,"./icons/concierge-bell.js":false,"./icons/construction.js":false,"./icons/cone.js":false,"./icons/contact.js":false,"./icons/container.js":false,"./icons/contrast.js":false,"./icons/cookie.js":false,"./icons/copy-check.js":false,"./icons/cooking-pot.js":false,"./icons/copy-minus.js":false,"./icons/copy-plus.js":false,"./icons/copy-slash.js":false,"./icons/copy-x.js":false,"./icons/copy.js":false,"./icons/copyleft.js":false,"./icons/copyright.js":false,"./icons/corner-down-left.js":false,"./icons/corner-down-right.js":false,"./icons/corner-left-down.js":false,"./icons/corner-left-up.js":false,"./icons/corner-right-down.js":false,"./icons/corner-right-up.js":false,"./icons/corner-up-left.js":false,"./icons/corner-up-right.js":false,"./icons/cpu.js":false,"./icons/creative-commons.js":false,"./icons/credit-card.js":false,"./icons/croissant.js":false,"./icons/crop.js":false,"./icons/cross.js":false,"./icons/crosshair.js":false,"./icons/crown.js":false,"./icons/cuboid.js":false,"./icons/cup-soda.js":false,"./icons/currency.js":false,"./icons/cylinder.js":false,"./icons/dam.js":false,"./icons/database-backup.js":false,"./icons/database-zap.js":false,"./icons/decimals-arrow-left.js":false,"./icons/database.js":false,"./icons/decimals-arrow-right.js":false,"./icons/delete.js":false,"./icons/dessert.js":false,"./icons/diameter.js":false,"./icons/diamond-minus.js":false,"./icons/diamond-plus.js":false,"./icons/diamond.js":false,"./icons/dice-1.js":false,"./icons/dice-2.js":false,"./icons/dice-3.js":false,"./icons/dice-4.js":false,"./icons/dice-5.js":false,"./icons/dice-6.js":false,"./icons/dices.js":false,"./icons/diff.js":false,"./icons/disc-2.js":false,"./icons/disc-3.js":false,"./icons/disc-album.js":false,"./icons/disc.js":false,"./icons/divide.js":false,"./icons/dna-off.js":false,"./icons/dna.js":false,"./icons/dock.js":false,"./icons/dog.js":false,"./icons/dollar-sign.js":false,"./icons/donut.js":false,"./icons/door-closed-locked.js":false,"./icons/door-closed.js":false,"./icons/door-open.js":false,"./icons/dot.js":false,"./icons/download.js":false,"./icons/drafting-compass.js":false,"./icons/drama.js":false,"./icons/dribbble.js":false,"./icons/drill.js":false,"./icons/drone.js":false,"./icons/droplet-off.js":false,"./icons/droplet.js":false,"./icons/droplets.js":false,"./icons/drum.js":false,"./icons/drumstick.js":false,"./icons/dumbbell.js":false,"./icons/ear-off.js":false,"./icons/ear.js":false,"./icons/earth-lock.js":false,"./icons/eclipse.js":false,"./icons/egg-fried.js":false,"./icons/egg-off.js":false,"./icons/egg.js":false,"./icons/equal-approximately.js":false,"./icons/equal-not.js":false,"./icons/equal.js":false,"./icons/eraser.js":false,"./icons/euro.js":false,"./icons/ethernet-port.js":false,"./icons/ev-charger.js":false,"./icons/expand.js":false,"./icons/external-link.js":false,"./icons/eye-off.js":false,"./icons/eye-closed.js":false,"./icons/eye.js":false,"./icons/facebook.js":false,"./icons/factory.js":false,"./icons/fan.js":false,"./icons/fast-forward.js":false,"./icons/feather.js":false,"./icons/fence.js":false,"./icons/ferris-wheel.js":false,"./icons/figma.js":false,"./icons/file-archive.js":false,"./icons/file-audio-2.js":false,"./icons/file-audio.js":false,"./icons/file-badge-2.js":false,"./icons/file-box.js":false,"./icons/file-badge.js":false,"./icons/file-check-2.js":false,"./icons/file-check.js":false,"./icons/file-code-2.js":false,"./icons/file-clock.js":false,"./icons/file-code.js":false,"./icons/file-diff.js":false,"./icons/file-digit.js":false,"./icons/file-down.js":false,"./icons/file-heart.js":false,"./icons/file-image.js":false,"./icons/file-input.js":false,"./icons/file-json-2.js":false,"./icons/file-json.js":false,"./icons/file-key-2.js":false,"./icons/file-key.js":false,"./icons/file-lock-2.js":false,"./icons/file-lock.js":false,"./icons/file-minus-2.js":false,"./icons/file-minus.js":false,"./icons/file-music.js":false,"./icons/file-output.js":false,"./icons/file-plus-2.js":false,"./icons/file-plus.js":false,"./icons/file-scan.js":false,"./icons/file-search-2.js":false,"./icons/file-search.js":false,"./icons/file-sliders.js":false,"./icons/file-spreadsheet.js":false,"./icons/file-stack.js":false,"./icons/file-symlink.js":false,"./icons/file-terminal.js":false,"./icons/file-text.js":false,"./icons/file-type-2.js":false,"./icons/file-type.js":false,"./icons/file-up.js":false,"./icons/file-user.js":false,"./icons/file-volume-2.js":false,"./icons/file-volume.js":false,"./icons/file-warning.js":false,"./icons/file-x-2.js":false,"./icons/file-x.js":false,"./icons/file.js":false,"./icons/film.js":false,"./icons/files.js":false,"./icons/fingerprint.js":false,"./icons/fire-extinguisher.js":false,"./icons/fish-off.js":false,"./icons/fish-symbol.js":false,"./icons/fish.js":false,"./icons/flag-off.js":false,"./icons/flag-triangle-left.js":false,"./icons/flag-triangle-right.js":false,"./icons/flag.js":false,"./icons/flame-kindling.js":false,"./icons/flame.js":false,"./icons/flashlight-off.js":false,"./icons/flashlight.js":false,"./icons/flask-conical-off.js":false,"./icons/flask-conical.js":false,"./icons/flask-round.js":false,"./icons/flip-horizontal-2.js":false,"./icons/flip-horizontal.js":false,"./icons/flip-vertical-2.js":false,"./icons/flip-vertical.js":false,"./icons/flower-2.js":false,"./icons/flower.js":false,"./icons/focus.js":false,"./icons/fold-horizontal.js":false,"./icons/fold-vertical.js":false,"./icons/folder-archive.js":false,"./icons/folder-check.js":false,"./icons/folder-clock.js":false,"./icons/folder-code.js":false,"./icons/folder-dot.js":false,"./icons/folder-closed.js":false,"./icons/folder-down.js":false,"./icons/folder-git-2.js":false,"./icons/folder-git.js":false,"./icons/folder-heart.js":false,"./icons/folder-input.js":false,"./icons/folder-kanban.js":false,"./icons/folder-key.js":false,"./icons/folder-lock.js":false,"./icons/folder-minus.js":false,"./icons/folder-open-dot.js":false,"./icons/folder-open.js":false,"./icons/folder-output.js":false,"./icons/folder-plus.js":false,"./icons/folder-root.js":false,"./icons/folder-search-2.js":false,"./icons/folder-search.js":false,"./icons/folder-symlink.js":false,"./icons/folder-sync.js":false,"./icons/folder-tree.js":false,"./icons/folder-up.js":false,"./icons/folder-x.js":false,"./icons/folder.js":false,"./icons/folders.js":false,"./icons/footprints.js":false,"./icons/forklift.js":false,"./icons/forward.js":false,"./icons/frame.js":false,"./icons/framer.js":false,"./icons/frown.js":false,"./icons/fuel.js":false,"./icons/fullscreen.js":false,"./icons/funnel-plus.js":false,"./icons/gallery-horizontal-end.js":false,"./icons/gallery-horizontal.js":false,"./icons/gallery-thumbnails.js":false,"./icons/gallery-vertical-end.js":false,"./icons/gallery-vertical.js":false,"./icons/gamepad-2.js":false,"./icons/gamepad.js":false,"./icons/gauge.js":false,"./icons/gavel.js":false,"./icons/gem.js":false,"./icons/georgian-lari.js":false,"./icons/ghost.js":false,"./icons/gift.js":false,"./icons/git-branch-plus.js":false,"./icons/git-branch.js":false,"./icons/git-commit-vertical.js":false,"./icons/git-compare-arrows.js":false,"./icons/git-compare.js":false,"./icons/git-fork.js":false,"./icons/git-graph.js":false,"./icons/git-merge.js":false,"./icons/git-pull-request-arrow.js":false,"./icons/git-pull-request-closed.js":false,"./icons/git-pull-request-create-arrow.js":false,"./icons/git-pull-request-create.js":false,"./icons/git-pull-request-draft.js":false,"./icons/git-pull-request.js":false,"./icons/github.js":false,"./icons/glass-water.js":false,"./icons/gitlab.js":false,"./icons/glasses.js":false,"./icons/globe-lock.js":false,"./icons/globe.js":false,"./icons/goal.js":false,"./icons/gpu.js":false,"./icons/graduation-cap.js":false,"./icons/grape.js":false,"./icons/grid-3x2.js":false,"./icons/grip-horizontal.js":false,"./icons/grip-vertical.js":false,"./icons/grip.js":false,"./icons/guitar.js":false,"./icons/group.js":false,"./icons/ham.js":false,"./icons/hamburger.js":false,"./icons/hand-coins.js":false,"./icons/hammer.js":false,"./icons/hand-fist.js":false,"./icons/hand-heart.js":false,"./icons/hand-metal.js":false,"./icons/hand-platter.js":false,"./icons/hand.js":false,"./icons/handbag.js":false,"./icons/handshake.js":false,"./icons/hard-drive-download.js":false,"./icons/hard-drive-upload.js":false,"./icons/hard-drive.js":false,"./icons/hard-hat.js":false,"./icons/hash.js":false,"./icons/hat-glasses.js":false,"./icons/haze.js":false,"./icons/heading-1.js":false,"./icons/hdmi-port.js":false,"./icons/heading-2.js":false,"./icons/heading-3.js":false,"./icons/heading-5.js":false,"./icons/heading-4.js":false,"./icons/heading-6.js":false,"./icons/heading.js":false,"./icons/headphone-off.js":false,"./icons/headphones.js":false,"./icons/headset.js":false,"./icons/heart-crack.js":false,"./icons/heart-handshake.js":false,"./icons/heart-minus.js":false,"./icons/heart-off.js":false,"./icons/heart-plus.js":false,"./icons/heart-pulse.js":false,"./icons/heart.js":false,"./icons/heater.js":false,"./icons/hexagon.js":false,"./icons/highlighter.js":false,"./icons/history.js":false,"./icons/hop-off.js":false,"./icons/hop.js":false,"./icons/hotel.js":false,"./icons/hospital.js":false,"./icons/hourglass.js":false,"./icons/house-heart.js":false,"./icons/house-plug.js":false,"./icons/house-plus.js":false,"./icons/house-wifi.js":false,"./icons/id-card-lanyard.js":false,"./icons/id-card.js":false,"./icons/image-down.js":false,"./icons/image-minus.js":false,"./icons/image-off.js":false,"./icons/image-play.js":false,"./icons/image-plus.js":false,"./icons/image-upscale.js":false,"./icons/image-up.js":false,"./icons/image.js":false,"./icons/images.js":false,"./icons/import.js":false,"./icons/inbox.js":false,"./icons/indian-rupee.js":false,"./icons/infinity.js":false,"./icons/info.js":false,"./icons/inspection-panel.js":false,"./icons/instagram.js":false,"./icons/italic.js":false,"./icons/iteration-ccw.js":false,"./icons/iteration-cw.js":false,"./icons/japanese-yen.js":false,"./icons/joystick.js":false,"./icons/kanban.js":false,"./icons/kayak.js":false,"./icons/key-square.js":false,"./icons/key-round.js":false,"./icons/key.js":false,"./icons/keyboard-music.js":false,"./icons/keyboard-off.js":false,"./icons/keyboard.js":false,"./icons/lamp-ceiling.js":false,"./icons/lamp-desk.js":false,"./icons/lamp-wall-down.js":false,"./icons/lamp-floor.js":false,"./icons/lamp-wall-up.js":false,"./icons/lamp.js":false,"./icons/land-plot.js":false,"./icons/landmark.js":false,"./icons/laptop-minimal-check.js":false,"./icons/languages.js":false,"./icons/laptop.js":false,"./icons/lasso-select.js":false,"./icons/lasso.js":false,"./icons/laugh.js":false,"./icons/layers-2.js":false,"./icons/layout-dashboard.js":false,"./icons/layout-grid.js":false,"./icons/layout-panel-left.js":false,"./icons/layout-list.js":false,"./icons/layout-panel-top.js":false,"./icons/layout-template.js":false,"./icons/leaf.js":false,"./icons/lectern.js":false,"./icons/library-big.js":false,"./icons/leafy-green.js":false,"./icons/library.js":false,"./icons/life-buoy.js":false,"./icons/ligature.js":false,"./icons/lightbulb-off.js":false,"./icons/lightbulb.js":false,"./icons/line-squiggle.js":false,"./icons/link-2-off.js":false,"./icons/link-2.js":false,"./icons/linkedin.js":false,"./icons/list-check.js":false,"./icons/link.js":false,"./icons/list-checks.js":false,"./icons/list-chevrons-down-up.js":false,"./icons/list-chevrons-up-down.js":false,"./icons/list-collapse.js":false,"./icons/list-end.js":false,"./icons/list-filter-plus.js":false,"./icons/list-filter.js":false,"./icons/list-minus.js":false,"./icons/list-music.js":false,"./icons/list-ordered.js":false,"./icons/list-plus.js":false,"./icons/list-restart.js":false,"./icons/list-start.js":false,"./icons/list-todo.js":false,"./icons/list-tree.js":false,"./icons/list-video.js":false,"./icons/list-x.js":false,"./icons/list.js":false,"./icons/loader-pinwheel.js":false,"./icons/loader.js":false,"./icons/locate-fixed.js":false,"./icons/locate-off.js":false,"./icons/locate.js":false,"./icons/lock-keyhole.js":false,"./icons/lock.js":false,"./icons/log-in.js":false,"./icons/log-out.js":false,"./icons/logs.js":false,"./icons/lollipop.js":false,"./icons/luggage.js":false,"./icons/magnet.js":false,"./icons/mail-check.js":false,"./icons/mail-open.js":false,"./icons/mail-minus.js":false,"./icons/mail-plus.js":false,"./icons/mail-search.js":false,"./icons/mail-warning.js":false,"./icons/mail-x.js":false,"./icons/mail.js":false,"./icons/mailbox.js":false,"./icons/mails.js":false,"./icons/map-minus.js":false,"./icons/map-pin-check.js":false,"./icons/map-pin-check-inside.js":false,"./icons/map-pin-house.js":false,"./icons/map-pin-minus-inside.js":false,"./icons/map-pin-minus.js":false,"./icons/map-pin-off.js":false,"./icons/map-pin-plus-inside.js":false,"./icons/map-pin-plus.js":false,"./icons/map-pin-x-inside.js":false,"./icons/map-pin.js":false,"./icons/map-pin-x.js":false,"./icons/map-pinned.js":false,"./icons/map-plus.js":false,"./icons/map.js":false,"./icons/mars-stroke.js":false,"./icons/mars.js":false,"./icons/maximize-2.js":false,"./icons/martini.js":false,"./icons/maximize.js":false,"./icons/medal.js":false,"./icons/megaphone-off.js":false,"./icons/megaphone.js":false,"./icons/meh.js":false,"./icons/memory-stick.js":false,"./icons/menu.js":false,"./icons/message-circle-code.js":false,"./icons/merge.js":false,"./icons/message-circle-heart.js":false,"./icons/message-circle-dashed.js":false,"./icons/message-circle-more.js":false,"./icons/message-circle-off.js":false,"./icons/message-circle-plus.js":false,"./icons/message-circle-reply.js":false,"./icons/message-circle-warning.js":false,"./icons/message-circle-x.js":false,"./icons/message-circle.js":false,"./icons/message-square-code.js":false,"./icons/message-square-dashed.js":false,"./icons/message-square-dot.js":false,"./icons/message-square-diff.js":false,"./icons/message-square-heart.js":false,"./icons/message-square-lock.js":false,"./icons/message-square-more.js":false,"./icons/message-square-off.js":false,"./icons/message-square-plus.js":false,"./icons/message-square-reply.js":false,"./icons/message-square-quote.js":false,"./icons/message-square-text.js":false,"./icons/message-square-share.js":false,"./icons/message-square-warning.js":false,"./icons/message-square-x.js":false,"./icons/message-square.js":false,"./icons/messages-square.js":false,"./icons/mic-off.js":false,"./icons/mic.js":false,"./icons/microchip.js":false,"./icons/microscope.js":false,"./icons/microwave.js":false,"./icons/milestone.js":false,"./icons/milk-off.js":false,"./icons/milk.js":false,"./icons/minimize-2.js":false,"./icons/minimize.js":false,"./icons/minus.js":"9USsn","./icons/monitor-check.js":false,"./icons/monitor-cog.js":false,"./icons/monitor-down.js":false,"./icons/monitor-dot.js":false,"./icons/monitor-off.js":false,"./icons/monitor-play.js":false,"./icons/monitor-pause.js":false,"./icons/monitor-smartphone.js":false,"./icons/monitor-stop.js":false,"./icons/monitor-speaker.js":false,"./icons/monitor-up.js":false,"./icons/monitor-x.js":false,"./icons/monitor.js":false,"./icons/moon-star.js":false,"./icons/moon.js":false,"./icons/mountain-snow.js":false,"./icons/mountain.js":false,"./icons/mouse-off.js":false,"./icons/mouse-pointer-2.js":false,"./icons/mouse-pointer-ban.js":false,"./icons/mouse-pointer-click.js":false,"./icons/mouse-pointer.js":false,"./icons/mouse.js":false,"./icons/move-diagonal.js":false,"./icons/move-diagonal-2.js":false,"./icons/move-down-left.js":false,"./icons/move-down-right.js":false,"./icons/move-down.js":false,"./icons/move-horizontal.js":false,"./icons/move-left.js":false,"./icons/move-right.js":false,"./icons/move-up-left.js":false,"./icons/move-up-right.js":false,"./icons/move-up.js":false,"./icons/move-vertical.js":false,"./icons/move.js":false,"./icons/music-2.js":false,"./icons/music-3.js":false,"./icons/music-4.js":false,"./icons/music.js":false,"./icons/navigation-2-off.js":false,"./icons/navigation-2.js":false,"./icons/navigation-off.js":false,"./icons/navigation.js":false,"./icons/network.js":false,"./icons/newspaper.js":false,"./icons/nfc.js":false,"./icons/non-binary.js":false,"./icons/notebook-pen.js":false,"./icons/notebook-text.js":false,"./icons/notebook-tabs.js":false,"./icons/notebook.js":false,"./icons/notepad-text.js":false,"./icons/notepad-text-dashed.js":false,"./icons/nut-off.js":false,"./icons/nut.js":false,"./icons/octagon-minus.js":false,"./icons/octagon.js":false,"./icons/omega.js":false,"./icons/option.js":false,"./icons/orbit.js":false,"./icons/origami.js":false,"./icons/package-check.js":false,"./icons/package-2.js":false,"./icons/package-minus.js":false,"./icons/package-open.js":false,"./icons/package-plus.js":false,"./icons/package-search.js":false,"./icons/package-x.js":false,"./icons/package.js":false,"./icons/paint-bucket.js":false,"./icons/paint-roller.js":false,"./icons/paintbrush.js":false,"./icons/palette.js":false,"./icons/panda.js":false,"./icons/panel-bottom-close.js":false,"./icons/panel-bottom.js":false,"./icons/panel-bottom-open.js":false,"./icons/panel-left-right-dashed.js":false,"./icons/panel-right-close.js":false,"./icons/panel-right-open.js":false,"./icons/panel-right.js":false,"./icons/panel-top-bottom-dashed.js":false,"./icons/panel-top-close.js":false,"./icons/panel-top-open.js":false,"./icons/panel-top.js":false,"./icons/panels-left-bottom.js":false,"./icons/panels-right-bottom.js":false,"./icons/paperclip.js":false,"./icons/parentheses.js":false,"./icons/parking-meter.js":false,"./icons/party-popper.js":false,"./icons/pause.js":false,"./icons/paw-print.js":false,"./icons/pc-case.js":false,"./icons/pen-off.js":false,"./icons/pen-tool.js":false,"./icons/pencil-line.js":false,"./icons/pencil-off.js":false,"./icons/pencil-ruler.js":false,"./icons/pencil.js":false,"./icons/pentagon.js":false,"./icons/percent.js":false,"./icons/person-standing.js":false,"./icons/philippine-peso.js":false,"./icons/phone-call.js":false,"./icons/phone-forwarded.js":false,"./icons/phone-incoming.js":false,"./icons/phone-missed.js":false,"./icons/phone-off.js":false,"./icons/phone-outgoing.js":false,"./icons/phone.js":false,"./icons/pi.js":false,"./icons/pickaxe.js":false,"./icons/piano.js":false,"./icons/picture-in-picture-2.js":false,"./icons/picture-in-picture.js":false,"./icons/pilcrow-left.js":false,"./icons/piggy-bank.js":false,"./icons/pilcrow-right.js":false,"./icons/pilcrow.js":false,"./icons/pill-bottle.js":false,"./icons/pill.js":false,"./icons/pin-off.js":false,"./icons/pin.js":false,"./icons/pipette.js":false,"./icons/pizza.js":false,"./icons/plane-landing.js":false,"./icons/plane-takeoff.js":false,"./icons/plane.js":false,"./icons/play.js":false,"./icons/plug-2.js":false,"./icons/plug.js":false,"./icons/plus.js":"4DEkP","./icons/pocket-knife.js":false,"./icons/pocket.js":false,"./icons/podcast.js":false,"./icons/pointer-off.js":false,"./icons/pointer.js":false,"./icons/popcorn.js":false,"./icons/popsicle.js":false,"./icons/pound-sterling.js":false,"./icons/power.js":false,"./icons/power-off.js":false,"./icons/presentation.js":false,"./icons/printer-check.js":false,"./icons/printer.js":false,"./icons/projector.js":false,"./icons/proportions.js":false,"./icons/puzzle.js":false,"./icons/pyramid.js":false,"./icons/qr-code.js":false,"./icons/quote.js":false,"./icons/rabbit.js":false,"./icons/radar.js":false,"./icons/radiation.js":false,"./icons/radical.js":false,"./icons/radio-receiver.js":false,"./icons/radio-tower.js":false,"./icons/radio.js":false,"./icons/radius.js":false,"./icons/rail-symbol.js":false,"./icons/rainbow.js":false,"./icons/rat.js":false,"./icons/ratio.js":false,"./icons/receipt-cent.js":false,"./icons/receipt-indian-rupee.js":false,"./icons/receipt-euro.js":false,"./icons/receipt-japanese-yen.js":false,"./icons/receipt-pound-sterling.js":false,"./icons/receipt-russian-ruble.js":false,"./icons/receipt-swiss-franc.js":false,"./icons/receipt-text.js":false,"./icons/receipt-turkish-lira.js":false,"./icons/receipt.js":false,"./icons/rectangle-circle.js":false,"./icons/rectangle-goggles.js":false,"./icons/rectangle-horizontal.js":false,"./icons/rectangle-vertical.js":false,"./icons/recycle.js":false,"./icons/redo-2.js":false,"./icons/redo-dot.js":false,"./icons/refresh-ccw-dot.js":false,"./icons/redo.js":false,"./icons/refresh-ccw.js":false,"./icons/refresh-cw-off.js":false,"./icons/refresh-cw.js":false,"./icons/refrigerator.js":false,"./icons/regex.js":false,"./icons/remove-formatting.js":false,"./icons/repeat-1.js":false,"./icons/repeat-2.js":false,"./icons/repeat.js":false,"./icons/replace-all.js":false,"./icons/replace.js":false,"./icons/reply-all.js":false,"./icons/reply.js":false,"./icons/rewind.js":false,"./icons/ribbon.js":false,"./icons/rocket.js":false,"./icons/rocking-chair.js":false,"./icons/rose.js":false,"./icons/roller-coaster.js":false,"./icons/rotate-ccw-key.js":false,"./icons/rotate-ccw-square.js":false,"./icons/rotate-ccw.js":false,"./icons/rotate-cw-square.js":false,"./icons/rotate-cw.js":false,"./icons/route-off.js":false,"./icons/route.js":false,"./icons/router.js":false,"./icons/rows-4.js":false,"./icons/rss.js":false,"./icons/ruler-dimension-line.js":false,"./icons/ruler.js":false,"./icons/russian-ruble.js":false,"./icons/sailboat.js":false,"./icons/salad.js":false,"./icons/sandwich.js":false,"./icons/satellite-dish.js":false,"./icons/satellite.js":false,"./icons/saudi-riyal.js":false,"./icons/save-all.js":false,"./icons/save-off.js":false,"./icons/save.js":false,"./icons/scale.js":false,"./icons/scaling.js":false,"./icons/scan-barcode.js":false,"./icons/scan-eye.js":false,"./icons/scan-face.js":false,"./icons/scan-heart.js":false,"./icons/scan-line.js":false,"./icons/scan-qr-code.js":false,"./icons/scan-search.js":false,"./icons/scan-text.js":false,"./icons/scan.js":false,"./icons/school.js":false,"./icons/scissors-line-dashed.js":false,"./icons/scissors.js":false,"./icons/screen-share.js":false,"./icons/screen-share-off.js":false,"./icons/scroll-text.js":false,"./icons/scroll.js":false,"./icons/search-check.js":false,"./icons/search-x.js":false,"./icons/search-code.js":false,"./icons/search-slash.js":false,"./icons/search.js":false,"./icons/section.js":false,"./icons/send.js":"fQUXo","./icons/send-to-back.js":false,"./icons/separator-horizontal.js":false,"./icons/separator-vertical.js":false,"./icons/server-cog.js":false,"./icons/server-crash.js":false,"./icons/server-off.js":false,"./icons/server.js":false,"./icons/settings.js":false,"./icons/settings-2.js":false,"./icons/shapes.js":false,"./icons/share-2.js":false,"./icons/share.js":false,"./icons/sheet.js":false,"./icons/shell.js":false,"./icons/shield-alert.js":false,"./icons/shield-ban.js":false,"./icons/shield-check.js":false,"./icons/shield-ellipsis.js":false,"./icons/shield-half.js":false,"./icons/shield-minus.js":false,"./icons/shield-off.js":false,"./icons/shield-plus.js":false,"./icons/shield-user.js":false,"./icons/shield.js":false,"./icons/ship-wheel.js":false,"./icons/ship.js":false,"./icons/shirt.js":false,"./icons/shopping-bag.js":false,"./icons/shopping-basket.js":false,"./icons/shopping-cart.js":false,"./icons/shovel.js":false,"./icons/shower-head.js":false,"./icons/shredder.js":false,"./icons/shrimp.js":false,"./icons/shrink.js":false,"./icons/shrub.js":false,"./icons/shuffle.js":false,"./icons/sigma.js":false,"./icons/signal-high.js":false,"./icons/signal-low.js":false,"./icons/signal-medium.js":false,"./icons/signal-zero.js":false,"./icons/signal.js":false,"./icons/signature.js":false,"./icons/signpost-big.js":false,"./icons/signpost.js":false,"./icons/siren.js":false,"./icons/skip-back.js":false,"./icons/skip-forward.js":false,"./icons/skull.js":false,"./icons/slack.js":false,"./icons/slash.js":false,"./icons/slice.js":false,"./icons/sliders-horizontal.js":false,"./icons/smartphone-charging.js":false,"./icons/smartphone-nfc.js":false,"./icons/smartphone.js":false,"./icons/smile-plus.js":false,"./icons/smile.js":false,"./icons/snail.js":false,"./icons/snowflake.js":false,"./icons/soap-dispenser-droplet.js":false,"./icons/sofa.js":false,"./icons/soup.js":false,"./icons/spade.js":false,"./icons/space.js":false,"./icons/sparkle.js":false,"./icons/speaker.js":false,"./icons/speech.js":false,"./icons/spell-check-2.js":false,"./icons/spell-check.js":false,"./icons/spline.js":false,"./icons/spline-pointer.js":false,"./icons/split.js":false,"./icons/spotlight.js":false,"./icons/spool.js":false,"./icons/spray-can.js":false,"./icons/sprout.js":false,"./icons/square-dashed-bottom-code.js":false,"./icons/square-dashed-bottom.js":false,"./icons/square-dashed-top-solid.js":false,"./icons/square-pause.js":false,"./icons/square-radical.js":false,"./icons/square-round-corner.js":false,"./icons/square-square.js":false,"./icons/square-stack.js":false,"./icons/square-star.js":false,"./icons/square-stop.js":false,"./icons/square.js":false,"./icons/squares-exclude.js":false,"./icons/squares-intersect.js":false,"./icons/squares-subtract.js":false,"./icons/squares-unite.js":false,"./icons/squircle-dashed.js":false,"./icons/squircle.js":false,"./icons/squirrel.js":false,"./icons/stamp.js":false,"./icons/star-half.js":false,"./icons/star.js":false,"./icons/star-off.js":false,"./icons/step-back.js":false,"./icons/step-forward.js":false,"./icons/stethoscope.js":false,"./icons/sticker.js":false,"./icons/sticky-note.js":false,"./icons/store.js":false,"./icons/stretch-horizontal.js":false,"./icons/stretch-vertical.js":false,"./icons/strikethrough.js":false,"./icons/subscript.js":false,"./icons/sun-dim.js":false,"./icons/sun-medium.js":false,"./icons/sun-moon.js":false,"./icons/sun-snow.js":false,"./icons/sun.js":false,"./icons/sunrise.js":false,"./icons/sunset.js":false,"./icons/superscript.js":false,"./icons/swatch-book.js":false,"./icons/swiss-franc.js":false,"./icons/switch-camera.js":false,"./icons/sword.js":false,"./icons/swords.js":false,"./icons/syringe.js":false,"./icons/table-2.js":false,"./icons/table-cells-merge.js":false,"./icons/table-cells-split.js":false,"./icons/table-columns-split.js":false,"./icons/table-properties.js":false,"./icons/table-of-contents.js":false,"./icons/table-rows-split.js":false,"./icons/table.js":false,"./icons/tablet-smartphone.js":false,"./icons/tablet.js":false,"./icons/tablets.js":false,"./icons/tags.js":false,"./icons/tag.js":false,"./icons/tally-1.js":false,"./icons/tally-2.js":false,"./icons/tally-3.js":false,"./icons/tally-4.js":false,"./icons/tangent.js":false,"./icons/tally-5.js":false,"./icons/target.js":false,"./icons/telescope.js":false,"./icons/tent-tree.js":false,"./icons/tent.js":false,"./icons/terminal.js":false,"./icons/test-tube.js":false,"./icons/test-tubes.js":false,"./icons/text-cursor-input.js":false,"./icons/text-cursor.js":false,"./icons/text-quote.js":false,"./icons/text-search.js":false,"./icons/theater.js":false,"./icons/thermometer-snowflake.js":false,"./icons/thermometer-sun.js":false,"./icons/thermometer.js":false,"./icons/thumbs-down.js":false,"./icons/thumbs-up.js":false,"./icons/ticket-check.js":false,"./icons/ticket-minus.js":false,"./icons/ticket-percent.js":false,"./icons/ticket-slash.js":false,"./icons/ticket-plus.js":false,"./icons/ticket-x.js":false,"./icons/ticket.js":false,"./icons/tickets-plane.js":false,"./icons/tickets.js":false,"./icons/timer-off.js":false,"./icons/timer-reset.js":false,"./icons/timer.js":false,"./icons/toggle-left.js":false,"./icons/toggle-right.js":false,"./icons/toilet.js":false,"./icons/tornado.js":false,"./icons/tool-case.js":false,"./icons/torus.js":false,"./icons/touchpad-off.js":false,"./icons/touchpad.js":false,"./icons/tower-control.js":false,"./icons/toy-brick.js":false,"./icons/tractor.js":false,"./icons/traffic-cone.js":false,"./icons/train-front-tunnel.js":false,"./icons/train-front.js":false,"./icons/train-track.js":false,"./icons/transgender.js":false,"./icons/trash-2.js":false,"./icons/trash.js":false,"./icons/tree-deciduous.js":false,"./icons/tree-pine.js":false,"./icons/trees.js":false,"./icons/trello.js":false,"./icons/trending-down.js":false,"./icons/trending-up-down.js":false,"./icons/trending-up.js":false,"./icons/triangle-dashed.js":false,"./icons/triangle-right.js":false,"./icons/triangle.js":false,"./icons/trophy.js":false,"./icons/truck-electric.js":false,"./icons/truck.js":false,"./icons/turntable.js":false,"./icons/turkish-lira.js":false,"./icons/turtle.js":false,"./icons/tv-minimal-play.js":false,"./icons/twitch.js":false,"./icons/tv.js":false,"./icons/twitter.js":false,"./icons/type-outline.js":false,"./icons/type.js":false,"./icons/umbrella-off.js":false,"./icons/umbrella.js":false,"./icons/underline.js":false,"./icons/undo-2.js":false,"./icons/undo-dot.js":false,"./icons/undo.js":false,"./icons/unfold-horizontal.js":false,"./icons/unfold-vertical.js":false,"./icons/ungroup.js":false,"./icons/unlink.js":false,"./icons/unlink-2.js":false,"./icons/unplug.js":false,"./icons/upload.js":false,"./icons/usb.js":false,"./icons/user-check.js":false,"./icons/user-cog.js":false,"./icons/user-lock.js":false,"./icons/user-pen.js":false,"./icons/user-minus.js":false,"./icons/user-plus.js":false,"./icons/user-round-pen.js":false,"./icons/user-round-search.js":false,"./icons/user-search.js":false,"./icons/user-star.js":false,"./icons/user-x.js":false,"./icons/user.js":false,"./icons/users.js":"ipAe9","./icons/utility-pole.js":false,"./icons/variable.js":false,"./icons/vault.js":false,"./icons/vector-square.js":false,"./icons/vegan.js":false,"./icons/venetian-mask.js":false,"./icons/venus-and-mars.js":false,"./icons/venus.js":false,"./icons/vibrate-off.js":false,"./icons/vibrate.js":false,"./icons/video-off.js":false,"./icons/video.js":false,"./icons/videotape.js":false,"./icons/view.js":false,"./icons/voicemail.js":false,"./icons/volleyball.js":false,"./icons/volume-1.js":false,"./icons/volume-2.js":false,"./icons/volume-off.js":false,"./icons/volume-x.js":false,"./icons/volume.js":false,"./icons/vote.js":false,"./icons/wallet-cards.js":false,"./icons/wallet.js":false,"./icons/wallpaper.js":false,"./icons/wand.js":false,"./icons/warehouse.js":false,"./icons/washing-machine.js":false,"./icons/watch.js":false,"./icons/waves-ladder.js":false,"./icons/waves.js":false,"./icons/webcam.js":false,"./icons/waypoints.js":false,"./icons/webhook.js":false,"./icons/webhook-off.js":false,"./icons/weight.js":false,"./icons/wheat-off.js":false,"./icons/wheat.js":false,"./icons/wifi-cog.js":false,"./icons/whole-word.js":false,"./icons/wifi-high.js":false,"./icons/wifi-low.js":false,"./icons/wifi-off.js":false,"./icons/wifi-pen.js":false,"./icons/wifi-sync.js":false,"./icons/wifi-zero.js":false,"./icons/wifi.js":false,"./icons/wind-arrow-down.js":false,"./icons/wind.js":false,"./icons/wine-off.js":false,"./icons/wine.js":"1gG09","./icons/workflow.js":false,"./icons/worm.js":false,"./icons/wrench.js":false,"./icons/x.js":false,"./icons/youtube.js":false,"./icons/zap-off.js":false,"./icons/zap.js":false,"./icons/zoom-in.js":false,"./icons/zoom-out.js":false,"./icons/arrow-down-1-0.js":false,"./icons/arrow-down-0-1.js":false,"./icons/arrow-up-0-1.js":false,"./icons/arrow-up-1-0.js":false,"./createLucideIcon.js":false,"./Icon.js":false,"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jGFMs":[function(require,module,exports,__globalThis) {
/**
 * @license lucide-react v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "__iconNode", ()=>__iconNode);
parcelHelpers.export(exports, "default", ()=>Utensils);
var _createLucideIconJs = require("../createLucideIcon.js");
var _createLucideIconJsDefault = parcelHelpers.interopDefault(_createLucideIconJs);
const __iconNode = [
    [
        "path",
        {
            d: "M3 2v7c0 1.1.9 2 2 2h4a2 2 0 0 0 2-2V2",
            key: "cjf0a3"
        }
    ],
    [
        "path",
        {
            d: "M7 2v20",
            key: "1473qp"
        }
    ],
    [
        "path",
        {
            d: "M21 15V2a5 5 0 0 0-5 5v6c0 1.1.9 2 2 2h3Zm0 0v7",
            key: "j28e5"
        }
    ]
];
const Utensils = (0, _createLucideIconJsDefault.default)("utensils", __iconNode);

},{"../createLucideIcon.js":"c2nE9","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"c2nE9":[function(require,module,exports,__globalThis) {
/**
 * @license lucide-react v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>createLucideIcon);
var _react = require("react");
var _utilsJs = require("./shared/src/utils.js");
var _iconJs = require("./Icon.js");
var _iconJsDefault = parcelHelpers.interopDefault(_iconJs);
const createLucideIcon = (iconName, iconNode)=>{
    const Component = (0, _react.forwardRef)(({ className, ...props }, ref)=>(0, _react.createElement)((0, _iconJsDefault.default), {
            ref,
            iconNode,
            className: (0, _utilsJs.mergeClasses)(`lucide-${(0, _utilsJs.toKebabCase)((0, _utilsJs.toPascalCase)(iconName))}`, `lucide-${iconName}`, className),
            ...props
        }));
    Component.displayName = (0, _utilsJs.toPascalCase)(iconName);
    return Component;
};

},{"react":"jMk1U","./shared/src/utils.js":"8WM4g","./Icon.js":"dOacq","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8WM4g":[function(require,module,exports,__globalThis) {
/**
 * @license lucide-react v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "hasA11yProp", ()=>hasA11yProp);
parcelHelpers.export(exports, "mergeClasses", ()=>mergeClasses);
parcelHelpers.export(exports, "toCamelCase", ()=>toCamelCase);
parcelHelpers.export(exports, "toKebabCase", ()=>toKebabCase);
parcelHelpers.export(exports, "toPascalCase", ()=>toPascalCase);
const toKebabCase = (string)=>string.replace(/([a-z0-9])([A-Z])/g, "$1-$2").toLowerCase();
const toCamelCase = (string)=>string.replace(/^([A-Z])|[\s-_]+(\w)/g, (match, p1, p2)=>p2 ? p2.toUpperCase() : p1.toLowerCase());
const toPascalCase = (string)=>{
    const camelCase = toCamelCase(string);
    return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);
};
const mergeClasses = (...classes)=>classes.filter((className, index, array)=>{
        return Boolean(className) && className.trim() !== "" && array.indexOf(className) === index;
    }).join(" ").trim();
const hasA11yProp = (props)=>{
    for(const prop in props){
        if (prop.startsWith("aria-") || prop === "role" || prop === "title") return true;
    }
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dOacq":[function(require,module,exports,__globalThis) {
/**
 * @license lucide-react v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>Icon);
var _react = require("react");
var _defaultAttributesJs = require("./defaultAttributes.js");
var _defaultAttributesJsDefault = parcelHelpers.interopDefault(_defaultAttributesJs);
var _utilsJs = require("./shared/src/utils.js");
const Icon = (0, _react.forwardRef)(({ color = "currentColor", size = 24, strokeWidth = 2, absoluteStrokeWidth, className = "", children, iconNode, ...rest }, ref)=>(0, _react.createElement)("svg", {
        ref,
        ...(0, _defaultAttributesJsDefault.default),
        width: size,
        height: size,
        stroke: color,
        strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,
        className: (0, _utilsJs.mergeClasses)("lucide", className),
        ...!children && !(0, _utilsJs.hasA11yProp)(rest) && {
            "aria-hidden": "true"
        },
        ...rest
    }, [
        ...iconNode.map(([tag, attrs])=>(0, _react.createElement)(tag, attrs)),
        ...Array.isArray(children) ? children : [
            children
        ]
    ]));

},{"react":"jMk1U","./defaultAttributes.js":"bY6E5","./shared/src/utils.js":"8WM4g","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bY6E5":[function(require,module,exports,__globalThis) {
/**
 * @license lucide-react v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>defaultAttributes);
var defaultAttributes = {
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: "currentColor",
    strokeWidth: 2,
    strokeLinecap: "round",
    strokeLinejoin: "round"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7bDKz":[function(require,module,exports,__globalThis) {
/**
 * @license lucide-react v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "__iconNode", ()=>__iconNode);
parcelHelpers.export(exports, "default", ()=>Award);
var _createLucideIconJs = require("../createLucideIcon.js");
var _createLucideIconJsDefault = parcelHelpers.interopDefault(_createLucideIconJs);
const __iconNode = [
    [
        "path",
        {
            d: "m15.477 12.89 1.515 8.526a.5.5 0 0 1-.81.47l-3.58-2.687a1 1 0 0 0-1.197 0l-3.586 2.686a.5.5 0 0 1-.81-.469l1.514-8.526",
            key: "1yiouv"
        }
    ],
    [
        "circle",
        {
            cx: "12",
            cy: "8",
            r: "6",
            key: "1vp47v"
        }
    ]
];
const Award = (0, _createLucideIconJsDefault.default)("award", __iconNode);

},{"../createLucideIcon.js":"c2nE9","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"irEtD":[function(require,module,exports,__globalThis) {
/**
 * @license lucide-react v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "__iconNode", ()=>__iconNode);
parcelHelpers.export(exports, "default", ()=>Check);
var _createLucideIconJs = require("../createLucideIcon.js");
var _createLucideIconJsDefault = parcelHelpers.interopDefault(_createLucideIconJs);
const __iconNode = [
    [
        "path",
        {
            d: "M20 6 9 17l-5-5",
            key: "1gmf2c"
        }
    ]
];
const Check = (0, _createLucideIconJsDefault.default)("check", __iconNode);

},{"../createLucideIcon.js":"c2nE9","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jfA6v":[function(require,module,exports,__globalThis) {
/**
 * @license lucide-react v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "__iconNode", ()=>__iconNode);
parcelHelpers.export(exports, "default", ()=>ChevronDown);
var _createLucideIconJs = require("../createLucideIcon.js");
var _createLucideIconJsDefault = parcelHelpers.interopDefault(_createLucideIconJs);
const __iconNode = [
    [
        "path",
        {
            d: "m6 9 6 6 6-6",
            key: "qrunsl"
        }
    ]
];
const ChevronDown = (0, _createLucideIconJsDefault.default)("chevron-down", __iconNode);

},{"../createLucideIcon.js":"c2nE9","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"33IhA":[function(require,module,exports,__globalThis) {
/**
 * @license lucide-react v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "__iconNode", ()=>__iconNode);
parcelHelpers.export(exports, "default", ()=>ChevronUp);
var _createLucideIconJs = require("../createLucideIcon.js");
var _createLucideIconJsDefault = parcelHelpers.interopDefault(_createLucideIconJs);
const __iconNode = [
    [
        "path",
        {
            d: "m18 15-6-6-6 6",
            key: "153udz"
        }
    ]
];
const ChevronUp = (0, _createLucideIconJsDefault.default)("chevron-up", __iconNode);

},{"../createLucideIcon.js":"c2nE9","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hzfLK":[function(require,module,exports,__globalThis) {
/**
 * @license lucide-react v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "__iconNode", ()=>__iconNode);
parcelHelpers.export(exports, "default", ()=>Circle);
var _createLucideIconJs = require("../createLucideIcon.js");
var _createLucideIconJsDefault = parcelHelpers.interopDefault(_createLucideIconJs);
const __iconNode = [
    [
        "circle",
        {
            cx: "12",
            cy: "12",
            r: "10",
            key: "1mglay"
        }
    ]
];
const Circle = (0, _createLucideIconJsDefault.default)("circle", __iconNode);

},{"../createLucideIcon.js":"c2nE9","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9USsn":[function(require,module,exports,__globalThis) {
/**
 * @license lucide-react v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "__iconNode", ()=>__iconNode);
parcelHelpers.export(exports, "default", ()=>Minus);
var _createLucideIconJs = require("../createLucideIcon.js");
var _createLucideIconJsDefault = parcelHelpers.interopDefault(_createLucideIconJs);
const __iconNode = [
    [
        "path",
        {
            d: "M5 12h14",
            key: "1ays0h"
        }
    ]
];
const Minus = (0, _createLucideIconJsDefault.default)("minus", __iconNode);

},{"../createLucideIcon.js":"c2nE9","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4DEkP":[function(require,module,exports,__globalThis) {
/**
 * @license lucide-react v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "__iconNode", ()=>__iconNode);
parcelHelpers.export(exports, "default", ()=>Plus);
var _createLucideIconJs = require("../createLucideIcon.js");
var _createLucideIconJsDefault = parcelHelpers.interopDefault(_createLucideIconJs);
const __iconNode = [
    [
        "path",
        {
            d: "M5 12h14",
            key: "1ays0h"
        }
    ],
    [
        "path",
        {
            d: "M12 5v14",
            key: "s699le"
        }
    ]
];
const Plus = (0, _createLucideIconJsDefault.default)("plus", __iconNode);

},{"../createLucideIcon.js":"c2nE9","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fQUXo":[function(require,module,exports,__globalThis) {
/**
 * @license lucide-react v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "__iconNode", ()=>__iconNode);
parcelHelpers.export(exports, "default", ()=>Send);
var _createLucideIconJs = require("../createLucideIcon.js");
var _createLucideIconJsDefault = parcelHelpers.interopDefault(_createLucideIconJs);
const __iconNode = [
    [
        "path",
        {
            d: "M14.536 21.686a.5.5 0 0 0 .937-.024l6.5-19a.496.496 0 0 0-.635-.635l-19 6.5a.5.5 0 0 0-.024.937l7.93 3.18a2 2 0 0 1 1.112 1.11z",
            key: "1ffxy3"
        }
    ],
    [
        "path",
        {
            d: "m21.854 2.147-10.94 10.939",
            key: "12cjpa"
        }
    ]
];
const Send = (0, _createLucideIconJsDefault.default)("send", __iconNode);

},{"../createLucideIcon.js":"c2nE9","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ipAe9":[function(require,module,exports,__globalThis) {
/**
 * @license lucide-react v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "__iconNode", ()=>__iconNode);
parcelHelpers.export(exports, "default", ()=>Users);
var _createLucideIconJs = require("../createLucideIcon.js");
var _createLucideIconJsDefault = parcelHelpers.interopDefault(_createLucideIconJs);
const __iconNode = [
    [
        "path",
        {
            d: "M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2",
            key: "1yyitq"
        }
    ],
    [
        "path",
        {
            d: "M16 3.128a4 4 0 0 1 0 7.744",
            key: "16gr8j"
        }
    ],
    [
        "path",
        {
            d: "M22 21v-2a4 4 0 0 0-3-3.87",
            key: "kshegd"
        }
    ],
    [
        "circle",
        {
            cx: "9",
            cy: "7",
            r: "4",
            key: "nufk8"
        }
    ]
];
const Users = (0, _createLucideIconJsDefault.default)("users", __iconNode);

},{"../createLucideIcon.js":"c2nE9","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1gG09":[function(require,module,exports,__globalThis) {
/**
 * @license lucide-react v0.544.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "__iconNode", ()=>__iconNode);
parcelHelpers.export(exports, "default", ()=>Wine);
var _createLucideIconJs = require("../createLucideIcon.js");
var _createLucideIconJsDefault = parcelHelpers.interopDefault(_createLucideIconJs);
const __iconNode = [
    [
        "path",
        {
            d: "M8 22h8",
            key: "rmew8v"
        }
    ],
    [
        "path",
        {
            d: "M7 10h10",
            key: "1101jm"
        }
    ],
    [
        "path",
        {
            d: "M12 15v7",
            key: "t2xh3l"
        }
    ],
    [
        "path",
        {
            d: "M12 15a5 5 0 0 0 5-5c0-2-.5-4-2-8H9c-1.5 4-2 6-2 8a5 5 0 0 0 5 5Z",
            key: "10ffi3"
        }
    ]
];
const Wine = (0, _createLucideIconJsDefault.default)("wine", __iconNode);

},{"../createLucideIcon.js":"c2nE9","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"baFNz":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$c91b = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$c91b.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$c91b.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Checkbox", ()=>Checkbox);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactCheckbox = require("@radix-ui/react-checkbox");
var _lucideReact = require("lucide-react");
var _utils = require("./utils");
"use client";
function Checkbox({ className, ...props }) {
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)(_reactCheckbox.Root, {
        "data-slot": "checkbox",
        className: (0, _utils.cn)("peer border bg-input-background dark:bg-input/30 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground dark:data-[state=checked]:bg-primary data-[state=checked]:border-primary focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive size-4 shrink-0 rounded-[4px] border shadow-xs transition-shadow outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50", className),
        ...props,
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)(_reactCheckbox.Indicator, {
            "data-slot": "checkbox-indicator",
            className: "flex items-center justify-center text-current transition-none",
            children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _lucideReact.CheckIcon), {
                className: "size-3.5"
            }, void 0, false, {
                fileName: "src/components/ui/checkbox.tsx",
                lineNumber: 26,
                columnNumber: 9
            }, this)
        }, void 0, false, {
            fileName: "src/components/ui/checkbox.tsx",
            lineNumber: 22,
            columnNumber: 7
        }, this)
    }, void 0, false, {
        fileName: "src/components/ui/checkbox.tsx",
        lineNumber: 14,
        columnNumber: 5
    }, this);
}
_c = Checkbox;
var _c;
$RefreshReg$(_c, "Checkbox");

  $parcel$ReactRefreshHelpers$c91b.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","@radix-ui/react-checkbox":"bU0D5","lucide-react":"2I7qR","./utils":"3OSqM","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"bU0D5":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Checkbox", ()=>Checkbox);
parcelHelpers.export(exports, "CheckboxIndicator", ()=>CheckboxIndicator);
parcelHelpers.export(exports, "Indicator", ()=>CheckboxIndicator);
parcelHelpers.export(exports, "Root", ()=>Checkbox);
parcelHelpers.export(exports, "createCheckboxScope", ()=>createCheckboxScope);
parcelHelpers.export(exports, "unstable_BubbleInput", ()=>CheckboxBubbleInput);
parcelHelpers.export(exports, "unstable_CheckboxBubbleInput", ()=>CheckboxBubbleInput);
parcelHelpers.export(exports, "unstable_CheckboxProvider", ()=>CheckboxProvider);
parcelHelpers.export(exports, "unstable_CheckboxTrigger", ()=>CheckboxTrigger);
parcelHelpers.export(exports, "unstable_Provider", ()=>CheckboxProvider);
parcelHelpers.export(exports, "unstable_Trigger", ()=>CheckboxTrigger);
// src/checkbox.tsx
var _react = require("react");
var _reactComposeRefs = require("@radix-ui/react-compose-refs");
var _reactContext = require("@radix-ui/react-context");
var _primitive = require("@radix-ui/primitive");
var _reactUseControllableState = require("@radix-ui/react-use-controllable-state");
var _reactUsePrevious = require("@radix-ui/react-use-previous");
var _reactUseSize = require("@radix-ui/react-use-size");
var _reactPresence = require("@radix-ui/react-presence");
var _reactPrimitive = require("@radix-ui/react-primitive");
var _jsxRuntime = require("react/jsx-runtime");
"use client";
var CHECKBOX_NAME = "Checkbox";
var [createCheckboxContext, createCheckboxScope] = (0, _reactContext.createContextScope)(CHECKBOX_NAME);
var [CheckboxProviderImpl, useCheckboxContext] = createCheckboxContext(CHECKBOX_NAME);
function CheckboxProvider(props) {
    const { __scopeCheckbox, checked: checkedProp, children, defaultChecked, disabled, form, name, onCheckedChange, required, value = "on", // @ts-expect-error
    internal_do_not_use_render } = props;
    const [checked, setChecked] = (0, _reactUseControllableState.useControllableState)({
        prop: checkedProp,
        defaultProp: defaultChecked ?? false,
        onChange: onCheckedChange,
        caller: CHECKBOX_NAME
    });
    const [control, setControl] = _react.useState(null);
    const [bubbleInput, setBubbleInput] = _react.useState(null);
    const hasConsumerStoppedPropagationRef = _react.useRef(false);
    const isFormControl = control ? !!form || !!control.closest("form") : // We set this to true by default so that events bubble to forms without JS (SSR)
    true;
    const context = {
        checked,
        disabled,
        setChecked,
        control,
        setControl,
        name,
        form,
        value,
        hasConsumerStoppedPropagationRef,
        required,
        defaultChecked: isIndeterminate(defaultChecked) ? false : defaultChecked,
        isFormControl,
        bubbleInput,
        setBubbleInput
    };
    return /* @__PURE__ */ (0, _jsxRuntime.jsx)(CheckboxProviderImpl, {
        scope: __scopeCheckbox,
        ...context,
        children: isFunction(internal_do_not_use_render) ? internal_do_not_use_render(context) : children
    });
}
var TRIGGER_NAME = "CheckboxTrigger";
var CheckboxTrigger = _react.forwardRef(({ __scopeCheckbox, onKeyDown, onClick, ...checkboxProps }, forwardedRef)=>{
    const { control, value, disabled, checked, required, setControl, setChecked, hasConsumerStoppedPropagationRef, isFormControl, bubbleInput } = useCheckboxContext(TRIGGER_NAME, __scopeCheckbox);
    const composedRefs = (0, _reactComposeRefs.useComposedRefs)(forwardedRef, setControl);
    const initialCheckedStateRef = _react.useRef(checked);
    _react.useEffect(()=>{
        const form = control?.form;
        if (form) {
            const reset = ()=>setChecked(initialCheckedStateRef.current);
            form.addEventListener("reset", reset);
            return ()=>form.removeEventListener("reset", reset);
        }
    }, [
        control,
        setChecked
    ]);
    return /* @__PURE__ */ (0, _jsxRuntime.jsx)((0, _reactPrimitive.Primitive).button, {
        type: "button",
        role: "checkbox",
        "aria-checked": isIndeterminate(checked) ? "mixed" : checked,
        "aria-required": required,
        "data-state": getState(checked),
        "data-disabled": disabled ? "" : void 0,
        disabled,
        value,
        ...checkboxProps,
        ref: composedRefs,
        onKeyDown: (0, _primitive.composeEventHandlers)(onKeyDown, (event)=>{
            if (event.key === "Enter") event.preventDefault();
        }),
        onClick: (0, _primitive.composeEventHandlers)(onClick, (event)=>{
            setChecked((prevChecked)=>isIndeterminate(prevChecked) ? true : !prevChecked);
            if (bubbleInput && isFormControl) {
                hasConsumerStoppedPropagationRef.current = event.isPropagationStopped();
                if (!hasConsumerStoppedPropagationRef.current) event.stopPropagation();
            }
        })
    });
});
CheckboxTrigger.displayName = TRIGGER_NAME;
var Checkbox = _react.forwardRef((props, forwardedRef)=>{
    const { __scopeCheckbox, name, checked, defaultChecked, required, disabled, value, onCheckedChange, form, ...checkboxProps } = props;
    return /* @__PURE__ */ (0, _jsxRuntime.jsx)(CheckboxProvider, {
        __scopeCheckbox,
        checked,
        defaultChecked,
        disabled,
        required,
        onCheckedChange,
        name,
        form,
        value,
        internal_do_not_use_render: ({ isFormControl })=>/* @__PURE__ */ (0, _jsxRuntime.jsxs)((0, _jsxRuntime.Fragment), {
                children: [
                    /* @__PURE__ */ (0, _jsxRuntime.jsx)(CheckboxTrigger, {
                        ...checkboxProps,
                        ref: forwardedRef,
                        __scopeCheckbox
                    }),
                    isFormControl && /* @__PURE__ */ (0, _jsxRuntime.jsx)(CheckboxBubbleInput, {
                        __scopeCheckbox
                    })
                ]
            })
    });
});
Checkbox.displayName = CHECKBOX_NAME;
var INDICATOR_NAME = "CheckboxIndicator";
var CheckboxIndicator = _react.forwardRef((props, forwardedRef)=>{
    const { __scopeCheckbox, forceMount, ...indicatorProps } = props;
    const context = useCheckboxContext(INDICATOR_NAME, __scopeCheckbox);
    return /* @__PURE__ */ (0, _jsxRuntime.jsx)((0, _reactPresence.Presence), {
        present: forceMount || isIndeterminate(context.checked) || context.checked === true,
        children: /* @__PURE__ */ (0, _jsxRuntime.jsx)((0, _reactPrimitive.Primitive).span, {
            "data-state": getState(context.checked),
            "data-disabled": context.disabled ? "" : void 0,
            ...indicatorProps,
            ref: forwardedRef,
            style: {
                pointerEvents: "none",
                ...props.style
            }
        })
    });
});
CheckboxIndicator.displayName = INDICATOR_NAME;
var BUBBLE_INPUT_NAME = "CheckboxBubbleInput";
var CheckboxBubbleInput = _react.forwardRef(({ __scopeCheckbox, ...props }, forwardedRef)=>{
    const { control, hasConsumerStoppedPropagationRef, checked, defaultChecked, required, disabled, name, value, form, bubbleInput, setBubbleInput } = useCheckboxContext(BUBBLE_INPUT_NAME, __scopeCheckbox);
    const composedRefs = (0, _reactComposeRefs.useComposedRefs)(forwardedRef, setBubbleInput);
    const prevChecked = (0, _reactUsePrevious.usePrevious)(checked);
    const controlSize = (0, _reactUseSize.useSize)(control);
    _react.useEffect(()=>{
        const input = bubbleInput;
        if (!input) return;
        const inputProto = window.HTMLInputElement.prototype;
        const descriptor = Object.getOwnPropertyDescriptor(inputProto, "checked");
        const setChecked = descriptor.set;
        const bubbles = !hasConsumerStoppedPropagationRef.current;
        if (prevChecked !== checked && setChecked) {
            const event = new Event("click", {
                bubbles
            });
            input.indeterminate = isIndeterminate(checked);
            setChecked.call(input, isIndeterminate(checked) ? false : checked);
            input.dispatchEvent(event);
        }
    }, [
        bubbleInput,
        prevChecked,
        checked,
        hasConsumerStoppedPropagationRef
    ]);
    const defaultCheckedRef = _react.useRef(isIndeterminate(checked) ? false : checked);
    return /* @__PURE__ */ (0, _jsxRuntime.jsx)((0, _reactPrimitive.Primitive).input, {
        type: "checkbox",
        "aria-hidden": true,
        defaultChecked: defaultChecked ?? defaultCheckedRef.current,
        required,
        disabled,
        name,
        value,
        form,
        ...props,
        tabIndex: -1,
        ref: composedRefs,
        style: {
            ...props.style,
            ...controlSize,
            position: "absolute",
            pointerEvents: "none",
            opacity: 0,
            margin: 0,
            // We transform because the input is absolutely positioned but we have
            // rendered it **after** the button. This pulls it back to sit on top
            // of the button.
            transform: "translateX(-100%)"
        }
    });
});
CheckboxBubbleInput.displayName = BUBBLE_INPUT_NAME;
function isFunction(value) {
    return typeof value === "function";
}
function isIndeterminate(checked) {
    return checked === "indeterminate";
}
function getState(checked) {
    return isIndeterminate(checked) ? "indeterminate" : checked ? "checked" : "unchecked";
}

},{"react":"jMk1U","@radix-ui/react-compose-refs":"8NEPR","@radix-ui/react-context":"aRUGq","@radix-ui/primitive":"jakGl","@radix-ui/react-use-controllable-state":"59sI3","@radix-ui/react-use-previous":"9OYXJ","@radix-ui/react-use-size":"kuUSP","@radix-ui/react-presence":"5MpGF","@radix-ui/react-primitive":"i0I8C","react/jsx-runtime":"05iiF","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"kWMSB":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$26e5 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$26e5.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$26e5.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Select", ()=>Select);
parcelHelpers.export(exports, "SelectContent", ()=>SelectContent);
parcelHelpers.export(exports, "SelectGroup", ()=>SelectGroup);
parcelHelpers.export(exports, "SelectItem", ()=>SelectItem);
parcelHelpers.export(exports, "SelectLabel", ()=>SelectLabel);
parcelHelpers.export(exports, "SelectScrollDownButton", ()=>SelectScrollDownButton);
parcelHelpers.export(exports, "SelectScrollUpButton", ()=>SelectScrollUpButton);
parcelHelpers.export(exports, "SelectSeparator", ()=>SelectSeparator);
parcelHelpers.export(exports, "SelectTrigger", ()=>SelectTrigger);
parcelHelpers.export(exports, "SelectValue", ()=>SelectValue);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactSelect = require("@radix-ui/react-select");
var _lucideReact = require("lucide-react");
var _utils = require("./utils");
"use client";
function Select({ ...props }) {
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)(_reactSelect.Root, {
        "data-slot": "select",
        ...props
    }, void 0, false, {
        fileName: "src/components/ui/select.tsx",
        lineNumber: 16,
        columnNumber: 10
    }, this);
}
_c = Select;
function SelectGroup({ ...props }) {
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)(_reactSelect.Group, {
        "data-slot": "select-group",
        ...props
    }, void 0, false, {
        fileName: "src/components/ui/select.tsx",
        lineNumber: 22,
        columnNumber: 10
    }, this);
}
_c1 = SelectGroup;
function SelectValue({ ...props }) {
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)(_reactSelect.Value, {
        "data-slot": "select-value",
        ...props
    }, void 0, false, {
        fileName: "src/components/ui/select.tsx",
        lineNumber: 28,
        columnNumber: 10
    }, this);
}
_c2 = SelectValue;
function SelectTrigger({ className, size = "default", children, ...props }) {
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)(_reactSelect.Trigger, {
        "data-slot": "select-trigger",
        "data-size": size,
        className: (0, _utils.cn)("border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-full items-center justify-between gap-2 rounded-md border bg-input-background px-3 py-2 text-sm whitespace-nowrap transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4", className),
        ...props,
        children: [
            children,
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)(_reactSelect.Icon, {
                asChild: true,
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _lucideReact.ChevronDownIcon), {
                    className: "size-4 opacity-50"
                }, void 0, false, {
                    fileName: "src/components/ui/select.tsx",
                    lineNumber: 51,
                    columnNumber: 9
                }, this)
            }, void 0, false, {
                fileName: "src/components/ui/select.tsx",
                lineNumber: 50,
                columnNumber: 7
            }, this)
        ]
    }, void 0, true, {
        fileName: "src/components/ui/select.tsx",
        lineNumber: 40,
        columnNumber: 5
    }, this);
}
_c3 = SelectTrigger;
function SelectContent({ className, children, position = "popper", ...props }) {
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)(_reactSelect.Portal, {
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)(_reactSelect.Content, {
            "data-slot": "select-content",
            className: (0, _utils.cn)("bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md", position === "popper" && "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1", className),
            position: position,
            ...props,
            children: [
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)(SelectScrollUpButton, {}, void 0, false, {
                    fileName: "src/components/ui/select.tsx",
                    lineNumber: 76,
                    columnNumber: 9
                }, this),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)(_reactSelect.Viewport, {
                    className: (0, _utils.cn)("p-1", position === "popper" && "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1"),
                    children: children
                }, void 0, false, {
                    fileName: "src/components/ui/select.tsx",
                    lineNumber: 77,
                    columnNumber: 9
                }, this),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)(SelectScrollDownButton, {}, void 0, false, {
                    fileName: "src/components/ui/select.tsx",
                    lineNumber: 86,
                    columnNumber: 9
                }, this)
            ]
        }, void 0, true, {
            fileName: "src/components/ui/select.tsx",
            lineNumber: 65,
            columnNumber: 7
        }, this)
    }, void 0, false, {
        fileName: "src/components/ui/select.tsx",
        lineNumber: 64,
        columnNumber: 5
    }, this);
}
_c4 = SelectContent;
function SelectLabel({ className, ...props }) {
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)(_reactSelect.Label, {
        "data-slot": "select-label",
        className: (0, _utils.cn)("text-muted-foreground px-2 py-1.5 text-xs", className),
        ...props
    }, void 0, false, {
        fileName: "src/components/ui/select.tsx",
        lineNumber: 97,
        columnNumber: 5
    }, this);
}
_c5 = SelectLabel;
function SelectItem({ className, children, ...props }) {
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)(_reactSelect.Item, {
        "data-slot": "select-item",
        className: (0, _utils.cn)("hover:bg-sage hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-pointer items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-none select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2", className),
        ...props,
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                className: "absolute right-2 flex size-3.5 items-center justify-center",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)(_reactSelect.ItemIndicator, {
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _lucideReact.CheckIcon), {
                        className: "size-4"
                    }, void 0, false, {
                        fileName: "src/components/ui/select.tsx",
                        lineNumber: 121,
                        columnNumber: 11
                    }, this)
                }, void 0, false, {
                    fileName: "src/components/ui/select.tsx",
                    lineNumber: 120,
                    columnNumber: 9
                }, this)
            }, void 0, false, {
                fileName: "src/components/ui/select.tsx",
                lineNumber: 119,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)(_reactSelect.ItemText, {
                children: children
            }, void 0, false, {
                fileName: "src/components/ui/select.tsx",
                lineNumber: 124,
                columnNumber: 7
            }, this)
        ]
    }, void 0, true, {
        fileName: "src/components/ui/select.tsx",
        lineNumber: 111,
        columnNumber: 5
    }, this);
}
_c6 = SelectItem;
function SelectSeparator({ className, ...props }) {
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)(_reactSelect.Separator, {
        "data-slot": "select-separator",
        className: (0, _utils.cn)("bg-border pointer-events-none -mx-1 my-1 h-px", className),
        ...props
    }, void 0, false, {
        fileName: "src/components/ui/select.tsx",
        lineNumber: 134,
        columnNumber: 5
    }, this);
}
_c7 = SelectSeparator;
function SelectScrollUpButton({ className, ...props }) {
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)(_reactSelect.ScrollUpButton, {
        "data-slot": "select-scroll-up-button",
        className: (0, _utils.cn)("flex cursor-default items-center justify-center py-1", className),
        ...props,
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _lucideReact.ChevronUpIcon), {
            className: "size-4"
        }, void 0, false, {
            fileName: "src/components/ui/select.tsx",
            lineNumber: 155,
            columnNumber: 7
        }, this)
    }, void 0, false, {
        fileName: "src/components/ui/select.tsx",
        lineNumber: 147,
        columnNumber: 5
    }, this);
}
_c8 = SelectScrollUpButton;
function SelectScrollDownButton({ className, ...props }) {
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)(_reactSelect.ScrollDownButton, {
        "data-slot": "select-scroll-down-button",
        className: (0, _utils.cn)("flex cursor-default items-center justify-center py-1", className),
        ...props,
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _lucideReact.ChevronDownIcon), {
            className: "size-4"
        }, void 0, false, {
            fileName: "src/components/ui/select.tsx",
            lineNumber: 173,
            columnNumber: 7
        }, this)
    }, void 0, false, {
        fileName: "src/components/ui/select.tsx",
        lineNumber: 165,
        columnNumber: 5
    }, this);
}
_c9 = SelectScrollDownButton;
var _c, _c1, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;
$RefreshReg$(_c, "Select");
$RefreshReg$(_c1, "SelectGroup");
$RefreshReg$(_c2, "SelectValue");
$RefreshReg$(_c3, "SelectTrigger");
$RefreshReg$(_c4, "SelectContent");
$RefreshReg$(_c5, "SelectLabel");
$RefreshReg$(_c6, "SelectItem");
$RefreshReg$(_c7, "SelectSeparator");
$RefreshReg$(_c8, "SelectScrollUpButton");
$RefreshReg$(_c9, "SelectScrollDownButton");

  $parcel$ReactRefreshHelpers$26e5.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","@radix-ui/react-select":"fdV4V","lucide-react":"2I7qR","./utils":"3OSqM","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"fdV4V":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Arrow", ()=>Arrow2);
parcelHelpers.export(exports, "Content", ()=>Content2);
parcelHelpers.export(exports, "Group", ()=>Group);
parcelHelpers.export(exports, "Icon", ()=>Icon);
parcelHelpers.export(exports, "Item", ()=>Item);
parcelHelpers.export(exports, "ItemIndicator", ()=>ItemIndicator);
parcelHelpers.export(exports, "ItemText", ()=>ItemText);
parcelHelpers.export(exports, "Label", ()=>Label);
parcelHelpers.export(exports, "Portal", ()=>Portal);
parcelHelpers.export(exports, "Root", ()=>Root2);
parcelHelpers.export(exports, "ScrollDownButton", ()=>ScrollDownButton);
parcelHelpers.export(exports, "ScrollUpButton", ()=>ScrollUpButton);
parcelHelpers.export(exports, "Select", ()=>Select);
parcelHelpers.export(exports, "SelectArrow", ()=>SelectArrow);
parcelHelpers.export(exports, "SelectContent", ()=>SelectContent);
parcelHelpers.export(exports, "SelectGroup", ()=>SelectGroup);
parcelHelpers.export(exports, "SelectIcon", ()=>SelectIcon);
parcelHelpers.export(exports, "SelectItem", ()=>SelectItem);
parcelHelpers.export(exports, "SelectItemIndicator", ()=>SelectItemIndicator);
parcelHelpers.export(exports, "SelectItemText", ()=>SelectItemText);
parcelHelpers.export(exports, "SelectLabel", ()=>SelectLabel);
parcelHelpers.export(exports, "SelectPortal", ()=>SelectPortal);
parcelHelpers.export(exports, "SelectScrollDownButton", ()=>SelectScrollDownButton);
parcelHelpers.export(exports, "SelectScrollUpButton", ()=>SelectScrollUpButton);
parcelHelpers.export(exports, "SelectSeparator", ()=>SelectSeparator);
parcelHelpers.export(exports, "SelectTrigger", ()=>SelectTrigger);
parcelHelpers.export(exports, "SelectValue", ()=>SelectValue);
parcelHelpers.export(exports, "SelectViewport", ()=>SelectViewport);
parcelHelpers.export(exports, "Separator", ()=>Separator);
parcelHelpers.export(exports, "Trigger", ()=>Trigger);
parcelHelpers.export(exports, "Value", ()=>Value);
parcelHelpers.export(exports, "Viewport", ()=>Viewport);
parcelHelpers.export(exports, "createSelectScope", ()=>createSelectScope);
// src/select.tsx
var _react = require("react");
var _reactDom = require("react-dom");
var _number = require("@radix-ui/number");
var _primitive = require("@radix-ui/primitive");
var _reactCollection = require("@radix-ui/react-collection");
var _reactComposeRefs = require("@radix-ui/react-compose-refs");
var _reactContext = require("@radix-ui/react-context");
var _reactDirection = require("@radix-ui/react-direction");
var _reactDismissableLayer = require("@radix-ui/react-dismissable-layer");
var _reactFocusGuards = require("@radix-ui/react-focus-guards");
var _reactFocusScope = require("@radix-ui/react-focus-scope");
var _reactId = require("@radix-ui/react-id");
var _reactPopper = require("@radix-ui/react-popper");
var _reactPortal = require("@radix-ui/react-portal");
var _reactPrimitive = require("@radix-ui/react-primitive");
var _reactSlot = require("@radix-ui/react-slot");
var _reactUseCallbackRef = require("@radix-ui/react-use-callback-ref");
var _reactUseControllableState = require("@radix-ui/react-use-controllable-state");
var _reactUseLayoutEffect = require("@radix-ui/react-use-layout-effect");
var _reactUsePrevious = require("@radix-ui/react-use-previous");
var _reactVisuallyHidden = require("@radix-ui/react-visually-hidden");
var _ariaHidden = require("aria-hidden");
var _reactRemoveScroll = require("react-remove-scroll");
var _jsxRuntime = require("react/jsx-runtime");
"use client";
var OPEN_KEYS = [
    " ",
    "Enter",
    "ArrowUp",
    "ArrowDown"
];
var SELECTION_KEYS = [
    " ",
    "Enter"
];
var SELECT_NAME = "Select";
var [Collection, useCollection, createCollectionScope] = (0, _reactCollection.createCollection)(SELECT_NAME);
var [createSelectContext, createSelectScope] = (0, _reactContext.createContextScope)(SELECT_NAME, [
    createCollectionScope,
    (0, _reactPopper.createPopperScope)
]);
var usePopperScope = (0, _reactPopper.createPopperScope)();
var [SelectProvider, useSelectContext] = createSelectContext(SELECT_NAME);
var [SelectNativeOptionsProvider, useSelectNativeOptionsContext] = createSelectContext(SELECT_NAME);
var Select = (props)=>{
    const { __scopeSelect, children, open: openProp, defaultOpen, onOpenChange, value: valueProp, defaultValue, onValueChange, dir, name, autoComplete, disabled, required, form } = props;
    const popperScope = usePopperScope(__scopeSelect);
    const [trigger, setTrigger] = _react.useState(null);
    const [valueNode, setValueNode] = _react.useState(null);
    const [valueNodeHasChildren, setValueNodeHasChildren] = _react.useState(false);
    const direction = (0, _reactDirection.useDirection)(dir);
    const [open, setOpen] = (0, _reactUseControllableState.useControllableState)({
        prop: openProp,
        defaultProp: defaultOpen ?? false,
        onChange: onOpenChange,
        caller: SELECT_NAME
    });
    const [value, setValue] = (0, _reactUseControllableState.useControllableState)({
        prop: valueProp,
        defaultProp: defaultValue,
        onChange: onValueChange,
        caller: SELECT_NAME
    });
    const triggerPointerDownPosRef = _react.useRef(null);
    const isFormControl = trigger ? form || !!trigger.closest("form") : true;
    const [nativeOptionsSet, setNativeOptionsSet] = _react.useState(/* @__PURE__ */ new Set());
    const nativeSelectKey = Array.from(nativeOptionsSet).map((option)=>option.props.value).join(";");
    return /* @__PURE__ */ (0, _jsxRuntime.jsx)(_reactPopper.Root, {
        ...popperScope,
        children: /* @__PURE__ */ (0, _jsxRuntime.jsxs)(SelectProvider, {
            required,
            scope: __scopeSelect,
            trigger,
            onTriggerChange: setTrigger,
            valueNode,
            onValueNodeChange: setValueNode,
            valueNodeHasChildren,
            onValueNodeHasChildrenChange: setValueNodeHasChildren,
            contentId: (0, _reactId.useId)(),
            value,
            onValueChange: setValue,
            open,
            onOpenChange: setOpen,
            dir: direction,
            triggerPointerDownPosRef,
            disabled,
            children: [
                /* @__PURE__ */ (0, _jsxRuntime.jsx)(Collection.Provider, {
                    scope: __scopeSelect,
                    children: /* @__PURE__ */ (0, _jsxRuntime.jsx)(SelectNativeOptionsProvider, {
                        scope: props.__scopeSelect,
                        onNativeOptionAdd: _react.useCallback((option)=>{
                            setNativeOptionsSet((prev)=>new Set(prev).add(option));
                        }, []),
                        onNativeOptionRemove: _react.useCallback((option)=>{
                            setNativeOptionsSet((prev)=>{
                                const optionsSet = new Set(prev);
                                optionsSet.delete(option);
                                return optionsSet;
                            });
                        }, []),
                        children
                    })
                }),
                isFormControl ? /* @__PURE__ */ (0, _jsxRuntime.jsxs)(SelectBubbleInput, {
                    "aria-hidden": true,
                    required,
                    tabIndex: -1,
                    name,
                    autoComplete,
                    value,
                    onChange: (event)=>setValue(event.target.value),
                    disabled,
                    form,
                    children: [
                        value === void 0 ? /* @__PURE__ */ (0, _jsxRuntime.jsx)("option", {
                            value: ""
                        }) : null,
                        Array.from(nativeOptionsSet)
                    ]
                }, nativeSelectKey) : null
            ]
        })
    });
};
Select.displayName = SELECT_NAME;
var TRIGGER_NAME = "SelectTrigger";
var SelectTrigger = _react.forwardRef((props, forwardedRef)=>{
    const { __scopeSelect, disabled = false, ...triggerProps } = props;
    const popperScope = usePopperScope(__scopeSelect);
    const context = useSelectContext(TRIGGER_NAME, __scopeSelect);
    const isDisabled = context.disabled || disabled;
    const composedRefs = (0, _reactComposeRefs.useComposedRefs)(forwardedRef, context.onTriggerChange);
    const getItems = useCollection(__scopeSelect);
    const pointerTypeRef = _react.useRef("touch");
    const [searchRef, handleTypeaheadSearch, resetTypeahead] = useTypeaheadSearch((search)=>{
        const enabledItems = getItems().filter((item)=>!item.disabled);
        const currentItem = enabledItems.find((item)=>item.value === context.value);
        const nextItem = findNextItem(enabledItems, search, currentItem);
        if (nextItem !== void 0) context.onValueChange(nextItem.value);
    });
    const handleOpen = (pointerEvent)=>{
        if (!isDisabled) {
            context.onOpenChange(true);
            resetTypeahead();
        }
        if (pointerEvent) context.triggerPointerDownPosRef.current = {
            x: Math.round(pointerEvent.pageX),
            y: Math.round(pointerEvent.pageY)
        };
    };
    return /* @__PURE__ */ (0, _jsxRuntime.jsx)(_reactPopper.Anchor, {
        asChild: true,
        ...popperScope,
        children: /* @__PURE__ */ (0, _jsxRuntime.jsx)((0, _reactPrimitive.Primitive).button, {
            type: "button",
            role: "combobox",
            "aria-controls": context.contentId,
            "aria-expanded": context.open,
            "aria-required": context.required,
            "aria-autocomplete": "none",
            dir: context.dir,
            "data-state": context.open ? "open" : "closed",
            disabled: isDisabled,
            "data-disabled": isDisabled ? "" : void 0,
            "data-placeholder": shouldShowPlaceholder(context.value) ? "" : void 0,
            ...triggerProps,
            ref: composedRefs,
            onClick: (0, _primitive.composeEventHandlers)(triggerProps.onClick, (event)=>{
                event.currentTarget.focus();
                if (pointerTypeRef.current !== "mouse") handleOpen(event);
            }),
            onPointerDown: (0, _primitive.composeEventHandlers)(triggerProps.onPointerDown, (event)=>{
                pointerTypeRef.current = event.pointerType;
                const target = event.target;
                if (target.hasPointerCapture(event.pointerId)) target.releasePointerCapture(event.pointerId);
                if (event.button === 0 && event.ctrlKey === false && event.pointerType === "mouse") {
                    handleOpen(event);
                    event.preventDefault();
                }
            }),
            onKeyDown: (0, _primitive.composeEventHandlers)(triggerProps.onKeyDown, (event)=>{
                const isTypingAhead = searchRef.current !== "";
                const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;
                if (!isModifierKey && event.key.length === 1) handleTypeaheadSearch(event.key);
                if (isTypingAhead && event.key === " ") return;
                if (OPEN_KEYS.includes(event.key)) {
                    handleOpen();
                    event.preventDefault();
                }
            })
        })
    });
});
SelectTrigger.displayName = TRIGGER_NAME;
var VALUE_NAME = "SelectValue";
var SelectValue = _react.forwardRef((props, forwardedRef)=>{
    const { __scopeSelect, className, style, children, placeholder = "", ...valueProps } = props;
    const context = useSelectContext(VALUE_NAME, __scopeSelect);
    const { onValueNodeHasChildrenChange } = context;
    const hasChildren = children !== void 0;
    const composedRefs = (0, _reactComposeRefs.useComposedRefs)(forwardedRef, context.onValueNodeChange);
    (0, _reactUseLayoutEffect.useLayoutEffect)(()=>{
        onValueNodeHasChildrenChange(hasChildren);
    }, [
        onValueNodeHasChildrenChange,
        hasChildren
    ]);
    return /* @__PURE__ */ (0, _jsxRuntime.jsx)((0, _reactPrimitive.Primitive).span, {
        ...valueProps,
        ref: composedRefs,
        style: {
            pointerEvents: "none"
        },
        children: shouldShowPlaceholder(context.value) ? /* @__PURE__ */ (0, _jsxRuntime.jsx)((0, _jsxRuntime.Fragment), {
            children: placeholder
        }) : children
    });
});
SelectValue.displayName = VALUE_NAME;
var ICON_NAME = "SelectIcon";
var SelectIcon = _react.forwardRef((props, forwardedRef)=>{
    const { __scopeSelect, children, ...iconProps } = props;
    return /* @__PURE__ */ (0, _jsxRuntime.jsx)((0, _reactPrimitive.Primitive).span, {
        "aria-hidden": true,
        ...iconProps,
        ref: forwardedRef,
        children: children || "\u25BC"
    });
});
SelectIcon.displayName = ICON_NAME;
var PORTAL_NAME = "SelectPortal";
var SelectPortal = (props)=>{
    return /* @__PURE__ */ (0, _jsxRuntime.jsx)((0, _reactPortal.Portal), {
        asChild: true,
        ...props
    });
};
SelectPortal.displayName = PORTAL_NAME;
var CONTENT_NAME = "SelectContent";
var SelectContent = _react.forwardRef((props, forwardedRef)=>{
    const context = useSelectContext(CONTENT_NAME, props.__scopeSelect);
    const [fragment, setFragment] = _react.useState();
    (0, _reactUseLayoutEffect.useLayoutEffect)(()=>{
        setFragment(new DocumentFragment());
    }, []);
    if (!context.open) {
        const frag = fragment;
        return frag ? _reactDom.createPortal(/* @__PURE__ */ (0, _jsxRuntime.jsx)(SelectContentProvider, {
            scope: props.__scopeSelect,
            children: /* @__PURE__ */ (0, _jsxRuntime.jsx)(Collection.Slot, {
                scope: props.__scopeSelect,
                children: /* @__PURE__ */ (0, _jsxRuntime.jsx)("div", {
                    children: props.children
                })
            })
        }), frag) : null;
    }
    return /* @__PURE__ */ (0, _jsxRuntime.jsx)(SelectContentImpl, {
        ...props,
        ref: forwardedRef
    });
});
SelectContent.displayName = CONTENT_NAME;
var CONTENT_MARGIN = 10;
var [SelectContentProvider, useSelectContentContext] = createSelectContext(CONTENT_NAME);
var CONTENT_IMPL_NAME = "SelectContentImpl";
var Slot = (0, _reactSlot.createSlot)("SelectContent.RemoveScroll");
var SelectContentImpl = _react.forwardRef((props, forwardedRef)=>{
    const { __scopeSelect, position = "item-aligned", onCloseAutoFocus, onEscapeKeyDown, onPointerDownOutside, //
    // PopperContent props
    side, sideOffset, align, alignOffset, arrowPadding, collisionBoundary, collisionPadding, sticky, hideWhenDetached, avoidCollisions, //
    ...contentProps } = props;
    const context = useSelectContext(CONTENT_NAME, __scopeSelect);
    const [content, setContent] = _react.useState(null);
    const [viewport, setViewport] = _react.useState(null);
    const composedRefs = (0, _reactComposeRefs.useComposedRefs)(forwardedRef, (node)=>setContent(node));
    const [selectedItem, setSelectedItem] = _react.useState(null);
    const [selectedItemText, setSelectedItemText] = _react.useState(null);
    const getItems = useCollection(__scopeSelect);
    const [isPositioned, setIsPositioned] = _react.useState(false);
    const firstValidItemFoundRef = _react.useRef(false);
    _react.useEffect(()=>{
        if (content) return (0, _ariaHidden.hideOthers)(content);
    }, [
        content
    ]);
    (0, _reactFocusGuards.useFocusGuards)();
    const focusFirst = _react.useCallback((candidates)=>{
        const [firstItem, ...restItems] = getItems().map((item)=>item.ref.current);
        const [lastItem] = restItems.slice(-1);
        const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;
        for (const candidate of candidates){
            if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;
            candidate?.scrollIntoView({
                block: "nearest"
            });
            if (candidate === firstItem && viewport) viewport.scrollTop = 0;
            if (candidate === lastItem && viewport) viewport.scrollTop = viewport.scrollHeight;
            candidate?.focus();
            if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;
        }
    }, [
        getItems,
        viewport
    ]);
    const focusSelectedItem = _react.useCallback(()=>focusFirst([
            selectedItem,
            content
        ]), [
        focusFirst,
        selectedItem,
        content
    ]);
    _react.useEffect(()=>{
        if (isPositioned) focusSelectedItem();
    }, [
        isPositioned,
        focusSelectedItem
    ]);
    const { onOpenChange, triggerPointerDownPosRef } = context;
    _react.useEffect(()=>{
        if (content) {
            let pointerMoveDelta = {
                x: 0,
                y: 0
            };
            const handlePointerMove = (event)=>{
                pointerMoveDelta = {
                    x: Math.abs(Math.round(event.pageX) - (triggerPointerDownPosRef.current?.x ?? 0)),
                    y: Math.abs(Math.round(event.pageY) - (triggerPointerDownPosRef.current?.y ?? 0))
                };
            };
            const handlePointerUp = (event)=>{
                if (pointerMoveDelta.x <= 10 && pointerMoveDelta.y <= 10) event.preventDefault();
                else if (!content.contains(event.target)) onOpenChange(false);
                document.removeEventListener("pointermove", handlePointerMove);
                triggerPointerDownPosRef.current = null;
            };
            if (triggerPointerDownPosRef.current !== null) {
                document.addEventListener("pointermove", handlePointerMove);
                document.addEventListener("pointerup", handlePointerUp, {
                    capture: true,
                    once: true
                });
            }
            return ()=>{
                document.removeEventListener("pointermove", handlePointerMove);
                document.removeEventListener("pointerup", handlePointerUp, {
                    capture: true
                });
            };
        }
    }, [
        content,
        onOpenChange,
        triggerPointerDownPosRef
    ]);
    _react.useEffect(()=>{
        const close = ()=>onOpenChange(false);
        window.addEventListener("blur", close);
        window.addEventListener("resize", close);
        return ()=>{
            window.removeEventListener("blur", close);
            window.removeEventListener("resize", close);
        };
    }, [
        onOpenChange
    ]);
    const [searchRef, handleTypeaheadSearch] = useTypeaheadSearch((search)=>{
        const enabledItems = getItems().filter((item)=>!item.disabled);
        const currentItem = enabledItems.find((item)=>item.ref.current === document.activeElement);
        const nextItem = findNextItem(enabledItems, search, currentItem);
        if (nextItem) setTimeout(()=>nextItem.ref.current.focus());
    });
    const itemRefCallback = _react.useCallback((node, value, disabled)=>{
        const isFirstValidItem = !firstValidItemFoundRef.current && !disabled;
        const isSelectedItem = context.value !== void 0 && context.value === value;
        if (isSelectedItem || isFirstValidItem) {
            setSelectedItem(node);
            if (isFirstValidItem) firstValidItemFoundRef.current = true;
        }
    }, [
        context.value
    ]);
    const handleItemLeave = _react.useCallback(()=>content?.focus(), [
        content
    ]);
    const itemTextRefCallback = _react.useCallback((node, value, disabled)=>{
        const isFirstValidItem = !firstValidItemFoundRef.current && !disabled;
        const isSelectedItem = context.value !== void 0 && context.value === value;
        if (isSelectedItem || isFirstValidItem) setSelectedItemText(node);
    }, [
        context.value
    ]);
    const SelectPosition = position === "popper" ? SelectPopperPosition : SelectItemAlignedPosition;
    const popperContentProps = SelectPosition === SelectPopperPosition ? {
        side,
        sideOffset,
        align,
        alignOffset,
        arrowPadding,
        collisionBoundary,
        collisionPadding,
        sticky,
        hideWhenDetached,
        avoidCollisions
    } : {};
    return /* @__PURE__ */ (0, _jsxRuntime.jsx)(SelectContentProvider, {
        scope: __scopeSelect,
        content,
        viewport,
        onViewportChange: setViewport,
        itemRefCallback,
        selectedItem,
        onItemLeave: handleItemLeave,
        itemTextRefCallback,
        focusSelectedItem,
        selectedItemText,
        position,
        isPositioned,
        searchRef,
        children: /* @__PURE__ */ (0, _jsxRuntime.jsx)((0, _reactRemoveScroll.RemoveScroll), {
            as: Slot,
            allowPinchZoom: true,
            children: /* @__PURE__ */ (0, _jsxRuntime.jsx)((0, _reactFocusScope.FocusScope), {
                asChild: true,
                trapped: context.open,
                onMountAutoFocus: (event)=>{
                    event.preventDefault();
                },
                onUnmountAutoFocus: (0, _primitive.composeEventHandlers)(onCloseAutoFocus, (event)=>{
                    context.trigger?.focus({
                        preventScroll: true
                    });
                    event.preventDefault();
                }),
                children: /* @__PURE__ */ (0, _jsxRuntime.jsx)((0, _reactDismissableLayer.DismissableLayer), {
                    asChild: true,
                    disableOutsidePointerEvents: true,
                    onEscapeKeyDown,
                    onPointerDownOutside,
                    onFocusOutside: (event)=>event.preventDefault(),
                    onDismiss: ()=>context.onOpenChange(false),
                    children: /* @__PURE__ */ (0, _jsxRuntime.jsx)(SelectPosition, {
                        role: "listbox",
                        id: context.contentId,
                        "data-state": context.open ? "open" : "closed",
                        dir: context.dir,
                        onContextMenu: (event)=>event.preventDefault(),
                        ...contentProps,
                        ...popperContentProps,
                        onPlaced: ()=>setIsPositioned(true),
                        ref: composedRefs,
                        style: {
                            // flex layout so we can place the scroll buttons properly
                            display: "flex",
                            flexDirection: "column",
                            // reset the outline by default as the content MAY get focused
                            outline: "none",
                            ...contentProps.style
                        },
                        onKeyDown: (0, _primitive.composeEventHandlers)(contentProps.onKeyDown, (event)=>{
                            const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;
                            if (event.key === "Tab") event.preventDefault();
                            if (!isModifierKey && event.key.length === 1) handleTypeaheadSearch(event.key);
                            if ([
                                "ArrowUp",
                                "ArrowDown",
                                "Home",
                                "End"
                            ].includes(event.key)) {
                                const items = getItems().filter((item)=>!item.disabled);
                                let candidateNodes = items.map((item)=>item.ref.current);
                                if ([
                                    "ArrowUp",
                                    "End"
                                ].includes(event.key)) candidateNodes = candidateNodes.slice().reverse();
                                if ([
                                    "ArrowUp",
                                    "ArrowDown"
                                ].includes(event.key)) {
                                    const currentElement = event.target;
                                    const currentIndex = candidateNodes.indexOf(currentElement);
                                    candidateNodes = candidateNodes.slice(currentIndex + 1);
                                }
                                setTimeout(()=>focusFirst(candidateNodes));
                                event.preventDefault();
                            }
                        })
                    })
                })
            })
        })
    });
});
SelectContentImpl.displayName = CONTENT_IMPL_NAME;
var ITEM_ALIGNED_POSITION_NAME = "SelectItemAlignedPosition";
var SelectItemAlignedPosition = _react.forwardRef((props, forwardedRef)=>{
    const { __scopeSelect, onPlaced, ...popperProps } = props;
    const context = useSelectContext(CONTENT_NAME, __scopeSelect);
    const contentContext = useSelectContentContext(CONTENT_NAME, __scopeSelect);
    const [contentWrapper, setContentWrapper] = _react.useState(null);
    const [content, setContent] = _react.useState(null);
    const composedRefs = (0, _reactComposeRefs.useComposedRefs)(forwardedRef, (node)=>setContent(node));
    const getItems = useCollection(__scopeSelect);
    const shouldExpandOnScrollRef = _react.useRef(false);
    const shouldRepositionRef = _react.useRef(true);
    const { viewport, selectedItem, selectedItemText, focusSelectedItem } = contentContext;
    const position = _react.useCallback(()=>{
        if (context.trigger && context.valueNode && contentWrapper && content && viewport && selectedItem && selectedItemText) {
            const triggerRect = context.trigger.getBoundingClientRect();
            const contentRect = content.getBoundingClientRect();
            const valueNodeRect = context.valueNode.getBoundingClientRect();
            const itemTextRect = selectedItemText.getBoundingClientRect();
            if (context.dir !== "rtl") {
                const itemTextOffset = itemTextRect.left - contentRect.left;
                const left = valueNodeRect.left - itemTextOffset;
                const leftDelta = triggerRect.left - left;
                const minContentWidth = triggerRect.width + leftDelta;
                const contentWidth = Math.max(minContentWidth, contentRect.width);
                const rightEdge = window.innerWidth - CONTENT_MARGIN;
                const clampedLeft = (0, _number.clamp)(left, [
                    CONTENT_MARGIN,
                    // Prevents the content from going off the starting edge of the
                    // viewport. It may still go off the ending edge, but this can be
                    // controlled by the user since they may want to manage overflow in a
                    // specific way.
                    // https://github.com/radix-ui/primitives/issues/2049
                    Math.max(CONTENT_MARGIN, rightEdge - contentWidth)
                ]);
                contentWrapper.style.minWidth = minContentWidth + "px";
                contentWrapper.style.left = clampedLeft + "px";
            } else {
                const itemTextOffset = contentRect.right - itemTextRect.right;
                const right = window.innerWidth - valueNodeRect.right - itemTextOffset;
                const rightDelta = window.innerWidth - triggerRect.right - right;
                const minContentWidth = triggerRect.width + rightDelta;
                const contentWidth = Math.max(minContentWidth, contentRect.width);
                const leftEdge = window.innerWidth - CONTENT_MARGIN;
                const clampedRight = (0, _number.clamp)(right, [
                    CONTENT_MARGIN,
                    Math.max(CONTENT_MARGIN, leftEdge - contentWidth)
                ]);
                contentWrapper.style.minWidth = minContentWidth + "px";
                contentWrapper.style.right = clampedRight + "px";
            }
            const items = getItems();
            const availableHeight = window.innerHeight - CONTENT_MARGIN * 2;
            const itemsHeight = viewport.scrollHeight;
            const contentStyles = window.getComputedStyle(content);
            const contentBorderTopWidth = parseInt(contentStyles.borderTopWidth, 10);
            const contentPaddingTop = parseInt(contentStyles.paddingTop, 10);
            const contentBorderBottomWidth = parseInt(contentStyles.borderBottomWidth, 10);
            const contentPaddingBottom = parseInt(contentStyles.paddingBottom, 10);
            const fullContentHeight = contentBorderTopWidth + contentPaddingTop + itemsHeight + contentPaddingBottom + contentBorderBottomWidth;
            const minContentHeight = Math.min(selectedItem.offsetHeight * 5, fullContentHeight);
            const viewportStyles = window.getComputedStyle(viewport);
            const viewportPaddingTop = parseInt(viewportStyles.paddingTop, 10);
            const viewportPaddingBottom = parseInt(viewportStyles.paddingBottom, 10);
            const topEdgeToTriggerMiddle = triggerRect.top + triggerRect.height / 2 - CONTENT_MARGIN;
            const triggerMiddleToBottomEdge = availableHeight - topEdgeToTriggerMiddle;
            const selectedItemHalfHeight = selectedItem.offsetHeight / 2;
            const itemOffsetMiddle = selectedItem.offsetTop + selectedItemHalfHeight;
            const contentTopToItemMiddle = contentBorderTopWidth + contentPaddingTop + itemOffsetMiddle;
            const itemMiddleToContentBottom = fullContentHeight - contentTopToItemMiddle;
            const willAlignWithoutTopOverflow = contentTopToItemMiddle <= topEdgeToTriggerMiddle;
            if (willAlignWithoutTopOverflow) {
                const isLastItem = items.length > 0 && selectedItem === items[items.length - 1].ref.current;
                contentWrapper.style.bottom = "0px";
                const viewportOffsetBottom = content.clientHeight - viewport.offsetTop - viewport.offsetHeight;
                const clampedTriggerMiddleToBottomEdge = Math.max(triggerMiddleToBottomEdge, selectedItemHalfHeight + // viewport might have padding bottom, include it to avoid a scrollable viewport
                (isLastItem ? viewportPaddingBottom : 0) + viewportOffsetBottom + contentBorderBottomWidth);
                const height = contentTopToItemMiddle + clampedTriggerMiddleToBottomEdge;
                contentWrapper.style.height = height + "px";
            } else {
                const isFirstItem = items.length > 0 && selectedItem === items[0].ref.current;
                contentWrapper.style.top = "0px";
                const clampedTopEdgeToTriggerMiddle = Math.max(topEdgeToTriggerMiddle, contentBorderTopWidth + viewport.offsetTop + // viewport might have padding top, include it to avoid a scrollable viewport
                (isFirstItem ? viewportPaddingTop : 0) + selectedItemHalfHeight);
                const height = clampedTopEdgeToTriggerMiddle + itemMiddleToContentBottom;
                contentWrapper.style.height = height + "px";
                viewport.scrollTop = contentTopToItemMiddle - topEdgeToTriggerMiddle + viewport.offsetTop;
            }
            contentWrapper.style.margin = `${CONTENT_MARGIN}px 0`;
            contentWrapper.style.minHeight = minContentHeight + "px";
            contentWrapper.style.maxHeight = availableHeight + "px";
            onPlaced?.();
            requestAnimationFrame(()=>shouldExpandOnScrollRef.current = true);
        }
    }, [
        getItems,
        context.trigger,
        context.valueNode,
        contentWrapper,
        content,
        viewport,
        selectedItem,
        selectedItemText,
        context.dir,
        onPlaced
    ]);
    (0, _reactUseLayoutEffect.useLayoutEffect)(()=>position(), [
        position
    ]);
    const [contentZIndex, setContentZIndex] = _react.useState();
    (0, _reactUseLayoutEffect.useLayoutEffect)(()=>{
        if (content) setContentZIndex(window.getComputedStyle(content).zIndex);
    }, [
        content
    ]);
    const handleScrollButtonChange = _react.useCallback((node)=>{
        if (node && shouldRepositionRef.current === true) {
            position();
            focusSelectedItem?.();
            shouldRepositionRef.current = false;
        }
    }, [
        position,
        focusSelectedItem
    ]);
    return /* @__PURE__ */ (0, _jsxRuntime.jsx)(SelectViewportProvider, {
        scope: __scopeSelect,
        contentWrapper,
        shouldExpandOnScrollRef,
        onScrollButtonChange: handleScrollButtonChange,
        children: /* @__PURE__ */ (0, _jsxRuntime.jsx)("div", {
            ref: setContentWrapper,
            style: {
                display: "flex",
                flexDirection: "column",
                position: "fixed",
                zIndex: contentZIndex
            },
            children: /* @__PURE__ */ (0, _jsxRuntime.jsx)((0, _reactPrimitive.Primitive).div, {
                ...popperProps,
                ref: composedRefs,
                style: {
                    // When we get the height of the content, it includes borders. If we were to set
                    // the height without having `boxSizing: 'border-box'` it would be too big.
                    boxSizing: "border-box",
                    // We need to ensure the content doesn't get taller than the wrapper
                    maxHeight: "100%",
                    ...popperProps.style
                }
            })
        })
    });
});
SelectItemAlignedPosition.displayName = ITEM_ALIGNED_POSITION_NAME;
var POPPER_POSITION_NAME = "SelectPopperPosition";
var SelectPopperPosition = _react.forwardRef((props, forwardedRef)=>{
    const { __scopeSelect, align = "start", collisionPadding = CONTENT_MARGIN, ...popperProps } = props;
    const popperScope = usePopperScope(__scopeSelect);
    return /* @__PURE__ */ (0, _jsxRuntime.jsx)(_reactPopper.Content, {
        ...popperScope,
        ...popperProps,
        ref: forwardedRef,
        align,
        collisionPadding,
        style: {
            // Ensure border-box for floating-ui calculations
            boxSizing: "border-box",
            ...popperProps.style,
            "--radix-select-content-transform-origin": "var(--radix-popper-transform-origin)",
            "--radix-select-content-available-width": "var(--radix-popper-available-width)",
            "--radix-select-content-available-height": "var(--radix-popper-available-height)",
            "--radix-select-trigger-width": "var(--radix-popper-anchor-width)",
            "--radix-select-trigger-height": "var(--radix-popper-anchor-height)"
        }
    });
});
SelectPopperPosition.displayName = POPPER_POSITION_NAME;
var [SelectViewportProvider, useSelectViewportContext] = createSelectContext(CONTENT_NAME, {});
var VIEWPORT_NAME = "SelectViewport";
var SelectViewport = _react.forwardRef((props, forwardedRef)=>{
    const { __scopeSelect, nonce, ...viewportProps } = props;
    const contentContext = useSelectContentContext(VIEWPORT_NAME, __scopeSelect);
    const viewportContext = useSelectViewportContext(VIEWPORT_NAME, __scopeSelect);
    const composedRefs = (0, _reactComposeRefs.useComposedRefs)(forwardedRef, contentContext.onViewportChange);
    const prevScrollTopRef = _react.useRef(0);
    return /* @__PURE__ */ (0, _jsxRuntime.jsxs)((0, _jsxRuntime.Fragment), {
        children: [
            /* @__PURE__ */ (0, _jsxRuntime.jsx)("style", {
                dangerouslySetInnerHTML: {
                    __html: `[data-radix-select-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch;}[data-radix-select-viewport]::-webkit-scrollbar{display:none}`
                },
                nonce
            }),
            /* @__PURE__ */ (0, _jsxRuntime.jsx)(Collection.Slot, {
                scope: __scopeSelect,
                children: /* @__PURE__ */ (0, _jsxRuntime.jsx)((0, _reactPrimitive.Primitive).div, {
                    "data-radix-select-viewport": "",
                    role: "presentation",
                    ...viewportProps,
                    ref: composedRefs,
                    style: {
                        // we use position: 'relative' here on the `viewport` so that when we call
                        // `selectedItem.offsetTop` in calculations, the offset is relative to the viewport
                        // (independent of the scrollUpButton).
                        position: "relative",
                        flex: 1,
                        // Viewport should only be scrollable in the vertical direction.
                        // This won't work in vertical writing modes, so we'll need to
                        // revisit this if/when that is supported
                        // https://developer.chrome.com/blog/vertical-form-controls
                        overflow: "hidden auto",
                        ...viewportProps.style
                    },
                    onScroll: (0, _primitive.composeEventHandlers)(viewportProps.onScroll, (event)=>{
                        const viewport = event.currentTarget;
                        const { contentWrapper, shouldExpandOnScrollRef } = viewportContext;
                        if (shouldExpandOnScrollRef?.current && contentWrapper) {
                            const scrolledBy = Math.abs(prevScrollTopRef.current - viewport.scrollTop);
                            if (scrolledBy > 0) {
                                const availableHeight = window.innerHeight - CONTENT_MARGIN * 2;
                                const cssMinHeight = parseFloat(contentWrapper.style.minHeight);
                                const cssHeight = parseFloat(contentWrapper.style.height);
                                const prevHeight = Math.max(cssMinHeight, cssHeight);
                                if (prevHeight < availableHeight) {
                                    const nextHeight = prevHeight + scrolledBy;
                                    const clampedNextHeight = Math.min(availableHeight, nextHeight);
                                    const heightDiff = nextHeight - clampedNextHeight;
                                    contentWrapper.style.height = clampedNextHeight + "px";
                                    if (contentWrapper.style.bottom === "0px") {
                                        viewport.scrollTop = heightDiff > 0 ? heightDiff : 0;
                                        contentWrapper.style.justifyContent = "flex-end";
                                    }
                                }
                            }
                        }
                        prevScrollTopRef.current = viewport.scrollTop;
                    })
                })
            })
        ]
    });
});
SelectViewport.displayName = VIEWPORT_NAME;
var GROUP_NAME = "SelectGroup";
var [SelectGroupContextProvider, useSelectGroupContext] = createSelectContext(GROUP_NAME);
var SelectGroup = _react.forwardRef((props, forwardedRef)=>{
    const { __scopeSelect, ...groupProps } = props;
    const groupId = (0, _reactId.useId)();
    return /* @__PURE__ */ (0, _jsxRuntime.jsx)(SelectGroupContextProvider, {
        scope: __scopeSelect,
        id: groupId,
        children: /* @__PURE__ */ (0, _jsxRuntime.jsx)((0, _reactPrimitive.Primitive).div, {
            role: "group",
            "aria-labelledby": groupId,
            ...groupProps,
            ref: forwardedRef
        })
    });
});
SelectGroup.displayName = GROUP_NAME;
var LABEL_NAME = "SelectLabel";
var SelectLabel = _react.forwardRef((props, forwardedRef)=>{
    const { __scopeSelect, ...labelProps } = props;
    const groupContext = useSelectGroupContext(LABEL_NAME, __scopeSelect);
    return /* @__PURE__ */ (0, _jsxRuntime.jsx)((0, _reactPrimitive.Primitive).div, {
        id: groupContext.id,
        ...labelProps,
        ref: forwardedRef
    });
});
SelectLabel.displayName = LABEL_NAME;
var ITEM_NAME = "SelectItem";
var [SelectItemContextProvider, useSelectItemContext] = createSelectContext(ITEM_NAME);
var SelectItem = _react.forwardRef((props, forwardedRef)=>{
    const { __scopeSelect, value, disabled = false, textValue: textValueProp, ...itemProps } = props;
    const context = useSelectContext(ITEM_NAME, __scopeSelect);
    const contentContext = useSelectContentContext(ITEM_NAME, __scopeSelect);
    const isSelected = context.value === value;
    const [textValue, setTextValue] = _react.useState(textValueProp ?? "");
    const [isFocused, setIsFocused] = _react.useState(false);
    const composedRefs = (0, _reactComposeRefs.useComposedRefs)(forwardedRef, (node)=>contentContext.itemRefCallback?.(node, value, disabled));
    const textId = (0, _reactId.useId)();
    const pointerTypeRef = _react.useRef("touch");
    const handleSelect = ()=>{
        if (!disabled) {
            context.onValueChange(value);
            context.onOpenChange(false);
        }
    };
    if (value === "") throw new Error("A <Select.Item /> must have a value prop that is not an empty string. This is because the Select value can be set to an empty string to clear the selection and show the placeholder.");
    return /* @__PURE__ */ (0, _jsxRuntime.jsx)(SelectItemContextProvider, {
        scope: __scopeSelect,
        value,
        disabled,
        textId,
        isSelected,
        onItemTextChange: _react.useCallback((node)=>{
            setTextValue((prevTextValue)=>prevTextValue || (node?.textContent ?? "").trim());
        }, []),
        children: /* @__PURE__ */ (0, _jsxRuntime.jsx)(Collection.ItemSlot, {
            scope: __scopeSelect,
            value,
            disabled,
            textValue,
            children: /* @__PURE__ */ (0, _jsxRuntime.jsx)((0, _reactPrimitive.Primitive).div, {
                role: "option",
                "aria-labelledby": textId,
                "data-highlighted": isFocused ? "" : void 0,
                "aria-selected": isSelected && isFocused,
                "data-state": isSelected ? "checked" : "unchecked",
                "aria-disabled": disabled || void 0,
                "data-disabled": disabled ? "" : void 0,
                tabIndex: disabled ? void 0 : -1,
                ...itemProps,
                ref: composedRefs,
                onFocus: (0, _primitive.composeEventHandlers)(itemProps.onFocus, ()=>setIsFocused(true)),
                onBlur: (0, _primitive.composeEventHandlers)(itemProps.onBlur, ()=>setIsFocused(false)),
                onClick: (0, _primitive.composeEventHandlers)(itemProps.onClick, ()=>{
                    if (pointerTypeRef.current !== "mouse") handleSelect();
                }),
                onPointerUp: (0, _primitive.composeEventHandlers)(itemProps.onPointerUp, ()=>{
                    if (pointerTypeRef.current === "mouse") handleSelect();
                }),
                onPointerDown: (0, _primitive.composeEventHandlers)(itemProps.onPointerDown, (event)=>{
                    pointerTypeRef.current = event.pointerType;
                }),
                onPointerMove: (0, _primitive.composeEventHandlers)(itemProps.onPointerMove, (event)=>{
                    pointerTypeRef.current = event.pointerType;
                    if (disabled) contentContext.onItemLeave?.();
                    else if (pointerTypeRef.current === "mouse") event.currentTarget.focus({
                        preventScroll: true
                    });
                }),
                onPointerLeave: (0, _primitive.composeEventHandlers)(itemProps.onPointerLeave, (event)=>{
                    if (event.currentTarget === document.activeElement) contentContext.onItemLeave?.();
                }),
                onKeyDown: (0, _primitive.composeEventHandlers)(itemProps.onKeyDown, (event)=>{
                    const isTypingAhead = contentContext.searchRef?.current !== "";
                    if (isTypingAhead && event.key === " ") return;
                    if (SELECTION_KEYS.includes(event.key)) handleSelect();
                    if (event.key === " ") event.preventDefault();
                })
            })
        })
    });
});
SelectItem.displayName = ITEM_NAME;
var ITEM_TEXT_NAME = "SelectItemText";
var SelectItemText = _react.forwardRef((props, forwardedRef)=>{
    const { __scopeSelect, className, style, ...itemTextProps } = props;
    const context = useSelectContext(ITEM_TEXT_NAME, __scopeSelect);
    const contentContext = useSelectContentContext(ITEM_TEXT_NAME, __scopeSelect);
    const itemContext = useSelectItemContext(ITEM_TEXT_NAME, __scopeSelect);
    const nativeOptionsContext = useSelectNativeOptionsContext(ITEM_TEXT_NAME, __scopeSelect);
    const [itemTextNode, setItemTextNode] = _react.useState(null);
    const composedRefs = (0, _reactComposeRefs.useComposedRefs)(forwardedRef, (node)=>setItemTextNode(node), itemContext.onItemTextChange, (node)=>contentContext.itemTextRefCallback?.(node, itemContext.value, itemContext.disabled));
    const textContent = itemTextNode?.textContent;
    const nativeOption = _react.useMemo(()=>/* @__PURE__ */ (0, _jsxRuntime.jsx)("option", {
            value: itemContext.value,
            disabled: itemContext.disabled,
            children: textContent
        }, itemContext.value), [
        itemContext.disabled,
        itemContext.value,
        textContent
    ]);
    const { onNativeOptionAdd, onNativeOptionRemove } = nativeOptionsContext;
    (0, _reactUseLayoutEffect.useLayoutEffect)(()=>{
        onNativeOptionAdd(nativeOption);
        return ()=>onNativeOptionRemove(nativeOption);
    }, [
        onNativeOptionAdd,
        onNativeOptionRemove,
        nativeOption
    ]);
    return /* @__PURE__ */ (0, _jsxRuntime.jsxs)((0, _jsxRuntime.Fragment), {
        children: [
            /* @__PURE__ */ (0, _jsxRuntime.jsx)((0, _reactPrimitive.Primitive).span, {
                id: itemContext.textId,
                ...itemTextProps,
                ref: composedRefs
            }),
            itemContext.isSelected && context.valueNode && !context.valueNodeHasChildren ? _reactDom.createPortal(itemTextProps.children, context.valueNode) : null
        ]
    });
});
SelectItemText.displayName = ITEM_TEXT_NAME;
var ITEM_INDICATOR_NAME = "SelectItemIndicator";
var SelectItemIndicator = _react.forwardRef((props, forwardedRef)=>{
    const { __scopeSelect, ...itemIndicatorProps } = props;
    const itemContext = useSelectItemContext(ITEM_INDICATOR_NAME, __scopeSelect);
    return itemContext.isSelected ? /* @__PURE__ */ (0, _jsxRuntime.jsx)((0, _reactPrimitive.Primitive).span, {
        "aria-hidden": true,
        ...itemIndicatorProps,
        ref: forwardedRef
    }) : null;
});
SelectItemIndicator.displayName = ITEM_INDICATOR_NAME;
var SCROLL_UP_BUTTON_NAME = "SelectScrollUpButton";
var SelectScrollUpButton = _react.forwardRef((props, forwardedRef)=>{
    const contentContext = useSelectContentContext(SCROLL_UP_BUTTON_NAME, props.__scopeSelect);
    const viewportContext = useSelectViewportContext(SCROLL_UP_BUTTON_NAME, props.__scopeSelect);
    const [canScrollUp, setCanScrollUp] = _react.useState(false);
    const composedRefs = (0, _reactComposeRefs.useComposedRefs)(forwardedRef, viewportContext.onScrollButtonChange);
    (0, _reactUseLayoutEffect.useLayoutEffect)(()=>{
        if (contentContext.viewport && contentContext.isPositioned) {
            let handleScroll2 = function() {
                const canScrollUp2 = viewport.scrollTop > 0;
                setCanScrollUp(canScrollUp2);
            };
            var handleScroll = handleScroll2;
            const viewport = contentContext.viewport;
            handleScroll2();
            viewport.addEventListener("scroll", handleScroll2);
            return ()=>viewport.removeEventListener("scroll", handleScroll2);
        }
    }, [
        contentContext.viewport,
        contentContext.isPositioned
    ]);
    return canScrollUp ? /* @__PURE__ */ (0, _jsxRuntime.jsx)(SelectScrollButtonImpl, {
        ...props,
        ref: composedRefs,
        onAutoScroll: ()=>{
            const { viewport, selectedItem } = contentContext;
            if (viewport && selectedItem) viewport.scrollTop = viewport.scrollTop - selectedItem.offsetHeight;
        }
    }) : null;
});
SelectScrollUpButton.displayName = SCROLL_UP_BUTTON_NAME;
var SCROLL_DOWN_BUTTON_NAME = "SelectScrollDownButton";
var SelectScrollDownButton = _react.forwardRef((props, forwardedRef)=>{
    const contentContext = useSelectContentContext(SCROLL_DOWN_BUTTON_NAME, props.__scopeSelect);
    const viewportContext = useSelectViewportContext(SCROLL_DOWN_BUTTON_NAME, props.__scopeSelect);
    const [canScrollDown, setCanScrollDown] = _react.useState(false);
    const composedRefs = (0, _reactComposeRefs.useComposedRefs)(forwardedRef, viewportContext.onScrollButtonChange);
    (0, _reactUseLayoutEffect.useLayoutEffect)(()=>{
        if (contentContext.viewport && contentContext.isPositioned) {
            let handleScroll2 = function() {
                const maxScroll = viewport.scrollHeight - viewport.clientHeight;
                const canScrollDown2 = Math.ceil(viewport.scrollTop) < maxScroll;
                setCanScrollDown(canScrollDown2);
            };
            var handleScroll = handleScroll2;
            const viewport = contentContext.viewport;
            handleScroll2();
            viewport.addEventListener("scroll", handleScroll2);
            return ()=>viewport.removeEventListener("scroll", handleScroll2);
        }
    }, [
        contentContext.viewport,
        contentContext.isPositioned
    ]);
    return canScrollDown ? /* @__PURE__ */ (0, _jsxRuntime.jsx)(SelectScrollButtonImpl, {
        ...props,
        ref: composedRefs,
        onAutoScroll: ()=>{
            const { viewport, selectedItem } = contentContext;
            if (viewport && selectedItem) viewport.scrollTop = viewport.scrollTop + selectedItem.offsetHeight;
        }
    }) : null;
});
SelectScrollDownButton.displayName = SCROLL_DOWN_BUTTON_NAME;
var SelectScrollButtonImpl = _react.forwardRef((props, forwardedRef)=>{
    const { __scopeSelect, onAutoScroll, ...scrollIndicatorProps } = props;
    const contentContext = useSelectContentContext("SelectScrollButton", __scopeSelect);
    const autoScrollTimerRef = _react.useRef(null);
    const getItems = useCollection(__scopeSelect);
    const clearAutoScrollTimer = _react.useCallback(()=>{
        if (autoScrollTimerRef.current !== null) {
            window.clearInterval(autoScrollTimerRef.current);
            autoScrollTimerRef.current = null;
        }
    }, []);
    _react.useEffect(()=>{
        return ()=>clearAutoScrollTimer();
    }, [
        clearAutoScrollTimer
    ]);
    (0, _reactUseLayoutEffect.useLayoutEffect)(()=>{
        const activeItem = getItems().find((item)=>item.ref.current === document.activeElement);
        activeItem?.ref.current?.scrollIntoView({
            block: "nearest"
        });
    }, [
        getItems
    ]);
    return /* @__PURE__ */ (0, _jsxRuntime.jsx)((0, _reactPrimitive.Primitive).div, {
        "aria-hidden": true,
        ...scrollIndicatorProps,
        ref: forwardedRef,
        style: {
            flexShrink: 0,
            ...scrollIndicatorProps.style
        },
        onPointerDown: (0, _primitive.composeEventHandlers)(scrollIndicatorProps.onPointerDown, ()=>{
            if (autoScrollTimerRef.current === null) autoScrollTimerRef.current = window.setInterval(onAutoScroll, 50);
        }),
        onPointerMove: (0, _primitive.composeEventHandlers)(scrollIndicatorProps.onPointerMove, ()=>{
            contentContext.onItemLeave?.();
            if (autoScrollTimerRef.current === null) autoScrollTimerRef.current = window.setInterval(onAutoScroll, 50);
        }),
        onPointerLeave: (0, _primitive.composeEventHandlers)(scrollIndicatorProps.onPointerLeave, ()=>{
            clearAutoScrollTimer();
        })
    });
});
var SEPARATOR_NAME = "SelectSeparator";
var SelectSeparator = _react.forwardRef((props, forwardedRef)=>{
    const { __scopeSelect, ...separatorProps } = props;
    return /* @__PURE__ */ (0, _jsxRuntime.jsx)((0, _reactPrimitive.Primitive).div, {
        "aria-hidden": true,
        ...separatorProps,
        ref: forwardedRef
    });
});
SelectSeparator.displayName = SEPARATOR_NAME;
var ARROW_NAME = "SelectArrow";
var SelectArrow = _react.forwardRef((props, forwardedRef)=>{
    const { __scopeSelect, ...arrowProps } = props;
    const popperScope = usePopperScope(__scopeSelect);
    const context = useSelectContext(ARROW_NAME, __scopeSelect);
    const contentContext = useSelectContentContext(ARROW_NAME, __scopeSelect);
    return context.open && contentContext.position === "popper" ? /* @__PURE__ */ (0, _jsxRuntime.jsx)(_reactPopper.Arrow, {
        ...popperScope,
        ...arrowProps,
        ref: forwardedRef
    }) : null;
});
SelectArrow.displayName = ARROW_NAME;
var BUBBLE_INPUT_NAME = "SelectBubbleInput";
var SelectBubbleInput = _react.forwardRef(({ __scopeSelect, value, ...props }, forwardedRef)=>{
    const ref = _react.useRef(null);
    const composedRefs = (0, _reactComposeRefs.useComposedRefs)(forwardedRef, ref);
    const prevValue = (0, _reactUsePrevious.usePrevious)(value);
    _react.useEffect(()=>{
        const select = ref.current;
        if (!select) return;
        const selectProto = window.HTMLSelectElement.prototype;
        const descriptor = Object.getOwnPropertyDescriptor(selectProto, "value");
        const setValue = descriptor.set;
        if (prevValue !== value && setValue) {
            const event = new Event("change", {
                bubbles: true
            });
            setValue.call(select, value);
            select.dispatchEvent(event);
        }
    }, [
        prevValue,
        value
    ]);
    return /* @__PURE__ */ (0, _jsxRuntime.jsx)((0, _reactPrimitive.Primitive).select, {
        ...props,
        style: {
            ...(0, _reactVisuallyHidden.VISUALLY_HIDDEN_STYLES),
            ...props.style
        },
        ref: composedRefs,
        defaultValue: value
    });
});
SelectBubbleInput.displayName = BUBBLE_INPUT_NAME;
function shouldShowPlaceholder(value) {
    return value === "" || value === void 0;
}
function useTypeaheadSearch(onSearchChange) {
    const handleSearchChange = (0, _reactUseCallbackRef.useCallbackRef)(onSearchChange);
    const searchRef = _react.useRef("");
    const timerRef = _react.useRef(0);
    const handleTypeaheadSearch = _react.useCallback((key)=>{
        const search = searchRef.current + key;
        handleSearchChange(search);
        (function updateSearch(value) {
            searchRef.current = value;
            window.clearTimeout(timerRef.current);
            if (value !== "") timerRef.current = window.setTimeout(()=>updateSearch(""), 1e3);
        })(search);
    }, [
        handleSearchChange
    ]);
    const resetTypeahead = _react.useCallback(()=>{
        searchRef.current = "";
        window.clearTimeout(timerRef.current);
    }, []);
    _react.useEffect(()=>{
        return ()=>window.clearTimeout(timerRef.current);
    }, []);
    return [
        searchRef,
        handleTypeaheadSearch,
        resetTypeahead
    ];
}
function findNextItem(items, search, currentItem) {
    const isRepeated = search.length > 1 && Array.from(search).every((char)=>char === search[0]);
    const normalizedSearch = isRepeated ? search[0] : search;
    const currentItemIndex = currentItem ? items.indexOf(currentItem) : -1;
    let wrappedItems = wrapArray(items, Math.max(currentItemIndex, 0));
    const excludeCurrentItem = normalizedSearch.length === 1;
    if (excludeCurrentItem) wrappedItems = wrappedItems.filter((v)=>v !== currentItem);
    const nextItem = wrappedItems.find((item)=>item.textValue.toLowerCase().startsWith(normalizedSearch.toLowerCase()));
    return nextItem !== currentItem ? nextItem : void 0;
}
function wrapArray(array, startIndex) {
    return array.map((_, index)=>array[(startIndex + index) % array.length]);
}
var Root2 = Select;
var Trigger = SelectTrigger;
var Value = SelectValue;
var Icon = SelectIcon;
var Portal = SelectPortal;
var Content2 = SelectContent;
var Viewport = SelectViewport;
var Group = SelectGroup;
var Label = SelectLabel;
var Item = SelectItem;
var ItemText = SelectItemText;
var ItemIndicator = SelectItemIndicator;
var ScrollUpButton = SelectScrollUpButton;
var ScrollDownButton = SelectScrollDownButton;
var Separator = SelectSeparator;
var Arrow2 = SelectArrow;

},{"react":"jMk1U","react-dom":"i4X7T","@radix-ui/number":"4RRow","@radix-ui/primitive":"jakGl","@radix-ui/react-collection":"ke1La","@radix-ui/react-compose-refs":"8NEPR","@radix-ui/react-context":"aRUGq","@radix-ui/react-direction":"cmpkM","@radix-ui/react-dismissable-layer":"bY4sh","@radix-ui/react-focus-guards":"dAs9Q","@radix-ui/react-focus-scope":"9mDTe","@radix-ui/react-id":"SmdnD","@radix-ui/react-popper":"5hPZ1","@radix-ui/react-portal":"29eEC","@radix-ui/react-primitive":"i0I8C","@radix-ui/react-slot":"049tr","@radix-ui/react-use-callback-ref":"92pad","@radix-ui/react-use-controllable-state":"59sI3","@radix-ui/react-use-layout-effect":"enSS6","@radix-ui/react-use-previous":"9OYXJ","@radix-ui/react-visually-hidden":"bLgm8","aria-hidden":"2QB19","react-remove-scroll":"8jRAr","react/jsx-runtime":"05iiF","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4RRow":[function(require,module,exports,__globalThis) {
// packages/core/number/src/number.ts
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "clamp", ()=>clamp);
function clamp(value, [min, max]) {
    return Math.min(max, Math.max(min, value));
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bY4sh":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Branch", ()=>Branch);
parcelHelpers.export(exports, "DismissableLayer", ()=>DismissableLayer);
parcelHelpers.export(exports, "DismissableLayerBranch", ()=>DismissableLayerBranch);
parcelHelpers.export(exports, "Root", ()=>Root);
// src/dismissable-layer.tsx
var _react = require("react");
var _primitive = require("@radix-ui/primitive");
var _reactPrimitive = require("@radix-ui/react-primitive");
var _reactComposeRefs = require("@radix-ui/react-compose-refs");
var _reactUseCallbackRef = require("@radix-ui/react-use-callback-ref");
var _reactUseEscapeKeydown = require("@radix-ui/react-use-escape-keydown");
var _jsxRuntime = require("react/jsx-runtime");
"use client";
var DISMISSABLE_LAYER_NAME = "DismissableLayer";
var CONTEXT_UPDATE = "dismissableLayer.update";
var POINTER_DOWN_OUTSIDE = "dismissableLayer.pointerDownOutside";
var FOCUS_OUTSIDE = "dismissableLayer.focusOutside";
var originalBodyPointerEvents;
var DismissableLayerContext = _react.createContext({
    layers: /* @__PURE__ */ new Set(),
    layersWithOutsidePointerEventsDisabled: /* @__PURE__ */ new Set(),
    branches: /* @__PURE__ */ new Set()
});
var DismissableLayer = _react.forwardRef((props, forwardedRef)=>{
    const { disableOutsidePointerEvents = false, onEscapeKeyDown, onPointerDownOutside, onFocusOutside, onInteractOutside, onDismiss, ...layerProps } = props;
    const context = _react.useContext(DismissableLayerContext);
    const [node, setNode] = _react.useState(null);
    const ownerDocument = node?.ownerDocument ?? globalThis?.document;
    const [, force] = _react.useState({});
    const composedRefs = (0, _reactComposeRefs.useComposedRefs)(forwardedRef, (node2)=>setNode(node2));
    const layers = Array.from(context.layers);
    const [highestLayerWithOutsidePointerEventsDisabled] = [
        ...context.layersWithOutsidePointerEventsDisabled
    ].slice(-1);
    const highestLayerWithOutsidePointerEventsDisabledIndex = layers.indexOf(highestLayerWithOutsidePointerEventsDisabled);
    const index = node ? layers.indexOf(node) : -1;
    const isBodyPointerEventsDisabled = context.layersWithOutsidePointerEventsDisabled.size > 0;
    const isPointerEventsEnabled = index >= highestLayerWithOutsidePointerEventsDisabledIndex;
    const pointerDownOutside = usePointerDownOutside((event)=>{
        const target = event.target;
        const isPointerDownOnBranch = [
            ...context.branches
        ].some((branch)=>branch.contains(target));
        if (!isPointerEventsEnabled || isPointerDownOnBranch) return;
        onPointerDownOutside?.(event);
        onInteractOutside?.(event);
        if (!event.defaultPrevented) onDismiss?.();
    }, ownerDocument);
    const focusOutside = useFocusOutside((event)=>{
        const target = event.target;
        const isFocusInBranch = [
            ...context.branches
        ].some((branch)=>branch.contains(target));
        if (isFocusInBranch) return;
        onFocusOutside?.(event);
        onInteractOutside?.(event);
        if (!event.defaultPrevented) onDismiss?.();
    }, ownerDocument);
    (0, _reactUseEscapeKeydown.useEscapeKeydown)((event)=>{
        const isHighestLayer = index === context.layers.size - 1;
        if (!isHighestLayer) return;
        onEscapeKeyDown?.(event);
        if (!event.defaultPrevented && onDismiss) {
            event.preventDefault();
            onDismiss();
        }
    }, ownerDocument);
    _react.useEffect(()=>{
        if (!node) return;
        if (disableOutsidePointerEvents) {
            if (context.layersWithOutsidePointerEventsDisabled.size === 0) {
                originalBodyPointerEvents = ownerDocument.body.style.pointerEvents;
                ownerDocument.body.style.pointerEvents = "none";
            }
            context.layersWithOutsidePointerEventsDisabled.add(node);
        }
        context.layers.add(node);
        dispatchUpdate();
        return ()=>{
            if (disableOutsidePointerEvents && context.layersWithOutsidePointerEventsDisabled.size === 1) ownerDocument.body.style.pointerEvents = originalBodyPointerEvents;
        };
    }, [
        node,
        ownerDocument,
        disableOutsidePointerEvents,
        context
    ]);
    _react.useEffect(()=>{
        return ()=>{
            if (!node) return;
            context.layers.delete(node);
            context.layersWithOutsidePointerEventsDisabled.delete(node);
            dispatchUpdate();
        };
    }, [
        node,
        context
    ]);
    _react.useEffect(()=>{
        const handleUpdate = ()=>force({});
        document.addEventListener(CONTEXT_UPDATE, handleUpdate);
        return ()=>document.removeEventListener(CONTEXT_UPDATE, handleUpdate);
    }, []);
    return /* @__PURE__ */ (0, _jsxRuntime.jsx)((0, _reactPrimitive.Primitive).div, {
        ...layerProps,
        ref: composedRefs,
        style: {
            pointerEvents: isBodyPointerEventsDisabled ? isPointerEventsEnabled ? "auto" : "none" : void 0,
            ...props.style
        },
        onFocusCapture: (0, _primitive.composeEventHandlers)(props.onFocusCapture, focusOutside.onFocusCapture),
        onBlurCapture: (0, _primitive.composeEventHandlers)(props.onBlurCapture, focusOutside.onBlurCapture),
        onPointerDownCapture: (0, _primitive.composeEventHandlers)(props.onPointerDownCapture, pointerDownOutside.onPointerDownCapture)
    });
});
DismissableLayer.displayName = DISMISSABLE_LAYER_NAME;
var BRANCH_NAME = "DismissableLayerBranch";
var DismissableLayerBranch = _react.forwardRef((props, forwardedRef)=>{
    const context = _react.useContext(DismissableLayerContext);
    const ref = _react.useRef(null);
    const composedRefs = (0, _reactComposeRefs.useComposedRefs)(forwardedRef, ref);
    _react.useEffect(()=>{
        const node = ref.current;
        if (node) {
            context.branches.add(node);
            return ()=>{
                context.branches.delete(node);
            };
        }
    }, [
        context.branches
    ]);
    return /* @__PURE__ */ (0, _jsxRuntime.jsx)((0, _reactPrimitive.Primitive).div, {
        ...props,
        ref: composedRefs
    });
});
DismissableLayerBranch.displayName = BRANCH_NAME;
function usePointerDownOutside(onPointerDownOutside, ownerDocument = globalThis?.document) {
    const handlePointerDownOutside = (0, _reactUseCallbackRef.useCallbackRef)(onPointerDownOutside);
    const isPointerInsideReactTreeRef = _react.useRef(false);
    const handleClickRef = _react.useRef(()=>{});
    _react.useEffect(()=>{
        const handlePointerDown = (event)=>{
            if (event.target && !isPointerInsideReactTreeRef.current) {
                let handleAndDispatchPointerDownOutsideEvent2 = function() {
                    handleAndDispatchCustomEvent(POINTER_DOWN_OUTSIDE, handlePointerDownOutside, eventDetail, {
                        discrete: true
                    });
                };
                var handleAndDispatchPointerDownOutsideEvent = handleAndDispatchPointerDownOutsideEvent2;
                const eventDetail = {
                    originalEvent: event
                };
                if (event.pointerType === "touch") {
                    ownerDocument.removeEventListener("click", handleClickRef.current);
                    handleClickRef.current = handleAndDispatchPointerDownOutsideEvent2;
                    ownerDocument.addEventListener("click", handleClickRef.current, {
                        once: true
                    });
                } else handleAndDispatchPointerDownOutsideEvent2();
            } else ownerDocument.removeEventListener("click", handleClickRef.current);
            isPointerInsideReactTreeRef.current = false;
        };
        const timerId = window.setTimeout(()=>{
            ownerDocument.addEventListener("pointerdown", handlePointerDown);
        }, 0);
        return ()=>{
            window.clearTimeout(timerId);
            ownerDocument.removeEventListener("pointerdown", handlePointerDown);
            ownerDocument.removeEventListener("click", handleClickRef.current);
        };
    }, [
        ownerDocument,
        handlePointerDownOutside
    ]);
    return {
        // ensures we check React component tree (not just DOM tree)
        onPointerDownCapture: ()=>isPointerInsideReactTreeRef.current = true
    };
}
function useFocusOutside(onFocusOutside, ownerDocument = globalThis?.document) {
    const handleFocusOutside = (0, _reactUseCallbackRef.useCallbackRef)(onFocusOutside);
    const isFocusInsideReactTreeRef = _react.useRef(false);
    _react.useEffect(()=>{
        const handleFocus = (event)=>{
            if (event.target && !isFocusInsideReactTreeRef.current) {
                const eventDetail = {
                    originalEvent: event
                };
                handleAndDispatchCustomEvent(FOCUS_OUTSIDE, handleFocusOutside, eventDetail, {
                    discrete: false
                });
            }
        };
        ownerDocument.addEventListener("focusin", handleFocus);
        return ()=>ownerDocument.removeEventListener("focusin", handleFocus);
    }, [
        ownerDocument,
        handleFocusOutside
    ]);
    return {
        onFocusCapture: ()=>isFocusInsideReactTreeRef.current = true,
        onBlurCapture: ()=>isFocusInsideReactTreeRef.current = false
    };
}
function dispatchUpdate() {
    const event = new CustomEvent(CONTEXT_UPDATE);
    document.dispatchEvent(event);
}
function handleAndDispatchCustomEvent(name, handler, detail, { discrete }) {
    const target = detail.originalEvent.target;
    const event = new CustomEvent(name, {
        bubbles: false,
        cancelable: true,
        detail
    });
    if (handler) target.addEventListener(name, handler, {
        once: true
    });
    if (discrete) (0, _reactPrimitive.dispatchDiscreteCustomEvent)(target, event);
    else target.dispatchEvent(event);
}
var Root = DismissableLayer;
var Branch = DismissableLayerBranch;

},{"react":"jMk1U","@radix-ui/primitive":"jakGl","@radix-ui/react-primitive":"i0I8C","@radix-ui/react-compose-refs":"8NEPR","@radix-ui/react-use-callback-ref":"92pad","@radix-ui/react-use-escape-keydown":"1mwS0","react/jsx-runtime":"05iiF","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1mwS0":[function(require,module,exports,__globalThis) {
// packages/react/use-escape-keydown/src/use-escape-keydown.tsx
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useEscapeKeydown", ()=>useEscapeKeydown);
var _react = require("react");
var _reactUseCallbackRef = require("@radix-ui/react-use-callback-ref");
function useEscapeKeydown(onEscapeKeyDownProp, ownerDocument = globalThis?.document) {
    const onEscapeKeyDown = (0, _reactUseCallbackRef.useCallbackRef)(onEscapeKeyDownProp);
    _react.useEffect(()=>{
        const handleKeyDown = (event)=>{
            if (event.key === "Escape") onEscapeKeyDown(event);
        };
        ownerDocument.addEventListener("keydown", handleKeyDown, {
            capture: true
        });
        return ()=>ownerDocument.removeEventListener("keydown", handleKeyDown, {
                capture: true
            });
    }, [
        onEscapeKeyDown,
        ownerDocument
    ]);
}

},{"react":"jMk1U","@radix-ui/react-use-callback-ref":"92pad","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dAs9Q":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "FocusGuards", ()=>FocusGuards);
parcelHelpers.export(exports, "Root", ()=>FocusGuards);
parcelHelpers.export(exports, "useFocusGuards", ()=>useFocusGuards);
// src/focus-guards.tsx
var _react = require("react");
"use client";
var count = 0;
function FocusGuards(props) {
    useFocusGuards();
    return props.children;
}
function useFocusGuards() {
    _react.useEffect(()=>{
        const edgeGuards = document.querySelectorAll("[data-radix-focus-guard]");
        document.body.insertAdjacentElement("afterbegin", edgeGuards[0] ?? createFocusGuard());
        document.body.insertAdjacentElement("beforeend", edgeGuards[1] ?? createFocusGuard());
        count++;
        return ()=>{
            if (count === 1) document.querySelectorAll("[data-radix-focus-guard]").forEach((node)=>node.remove());
            count--;
        };
    }, []);
}
function createFocusGuard() {
    const element = document.createElement("span");
    element.setAttribute("data-radix-focus-guard", "");
    element.tabIndex = 0;
    element.style.outline = "none";
    element.style.opacity = "0";
    element.style.position = "fixed";
    element.style.pointerEvents = "none";
    return element;
}

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9mDTe":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "FocusScope", ()=>FocusScope);
parcelHelpers.export(exports, "Root", ()=>Root);
// src/focus-scope.tsx
var _react = require("react");
var _reactComposeRefs = require("@radix-ui/react-compose-refs");
var _reactPrimitive = require("@radix-ui/react-primitive");
var _reactUseCallbackRef = require("@radix-ui/react-use-callback-ref");
var _jsxRuntime = require("react/jsx-runtime");
"use client";
var AUTOFOCUS_ON_MOUNT = "focusScope.autoFocusOnMount";
var AUTOFOCUS_ON_UNMOUNT = "focusScope.autoFocusOnUnmount";
var EVENT_OPTIONS = {
    bubbles: false,
    cancelable: true
};
var FOCUS_SCOPE_NAME = "FocusScope";
var FocusScope = _react.forwardRef((props, forwardedRef)=>{
    const { loop = false, trapped = false, onMountAutoFocus: onMountAutoFocusProp, onUnmountAutoFocus: onUnmountAutoFocusProp, ...scopeProps } = props;
    const [container, setContainer] = _react.useState(null);
    const onMountAutoFocus = (0, _reactUseCallbackRef.useCallbackRef)(onMountAutoFocusProp);
    const onUnmountAutoFocus = (0, _reactUseCallbackRef.useCallbackRef)(onUnmountAutoFocusProp);
    const lastFocusedElementRef = _react.useRef(null);
    const composedRefs = (0, _reactComposeRefs.useComposedRefs)(forwardedRef, (node)=>setContainer(node));
    const focusScope = _react.useRef({
        paused: false,
        pause () {
            this.paused = true;
        },
        resume () {
            this.paused = false;
        }
    }).current;
    _react.useEffect(()=>{
        if (trapped) {
            let handleFocusIn2 = function(event) {
                if (focusScope.paused || !container) return;
                const target = event.target;
                if (container.contains(target)) lastFocusedElementRef.current = target;
                else focus(lastFocusedElementRef.current, {
                    select: true
                });
            }, handleFocusOut2 = function(event) {
                if (focusScope.paused || !container) return;
                const relatedTarget = event.relatedTarget;
                if (relatedTarget === null) return;
                if (!container.contains(relatedTarget)) focus(lastFocusedElementRef.current, {
                    select: true
                });
            }, handleMutations2 = function(mutations) {
                const focusedElement = document.activeElement;
                if (focusedElement !== document.body) return;
                for (const mutation of mutations)if (mutation.removedNodes.length > 0) focus(container);
            };
            var handleFocusIn = handleFocusIn2, handleFocusOut = handleFocusOut2, handleMutations = handleMutations2;
            document.addEventListener("focusin", handleFocusIn2);
            document.addEventListener("focusout", handleFocusOut2);
            const mutationObserver = new MutationObserver(handleMutations2);
            if (container) mutationObserver.observe(container, {
                childList: true,
                subtree: true
            });
            return ()=>{
                document.removeEventListener("focusin", handleFocusIn2);
                document.removeEventListener("focusout", handleFocusOut2);
                mutationObserver.disconnect();
            };
        }
    }, [
        trapped,
        container,
        focusScope.paused
    ]);
    _react.useEffect(()=>{
        if (container) {
            focusScopesStack.add(focusScope);
            const previouslyFocusedElement = document.activeElement;
            const hasFocusedCandidate = container.contains(previouslyFocusedElement);
            if (!hasFocusedCandidate) {
                const mountEvent = new CustomEvent(AUTOFOCUS_ON_MOUNT, EVENT_OPTIONS);
                container.addEventListener(AUTOFOCUS_ON_MOUNT, onMountAutoFocus);
                container.dispatchEvent(mountEvent);
                if (!mountEvent.defaultPrevented) {
                    focusFirst(removeLinks(getTabbableCandidates(container)), {
                        select: true
                    });
                    if (document.activeElement === previouslyFocusedElement) focus(container);
                }
            }
            return ()=>{
                container.removeEventListener(AUTOFOCUS_ON_MOUNT, onMountAutoFocus);
                setTimeout(()=>{
                    const unmountEvent = new CustomEvent(AUTOFOCUS_ON_UNMOUNT, EVENT_OPTIONS);
                    container.addEventListener(AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);
                    container.dispatchEvent(unmountEvent);
                    if (!unmountEvent.defaultPrevented) focus(previouslyFocusedElement ?? document.body, {
                        select: true
                    });
                    container.removeEventListener(AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);
                    focusScopesStack.remove(focusScope);
                }, 0);
            };
        }
    }, [
        container,
        onMountAutoFocus,
        onUnmountAutoFocus,
        focusScope
    ]);
    const handleKeyDown = _react.useCallback((event)=>{
        if (!loop && !trapped) return;
        if (focusScope.paused) return;
        const isTabKey = event.key === "Tab" && !event.altKey && !event.ctrlKey && !event.metaKey;
        const focusedElement = document.activeElement;
        if (isTabKey && focusedElement) {
            const container2 = event.currentTarget;
            const [first, last] = getTabbableEdges(container2);
            const hasTabbableElementsInside = first && last;
            if (!hasTabbableElementsInside) {
                if (focusedElement === container2) event.preventDefault();
            } else {
                if (!event.shiftKey && focusedElement === last) {
                    event.preventDefault();
                    if (loop) focus(first, {
                        select: true
                    });
                } else if (event.shiftKey && focusedElement === first) {
                    event.preventDefault();
                    if (loop) focus(last, {
                        select: true
                    });
                }
            }
        }
    }, [
        loop,
        trapped,
        focusScope.paused
    ]);
    return /* @__PURE__ */ (0, _jsxRuntime.jsx)((0, _reactPrimitive.Primitive).div, {
        tabIndex: -1,
        ...scopeProps,
        ref: composedRefs,
        onKeyDown: handleKeyDown
    });
});
FocusScope.displayName = FOCUS_SCOPE_NAME;
function focusFirst(candidates, { select = false } = {}) {
    const previouslyFocusedElement = document.activeElement;
    for (const candidate of candidates){
        focus(candidate, {
            select
        });
        if (document.activeElement !== previouslyFocusedElement) return;
    }
}
function getTabbableEdges(container) {
    const candidates = getTabbableCandidates(container);
    const first = findVisible(candidates, container);
    const last = findVisible(candidates.reverse(), container);
    return [
        first,
        last
    ];
}
function getTabbableCandidates(container) {
    const nodes = [];
    const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {
        acceptNode: (node)=>{
            const isHiddenInput = node.tagName === "INPUT" && node.type === "hidden";
            if (node.disabled || node.hidden || isHiddenInput) return NodeFilter.FILTER_SKIP;
            return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;
        }
    });
    while(walker.nextNode())nodes.push(walker.currentNode);
    return nodes;
}
function findVisible(elements, container) {
    for (const element of elements){
        if (!isHidden(element, {
            upTo: container
        })) return element;
    }
}
function isHidden(node, { upTo }) {
    if (getComputedStyle(node).visibility === "hidden") return true;
    while(node){
        if (upTo !== void 0 && node === upTo) return false;
        if (getComputedStyle(node).display === "none") return true;
        node = node.parentElement;
    }
    return false;
}
function isSelectableInput(element) {
    return element instanceof HTMLInputElement && "select" in element;
}
function focus(element, { select = false } = {}) {
    if (element && element.focus) {
        const previouslyFocusedElement = document.activeElement;
        element.focus({
            preventScroll: true
        });
        if (element !== previouslyFocusedElement && isSelectableInput(element) && select) element.select();
    }
}
var focusScopesStack = createFocusScopesStack();
function createFocusScopesStack() {
    let stack = [];
    return {
        add (focusScope) {
            const activeFocusScope = stack[0];
            if (focusScope !== activeFocusScope) activeFocusScope?.pause();
            stack = arrayRemove(stack, focusScope);
            stack.unshift(focusScope);
        },
        remove (focusScope) {
            stack = arrayRemove(stack, focusScope);
            stack[0]?.resume();
        }
    };
}
function arrayRemove(array, item) {
    const updatedArray = [
        ...array
    ];
    const index = updatedArray.indexOf(item);
    if (index !== -1) updatedArray.splice(index, 1);
    return updatedArray;
}
function removeLinks(items) {
    return items.filter((item)=>item.tagName !== "A");
}
var Root = FocusScope;

},{"react":"jMk1U","@radix-ui/react-compose-refs":"8NEPR","@radix-ui/react-primitive":"i0I8C","@radix-ui/react-use-callback-ref":"92pad","react/jsx-runtime":"05iiF","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5hPZ1":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ALIGN_OPTIONS", ()=>ALIGN_OPTIONS);
parcelHelpers.export(exports, "Anchor", ()=>Anchor);
parcelHelpers.export(exports, "Arrow", ()=>Arrow);
parcelHelpers.export(exports, "Content", ()=>Content);
parcelHelpers.export(exports, "Popper", ()=>Popper);
parcelHelpers.export(exports, "PopperAnchor", ()=>PopperAnchor);
parcelHelpers.export(exports, "PopperArrow", ()=>PopperArrow);
parcelHelpers.export(exports, "PopperContent", ()=>PopperContent);
parcelHelpers.export(exports, "Root", ()=>Root2);
parcelHelpers.export(exports, "SIDE_OPTIONS", ()=>SIDE_OPTIONS);
parcelHelpers.export(exports, "createPopperScope", ()=>createPopperScope);
// src/popper.tsx
var _react = require("react");
var _reactDom = require("@floating-ui/react-dom");
var _reactArrow = require("@radix-ui/react-arrow");
var _reactComposeRefs = require("@radix-ui/react-compose-refs");
var _reactContext = require("@radix-ui/react-context");
var _reactPrimitive = require("@radix-ui/react-primitive");
var _reactUseCallbackRef = require("@radix-ui/react-use-callback-ref");
var _reactUseLayoutEffect = require("@radix-ui/react-use-layout-effect");
var _reactUseSize = require("@radix-ui/react-use-size");
var _jsxRuntime = require("react/jsx-runtime");
"use client";
var SIDE_OPTIONS = [
    "top",
    "right",
    "bottom",
    "left"
];
var ALIGN_OPTIONS = [
    "start",
    "center",
    "end"
];
var POPPER_NAME = "Popper";
var [createPopperContext, createPopperScope] = (0, _reactContext.createContextScope)(POPPER_NAME);
var [PopperProvider, usePopperContext] = createPopperContext(POPPER_NAME);
var Popper = (props)=>{
    const { __scopePopper, children } = props;
    const [anchor, setAnchor] = _react.useState(null);
    return /* @__PURE__ */ (0, _jsxRuntime.jsx)(PopperProvider, {
        scope: __scopePopper,
        anchor,
        onAnchorChange: setAnchor,
        children
    });
};
Popper.displayName = POPPER_NAME;
var ANCHOR_NAME = "PopperAnchor";
var PopperAnchor = _react.forwardRef((props, forwardedRef)=>{
    const { __scopePopper, virtualRef, ...anchorProps } = props;
    const context = usePopperContext(ANCHOR_NAME, __scopePopper);
    const ref = _react.useRef(null);
    const composedRefs = (0, _reactComposeRefs.useComposedRefs)(forwardedRef, ref);
    const anchorRef = _react.useRef(null);
    _react.useEffect(()=>{
        const previousAnchor = anchorRef.current;
        anchorRef.current = virtualRef?.current || ref.current;
        if (previousAnchor !== anchorRef.current) context.onAnchorChange(anchorRef.current);
    });
    return virtualRef ? null : /* @__PURE__ */ (0, _jsxRuntime.jsx)((0, _reactPrimitive.Primitive).div, {
        ...anchorProps,
        ref: composedRefs
    });
});
PopperAnchor.displayName = ANCHOR_NAME;
var CONTENT_NAME = "PopperContent";
var [PopperContentProvider, useContentContext] = createPopperContext(CONTENT_NAME);
var PopperContent = _react.forwardRef((props, forwardedRef)=>{
    const { __scopePopper, side = "bottom", sideOffset = 0, align = "center", alignOffset = 0, arrowPadding = 0, avoidCollisions = true, collisionBoundary = [], collisionPadding: collisionPaddingProp = 0, sticky = "partial", hideWhenDetached = false, updatePositionStrategy = "optimized", onPlaced, ...contentProps } = props;
    const context = usePopperContext(CONTENT_NAME, __scopePopper);
    const [content, setContent] = _react.useState(null);
    const composedRefs = (0, _reactComposeRefs.useComposedRefs)(forwardedRef, (node)=>setContent(node));
    const [arrow, setArrow] = _react.useState(null);
    const arrowSize = (0, _reactUseSize.useSize)(arrow);
    const arrowWidth = arrowSize?.width ?? 0;
    const arrowHeight = arrowSize?.height ?? 0;
    const desiredPlacement = side + (align !== "center" ? "-" + align : "");
    const collisionPadding = typeof collisionPaddingProp === "number" ? collisionPaddingProp : {
        top: 0,
        right: 0,
        bottom: 0,
        left: 0,
        ...collisionPaddingProp
    };
    const boundary = Array.isArray(collisionBoundary) ? collisionBoundary : [
        collisionBoundary
    ];
    const hasExplicitBoundaries = boundary.length > 0;
    const detectOverflowOptions = {
        padding: collisionPadding,
        boundary: boundary.filter(isNotNull),
        // with `strategy: 'fixed'`, this is the only way to get it to respect boundaries
        altBoundary: hasExplicitBoundaries
    };
    const { refs, floatingStyles, placement, isPositioned, middlewareData } = (0, _reactDom.useFloating)({
        // default to `fixed` strategy so users don't have to pick and we also avoid focus scroll issues
        strategy: "fixed",
        placement: desiredPlacement,
        whileElementsMounted: (...args)=>{
            const cleanup = (0, _reactDom.autoUpdate)(...args, {
                animationFrame: updatePositionStrategy === "always"
            });
            return cleanup;
        },
        elements: {
            reference: context.anchor
        },
        middleware: [
            (0, _reactDom.offset)({
                mainAxis: sideOffset + arrowHeight,
                alignmentAxis: alignOffset
            }),
            avoidCollisions && (0, _reactDom.shift)({
                mainAxis: true,
                crossAxis: false,
                limiter: sticky === "partial" ? (0, _reactDom.limitShift)() : void 0,
                ...detectOverflowOptions
            }),
            avoidCollisions && (0, _reactDom.flip)({
                ...detectOverflowOptions
            }),
            (0, _reactDom.size)({
                ...detectOverflowOptions,
                apply: ({ elements, rects, availableWidth, availableHeight })=>{
                    const { width: anchorWidth, height: anchorHeight } = rects.reference;
                    const contentStyle = elements.floating.style;
                    contentStyle.setProperty("--radix-popper-available-width", `${availableWidth}px`);
                    contentStyle.setProperty("--radix-popper-available-height", `${availableHeight}px`);
                    contentStyle.setProperty("--radix-popper-anchor-width", `${anchorWidth}px`);
                    contentStyle.setProperty("--radix-popper-anchor-height", `${anchorHeight}px`);
                }
            }),
            arrow && (0, _reactDom.arrow)({
                element: arrow,
                padding: arrowPadding
            }),
            transformOrigin({
                arrowWidth,
                arrowHeight
            }),
            hideWhenDetached && (0, _reactDom.hide)({
                strategy: "referenceHidden",
                ...detectOverflowOptions
            })
        ]
    });
    const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);
    const handlePlaced = (0, _reactUseCallbackRef.useCallbackRef)(onPlaced);
    (0, _reactUseLayoutEffect.useLayoutEffect)(()=>{
        if (isPositioned) handlePlaced?.();
    }, [
        isPositioned,
        handlePlaced
    ]);
    const arrowX = middlewareData.arrow?.x;
    const arrowY = middlewareData.arrow?.y;
    const cannotCenterArrow = middlewareData.arrow?.centerOffset !== 0;
    const [contentZIndex, setContentZIndex] = _react.useState();
    (0, _reactUseLayoutEffect.useLayoutEffect)(()=>{
        if (content) setContentZIndex(window.getComputedStyle(content).zIndex);
    }, [
        content
    ]);
    return /* @__PURE__ */ (0, _jsxRuntime.jsx)("div", {
        ref: refs.setFloating,
        "data-radix-popper-content-wrapper": "",
        style: {
            ...floatingStyles,
            transform: isPositioned ? floatingStyles.transform : "translate(0, -200%)",
            // keep off the page when measuring
            minWidth: "max-content",
            zIndex: contentZIndex,
            ["--radix-popper-transform-origin"]: [
                middlewareData.transformOrigin?.x,
                middlewareData.transformOrigin?.y
            ].join(" "),
            // hide the content if using the hide middleware and should be hidden
            // set visibility to hidden and disable pointer events so the UI behaves
            // as if the PopperContent isn't there at all
            ...middlewareData.hide?.referenceHidden && {
                visibility: "hidden",
                pointerEvents: "none"
            }
        },
        dir: props.dir,
        children: /* @__PURE__ */ (0, _jsxRuntime.jsx)(PopperContentProvider, {
            scope: __scopePopper,
            placedSide,
            onArrowChange: setArrow,
            arrowX,
            arrowY,
            shouldHideArrow: cannotCenterArrow,
            children: /* @__PURE__ */ (0, _jsxRuntime.jsx)((0, _reactPrimitive.Primitive).div, {
                "data-side": placedSide,
                "data-align": placedAlign,
                ...contentProps,
                ref: composedRefs,
                style: {
                    ...contentProps.style,
                    // if the PopperContent hasn't been placed yet (not all measurements done)
                    // we prevent animations so that users's animation don't kick in too early referring wrong sides
                    animation: !isPositioned ? "none" : void 0
                }
            })
        })
    });
});
PopperContent.displayName = CONTENT_NAME;
var ARROW_NAME = "PopperArrow";
var OPPOSITE_SIDE = {
    top: "bottom",
    right: "left",
    bottom: "top",
    left: "right"
};
var PopperArrow = _react.forwardRef(function PopperArrow2(props, forwardedRef) {
    const { __scopePopper, ...arrowProps } = props;
    const contentContext = useContentContext(ARROW_NAME, __scopePopper);
    const baseSide = OPPOSITE_SIDE[contentContext.placedSide];
    return(// we have to use an extra wrapper because `ResizeObserver` (used by `useSize`)
    // doesn't report size as we'd expect on SVG elements.
    // it reports their bounding box which is effectively the largest path inside the SVG.
    /* @__PURE__ */ (0, _jsxRuntime.jsx)("span", {
        ref: contentContext.onArrowChange,
        style: {
            position: "absolute",
            left: contentContext.arrowX,
            top: contentContext.arrowY,
            [baseSide]: 0,
            transformOrigin: {
                top: "",
                right: "0 0",
                bottom: "center 0",
                left: "100% 0"
            }[contentContext.placedSide],
            transform: {
                top: "translateY(100%)",
                right: "translateY(50%) rotate(90deg) translateX(-50%)",
                bottom: `rotate(180deg)`,
                left: "translateY(50%) rotate(-90deg) translateX(50%)"
            }[contentContext.placedSide],
            visibility: contentContext.shouldHideArrow ? "hidden" : void 0
        },
        children: /* @__PURE__ */ (0, _jsxRuntime.jsx)(_reactArrow.Root, {
            ...arrowProps,
            ref: forwardedRef,
            style: {
                ...arrowProps.style,
                // ensures the element can be measured correctly (mostly for if SVG)
                display: "block"
            }
        })
    }));
});
PopperArrow.displayName = ARROW_NAME;
function isNotNull(value) {
    return value !== null;
}
var transformOrigin = (options)=>({
        name: "transformOrigin",
        options,
        fn (data) {
            const { placement, rects, middlewareData } = data;
            const cannotCenterArrow = middlewareData.arrow?.centerOffset !== 0;
            const isArrowHidden = cannotCenterArrow;
            const arrowWidth = isArrowHidden ? 0 : options.arrowWidth;
            const arrowHeight = isArrowHidden ? 0 : options.arrowHeight;
            const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);
            const noArrowAlign = {
                start: "0%",
                center: "50%",
                end: "100%"
            }[placedAlign];
            const arrowXCenter = (middlewareData.arrow?.x ?? 0) + arrowWidth / 2;
            const arrowYCenter = (middlewareData.arrow?.y ?? 0) + arrowHeight / 2;
            let x = "";
            let y = "";
            if (placedSide === "bottom") {
                x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;
                y = `${-arrowHeight}px`;
            } else if (placedSide === "top") {
                x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;
                y = `${rects.floating.height + arrowHeight}px`;
            } else if (placedSide === "right") {
                x = `${-arrowHeight}px`;
                y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;
            } else if (placedSide === "left") {
                x = `${rects.floating.width + arrowHeight}px`;
                y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;
            }
            return {
                data: {
                    x,
                    y
                }
            };
        }
    });
function getSideAndAlignFromPlacement(placement) {
    const [side, align = "center"] = placement.split("-");
    return [
        side,
        align
    ];
}
var Root2 = Popper;
var Anchor = PopperAnchor;
var Content = PopperContent;
var Arrow = PopperArrow;

},{"react":"jMk1U","@floating-ui/react-dom":"4vY0I","@radix-ui/react-arrow":"40aoY","@radix-ui/react-compose-refs":"8NEPR","@radix-ui/react-context":"aRUGq","@radix-ui/react-primitive":"i0I8C","@radix-ui/react-use-callback-ref":"92pad","@radix-ui/react-use-layout-effect":"enSS6","@radix-ui/react-use-size":"kuUSP","react/jsx-runtime":"05iiF","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4vY0I":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "autoUpdate", ()=>(0, _dom.autoUpdate));
parcelHelpers.export(exports, "computePosition", ()=>(0, _dom.computePosition));
parcelHelpers.export(exports, "detectOverflow", ()=>(0, _dom.detectOverflow));
parcelHelpers.export(exports, "getOverflowAncestors", ()=>(0, _dom.getOverflowAncestors));
parcelHelpers.export(exports, "platform", ()=>(0, _dom.platform));
parcelHelpers.export(exports, "arrow", ()=>arrow);
parcelHelpers.export(exports, "autoPlacement", ()=>autoPlacement);
parcelHelpers.export(exports, "flip", ()=>flip);
parcelHelpers.export(exports, "hide", ()=>hide);
parcelHelpers.export(exports, "inline", ()=>inline);
parcelHelpers.export(exports, "limitShift", ()=>limitShift);
parcelHelpers.export(exports, "offset", ()=>offset);
parcelHelpers.export(exports, "shift", ()=>shift);
parcelHelpers.export(exports, "size", ()=>size);
parcelHelpers.export(exports, "useFloating", ()=>useFloating);
var _dom = require("@floating-ui/dom");
var _react = require("react");
var _reactDom = require("react-dom");
var isClient = typeof document !== 'undefined';
var noop = function noop() {};
var index = isClient ? (0, _react.useLayoutEffect) : noop;
// Fork of `fast-deep-equal` that only does the comparisons we need and compares
// functions
function deepEqual(a, b) {
    if (a === b) return true;
    if (typeof a !== typeof b) return false;
    if (typeof a === 'function' && a.toString() === b.toString()) return true;
    let length;
    let i;
    let keys;
    if (a && b && typeof a === 'object') {
        if (Array.isArray(a)) {
            length = a.length;
            if (length !== b.length) return false;
            for(i = length; i-- !== 0;){
                if (!deepEqual(a[i], b[i])) return false;
            }
            return true;
        }
        keys = Object.keys(a);
        length = keys.length;
        if (length !== Object.keys(b).length) return false;
        for(i = length; i-- !== 0;){
            if (!({}).hasOwnProperty.call(b, keys[i])) return false;
        }
        for(i = length; i-- !== 0;){
            const key = keys[i];
            if (key === '_owner' && a.$$typeof) continue;
            if (!deepEqual(a[key], b[key])) return false;
        }
        return true;
    }
    return a !== a && b !== b;
}
function getDPR(element) {
    if (typeof window === 'undefined') return 1;
    const win = element.ownerDocument.defaultView || window;
    return win.devicePixelRatio || 1;
}
function roundByDPR(element, value) {
    const dpr = getDPR(element);
    return Math.round(value * dpr) / dpr;
}
function useLatestRef(value) {
    const ref = _react.useRef(value);
    index(()=>{
        ref.current = value;
    });
    return ref;
}
/**
 * Provides data to position a floating element.
 * @see https://floating-ui.com/docs/useFloating
 */ function useFloating(options) {
    if (options === void 0) options = {};
    const { placement = 'bottom', strategy = 'absolute', middleware = [], platform, elements: { reference: externalReference, floating: externalFloating } = {}, transform = true, whileElementsMounted, open } = options;
    const [data, setData] = _react.useState({
        x: 0,
        y: 0,
        strategy,
        placement,
        middlewareData: {},
        isPositioned: false
    });
    const [latestMiddleware, setLatestMiddleware] = _react.useState(middleware);
    if (!deepEqual(latestMiddleware, middleware)) setLatestMiddleware(middleware);
    const [_reference, _setReference] = _react.useState(null);
    const [_floating, _setFloating] = _react.useState(null);
    const setReference = _react.useCallback((node)=>{
        if (node !== referenceRef.current) {
            referenceRef.current = node;
            _setReference(node);
        }
    }, []);
    const setFloating = _react.useCallback((node)=>{
        if (node !== floatingRef.current) {
            floatingRef.current = node;
            _setFloating(node);
        }
    }, []);
    const referenceEl = externalReference || _reference;
    const floatingEl = externalFloating || _floating;
    const referenceRef = _react.useRef(null);
    const floatingRef = _react.useRef(null);
    const dataRef = _react.useRef(data);
    const hasWhileElementsMounted = whileElementsMounted != null;
    const whileElementsMountedRef = useLatestRef(whileElementsMounted);
    const platformRef = useLatestRef(platform);
    const openRef = useLatestRef(open);
    const update = _react.useCallback(()=>{
        if (!referenceRef.current || !floatingRef.current) return;
        const config = {
            placement,
            strategy,
            middleware: latestMiddleware
        };
        if (platformRef.current) config.platform = platformRef.current;
        (0, _dom.computePosition)(referenceRef.current, floatingRef.current, config).then((data)=>{
            const fullData = {
                ...data,
                // The floating element's position may be recomputed while it's closed
                // but still mounted (such as when transitioning out). To ensure
                // `isPositioned` will be `false` initially on the next open, avoid
                // setting it to `true` when `open === false` (must be specified).
                isPositioned: openRef.current !== false
            };
            if (isMountedRef.current && !deepEqual(dataRef.current, fullData)) {
                dataRef.current = fullData;
                _reactDom.flushSync(()=>{
                    setData(fullData);
                });
            }
        });
    }, [
        latestMiddleware,
        placement,
        strategy,
        platformRef,
        openRef
    ]);
    index(()=>{
        if (open === false && dataRef.current.isPositioned) {
            dataRef.current.isPositioned = false;
            setData((data)=>({
                    ...data,
                    isPositioned: false
                }));
        }
    }, [
        open
    ]);
    const isMountedRef = _react.useRef(false);
    index(()=>{
        isMountedRef.current = true;
        return ()=>{
            isMountedRef.current = false;
        };
    }, []);
    index(()=>{
        if (referenceEl) referenceRef.current = referenceEl;
        if (floatingEl) floatingRef.current = floatingEl;
        if (referenceEl && floatingEl) {
            if (whileElementsMountedRef.current) return whileElementsMountedRef.current(referenceEl, floatingEl, update);
            update();
        }
    }, [
        referenceEl,
        floatingEl,
        update,
        whileElementsMountedRef,
        hasWhileElementsMounted
    ]);
    const refs = _react.useMemo(()=>({
            reference: referenceRef,
            floating: floatingRef,
            setReference,
            setFloating
        }), [
        setReference,
        setFloating
    ]);
    const elements = _react.useMemo(()=>({
            reference: referenceEl,
            floating: floatingEl
        }), [
        referenceEl,
        floatingEl
    ]);
    const floatingStyles = _react.useMemo(()=>{
        const initialStyles = {
            position: strategy,
            left: 0,
            top: 0
        };
        if (!elements.floating) return initialStyles;
        const x = roundByDPR(elements.floating, data.x);
        const y = roundByDPR(elements.floating, data.y);
        if (transform) return {
            ...initialStyles,
            transform: "translate(" + x + "px, " + y + "px)",
            ...getDPR(elements.floating) >= 1.5 && {
                willChange: 'transform'
            }
        };
        return {
            position: strategy,
            left: x,
            top: y
        };
    }, [
        strategy,
        transform,
        elements.floating,
        data.x,
        data.y
    ]);
    return _react.useMemo(()=>({
            ...data,
            update,
            refs,
            elements,
            floatingStyles
        }), [
        data,
        update,
        refs,
        elements,
        floatingStyles
    ]);
}
/**
 * Provides data to position an inner element of the floating element so that it
 * appears centered to the reference element.
 * This wraps the core `arrow` middleware to allow React refs as the element.
 * @see https://floating-ui.com/docs/arrow
 */ const arrow$1 = (options)=>{
    function isRef(value) {
        return ({}).hasOwnProperty.call(value, 'current');
    }
    return {
        name: 'arrow',
        options,
        fn (state) {
            const { element, padding } = typeof options === 'function' ? options(state) : options;
            if (element && isRef(element)) {
                if (element.current != null) return (0, _dom.arrow)({
                    element: element.current,
                    padding
                }).fn(state);
                return {};
            }
            if (element) return (0, _dom.arrow)({
                element,
                padding
            }).fn(state);
            return {};
        }
    };
};
/**
 * Modifies the placement by translating the floating element along the
 * specified axes.
 * A number (shorthand for `mainAxis` or distance), or an axes configuration
 * object may be passed.
 * @see https://floating-ui.com/docs/offset
 */ const offset = (options, deps)=>({
        ...(0, _dom.offset)(options),
        options: [
            options,
            deps
        ]
    });
/**
 * Optimizes the visibility of the floating element by shifting it in order to
 * keep it in view when it will overflow the clipping boundary.
 * @see https://floating-ui.com/docs/shift
 */ const shift = (options, deps)=>({
        ...(0, _dom.shift)(options),
        options: [
            options,
            deps
        ]
    });
/**
 * Built-in `limiter` that will stop `shift()` at a certain point.
 */ const limitShift = (options, deps)=>({
        ...(0, _dom.limitShift)(options),
        options: [
            options,
            deps
        ]
    });
/**
 * Optimizes the visibility of the floating element by flipping the `placement`
 * in order to keep it in view when the preferred placement(s) will overflow the
 * clipping boundary. Alternative to `autoPlacement`.
 * @see https://floating-ui.com/docs/flip
 */ const flip = (options, deps)=>({
        ...(0, _dom.flip)(options),
        options: [
            options,
            deps
        ]
    });
/**
 * Provides data that allows you to change the size of the floating element —
 * for instance, prevent it from overflowing the clipping boundary or match the
 * width of the reference element.
 * @see https://floating-ui.com/docs/size
 */ const size = (options, deps)=>({
        ...(0, _dom.size)(options),
        options: [
            options,
            deps
        ]
    });
/**
 * Optimizes the visibility of the floating element by choosing the placement
 * that has the most space available automatically, without needing to specify a
 * preferred placement. Alternative to `flip`.
 * @see https://floating-ui.com/docs/autoPlacement
 */ const autoPlacement = (options, deps)=>({
        ...(0, _dom.autoPlacement)(options),
        options: [
            options,
            deps
        ]
    });
/**
 * Provides data to hide the floating element in applicable situations, such as
 * when it is not in the same clipping context as the reference element.
 * @see https://floating-ui.com/docs/hide
 */ const hide = (options, deps)=>({
        ...(0, _dom.hide)(options),
        options: [
            options,
            deps
        ]
    });
/**
 * Provides improved positioning for inline reference elements that can span
 * over multiple lines, such as hyperlinks or range selections.
 * @see https://floating-ui.com/docs/inline
 */ const inline = (options, deps)=>({
        ...(0, _dom.inline)(options),
        options: [
            options,
            deps
        ]
    });
/**
 * Provides data to position an inner element of the floating element so that it
 * appears centered to the reference element.
 * This wraps the core `arrow` middleware to allow React refs as the element.
 * @see https://floating-ui.com/docs/arrow
 */ const arrow = (options, deps)=>({
        ...arrow$1(options),
        options: [
            options,
            deps
        ]
    });

},{"@floating-ui/dom":"9ipqt","react":"jMk1U","react-dom":"i4X7T","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9ipqt":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getOverflowAncestors", ()=>(0, _dom.getOverflowAncestors));
parcelHelpers.export(exports, "arrow", ()=>arrow);
parcelHelpers.export(exports, "autoPlacement", ()=>autoPlacement);
parcelHelpers.export(exports, "autoUpdate", ()=>autoUpdate);
parcelHelpers.export(exports, "computePosition", ()=>computePosition);
parcelHelpers.export(exports, "detectOverflow", ()=>detectOverflow);
parcelHelpers.export(exports, "flip", ()=>flip);
parcelHelpers.export(exports, "hide", ()=>hide);
parcelHelpers.export(exports, "inline", ()=>inline);
parcelHelpers.export(exports, "limitShift", ()=>limitShift);
parcelHelpers.export(exports, "offset", ()=>offset);
parcelHelpers.export(exports, "platform", ()=>platform);
parcelHelpers.export(exports, "shift", ()=>shift);
parcelHelpers.export(exports, "size", ()=>size);
var _core = require("@floating-ui/core");
var _utils = require("@floating-ui/utils");
var _dom = require("@floating-ui/utils/dom");
function getCssDimensions(element) {
    const css = (0, _dom.getComputedStyle)(element);
    // In testing environments, the `width` and `height` properties are empty
    // strings for SVG elements, returning NaN. Fallback to `0` in this case.
    let width = parseFloat(css.width) || 0;
    let height = parseFloat(css.height) || 0;
    const hasOffset = (0, _dom.isHTMLElement)(element);
    const offsetWidth = hasOffset ? element.offsetWidth : width;
    const offsetHeight = hasOffset ? element.offsetHeight : height;
    const shouldFallback = (0, _utils.round)(width) !== offsetWidth || (0, _utils.round)(height) !== offsetHeight;
    if (shouldFallback) {
        width = offsetWidth;
        height = offsetHeight;
    }
    return {
        width,
        height,
        $: shouldFallback
    };
}
function unwrapElement(element) {
    return !(0, _dom.isElement)(element) ? element.contextElement : element;
}
function getScale(element) {
    const domElement = unwrapElement(element);
    if (!(0, _dom.isHTMLElement)(domElement)) return (0, _utils.createCoords)(1);
    const rect = domElement.getBoundingClientRect();
    const { width, height, $ } = getCssDimensions(domElement);
    let x = ($ ? (0, _utils.round)(rect.width) : rect.width) / width;
    let y = ($ ? (0, _utils.round)(rect.height) : rect.height) / height;
    // 0, NaN, or Infinity should always fallback to 1.
    if (!x || !Number.isFinite(x)) x = 1;
    if (!y || !Number.isFinite(y)) y = 1;
    return {
        x,
        y
    };
}
const noOffsets = /*#__PURE__*/ (0, _utils.createCoords)(0);
function getVisualOffsets(element) {
    const win = (0, _dom.getWindow)(element);
    if (!(0, _dom.isWebKit)() || !win.visualViewport) return noOffsets;
    return {
        x: win.visualViewport.offsetLeft,
        y: win.visualViewport.offsetTop
    };
}
function shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {
    if (isFixed === void 0) isFixed = false;
    if (!floatingOffsetParent || isFixed && floatingOffsetParent !== (0, _dom.getWindow)(element)) return false;
    return isFixed;
}
function getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {
    if (includeScale === void 0) includeScale = false;
    if (isFixedStrategy === void 0) isFixedStrategy = false;
    const clientRect = element.getBoundingClientRect();
    const domElement = unwrapElement(element);
    let scale = (0, _utils.createCoords)(1);
    if (includeScale) {
        if (offsetParent) {
            if ((0, _dom.isElement)(offsetParent)) scale = getScale(offsetParent);
        } else scale = getScale(element);
    }
    const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : (0, _utils.createCoords)(0);
    let x = (clientRect.left + visualOffsets.x) / scale.x;
    let y = (clientRect.top + visualOffsets.y) / scale.y;
    let width = clientRect.width / scale.x;
    let height = clientRect.height / scale.y;
    if (domElement) {
        const win = (0, _dom.getWindow)(domElement);
        const offsetWin = offsetParent && (0, _dom.isElement)(offsetParent) ? (0, _dom.getWindow)(offsetParent) : offsetParent;
        let currentWin = win;
        let currentIFrame = (0, _dom.getFrameElement)(currentWin);
        while(currentIFrame && offsetParent && offsetWin !== currentWin){
            const iframeScale = getScale(currentIFrame);
            const iframeRect = currentIFrame.getBoundingClientRect();
            const css = (0, _dom.getComputedStyle)(currentIFrame);
            const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;
            const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;
            x *= iframeScale.x;
            y *= iframeScale.y;
            width *= iframeScale.x;
            height *= iframeScale.y;
            x += left;
            y += top;
            currentWin = (0, _dom.getWindow)(currentIFrame);
            currentIFrame = (0, _dom.getFrameElement)(currentWin);
        }
    }
    return (0, _core.rectToClientRect)({
        width,
        height,
        x,
        y
    });
}
// If <html> has a CSS width greater than the viewport, then this will be
// incorrect for RTL.
function getWindowScrollBarX(element, rect) {
    const leftScroll = (0, _dom.getNodeScroll)(element).scrollLeft;
    if (!rect) return getBoundingClientRect((0, _dom.getDocumentElement)(element)).left + leftScroll;
    return rect.left + leftScroll;
}
function getHTMLOffset(documentElement, scroll) {
    const htmlRect = documentElement.getBoundingClientRect();
    const x = htmlRect.left + scroll.scrollLeft - getWindowScrollBarX(documentElement, htmlRect);
    const y = htmlRect.top + scroll.scrollTop;
    return {
        x,
        y
    };
}
function convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {
    let { elements, rect, offsetParent, strategy } = _ref;
    const isFixed = strategy === 'fixed';
    const documentElement = (0, _dom.getDocumentElement)(offsetParent);
    const topLayer = elements ? (0, _dom.isTopLayer)(elements.floating) : false;
    if (offsetParent === documentElement || topLayer && isFixed) return rect;
    let scroll = {
        scrollLeft: 0,
        scrollTop: 0
    };
    let scale = (0, _utils.createCoords)(1);
    const offsets = (0, _utils.createCoords)(0);
    const isOffsetParentAnElement = (0, _dom.isHTMLElement)(offsetParent);
    if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
        if ((0, _dom.getNodeName)(offsetParent) !== 'body' || (0, _dom.isOverflowElement)(documentElement)) scroll = (0, _dom.getNodeScroll)(offsetParent);
        if ((0, _dom.isHTMLElement)(offsetParent)) {
            const offsetRect = getBoundingClientRect(offsetParent);
            scale = getScale(offsetParent);
            offsets.x = offsetRect.x + offsetParent.clientLeft;
            offsets.y = offsetRect.y + offsetParent.clientTop;
        }
    }
    const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll) : (0, _utils.createCoords)(0);
    return {
        width: rect.width * scale.x,
        height: rect.height * scale.y,
        x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x + htmlOffset.x,
        y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y + htmlOffset.y
    };
}
function getClientRects(element) {
    return Array.from(element.getClientRects());
}
// Gets the entire size of the scrollable document area, even extending outside
// of the `<html>` and `<body>` rect bounds if horizontally scrollable.
function getDocumentRect(element) {
    const html = (0, _dom.getDocumentElement)(element);
    const scroll = (0, _dom.getNodeScroll)(element);
    const body = element.ownerDocument.body;
    const width = (0, _utils.max)(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);
    const height = (0, _utils.max)(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);
    let x = -scroll.scrollLeft + getWindowScrollBarX(element);
    const y = -scroll.scrollTop;
    if ((0, _dom.getComputedStyle)(body).direction === 'rtl') x += (0, _utils.max)(html.clientWidth, body.clientWidth) - width;
    return {
        width,
        height,
        x,
        y
    };
}
// Safety check: ensure the scrollbar space is reasonable in case this
// calculation is affected by unusual styles.
// Most scrollbars leave 15-18px of space.
const SCROLLBAR_MAX = 25;
function getViewportRect(element, strategy) {
    const win = (0, _dom.getWindow)(element);
    const html = (0, _dom.getDocumentElement)(element);
    const visualViewport = win.visualViewport;
    let width = html.clientWidth;
    let height = html.clientHeight;
    let x = 0;
    let y = 0;
    if (visualViewport) {
        width = visualViewport.width;
        height = visualViewport.height;
        const visualViewportBased = (0, _dom.isWebKit)();
        if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {
            x = visualViewport.offsetLeft;
            y = visualViewport.offsetTop;
        }
    }
    const windowScrollbarX = getWindowScrollBarX(html);
    // <html> `overflow: hidden` + `scrollbar-gutter: stable` reduces the
    // visual width of the <html> but this is not considered in the size
    // of `html.clientWidth`.
    if (windowScrollbarX <= 0) {
        const doc = html.ownerDocument;
        const body = doc.body;
        const bodyStyles = getComputedStyle(body);
        const bodyMarginInline = doc.compatMode === 'CSS1Compat' ? parseFloat(bodyStyles.marginLeft) + parseFloat(bodyStyles.marginRight) || 0 : 0;
        const clippingStableScrollbarWidth = Math.abs(html.clientWidth - body.clientWidth - bodyMarginInline);
        if (clippingStableScrollbarWidth <= SCROLLBAR_MAX) width -= clippingStableScrollbarWidth;
    } else if (windowScrollbarX <= SCROLLBAR_MAX) // If the <body> scrollbar is on the left, the width needs to be extended
    // by the scrollbar amount so there isn't extra space on the right.
    width += windowScrollbarX;
    return {
        width,
        height,
        x,
        y
    };
}
const absoluteOrFixed = /*#__PURE__*/ new Set([
    'absolute',
    'fixed'
]);
// Returns the inner client rect, subtracting scrollbars if present.
function getInnerBoundingClientRect(element, strategy) {
    const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');
    const top = clientRect.top + element.clientTop;
    const left = clientRect.left + element.clientLeft;
    const scale = (0, _dom.isHTMLElement)(element) ? getScale(element) : (0, _utils.createCoords)(1);
    const width = element.clientWidth * scale.x;
    const height = element.clientHeight * scale.y;
    const x = left * scale.x;
    const y = top * scale.y;
    return {
        width,
        height,
        x,
        y
    };
}
function getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {
    let rect;
    if (clippingAncestor === 'viewport') rect = getViewportRect(element, strategy);
    else if (clippingAncestor === 'document') rect = getDocumentRect((0, _dom.getDocumentElement)(element));
    else if ((0, _dom.isElement)(clippingAncestor)) rect = getInnerBoundingClientRect(clippingAncestor, strategy);
    else {
        const visualOffsets = getVisualOffsets(element);
        rect = {
            x: clippingAncestor.x - visualOffsets.x,
            y: clippingAncestor.y - visualOffsets.y,
            width: clippingAncestor.width,
            height: clippingAncestor.height
        };
    }
    return (0, _core.rectToClientRect)(rect);
}
function hasFixedPositionAncestor(element, stopNode) {
    const parentNode = (0, _dom.getParentNode)(element);
    if (parentNode === stopNode || !(0, _dom.isElement)(parentNode) || (0, _dom.isLastTraversableNode)(parentNode)) return false;
    return (0, _dom.getComputedStyle)(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);
}
// A "clipping ancestor" is an `overflow` element with the characteristic of
// clipping (or hiding) child elements. This returns all clipping ancestors
// of the given element up the tree.
function getClippingElementAncestors(element, cache) {
    const cachedResult = cache.get(element);
    if (cachedResult) return cachedResult;
    let result = (0, _dom.getOverflowAncestors)(element, [], false).filter((el)=>(0, _dom.isElement)(el) && (0, _dom.getNodeName)(el) !== 'body');
    let currentContainingBlockComputedStyle = null;
    const elementIsFixed = (0, _dom.getComputedStyle)(element).position === 'fixed';
    let currentNode = elementIsFixed ? (0, _dom.getParentNode)(element) : element;
    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block
    while((0, _dom.isElement)(currentNode) && !(0, _dom.isLastTraversableNode)(currentNode)){
        const computedStyle = (0, _dom.getComputedStyle)(currentNode);
        const currentNodeIsContaining = (0, _dom.isContainingBlock)(currentNode);
        if (!currentNodeIsContaining && computedStyle.position === 'fixed') currentContainingBlockComputedStyle = null;
        const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && absoluteOrFixed.has(currentContainingBlockComputedStyle.position) || (0, _dom.isOverflowElement)(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);
        if (shouldDropCurrentNode) // Drop non-containing blocks.
        result = result.filter((ancestor)=>ancestor !== currentNode);
        else // Record last containing block for next iteration.
        currentContainingBlockComputedStyle = computedStyle;
        currentNode = (0, _dom.getParentNode)(currentNode);
    }
    cache.set(element, result);
    return result;
}
// Gets the maximum area that the element is visible in due to any number of
// clipping ancestors.
function getClippingRect(_ref) {
    let { element, boundary, rootBoundary, strategy } = _ref;
    const elementClippingAncestors = boundary === 'clippingAncestors' ? (0, _dom.isTopLayer)(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);
    const clippingAncestors = [
        ...elementClippingAncestors,
        rootBoundary
    ];
    const firstClippingAncestor = clippingAncestors[0];
    const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor)=>{
        const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);
        accRect.top = (0, _utils.max)(rect.top, accRect.top);
        accRect.right = (0, _utils.min)(rect.right, accRect.right);
        accRect.bottom = (0, _utils.min)(rect.bottom, accRect.bottom);
        accRect.left = (0, _utils.max)(rect.left, accRect.left);
        return accRect;
    }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));
    return {
        width: clippingRect.right - clippingRect.left,
        height: clippingRect.bottom - clippingRect.top,
        x: clippingRect.left,
        y: clippingRect.top
    };
}
function getDimensions(element) {
    const { width, height } = getCssDimensions(element);
    return {
        width,
        height
    };
}
function getRectRelativeToOffsetParent(element, offsetParent, strategy) {
    const isOffsetParentAnElement = (0, _dom.isHTMLElement)(offsetParent);
    const documentElement = (0, _dom.getDocumentElement)(offsetParent);
    const isFixed = strategy === 'fixed';
    const rect = getBoundingClientRect(element, true, isFixed, offsetParent);
    let scroll = {
        scrollLeft: 0,
        scrollTop: 0
    };
    const offsets = (0, _utils.createCoords)(0);
    // If the <body> scrollbar appears on the left (e.g. RTL systems). Use
    // Firefox with layout.scrollbar.side = 3 in about:config to test this.
    function setLeftRTLScrollbarOffset() {
        offsets.x = getWindowScrollBarX(documentElement);
    }
    if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
        if ((0, _dom.getNodeName)(offsetParent) !== 'body' || (0, _dom.isOverflowElement)(documentElement)) scroll = (0, _dom.getNodeScroll)(offsetParent);
        if (isOffsetParentAnElement) {
            const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);
            offsets.x = offsetRect.x + offsetParent.clientLeft;
            offsets.y = offsetRect.y + offsetParent.clientTop;
        } else if (documentElement) setLeftRTLScrollbarOffset();
    }
    if (isFixed && !isOffsetParentAnElement && documentElement) setLeftRTLScrollbarOffset();
    const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll) : (0, _utils.createCoords)(0);
    const x = rect.left + scroll.scrollLeft - offsets.x - htmlOffset.x;
    const y = rect.top + scroll.scrollTop - offsets.y - htmlOffset.y;
    return {
        x,
        y,
        width: rect.width,
        height: rect.height
    };
}
function isStaticPositioned(element) {
    return (0, _dom.getComputedStyle)(element).position === 'static';
}
function getTrueOffsetParent(element, polyfill) {
    if (!(0, _dom.isHTMLElement)(element) || (0, _dom.getComputedStyle)(element).position === 'fixed') return null;
    if (polyfill) return polyfill(element);
    let rawOffsetParent = element.offsetParent;
    // Firefox returns the <html> element as the offsetParent if it's non-static,
    // while Chrome and Safari return the <body> element. The <body> element must
    // be used to perform the correct calculations even if the <html> element is
    // non-static.
    if ((0, _dom.getDocumentElement)(element) === rawOffsetParent) rawOffsetParent = rawOffsetParent.ownerDocument.body;
    return rawOffsetParent;
}
// Gets the closest ancestor positioned element. Handles some edge cases,
// such as table ancestors and cross browser bugs.
function getOffsetParent(element, polyfill) {
    const win = (0, _dom.getWindow)(element);
    if ((0, _dom.isTopLayer)(element)) return win;
    if (!(0, _dom.isHTMLElement)(element)) {
        let svgOffsetParent = (0, _dom.getParentNode)(element);
        while(svgOffsetParent && !(0, _dom.isLastTraversableNode)(svgOffsetParent)){
            if ((0, _dom.isElement)(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) return svgOffsetParent;
            svgOffsetParent = (0, _dom.getParentNode)(svgOffsetParent);
        }
        return win;
    }
    let offsetParent = getTrueOffsetParent(element, polyfill);
    while(offsetParent && (0, _dom.isTableElement)(offsetParent) && isStaticPositioned(offsetParent))offsetParent = getTrueOffsetParent(offsetParent, polyfill);
    if (offsetParent && (0, _dom.isLastTraversableNode)(offsetParent) && isStaticPositioned(offsetParent) && !(0, _dom.isContainingBlock)(offsetParent)) return win;
    return offsetParent || (0, _dom.getContainingBlock)(element) || win;
}
const getElementRects = async function(data) {
    const getOffsetParentFn = this.getOffsetParent || getOffsetParent;
    const getDimensionsFn = this.getDimensions;
    const floatingDimensions = await getDimensionsFn(data.floating);
    return {
        reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),
        floating: {
            x: 0,
            y: 0,
            width: floatingDimensions.width,
            height: floatingDimensions.height
        }
    };
};
function isRTL(element) {
    return (0, _dom.getComputedStyle)(element).direction === 'rtl';
}
const platform = {
    convertOffsetParentRelativeRectToViewportRelativeRect,
    getDocumentElement: (0, _dom.getDocumentElement),
    getClippingRect,
    getOffsetParent,
    getElementRects,
    getClientRects,
    getDimensions,
    getScale,
    isElement: (0, _dom.isElement),
    isRTL
};
function rectsAreEqual(a, b) {
    return a.x === b.x && a.y === b.y && a.width === b.width && a.height === b.height;
}
// https://samthor.au/2021/observing-dom/
function observeMove(element, onMove) {
    let io = null;
    let timeoutId;
    const root = (0, _dom.getDocumentElement)(element);
    function cleanup() {
        var _io;
        clearTimeout(timeoutId);
        (_io = io) == null || _io.disconnect();
        io = null;
    }
    function refresh(skip, threshold) {
        if (skip === void 0) skip = false;
        if (threshold === void 0) threshold = 1;
        cleanup();
        const elementRectForRootMargin = element.getBoundingClientRect();
        const { left, top, width, height } = elementRectForRootMargin;
        if (!skip) onMove();
        if (!width || !height) return;
        const insetTop = (0, _utils.floor)(top);
        const insetRight = (0, _utils.floor)(root.clientWidth - (left + width));
        const insetBottom = (0, _utils.floor)(root.clientHeight - (top + height));
        const insetLeft = (0, _utils.floor)(left);
        const rootMargin = -insetTop + "px " + -insetRight + "px " + -insetBottom + "px " + -insetLeft + "px";
        const options = {
            rootMargin,
            threshold: (0, _utils.max)(0, (0, _utils.min)(1, threshold)) || 1
        };
        let isFirstUpdate = true;
        function handleObserve(entries) {
            const ratio = entries[0].intersectionRatio;
            if (ratio !== threshold) {
                if (!isFirstUpdate) return refresh();
                if (!ratio) // If the reference is clipped, the ratio is 0. Throttle the refresh
                // to prevent an infinite loop of updates.
                timeoutId = setTimeout(()=>{
                    refresh(false, 1e-7);
                }, 1000);
                else refresh(false, ratio);
            }
            if (ratio === 1 && !rectsAreEqual(elementRectForRootMargin, element.getBoundingClientRect())) // It's possible that even though the ratio is reported as 1, the
            // element is not actually fully within the IntersectionObserver's root
            // area anymore. This can happen under performance constraints. This may
            // be a bug in the browser's IntersectionObserver implementation. To
            // work around this, we compare the element's bounding rect now with
            // what it was at the time we created the IntersectionObserver. If they
            // are not equal then the element moved, so we refresh.
            refresh();
            isFirstUpdate = false;
        }
        // Older browsers don't support a `document` as the root and will throw an
        // error.
        try {
            io = new IntersectionObserver(handleObserve, {
                ...options,
                // Handle <iframe>s
                root: root.ownerDocument
            });
        } catch (_e) {
            io = new IntersectionObserver(handleObserve, options);
        }
        io.observe(element);
    }
    refresh(true);
    return cleanup;
}
/**
 * Automatically updates the position of the floating element when necessary.
 * Should only be called when the floating element is mounted on the DOM or
 * visible on the screen.
 * @returns cleanup function that should be invoked when the floating element is
 * removed from the DOM or hidden from the screen.
 * @see https://floating-ui.com/docs/autoUpdate
 */ function autoUpdate(reference, floating, update, options) {
    if (options === void 0) options = {};
    const { ancestorScroll = true, ancestorResize = true, elementResize = typeof ResizeObserver === 'function', layoutShift = typeof IntersectionObserver === 'function', animationFrame = false } = options;
    const referenceEl = unwrapElement(reference);
    const ancestors = ancestorScroll || ancestorResize ? [
        ...referenceEl ? (0, _dom.getOverflowAncestors)(referenceEl) : [],
        ...(0, _dom.getOverflowAncestors)(floating)
    ] : [];
    ancestors.forEach((ancestor)=>{
        ancestorScroll && ancestor.addEventListener('scroll', update, {
            passive: true
        });
        ancestorResize && ancestor.addEventListener('resize', update);
    });
    const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;
    let reobserveFrame = -1;
    let resizeObserver = null;
    if (elementResize) {
        resizeObserver = new ResizeObserver((_ref)=>{
            let [firstEntry] = _ref;
            if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {
                // Prevent update loops when using the `size` middleware.
                // https://github.com/floating-ui/floating-ui/issues/1740
                resizeObserver.unobserve(floating);
                cancelAnimationFrame(reobserveFrame);
                reobserveFrame = requestAnimationFrame(()=>{
                    var _resizeObserver;
                    (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);
                });
            }
            update();
        });
        if (referenceEl && !animationFrame) resizeObserver.observe(referenceEl);
        resizeObserver.observe(floating);
    }
    let frameId;
    let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;
    if (animationFrame) frameLoop();
    function frameLoop() {
        const nextRefRect = getBoundingClientRect(reference);
        if (prevRefRect && !rectsAreEqual(prevRefRect, nextRefRect)) update();
        prevRefRect = nextRefRect;
        frameId = requestAnimationFrame(frameLoop);
    }
    update();
    return ()=>{
        var _resizeObserver2;
        ancestors.forEach((ancestor)=>{
            ancestorScroll && ancestor.removeEventListener('scroll', update);
            ancestorResize && ancestor.removeEventListener('resize', update);
        });
        cleanupIo == null || cleanupIo();
        (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();
        resizeObserver = null;
        if (animationFrame) cancelAnimationFrame(frameId);
    };
}
/**
 * Resolves with an object of overflow side offsets that determine how much the
 * element is overflowing a given clipping boundary on each side.
 * - positive = overflowing the boundary by that number of pixels
 * - negative = how many pixels left before it will overflow
 * - 0 = lies flush with the boundary
 * @see https://floating-ui.com/docs/detectOverflow
 */ const detectOverflow = (0, _core.detectOverflow);
/**
 * Modifies the placement by translating the floating element along the
 * specified axes.
 * A number (shorthand for `mainAxis` or distance), or an axes configuration
 * object may be passed.
 * @see https://floating-ui.com/docs/offset
 */ const offset = (0, _core.offset);
/**
 * Optimizes the visibility of the floating element by choosing the placement
 * that has the most space available automatically, without needing to specify a
 * preferred placement. Alternative to `flip`.
 * @see https://floating-ui.com/docs/autoPlacement
 */ const autoPlacement = (0, _core.autoPlacement);
/**
 * Optimizes the visibility of the floating element by shifting it in order to
 * keep it in view when it will overflow the clipping boundary.
 * @see https://floating-ui.com/docs/shift
 */ const shift = (0, _core.shift);
/**
 * Optimizes the visibility of the floating element by flipping the `placement`
 * in order to keep it in view when the preferred placement(s) will overflow the
 * clipping boundary. Alternative to `autoPlacement`.
 * @see https://floating-ui.com/docs/flip
 */ const flip = (0, _core.flip);
/**
 * Provides data that allows you to change the size of the floating element —
 * for instance, prevent it from overflowing the clipping boundary or match the
 * width of the reference element.
 * @see https://floating-ui.com/docs/size
 */ const size = (0, _core.size);
/**
 * Provides data to hide the floating element in applicable situations, such as
 * when it is not in the same clipping context as the reference element.
 * @see https://floating-ui.com/docs/hide
 */ const hide = (0, _core.hide);
/**
 * Provides data to position an inner element of the floating element so that it
 * appears centered to the reference element.
 * @see https://floating-ui.com/docs/arrow
 */ const arrow = (0, _core.arrow);
/**
 * Provides improved positioning for inline reference elements that can span
 * over multiple lines, such as hyperlinks or range selections.
 * @see https://floating-ui.com/docs/inline
 */ const inline = (0, _core.inline);
/**
 * Built-in `limiter` that will stop `shift()` at a certain point.
 */ const limitShift = (0, _core.limitShift);
/**
 * Computes the `x` and `y` coordinates that will place the floating element
 * next to a given reference element.
 */ const computePosition = (reference, floating, options)=>{
    // This caches the expensive `getClippingElementAncestors` function so that
    // multiple lifecycle resets re-use the same result. It only lives for a
    // single call. If other functions become expensive, we can add them as well.
    const cache = new Map();
    const mergedOptions = {
        platform,
        ...options
    };
    const platformWithCache = {
        ...mergedOptions.platform,
        _c: cache
    };
    return (0, _core.computePosition)(reference, floating, {
        ...mergedOptions,
        platform: platformWithCache
    });
};

},{"@floating-ui/core":"9Yzy9","@floating-ui/utils":"jY82y","@floating-ui/utils/dom":"Dh21b","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9Yzy9":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "rectToClientRect", ()=>(0, _utils.rectToClientRect));
parcelHelpers.export(exports, "arrow", ()=>arrow);
parcelHelpers.export(exports, "autoPlacement", ()=>autoPlacement);
parcelHelpers.export(exports, "computePosition", ()=>computePosition);
parcelHelpers.export(exports, "detectOverflow", ()=>detectOverflow);
parcelHelpers.export(exports, "flip", ()=>flip);
parcelHelpers.export(exports, "hide", ()=>hide);
parcelHelpers.export(exports, "inline", ()=>inline);
parcelHelpers.export(exports, "limitShift", ()=>limitShift);
parcelHelpers.export(exports, "offset", ()=>offset);
parcelHelpers.export(exports, "shift", ()=>shift);
parcelHelpers.export(exports, "size", ()=>size);
var _utils = require("@floating-ui/utils");
function computeCoordsFromPlacement(_ref, placement, rtl) {
    let { reference, floating } = _ref;
    const sideAxis = (0, _utils.getSideAxis)(placement);
    const alignmentAxis = (0, _utils.getAlignmentAxis)(placement);
    const alignLength = (0, _utils.getAxisLength)(alignmentAxis);
    const side = (0, _utils.getSide)(placement);
    const isVertical = sideAxis === 'y';
    const commonX = reference.x + reference.width / 2 - floating.width / 2;
    const commonY = reference.y + reference.height / 2 - floating.height / 2;
    const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;
    let coords;
    switch(side){
        case 'top':
            coords = {
                x: commonX,
                y: reference.y - floating.height
            };
            break;
        case 'bottom':
            coords = {
                x: commonX,
                y: reference.y + reference.height
            };
            break;
        case 'right':
            coords = {
                x: reference.x + reference.width,
                y: commonY
            };
            break;
        case 'left':
            coords = {
                x: reference.x - floating.width,
                y: commonY
            };
            break;
        default:
            coords = {
                x: reference.x,
                y: reference.y
            };
    }
    switch((0, _utils.getAlignment)(placement)){
        case 'start':
            coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);
            break;
        case 'end':
            coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);
            break;
    }
    return coords;
}
/**
 * Computes the `x` and `y` coordinates that will place the floating element
 * next to a given reference element.
 *
 * This export does not have any `platform` interface logic. You will need to
 * write one for the platform you are using Floating UI with.
 */ const computePosition = async (reference, floating, config)=>{
    const { placement = 'bottom', strategy = 'absolute', middleware = [], platform } = config;
    const validMiddleware = middleware.filter(Boolean);
    const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));
    let rects = await platform.getElementRects({
        reference,
        floating,
        strategy
    });
    let { x, y } = computeCoordsFromPlacement(rects, placement, rtl);
    let statefulPlacement = placement;
    let middlewareData = {};
    let resetCount = 0;
    for(let i = 0; i < validMiddleware.length; i++){
        const { name, fn } = validMiddleware[i];
        const { x: nextX, y: nextY, data, reset } = await fn({
            x,
            y,
            initialPlacement: placement,
            placement: statefulPlacement,
            strategy,
            middlewareData,
            rects,
            platform,
            elements: {
                reference,
                floating
            }
        });
        x = nextX != null ? nextX : x;
        y = nextY != null ? nextY : y;
        middlewareData = {
            ...middlewareData,
            [name]: {
                ...middlewareData[name],
                ...data
            }
        };
        if (reset && resetCount <= 50) {
            resetCount++;
            if (typeof reset === 'object') {
                if (reset.placement) statefulPlacement = reset.placement;
                if (reset.rects) rects = reset.rects === true ? await platform.getElementRects({
                    reference,
                    floating,
                    strategy
                }) : reset.rects;
                ({ x, y } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));
            }
            i = -1;
        }
    }
    return {
        x,
        y,
        placement: statefulPlacement,
        strategy,
        middlewareData
    };
};
/**
 * Resolves with an object of overflow side offsets that determine how much the
 * element is overflowing a given clipping boundary on each side.
 * - positive = overflowing the boundary by that number of pixels
 * - negative = how many pixels left before it will overflow
 * - 0 = lies flush with the boundary
 * @see https://floating-ui.com/docs/detectOverflow
 */ async function detectOverflow(state, options) {
    var _await$platform$isEle;
    if (options === void 0) options = {};
    const { x, y, platform, rects, elements, strategy } = state;
    const { boundary = 'clippingAncestors', rootBoundary = 'viewport', elementContext = 'floating', altBoundary = false, padding = 0 } = (0, _utils.evaluate)(options, state);
    const paddingObject = (0, _utils.getPaddingObject)(padding);
    const altContext = elementContext === 'floating' ? 'reference' : 'floating';
    const element = elements[altBoundary ? altContext : elementContext];
    const clippingClientRect = (0, _utils.rectToClientRect)(await platform.getClippingRect({
        element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating)),
        boundary,
        rootBoundary,
        strategy
    }));
    const rect = elementContext === 'floating' ? {
        x,
        y,
        width: rects.floating.width,
        height: rects.floating.height
    } : rects.reference;
    const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));
    const offsetScale = await (platform.isElement == null ? void 0 : platform.isElement(offsetParent)) ? await (platform.getScale == null ? void 0 : platform.getScale(offsetParent)) || {
        x: 1,
        y: 1
    } : {
        x: 1,
        y: 1
    };
    const elementClientRect = (0, _utils.rectToClientRect)(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({
        elements,
        rect,
        offsetParent,
        strategy
    }) : rect);
    return {
        top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,
        bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,
        left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,
        right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x
    };
}
/**
 * Provides data to position an inner element of the floating element so that it
 * appears centered to the reference element.
 * @see https://floating-ui.com/docs/arrow
 */ const arrow = (options)=>({
        name: 'arrow',
        options,
        async fn (state) {
            const { x, y, placement, rects, platform, elements, middlewareData } = state;
            // Since `element` is required, we don't Partial<> the type.
            const { element, padding = 0 } = (0, _utils.evaluate)(options, state) || {};
            if (element == null) return {};
            const paddingObject = (0, _utils.getPaddingObject)(padding);
            const coords = {
                x,
                y
            };
            const axis = (0, _utils.getAlignmentAxis)(placement);
            const length = (0, _utils.getAxisLength)(axis);
            const arrowDimensions = await platform.getDimensions(element);
            const isYAxis = axis === 'y';
            const minProp = isYAxis ? 'top' : 'left';
            const maxProp = isYAxis ? 'bottom' : 'right';
            const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';
            const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];
            const startDiff = coords[axis] - rects.reference[axis];
            const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));
            let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;
            // DOM platform can return `window` as the `offsetParent`.
            if (!clientSize || !await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent))) clientSize = elements.floating[clientProp] || rects.floating[length];
            const centerToReference = endDiff / 2 - startDiff / 2;
            // If the padding is large enough that it causes the arrow to no longer be
            // centered, modify the padding so that it is centered.
            const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;
            const minPadding = (0, _utils.min)(paddingObject[minProp], largestPossiblePadding);
            const maxPadding = (0, _utils.min)(paddingObject[maxProp], largestPossiblePadding);
            // Make sure the arrow doesn't overflow the floating element if the center
            // point is outside the floating element's bounds.
            const min$1 = minPadding;
            const max = clientSize - arrowDimensions[length] - maxPadding;
            const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;
            const offset = (0, _utils.clamp)(min$1, center, max);
            // If the reference is small enough that the arrow's padding causes it to
            // to point to nothing for an aligned placement, adjust the offset of the
            // floating element itself. To ensure `shift()` continues to take action,
            // a single reset is performed when this is true.
            const shouldAddOffset = !middlewareData.arrow && (0, _utils.getAlignment)(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;
            const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;
            return {
                [axis]: coords[axis] + alignmentOffset,
                data: {
                    [axis]: offset,
                    centerOffset: center - offset - alignmentOffset,
                    ...shouldAddOffset && {
                        alignmentOffset
                    }
                },
                reset: shouldAddOffset
            };
        }
    });
function getPlacementList(alignment, autoAlignment, allowedPlacements) {
    const allowedPlacementsSortedByAlignment = alignment ? [
        ...allowedPlacements.filter((placement)=>(0, _utils.getAlignment)(placement) === alignment),
        ...allowedPlacements.filter((placement)=>(0, _utils.getAlignment)(placement) !== alignment)
    ] : allowedPlacements.filter((placement)=>(0, _utils.getSide)(placement) === placement);
    return allowedPlacementsSortedByAlignment.filter((placement)=>{
        if (alignment) return (0, _utils.getAlignment)(placement) === alignment || (autoAlignment ? (0, _utils.getOppositeAlignmentPlacement)(placement) !== placement : false);
        return true;
    });
}
/**
 * Optimizes the visibility of the floating element by choosing the placement
 * that has the most space available automatically, without needing to specify a
 * preferred placement. Alternative to `flip`.
 * @see https://floating-ui.com/docs/autoPlacement
 */ const autoPlacement = function(options) {
    if (options === void 0) options = {};
    return {
        name: 'autoPlacement',
        options,
        async fn (state) {
            var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;
            const { rects, middlewareData, placement, platform, elements } = state;
            const { crossAxis = false, alignment, allowedPlacements = (0, _utils.placements), autoAlignment = true, ...detectOverflowOptions } = (0, _utils.evaluate)(options, state);
            const placements$1 = alignment !== undefined || allowedPlacements === (0, _utils.placements) ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;
            const overflow = await detectOverflow(state, detectOverflowOptions);
            const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;
            const currentPlacement = placements$1[currentIndex];
            if (currentPlacement == null) return {};
            const alignmentSides = (0, _utils.getAlignmentSides)(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));
            // Make `computeCoords` start from the right place.
            if (placement !== currentPlacement) return {
                reset: {
                    placement: placements$1[0]
                }
            };
            const currentOverflows = [
                overflow[(0, _utils.getSide)(currentPlacement)],
                overflow[alignmentSides[0]],
                overflow[alignmentSides[1]]
            ];
            const allOverflows = [
                ...((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || [],
                {
                    placement: currentPlacement,
                    overflows: currentOverflows
                }
            ];
            const nextPlacement = placements$1[currentIndex + 1];
            // There are more placements to check.
            if (nextPlacement) return {
                data: {
                    index: currentIndex + 1,
                    overflows: allOverflows
                },
                reset: {
                    placement: nextPlacement
                }
            };
            const placementsSortedByMostSpace = allOverflows.map((d)=>{
                const alignment = (0, _utils.getAlignment)(d.placement);
                return [
                    d.placement,
                    alignment && crossAxis ? // Check along the mainAxis and main crossAxis side.
                    d.overflows.slice(0, 2).reduce((acc, v)=>acc + v, 0) : // Check only the mainAxis.
                    d.overflows[0],
                    d.overflows
                ];
            }).sort((a, b)=>a[1] - b[1]);
            const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter((d)=>d[2].slice(0, // Aligned placements should not check their opposite crossAxis
                // side.
                (0, _utils.getAlignment)(d[0]) ? 2 : 3).every((v)=>v <= 0));
            const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];
            if (resetPlacement !== placement) return {
                data: {
                    index: currentIndex + 1,
                    overflows: allOverflows
                },
                reset: {
                    placement: resetPlacement
                }
            };
            return {};
        }
    };
};
/**
 * Optimizes the visibility of the floating element by flipping the `placement`
 * in order to keep it in view when the preferred placement(s) will overflow the
 * clipping boundary. Alternative to `autoPlacement`.
 * @see https://floating-ui.com/docs/flip
 */ const flip = function(options) {
    if (options === void 0) options = {};
    return {
        name: 'flip',
        options,
        async fn (state) {
            var _middlewareData$arrow, _middlewareData$flip;
            const { placement, middlewareData, rects, initialPlacement, platform, elements } = state;
            const { mainAxis: checkMainAxis = true, crossAxis: checkCrossAxis = true, fallbackPlacements: specifiedFallbackPlacements, fallbackStrategy = 'bestFit', fallbackAxisSideDirection = 'none', flipAlignment = true, ...detectOverflowOptions } = (0, _utils.evaluate)(options, state);
            // If a reset by the arrow was caused due to an alignment offset being
            // added, we should skip any logic now since `flip()` has already done its
            // work.
            // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643
            if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) return {};
            const side = (0, _utils.getSide)(placement);
            const initialSideAxis = (0, _utils.getSideAxis)(initialPlacement);
            const isBasePlacement = (0, _utils.getSide)(initialPlacement) === initialPlacement;
            const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));
            const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [
                (0, _utils.getOppositePlacement)(initialPlacement)
            ] : (0, _utils.getExpandedPlacements)(initialPlacement));
            const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== 'none';
            if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) fallbackPlacements.push(...(0, _utils.getOppositeAxisPlacements)(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));
            const placements = [
                initialPlacement,
                ...fallbackPlacements
            ];
            const overflow = await detectOverflow(state, detectOverflowOptions);
            const overflows = [];
            let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];
            if (checkMainAxis) overflows.push(overflow[side]);
            if (checkCrossAxis) {
                const sides = (0, _utils.getAlignmentSides)(placement, rects, rtl);
                overflows.push(overflow[sides[0]], overflow[sides[1]]);
            }
            overflowsData = [
                ...overflowsData,
                {
                    placement,
                    overflows
                }
            ];
            // One or more sides is overflowing.
            if (!overflows.every((side)=>side <= 0)) {
                var _middlewareData$flip2, _overflowsData$filter;
                const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;
                const nextPlacement = placements[nextIndex];
                if (nextPlacement) {
                    const ignoreCrossAxisOverflow = checkCrossAxis === 'alignment' ? initialSideAxis !== (0, _utils.getSideAxis)(nextPlacement) : false;
                    if (!ignoreCrossAxisOverflow || // We leave the current main axis only if every placement on that axis
                    // overflows the main axis.
                    overflowsData.every((d)=>(0, _utils.getSideAxis)(d.placement) === initialSideAxis ? d.overflows[0] > 0 : true)) // Try next placement and re-run the lifecycle.
                    return {
                        data: {
                            index: nextIndex,
                            overflows: overflowsData
                        },
                        reset: {
                            placement: nextPlacement
                        }
                    };
                }
                // First, find the candidates that fit on the mainAxis side of overflow,
                // then find the placement that fits the best on the main crossAxis side.
                let resetPlacement = (_overflowsData$filter = overflowsData.filter((d)=>d.overflows[0] <= 0).sort((a, b)=>a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;
                // Otherwise fallback.
                if (!resetPlacement) switch(fallbackStrategy){
                    case 'bestFit':
                        {
                            var _overflowsData$filter2;
                            const placement = (_overflowsData$filter2 = overflowsData.filter((d)=>{
                                if (hasFallbackAxisSideDirection) {
                                    const currentSideAxis = (0, _utils.getSideAxis)(d.placement);
                                    return currentSideAxis === initialSideAxis || // Create a bias to the `y` side axis due to horizontal
                                    // reading directions favoring greater width.
                                    currentSideAxis === 'y';
                                }
                                return true;
                            }).map((d)=>[
                                    d.placement,
                                    d.overflows.filter((overflow)=>overflow > 0).reduce((acc, overflow)=>acc + overflow, 0)
                                ]).sort((a, b)=>a[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];
                            if (placement) resetPlacement = placement;
                            break;
                        }
                    case 'initialPlacement':
                        resetPlacement = initialPlacement;
                        break;
                }
                if (placement !== resetPlacement) return {
                    reset: {
                        placement: resetPlacement
                    }
                };
            }
            return {};
        }
    };
};
function getSideOffsets(overflow, rect) {
    return {
        top: overflow.top - rect.height,
        right: overflow.right - rect.width,
        bottom: overflow.bottom - rect.height,
        left: overflow.left - rect.width
    };
}
function isAnySideFullyClipped(overflow) {
    return (0, _utils.sides).some((side)=>overflow[side] >= 0);
}
/**
 * Provides data to hide the floating element in applicable situations, such as
 * when it is not in the same clipping context as the reference element.
 * @see https://floating-ui.com/docs/hide
 */ const hide = function(options) {
    if (options === void 0) options = {};
    return {
        name: 'hide',
        options,
        async fn (state) {
            const { rects } = state;
            const { strategy = 'referenceHidden', ...detectOverflowOptions } = (0, _utils.evaluate)(options, state);
            switch(strategy){
                case 'referenceHidden':
                    {
                        const overflow = await detectOverflow(state, {
                            ...detectOverflowOptions,
                            elementContext: 'reference'
                        });
                        const offsets = getSideOffsets(overflow, rects.reference);
                        return {
                            data: {
                                referenceHiddenOffsets: offsets,
                                referenceHidden: isAnySideFullyClipped(offsets)
                            }
                        };
                    }
                case 'escaped':
                    {
                        const overflow = await detectOverflow(state, {
                            ...detectOverflowOptions,
                            altBoundary: true
                        });
                        const offsets = getSideOffsets(overflow, rects.floating);
                        return {
                            data: {
                                escapedOffsets: offsets,
                                escaped: isAnySideFullyClipped(offsets)
                            }
                        };
                    }
                default:
                    return {};
            }
        }
    };
};
function getBoundingRect(rects) {
    const minX = (0, _utils.min)(...rects.map((rect)=>rect.left));
    const minY = (0, _utils.min)(...rects.map((rect)=>rect.top));
    const maxX = (0, _utils.max)(...rects.map((rect)=>rect.right));
    const maxY = (0, _utils.max)(...rects.map((rect)=>rect.bottom));
    return {
        x: minX,
        y: minY,
        width: maxX - minX,
        height: maxY - minY
    };
}
function getRectsByLine(rects) {
    const sortedRects = rects.slice().sort((a, b)=>a.y - b.y);
    const groups = [];
    let prevRect = null;
    for(let i = 0; i < sortedRects.length; i++){
        const rect = sortedRects[i];
        if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) groups.push([
            rect
        ]);
        else groups[groups.length - 1].push(rect);
        prevRect = rect;
    }
    return groups.map((rect)=>(0, _utils.rectToClientRect)(getBoundingRect(rect)));
}
/**
 * Provides improved positioning for inline reference elements that can span
 * over multiple lines, such as hyperlinks or range selections.
 * @see https://floating-ui.com/docs/inline
 */ const inline = function(options) {
    if (options === void 0) options = {};
    return {
        name: 'inline',
        options,
        async fn (state) {
            const { placement, elements, rects, platform, strategy } = state;
            // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a
            // ClientRect's bounds, despite the event listener being triggered. A
            // padding of 2 seems to handle this issue.
            const { padding = 2, x, y } = (0, _utils.evaluate)(options, state);
            const nativeClientRects = Array.from(await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference)) || []);
            const clientRects = getRectsByLine(nativeClientRects);
            const fallback = (0, _utils.rectToClientRect)(getBoundingRect(nativeClientRects));
            const paddingObject = (0, _utils.getPaddingObject)(padding);
            function getBoundingClientRect() {
                // There are two rects and they are disjoined.
                if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) // Find the first rect in which the point is fully inside.
                return clientRects.find((rect)=>x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;
                // There are 2 or more connected rects.
                if (clientRects.length >= 2) {
                    if ((0, _utils.getSideAxis)(placement) === 'y') {
                        const firstRect = clientRects[0];
                        const lastRect = clientRects[clientRects.length - 1];
                        const isTop = (0, _utils.getSide)(placement) === 'top';
                        const top = firstRect.top;
                        const bottom = lastRect.bottom;
                        const left = isTop ? firstRect.left : lastRect.left;
                        const right = isTop ? firstRect.right : lastRect.right;
                        const width = right - left;
                        const height = bottom - top;
                        return {
                            top,
                            bottom,
                            left,
                            right,
                            width,
                            height,
                            x: left,
                            y: top
                        };
                    }
                    const isLeftSide = (0, _utils.getSide)(placement) === 'left';
                    const maxRight = (0, _utils.max)(...clientRects.map((rect)=>rect.right));
                    const minLeft = (0, _utils.min)(...clientRects.map((rect)=>rect.left));
                    const measureRects = clientRects.filter((rect)=>isLeftSide ? rect.left === minLeft : rect.right === maxRight);
                    const top = measureRects[0].top;
                    const bottom = measureRects[measureRects.length - 1].bottom;
                    const left = minLeft;
                    const right = maxRight;
                    const width = right - left;
                    const height = bottom - top;
                    return {
                        top,
                        bottom,
                        left,
                        right,
                        width,
                        height,
                        x: left,
                        y: top
                    };
                }
                return fallback;
            }
            const resetRects = await platform.getElementRects({
                reference: {
                    getBoundingClientRect
                },
                floating: elements.floating,
                strategy
            });
            if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) return {
                reset: {
                    rects: resetRects
                }
            };
            return {};
        }
    };
};
const originSides = /*#__PURE__*/ new Set([
    'left',
    'top'
]);
// For type backwards-compatibility, the `OffsetOptions` type was also
// Derivable.
async function convertValueToCoords(state, options) {
    const { placement, platform, elements } = state;
    const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));
    const side = (0, _utils.getSide)(placement);
    const alignment = (0, _utils.getAlignment)(placement);
    const isVertical = (0, _utils.getSideAxis)(placement) === 'y';
    const mainAxisMulti = originSides.has(side) ? -1 : 1;
    const crossAxisMulti = rtl && isVertical ? -1 : 1;
    const rawValue = (0, _utils.evaluate)(options, state);
    // eslint-disable-next-line prefer-const
    let { mainAxis, crossAxis, alignmentAxis } = typeof rawValue === 'number' ? {
        mainAxis: rawValue,
        crossAxis: 0,
        alignmentAxis: null
    } : {
        mainAxis: rawValue.mainAxis || 0,
        crossAxis: rawValue.crossAxis || 0,
        alignmentAxis: rawValue.alignmentAxis
    };
    if (alignment && typeof alignmentAxis === 'number') crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;
    return isVertical ? {
        x: crossAxis * crossAxisMulti,
        y: mainAxis * mainAxisMulti
    } : {
        x: mainAxis * mainAxisMulti,
        y: crossAxis * crossAxisMulti
    };
}
/**
 * Modifies the placement by translating the floating element along the
 * specified axes.
 * A number (shorthand for `mainAxis` or distance), or an axes configuration
 * object may be passed.
 * @see https://floating-ui.com/docs/offset
 */ const offset = function(options) {
    if (options === void 0) options = 0;
    return {
        name: 'offset',
        options,
        async fn (state) {
            var _middlewareData$offse, _middlewareData$arrow;
            const { x, y, placement, middlewareData } = state;
            const diffCoords = await convertValueToCoords(state, options);
            // If the placement is the same and the arrow caused an alignment offset
            // then we don't need to change the positioning coordinates.
            if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) return {};
            return {
                x: x + diffCoords.x,
                y: y + diffCoords.y,
                data: {
                    ...diffCoords,
                    placement
                }
            };
        }
    };
};
/**
 * Optimizes the visibility of the floating element by shifting it in order to
 * keep it in view when it will overflow the clipping boundary.
 * @see https://floating-ui.com/docs/shift
 */ const shift = function(options) {
    if (options === void 0) options = {};
    return {
        name: 'shift',
        options,
        async fn (state) {
            const { x, y, placement } = state;
            const { mainAxis: checkMainAxis = true, crossAxis: checkCrossAxis = false, limiter = {
                fn: (_ref)=>{
                    let { x, y } = _ref;
                    return {
                        x,
                        y
                    };
                }
            }, ...detectOverflowOptions } = (0, _utils.evaluate)(options, state);
            const coords = {
                x,
                y
            };
            const overflow = await detectOverflow(state, detectOverflowOptions);
            const crossAxis = (0, _utils.getSideAxis)((0, _utils.getSide)(placement));
            const mainAxis = (0, _utils.getOppositeAxis)(crossAxis);
            let mainAxisCoord = coords[mainAxis];
            let crossAxisCoord = coords[crossAxis];
            if (checkMainAxis) {
                const minSide = mainAxis === 'y' ? 'top' : 'left';
                const maxSide = mainAxis === 'y' ? 'bottom' : 'right';
                const min = mainAxisCoord + overflow[minSide];
                const max = mainAxisCoord - overflow[maxSide];
                mainAxisCoord = (0, _utils.clamp)(min, mainAxisCoord, max);
            }
            if (checkCrossAxis) {
                const minSide = crossAxis === 'y' ? 'top' : 'left';
                const maxSide = crossAxis === 'y' ? 'bottom' : 'right';
                const min = crossAxisCoord + overflow[minSide];
                const max = crossAxisCoord - overflow[maxSide];
                crossAxisCoord = (0, _utils.clamp)(min, crossAxisCoord, max);
            }
            const limitedCoords = limiter.fn({
                ...state,
                [mainAxis]: mainAxisCoord,
                [crossAxis]: crossAxisCoord
            });
            return {
                ...limitedCoords,
                data: {
                    x: limitedCoords.x - x,
                    y: limitedCoords.y - y,
                    enabled: {
                        [mainAxis]: checkMainAxis,
                        [crossAxis]: checkCrossAxis
                    }
                }
            };
        }
    };
};
/**
 * Built-in `limiter` that will stop `shift()` at a certain point.
 */ const limitShift = function(options) {
    if (options === void 0) options = {};
    return {
        options,
        fn (state) {
            const { x, y, placement, rects, middlewareData } = state;
            const { offset = 0, mainAxis: checkMainAxis = true, crossAxis: checkCrossAxis = true } = (0, _utils.evaluate)(options, state);
            const coords = {
                x,
                y
            };
            const crossAxis = (0, _utils.getSideAxis)(placement);
            const mainAxis = (0, _utils.getOppositeAxis)(crossAxis);
            let mainAxisCoord = coords[mainAxis];
            let crossAxisCoord = coords[crossAxis];
            const rawOffset = (0, _utils.evaluate)(offset, state);
            const computedOffset = typeof rawOffset === 'number' ? {
                mainAxis: rawOffset,
                crossAxis: 0
            } : {
                mainAxis: 0,
                crossAxis: 0,
                ...rawOffset
            };
            if (checkMainAxis) {
                const len = mainAxis === 'y' ? 'height' : 'width';
                const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;
                const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;
                if (mainAxisCoord < limitMin) mainAxisCoord = limitMin;
                else if (mainAxisCoord > limitMax) mainAxisCoord = limitMax;
            }
            if (checkCrossAxis) {
                var _middlewareData$offse, _middlewareData$offse2;
                const len = mainAxis === 'y' ? 'width' : 'height';
                const isOriginSide = originSides.has((0, _utils.getSide)(placement));
                const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);
                const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);
                if (crossAxisCoord < limitMin) crossAxisCoord = limitMin;
                else if (crossAxisCoord > limitMax) crossAxisCoord = limitMax;
            }
            return {
                [mainAxis]: mainAxisCoord,
                [crossAxis]: crossAxisCoord
            };
        }
    };
};
/**
 * Provides data that allows you to change the size of the floating element —
 * for instance, prevent it from overflowing the clipping boundary or match the
 * width of the reference element.
 * @see https://floating-ui.com/docs/size
 */ const size = function(options) {
    if (options === void 0) options = {};
    return {
        name: 'size',
        options,
        async fn (state) {
            var _state$middlewareData, _state$middlewareData2;
            const { placement, rects, platform, elements } = state;
            const { apply = ()=>{}, ...detectOverflowOptions } = (0, _utils.evaluate)(options, state);
            const overflow = await detectOverflow(state, detectOverflowOptions);
            const side = (0, _utils.getSide)(placement);
            const alignment = (0, _utils.getAlignment)(placement);
            const isYAxis = (0, _utils.getSideAxis)(placement) === 'y';
            const { width, height } = rects.floating;
            let heightSide;
            let widthSide;
            if (side === 'top' || side === 'bottom') {
                heightSide = side;
                widthSide = alignment === (await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)) ? 'start' : 'end') ? 'left' : 'right';
            } else {
                widthSide = side;
                heightSide = alignment === 'end' ? 'top' : 'bottom';
            }
            const maximumClippingHeight = height - overflow.top - overflow.bottom;
            const maximumClippingWidth = width - overflow.left - overflow.right;
            const overflowAvailableHeight = (0, _utils.min)(height - overflow[heightSide], maximumClippingHeight);
            const overflowAvailableWidth = (0, _utils.min)(width - overflow[widthSide], maximumClippingWidth);
            const noShift = !state.middlewareData.shift;
            let availableHeight = overflowAvailableHeight;
            let availableWidth = overflowAvailableWidth;
            if ((_state$middlewareData = state.middlewareData.shift) != null && _state$middlewareData.enabled.x) availableWidth = maximumClippingWidth;
            if ((_state$middlewareData2 = state.middlewareData.shift) != null && _state$middlewareData2.enabled.y) availableHeight = maximumClippingHeight;
            if (noShift && !alignment) {
                const xMin = (0, _utils.max)(overflow.left, 0);
                const xMax = (0, _utils.max)(overflow.right, 0);
                const yMin = (0, _utils.max)(overflow.top, 0);
                const yMax = (0, _utils.max)(overflow.bottom, 0);
                if (isYAxis) availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : (0, _utils.max)(overflow.left, overflow.right));
                else availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : (0, _utils.max)(overflow.top, overflow.bottom));
            }
            await apply({
                ...state,
                availableWidth,
                availableHeight
            });
            const nextDimensions = await platform.getDimensions(elements.floating);
            if (width !== nextDimensions.width || height !== nextDimensions.height) return {
                reset: {
                    rects: true
                }
            };
            return {};
        }
    };
};

},{"@floating-ui/utils":"jY82y","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jY82y":[function(require,module,exports,__globalThis) {
/**
 * Custom positioning reference element.
 * @see https://floating-ui.com/docs/virtual-elements
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "alignments", ()=>alignments);
parcelHelpers.export(exports, "clamp", ()=>clamp);
parcelHelpers.export(exports, "createCoords", ()=>createCoords);
parcelHelpers.export(exports, "evaluate", ()=>evaluate);
parcelHelpers.export(exports, "expandPaddingObject", ()=>expandPaddingObject);
parcelHelpers.export(exports, "floor", ()=>floor);
parcelHelpers.export(exports, "getAlignment", ()=>getAlignment);
parcelHelpers.export(exports, "getAlignmentAxis", ()=>getAlignmentAxis);
parcelHelpers.export(exports, "getAlignmentSides", ()=>getAlignmentSides);
parcelHelpers.export(exports, "getAxisLength", ()=>getAxisLength);
parcelHelpers.export(exports, "getExpandedPlacements", ()=>getExpandedPlacements);
parcelHelpers.export(exports, "getOppositeAlignmentPlacement", ()=>getOppositeAlignmentPlacement);
parcelHelpers.export(exports, "getOppositeAxis", ()=>getOppositeAxis);
parcelHelpers.export(exports, "getOppositeAxisPlacements", ()=>getOppositeAxisPlacements);
parcelHelpers.export(exports, "getOppositePlacement", ()=>getOppositePlacement);
parcelHelpers.export(exports, "getPaddingObject", ()=>getPaddingObject);
parcelHelpers.export(exports, "getSide", ()=>getSide);
parcelHelpers.export(exports, "getSideAxis", ()=>getSideAxis);
parcelHelpers.export(exports, "max", ()=>max);
parcelHelpers.export(exports, "min", ()=>min);
parcelHelpers.export(exports, "placements", ()=>placements);
parcelHelpers.export(exports, "rectToClientRect", ()=>rectToClientRect);
parcelHelpers.export(exports, "round", ()=>round);
parcelHelpers.export(exports, "sides", ()=>sides);
const sides = [
    'top',
    'right',
    'bottom',
    'left'
];
const alignments = [
    'start',
    'end'
];
const placements = /*#__PURE__*/ sides.reduce((acc, side)=>acc.concat(side, side + "-" + alignments[0], side + "-" + alignments[1]), []);
const min = Math.min;
const max = Math.max;
const round = Math.round;
const floor = Math.floor;
const createCoords = (v)=>({
        x: v,
        y: v
    });
const oppositeSideMap = {
    left: 'right',
    right: 'left',
    bottom: 'top',
    top: 'bottom'
};
const oppositeAlignmentMap = {
    start: 'end',
    end: 'start'
};
function clamp(start, value, end) {
    return max(start, min(value, end));
}
function evaluate(value, param) {
    return typeof value === 'function' ? value(param) : value;
}
function getSide(placement) {
    return placement.split('-')[0];
}
function getAlignment(placement) {
    return placement.split('-')[1];
}
function getOppositeAxis(axis) {
    return axis === 'x' ? 'y' : 'x';
}
function getAxisLength(axis) {
    return axis === 'y' ? 'height' : 'width';
}
const yAxisSides = /*#__PURE__*/ new Set([
    'top',
    'bottom'
]);
function getSideAxis(placement) {
    return yAxisSides.has(getSide(placement)) ? 'y' : 'x';
}
function getAlignmentAxis(placement) {
    return getOppositeAxis(getSideAxis(placement));
}
function getAlignmentSides(placement, rects, rtl) {
    if (rtl === void 0) rtl = false;
    const alignment = getAlignment(placement);
    const alignmentAxis = getAlignmentAxis(placement);
    const length = getAxisLength(alignmentAxis);
    let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';
    if (rects.reference[length] > rects.floating[length]) mainAlignmentSide = getOppositePlacement(mainAlignmentSide);
    return [
        mainAlignmentSide,
        getOppositePlacement(mainAlignmentSide)
    ];
}
function getExpandedPlacements(placement) {
    const oppositePlacement = getOppositePlacement(placement);
    return [
        getOppositeAlignmentPlacement(placement),
        oppositePlacement,
        getOppositeAlignmentPlacement(oppositePlacement)
    ];
}
function getOppositeAlignmentPlacement(placement) {
    return placement.replace(/start|end/g, (alignment)=>oppositeAlignmentMap[alignment]);
}
const lrPlacement = [
    'left',
    'right'
];
const rlPlacement = [
    'right',
    'left'
];
const tbPlacement = [
    'top',
    'bottom'
];
const btPlacement = [
    'bottom',
    'top'
];
function getSideList(side, isStart, rtl) {
    switch(side){
        case 'top':
        case 'bottom':
            if (rtl) return isStart ? rlPlacement : lrPlacement;
            return isStart ? lrPlacement : rlPlacement;
        case 'left':
        case 'right':
            return isStart ? tbPlacement : btPlacement;
        default:
            return [];
    }
}
function getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {
    const alignment = getAlignment(placement);
    let list = getSideList(getSide(placement), direction === 'start', rtl);
    if (alignment) {
        list = list.map((side)=>side + "-" + alignment);
        if (flipAlignment) list = list.concat(list.map(getOppositeAlignmentPlacement));
    }
    return list;
}
function getOppositePlacement(placement) {
    return placement.replace(/left|right|bottom|top/g, (side)=>oppositeSideMap[side]);
}
function expandPaddingObject(padding) {
    return {
        top: 0,
        right: 0,
        bottom: 0,
        left: 0,
        ...padding
    };
}
function getPaddingObject(padding) {
    return typeof padding !== 'number' ? expandPaddingObject(padding) : {
        top: padding,
        right: padding,
        bottom: padding,
        left: padding
    };
}
function rectToClientRect(rect) {
    const { x, y, width, height } = rect;
    return {
        width,
        height,
        top: y,
        left: x,
        right: x + width,
        bottom: y + height,
        x,
        y
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"Dh21b":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getComputedStyle", ()=>getComputedStyle);
parcelHelpers.export(exports, "getContainingBlock", ()=>getContainingBlock);
parcelHelpers.export(exports, "getDocumentElement", ()=>getDocumentElement);
parcelHelpers.export(exports, "getFrameElement", ()=>getFrameElement);
parcelHelpers.export(exports, "getNearestOverflowAncestor", ()=>getNearestOverflowAncestor);
parcelHelpers.export(exports, "getNodeName", ()=>getNodeName);
parcelHelpers.export(exports, "getNodeScroll", ()=>getNodeScroll);
parcelHelpers.export(exports, "getOverflowAncestors", ()=>getOverflowAncestors);
parcelHelpers.export(exports, "getParentNode", ()=>getParentNode);
parcelHelpers.export(exports, "getWindow", ()=>getWindow);
parcelHelpers.export(exports, "isContainingBlock", ()=>isContainingBlock);
parcelHelpers.export(exports, "isElement", ()=>isElement);
parcelHelpers.export(exports, "isHTMLElement", ()=>isHTMLElement);
parcelHelpers.export(exports, "isLastTraversableNode", ()=>isLastTraversableNode);
parcelHelpers.export(exports, "isNode", ()=>isNode);
parcelHelpers.export(exports, "isOverflowElement", ()=>isOverflowElement);
parcelHelpers.export(exports, "isShadowRoot", ()=>isShadowRoot);
parcelHelpers.export(exports, "isTableElement", ()=>isTableElement);
parcelHelpers.export(exports, "isTopLayer", ()=>isTopLayer);
parcelHelpers.export(exports, "isWebKit", ()=>isWebKit);
function hasWindow() {
    return typeof window !== 'undefined';
}
function getNodeName(node) {
    if (isNode(node)) return (node.nodeName || '').toLowerCase();
    // Mocked nodes in testing environments may not be instances of Node. By
    // returning `#document` an infinite loop won't occur.
    // https://github.com/floating-ui/floating-ui/issues/2317
    return '#document';
}
function getWindow(node) {
    var _node$ownerDocument;
    return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;
}
function getDocumentElement(node) {
    var _ref;
    return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;
}
function isNode(value) {
    if (!hasWindow()) return false;
    return value instanceof Node || value instanceof getWindow(value).Node;
}
function isElement(value) {
    if (!hasWindow()) return false;
    return value instanceof Element || value instanceof getWindow(value).Element;
}
function isHTMLElement(value) {
    if (!hasWindow()) return false;
    return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;
}
function isShadowRoot(value) {
    if (!hasWindow() || typeof ShadowRoot === 'undefined') return false;
    return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;
}
const invalidOverflowDisplayValues = /*#__PURE__*/ new Set([
    'inline',
    'contents'
]);
function isOverflowElement(element) {
    const { overflow, overflowX, overflowY, display } = getComputedStyle(element);
    return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !invalidOverflowDisplayValues.has(display);
}
const tableElements = /*#__PURE__*/ new Set([
    'table',
    'td',
    'th'
]);
function isTableElement(element) {
    return tableElements.has(getNodeName(element));
}
const topLayerSelectors = [
    ':popover-open',
    ':modal'
];
function isTopLayer(element) {
    return topLayerSelectors.some((selector)=>{
        try {
            return element.matches(selector);
        } catch (_e) {
            return false;
        }
    });
}
const transformProperties = [
    'transform',
    'translate',
    'scale',
    'rotate',
    'perspective'
];
const willChangeValues = [
    'transform',
    'translate',
    'scale',
    'rotate',
    'perspective',
    'filter'
];
const containValues = [
    'paint',
    'layout',
    'strict',
    'content'
];
function isContainingBlock(elementOrCss) {
    const webkit = isWebKit();
    const css = isElement(elementOrCss) ? getComputedStyle(elementOrCss) : elementOrCss;
    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block
    // https://drafts.csswg.org/css-transforms-2/#individual-transforms
    return transformProperties.some((value)=>css[value] ? css[value] !== 'none' : false) || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || willChangeValues.some((value)=>(css.willChange || '').includes(value)) || containValues.some((value)=>(css.contain || '').includes(value));
}
function getContainingBlock(element) {
    let currentNode = getParentNode(element);
    while(isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)){
        if (isContainingBlock(currentNode)) return currentNode;
        else if (isTopLayer(currentNode)) return null;
        currentNode = getParentNode(currentNode);
    }
    return null;
}
function isWebKit() {
    if (typeof CSS === 'undefined' || !CSS.supports) return false;
    return CSS.supports('-webkit-backdrop-filter', 'none');
}
const lastTraversableNodeNames = /*#__PURE__*/ new Set([
    'html',
    'body',
    '#document'
]);
function isLastTraversableNode(node) {
    return lastTraversableNodeNames.has(getNodeName(node));
}
function getComputedStyle(element) {
    return getWindow(element).getComputedStyle(element);
}
function getNodeScroll(element) {
    if (isElement(element)) return {
        scrollLeft: element.scrollLeft,
        scrollTop: element.scrollTop
    };
    return {
        scrollLeft: element.scrollX,
        scrollTop: element.scrollY
    };
}
function getParentNode(node) {
    if (getNodeName(node) === 'html') return node;
    const result = // Step into the shadow DOM of the parent of a slotted node.
    node.assignedSlot || // DOM Element detected.
    node.parentNode || // ShadowRoot detected.
    isShadowRoot(node) && node.host || // Fallback.
    getDocumentElement(node);
    return isShadowRoot(result) ? result.host : result;
}
function getNearestOverflowAncestor(node) {
    const parentNode = getParentNode(node);
    if (isLastTraversableNode(parentNode)) return node.ownerDocument ? node.ownerDocument.body : node.body;
    if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) return parentNode;
    return getNearestOverflowAncestor(parentNode);
}
function getOverflowAncestors(node, list, traverseIframes) {
    var _node$ownerDocument2;
    if (list === void 0) list = [];
    if (traverseIframes === void 0) traverseIframes = true;
    const scrollableAncestor = getNearestOverflowAncestor(node);
    const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);
    const win = getWindow(scrollableAncestor);
    if (isBody) {
        const frameElement = getFrameElement(win);
        return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], frameElement && traverseIframes ? getOverflowAncestors(frameElement) : []);
    }
    return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));
}
function getFrameElement(win) {
    return win.parent && Object.getPrototypeOf(win.parent) ? win.frameElement : null;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"40aoY":[function(require,module,exports,__globalThis) {
// src/arrow.tsx
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Arrow", ()=>Arrow);
parcelHelpers.export(exports, "Root", ()=>Root);
var _react = require("react");
var _reactPrimitive = require("@radix-ui/react-primitive");
var _jsxRuntime = require("react/jsx-runtime");
var NAME = "Arrow";
var Arrow = _react.forwardRef((props, forwardedRef)=>{
    const { children, width = 10, height = 5, ...arrowProps } = props;
    return /* @__PURE__ */ (0, _jsxRuntime.jsx)((0, _reactPrimitive.Primitive).svg, {
        ...arrowProps,
        ref: forwardedRef,
        width,
        height,
        viewBox: "0 0 30 10",
        preserveAspectRatio: "none",
        children: props.asChild ? children : /* @__PURE__ */ (0, _jsxRuntime.jsx)("polygon", {
            points: "0,0 30,0 15,10"
        })
    });
});
Arrow.displayName = NAME;
var Root = Arrow;

},{"react":"jMk1U","@radix-ui/react-primitive":"i0I8C","react/jsx-runtime":"05iiF","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"29eEC":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Portal", ()=>Portal);
parcelHelpers.export(exports, "Root", ()=>Root);
// src/portal.tsx
var _react = require("react");
var _reactDom = require("react-dom");
var _reactDomDefault = parcelHelpers.interopDefault(_reactDom);
var _reactPrimitive = require("@radix-ui/react-primitive");
var _reactUseLayoutEffect = require("@radix-ui/react-use-layout-effect");
var _jsxRuntime = require("react/jsx-runtime");
"use client";
var PORTAL_NAME = "Portal";
var Portal = _react.forwardRef((props, forwardedRef)=>{
    const { container: containerProp, ...portalProps } = props;
    const [mounted, setMounted] = _react.useState(false);
    (0, _reactUseLayoutEffect.useLayoutEffect)(()=>setMounted(true), []);
    const container = containerProp || mounted && globalThis?.document?.body;
    return container ? (0, _reactDomDefault.default).createPortal(/* @__PURE__ */ (0, _jsxRuntime.jsx)((0, _reactPrimitive.Primitive).div, {
        ...portalProps,
        ref: forwardedRef
    }), container) : null;
});
Portal.displayName = PORTAL_NAME;
var Root = Portal;

},{"react":"jMk1U","react-dom":"i4X7T","@radix-ui/react-primitive":"i0I8C","@radix-ui/react-use-layout-effect":"enSS6","react/jsx-runtime":"05iiF","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bLgm8":[function(require,module,exports,__globalThis) {
// src/visually-hidden.tsx
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Root", ()=>Root);
parcelHelpers.export(exports, "VISUALLY_HIDDEN_STYLES", ()=>VISUALLY_HIDDEN_STYLES);
parcelHelpers.export(exports, "VisuallyHidden", ()=>VisuallyHidden);
var _react = require("react");
var _reactPrimitive = require("@radix-ui/react-primitive");
var _jsxRuntime = require("react/jsx-runtime");
var VISUALLY_HIDDEN_STYLES = Object.freeze({
    // See: https://github.com/twbs/bootstrap/blob/main/scss/mixins/_visually-hidden.scss
    position: "absolute",
    border: 0,
    width: 1,
    height: 1,
    padding: 0,
    margin: -1,
    overflow: "hidden",
    clip: "rect(0, 0, 0, 0)",
    whiteSpace: "nowrap",
    wordWrap: "normal"
});
var NAME = "VisuallyHidden";
var VisuallyHidden = _react.forwardRef((props, forwardedRef)=>{
    return /* @__PURE__ */ (0, _jsxRuntime.jsx)((0, _reactPrimitive.Primitive).span, {
        ...props,
        ref: forwardedRef,
        style: {
            ...VISUALLY_HIDDEN_STYLES,
            ...props.style
        }
    });
});
VisuallyHidden.displayName = NAME;
var Root = VisuallyHidden;

},{"react":"jMk1U","@radix-ui/react-primitive":"i0I8C","react/jsx-runtime":"05iiF","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2QB19":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "hideOthers", ()=>hideOthers);
parcelHelpers.export(exports, "inertOthers", ()=>inertOthers);
parcelHelpers.export(exports, "supportsInert", ()=>supportsInert);
parcelHelpers.export(exports, "suppressOthers", ()=>suppressOthers);
var getDefaultParent = function(originalTarget) {
    if (typeof document === 'undefined') return null;
    var sampleTarget = Array.isArray(originalTarget) ? originalTarget[0] : originalTarget;
    return sampleTarget.ownerDocument.body;
};
var counterMap = new WeakMap();
var uncontrolledNodes = new WeakMap();
var markerMap = {};
var lockCount = 0;
var unwrapHost = function(node) {
    return node && (node.host || unwrapHost(node.parentNode));
};
var correctTargets = function(parent, targets) {
    return targets.map(function(target) {
        if (parent.contains(target)) return target;
        var correctedTarget = unwrapHost(target);
        if (correctedTarget && parent.contains(correctedTarget)) return correctedTarget;
        console.error('aria-hidden', target, 'in not contained inside', parent, '. Doing nothing');
        return null;
    }).filter(function(x) {
        return Boolean(x);
    });
};
/**
 * Marks everything except given node(or nodes) as aria-hidden
 * @param {Element | Element[]} originalTarget - elements to keep on the page
 * @param [parentNode] - top element, defaults to document.body
 * @param {String} [markerName] - a special attribute to mark every node
 * @param {String} [controlAttribute] - html Attribute to control
 * @return {Undo} undo command
 */ var applyAttributeToOthers = function(originalTarget, parentNode, markerName, controlAttribute) {
    var targets = correctTargets(parentNode, Array.isArray(originalTarget) ? originalTarget : [
        originalTarget
    ]);
    if (!markerMap[markerName]) markerMap[markerName] = new WeakMap();
    var markerCounter = markerMap[markerName];
    var hiddenNodes = [];
    var elementsToKeep = new Set();
    var elementsToStop = new Set(targets);
    var keep = function(el) {
        if (!el || elementsToKeep.has(el)) return;
        elementsToKeep.add(el);
        keep(el.parentNode);
    };
    targets.forEach(keep);
    var deep = function(parent) {
        if (!parent || elementsToStop.has(parent)) return;
        Array.prototype.forEach.call(parent.children, function(node) {
            if (elementsToKeep.has(node)) deep(node);
            else try {
                var attr = node.getAttribute(controlAttribute);
                var alreadyHidden = attr !== null && attr !== 'false';
                var counterValue = (counterMap.get(node) || 0) + 1;
                var markerValue = (markerCounter.get(node) || 0) + 1;
                counterMap.set(node, counterValue);
                markerCounter.set(node, markerValue);
                hiddenNodes.push(node);
                if (counterValue === 1 && alreadyHidden) uncontrolledNodes.set(node, true);
                if (markerValue === 1) node.setAttribute(markerName, 'true');
                if (!alreadyHidden) node.setAttribute(controlAttribute, 'true');
            } catch (e) {
                console.error('aria-hidden: cannot operate on ', node, e);
            }
        });
    };
    deep(parentNode);
    elementsToKeep.clear();
    lockCount++;
    return function() {
        hiddenNodes.forEach(function(node) {
            var counterValue = counterMap.get(node) - 1;
            var markerValue = markerCounter.get(node) - 1;
            counterMap.set(node, counterValue);
            markerCounter.set(node, markerValue);
            if (!counterValue) {
                if (!uncontrolledNodes.has(node)) node.removeAttribute(controlAttribute);
                uncontrolledNodes.delete(node);
            }
            if (!markerValue) node.removeAttribute(markerName);
        });
        lockCount--;
        if (!lockCount) {
            // clear
            counterMap = new WeakMap();
            counterMap = new WeakMap();
            uncontrolledNodes = new WeakMap();
            markerMap = {};
        }
    };
};
var hideOthers = function(originalTarget, parentNode, markerName) {
    if (markerName === void 0) markerName = 'data-aria-hidden';
    var targets = Array.from(Array.isArray(originalTarget) ? originalTarget : [
        originalTarget
    ]);
    var activeParentNode = parentNode || getDefaultParent(originalTarget);
    if (!activeParentNode) return function() {
        return null;
    };
    // we should not hide aria-live elements - https://github.com/theKashey/aria-hidden/issues/10
    // and script elements, as they have no impact on accessibility.
    targets.push.apply(targets, Array.from(activeParentNode.querySelectorAll('[aria-live], script')));
    return applyAttributeToOthers(targets, activeParentNode, markerName, 'aria-hidden');
};
var inertOthers = function(originalTarget, parentNode, markerName) {
    if (markerName === void 0) markerName = 'data-inert-ed';
    var activeParentNode = parentNode || getDefaultParent(originalTarget);
    if (!activeParentNode) return function() {
        return null;
    };
    return applyAttributeToOthers(originalTarget, activeParentNode, markerName, 'inert');
};
var supportsInert = function() {
    return typeof HTMLElement !== 'undefined' && HTMLElement.prototype.hasOwnProperty('inert');
};
var suppressOthers = function(originalTarget, parentNode, markerName) {
    if (markerName === void 0) markerName = 'data-suppressed';
    return (supportsInert() ? inertOthers : hideOthers)(originalTarget, parentNode, markerName);
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8jRAr":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "RemoveScroll", ()=>(0, _combinationDefault.default));
var _combination = require("./Combination");
var _combinationDefault = parcelHelpers.interopDefault(_combination);

},{"./Combination":"d6Hzj","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"d6Hzj":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _tslib = require("tslib");
var _react = require("react");
var _ui = require("./UI");
var _sidecar = require("./sidecar");
var _sidecarDefault = parcelHelpers.interopDefault(_sidecar);
var ReactRemoveScroll = _react.forwardRef(function(props, ref) {
    return _react.createElement((0, _ui.RemoveScroll), (0, _tslib.__assign)({}, props, {
        ref: ref,
        sideCar: (0, _sidecarDefault.default)
    }));
});
ReactRemoveScroll.classNames = (0, _ui.RemoveScroll).classNames;
exports.default = ReactRemoveScroll;

},{"tslib":"iC1Dx","react":"jMk1U","./UI":"jO1Sa","./sidecar":"le5eL","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"iC1Dx":[function(require,module,exports,__globalThis) {
/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */ /* global Reflect, Promise, SuppressedError, Symbol, Iterator */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "__extends", ()=>__extends);
parcelHelpers.export(exports, "__assign", ()=>__assign);
parcelHelpers.export(exports, "__rest", ()=>__rest);
parcelHelpers.export(exports, "__decorate", ()=>__decorate);
parcelHelpers.export(exports, "__param", ()=>__param);
parcelHelpers.export(exports, "__esDecorate", ()=>__esDecorate);
parcelHelpers.export(exports, "__runInitializers", ()=>__runInitializers);
parcelHelpers.export(exports, "__propKey", ()=>__propKey);
parcelHelpers.export(exports, "__setFunctionName", ()=>__setFunctionName);
parcelHelpers.export(exports, "__metadata", ()=>__metadata);
parcelHelpers.export(exports, "__awaiter", ()=>__awaiter);
parcelHelpers.export(exports, "__generator", ()=>__generator);
parcelHelpers.export(exports, "__createBinding", ()=>__createBinding);
parcelHelpers.export(exports, "__exportStar", ()=>__exportStar);
parcelHelpers.export(exports, "__values", ()=>__values);
parcelHelpers.export(exports, "__read", ()=>__read);
/** @deprecated */ parcelHelpers.export(exports, "__spread", ()=>__spread);
/** @deprecated */ parcelHelpers.export(exports, "__spreadArrays", ()=>__spreadArrays);
parcelHelpers.export(exports, "__spreadArray", ()=>__spreadArray);
parcelHelpers.export(exports, "__await", ()=>__await);
parcelHelpers.export(exports, "__asyncGenerator", ()=>__asyncGenerator);
parcelHelpers.export(exports, "__asyncDelegator", ()=>__asyncDelegator);
parcelHelpers.export(exports, "__asyncValues", ()=>__asyncValues);
parcelHelpers.export(exports, "__makeTemplateObject", ()=>__makeTemplateObject);
parcelHelpers.export(exports, "__importStar", ()=>__importStar);
parcelHelpers.export(exports, "__importDefault", ()=>__importDefault);
parcelHelpers.export(exports, "__classPrivateFieldGet", ()=>__classPrivateFieldGet);
parcelHelpers.export(exports, "__classPrivateFieldSet", ()=>__classPrivateFieldSet);
parcelHelpers.export(exports, "__classPrivateFieldIn", ()=>__classPrivateFieldIn);
parcelHelpers.export(exports, "__addDisposableResource", ()=>__addDisposableResource);
parcelHelpers.export(exports, "__disposeResources", ()=>__disposeResources);
parcelHelpers.export(exports, "__rewriteRelativeImportExtension", ()=>__rewriteRelativeImportExtension);
var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || ({
        __proto__: []
    }) instanceof Array && function(d, b) {
        d.__proto__ = b;
    } || function(d, b) {
        for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
    };
    return extendStatics(d, b);
};
function __extends(d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
        this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}
var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for(var s, i = 1, n = arguments.length; i < n; i++){
            s = arguments[i];
            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
function __rest(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") {
        for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++)if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
}
function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}
function __param(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
}
function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) {
        if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected");
        return f;
    }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for(var i = decorators.length - 1; i >= 0; i--){
        var context = {};
        for(var p in contextIn)context[p] = p === "access" ? {} : contextIn[p];
        for(var p in contextIn.access)context.access[p] = contextIn.access[p];
        context.addInitializer = function(f) {
            if (done) throw new TypeError("Cannot add initializers after decoration has completed");
            extraInitializers.push(accept(f || null));
        };
        var result = (0, decorators[i])(kind === "accessor" ? {
            get: descriptor.get,
            set: descriptor.set
        } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        } else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
}
function __runInitializers(thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for(var i = 0; i < initializers.length; i++)value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    return useValue ? value : void 0;
}
function __propKey(x) {
    return typeof x === "symbol" ? x : "".concat(x);
}
function __setFunctionName(f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", {
        configurable: true,
        value: prefix ? "".concat(prefix, " ", name) : name
    });
}
function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}
function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}
function __generator(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);
    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(g && (g = 0, op[0] && (_ = 0)), _)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
}
var __createBinding = Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) desc = {
        enumerable: true,
        get: function() {
            return m[k];
        }
    };
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
};
function __exportStar(m, o) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
}
function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function() {
            if (o && i >= o.length) o = void 0;
            return {
                value: o && o[i++],
                done: !o
            };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
}
function __spread() {
    for(var ar = [], i = 0; i < arguments.length; i++)ar = ar.concat(__read(arguments[i]));
    return ar;
}
function __spreadArrays() {
    for(var s = 0, i = 0, il = arguments.length; i < il; i++)s += arguments[i].length;
    for(var r = Array(s), k = 0, i = 0; i < il; i++)for(var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)r[k] = a[j];
    return r;
}
function __spreadArray(to, from, pack) {
    if (pack || arguments.length === 2) {
        for(var i = 0, l = from.length, ar; i < l; i++)if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
}
function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}
function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = Object.create((typeof AsyncIterator === "function" ? AsyncIterator : Object).prototype), verb("next"), verb("throw"), verb("return", awaitReturn), i[Symbol.asyncIterator] = function() {
        return this;
    }, i;
    function awaitReturn(f) {
        return function(v) {
            return Promise.resolve(v).then(f, reject);
        };
    }
    function verb(n, f) {
        if (g[n]) {
            i[n] = function(v) {
                return new Promise(function(a, b) {
                    q.push([
                        n,
                        v,
                        a,
                        b
                    ]) > 1 || resume(n, v);
                });
            };
            if (f) i[n] = f(i[n]);
        }
    }
    function resume(n, v) {
        try {
            step(g[n](v));
        } catch (e) {
            settle(q[0][3], e);
        }
    }
    function step(r) {
        r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
    }
    function fulfill(value) {
        resume("next", value);
    }
    function reject(value) {
        resume("throw", value);
    }
    function settle(f, v) {
        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
    }
}
function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function(e) {
        throw e;
    }), verb("return"), i[Symbol.iterator] = function() {
        return this;
    }, i;
    function verb(n, f) {
        i[n] = o[n] ? function(v) {
            return (p = !p) ? {
                value: __await(o[n](v)),
                done: false
            } : f ? f(v) : v;
        } : f;
    }
}
function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
        return this;
    }, i);
    function verb(n) {
        i[n] = o[n] && function(v) {
            return new Promise(function(resolve, reject) {
                v = o[n](v), settle(resolve, reject, v.done, v.value);
            });
        };
    }
    function settle(resolve, reject, d, v) {
        Promise.resolve(v).then(function(v) {
            resolve({
                value: v,
                done: d
            });
        }, reject);
    }
}
function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) Object.defineProperty(cooked, "raw", {
        value: raw
    });
    else cooked.raw = raw;
    return cooked;
}
var __setModuleDefault = Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
};
var ownKeys = function(o) {
    ownKeys = Object.getOwnPropertyNames || function(o) {
        var ar = [];
        for(var k in o)if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
        return ar;
    };
    return ownKeys(o);
};
function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k = ownKeys(mod), i = 0; i < k.length; i++)if (k[i] !== "default") __createBinding(result, mod, k[i]);
    }
    __setModuleDefault(result, mod);
    return result;
}
function __importDefault(mod) {
    return mod && mod.__esModule ? mod : {
        default: mod
    };
}
function __classPrivateFieldGet(receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
}
function __classPrivateFieldSet(receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;
}
function __classPrivateFieldIn(state, receiver) {
    if (receiver === null || typeof receiver !== "object" && typeof receiver !== "function") throw new TypeError("Cannot use 'in' operator on non-object");
    return typeof state === "function" ? receiver === state : state.has(receiver);
}
function __addDisposableResource(env, value, async) {
    if (value !== null && value !== void 0) {
        if (typeof value !== "object" && typeof value !== "function") throw new TypeError("Object expected.");
        var dispose, inner;
        if (async) {
            if (!Symbol.asyncDispose) throw new TypeError("Symbol.asyncDispose is not defined.");
            dispose = value[Symbol.asyncDispose];
        }
        if (dispose === void 0) {
            if (!Symbol.dispose) throw new TypeError("Symbol.dispose is not defined.");
            dispose = value[Symbol.dispose];
            if (async) inner = dispose;
        }
        if (typeof dispose !== "function") throw new TypeError("Object not disposable.");
        if (inner) dispose = function() {
            try {
                inner.call(this);
            } catch (e) {
                return Promise.reject(e);
            }
        };
        env.stack.push({
            value: value,
            dispose: dispose,
            async: async
        });
    } else if (async) env.stack.push({
        async: true
    });
    return value;
}
var _SuppressedError = typeof SuppressedError === "function" ? SuppressedError : function(error, suppressed, message) {
    var e = new Error(message);
    return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
};
function __disposeResources(env) {
    function fail(e) {
        env.error = env.hasError ? new _SuppressedError(e, env.error, "An error was suppressed during disposal.") : e;
        env.hasError = true;
    }
    var r, s = 0;
    function next() {
        while(r = env.stack.pop())try {
            if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);
            if (r.dispose) {
                var result = r.dispose.call(r.value);
                if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) {
                    fail(e);
                    return next();
                });
            } else s |= 1;
        } catch (e) {
            fail(e);
        }
        if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();
        if (env.hasError) throw env.error;
    }
    return next();
}
function __rewriteRelativeImportExtension(path, preserveJsx) {
    if (typeof path === "string" && /^\.\.?\//.test(path)) return path.replace(/\.(tsx)$|((?:\.d)?)((?:\.[^./]+?)?)\.([cm]?)ts$/i, function(m, tsx, d, ext, cm) {
        return tsx ? preserveJsx ? ".jsx" : ".js" : d && (!ext || !cm) ? m : d + ext + "." + cm.toLowerCase() + "js";
    });
    return path;
}
exports.default = {
    __extends: __extends,
    __assign: __assign,
    __rest: __rest,
    __decorate: __decorate,
    __param: __param,
    __esDecorate: __esDecorate,
    __runInitializers: __runInitializers,
    __propKey: __propKey,
    __setFunctionName: __setFunctionName,
    __metadata: __metadata,
    __awaiter: __awaiter,
    __generator: __generator,
    __createBinding: __createBinding,
    __exportStar: __exportStar,
    __values: __values,
    __read: __read,
    __spread: __spread,
    __spreadArrays: __spreadArrays,
    __spreadArray: __spreadArray,
    __await: __await,
    __asyncGenerator: __asyncGenerator,
    __asyncDelegator: __asyncDelegator,
    __asyncValues: __asyncValues,
    __makeTemplateObject: __makeTemplateObject,
    __importStar: __importStar,
    __importDefault: __importDefault,
    __classPrivateFieldGet: __classPrivateFieldGet,
    __classPrivateFieldSet: __classPrivateFieldSet,
    __classPrivateFieldIn: __classPrivateFieldIn,
    __addDisposableResource: __addDisposableResource,
    __disposeResources: __disposeResources,
    __rewriteRelativeImportExtension: __rewriteRelativeImportExtension
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jO1Sa":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "RemoveScroll", ()=>RemoveScroll);
var _tslib = require("tslib");
var _react = require("react");
var _constants = require("react-remove-scroll-bar/constants");
var _useCallbackRef = require("use-callback-ref");
var _medium = require("./medium");
var nothing = function() {
    return;
};
/**
 * Removes scrollbar from the page and contain the scroll within the Lock
 */ var RemoveScroll = _react.forwardRef(function(props, parentRef) {
    var ref = _react.useRef(null);
    var _a = _react.useState({
        onScrollCapture: nothing,
        onWheelCapture: nothing,
        onTouchMoveCapture: nothing
    }), callbacks = _a[0], setCallbacks = _a[1];
    var forwardProps = props.forwardProps, children = props.children, className = props.className, removeScrollBar = props.removeScrollBar, enabled = props.enabled, shards = props.shards, sideCar = props.sideCar, noRelative = props.noRelative, noIsolation = props.noIsolation, inert = props.inert, allowPinchZoom = props.allowPinchZoom, _b = props.as, Container = _b === void 0 ? 'div' : _b, gapMode = props.gapMode, rest = (0, _tslib.__rest)(props, [
        "forwardProps",
        "children",
        "className",
        "removeScrollBar",
        "enabled",
        "shards",
        "sideCar",
        "noRelative",
        "noIsolation",
        "inert",
        "allowPinchZoom",
        "as",
        "gapMode"
    ]);
    var SideCar = sideCar;
    var containerRef = (0, _useCallbackRef.useMergeRefs)([
        ref,
        parentRef
    ]);
    var containerProps = (0, _tslib.__assign)((0, _tslib.__assign)({}, rest), callbacks);
    return _react.createElement(_react.Fragment, null, enabled && _react.createElement(SideCar, {
        sideCar: (0, _medium.effectCar),
        removeScrollBar: removeScrollBar,
        shards: shards,
        noRelative: noRelative,
        noIsolation: noIsolation,
        inert: inert,
        setCallbacks: setCallbacks,
        allowPinchZoom: !!allowPinchZoom,
        lockRef: ref,
        gapMode: gapMode
    }), forwardProps ? _react.cloneElement(_react.Children.only(children), (0, _tslib.__assign)((0, _tslib.__assign)({}, containerProps), {
        ref: containerRef
    })) : _react.createElement(Container, (0, _tslib.__assign)({}, containerProps, {
        className: className,
        ref: containerRef
    }), children));
});
RemoveScroll.defaultProps = {
    enabled: true,
    removeScrollBar: true,
    inert: false
};
RemoveScroll.classNames = {
    fullWidth: (0, _constants.fullWidthClassName),
    zeroRight: (0, _constants.zeroRightClassName)
};

},{"tslib":"iC1Dx","react":"jMk1U","react-remove-scroll-bar/constants":"aFGUt","use-callback-ref":"aWIcL","./medium":"hUXZN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aFGUt":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "zeroRightClassName", ()=>zeroRightClassName);
parcelHelpers.export(exports, "fullWidthClassName", ()=>fullWidthClassName);
parcelHelpers.export(exports, "noScrollbarsClassName", ()=>noScrollbarsClassName);
parcelHelpers.export(exports, "removedBarSizeVariable", ()=>removedBarSizeVariable);
var zeroRightClassName = 'right-scroll-bar-position';
var fullWidthClassName = 'width-before-scroll-bar';
var noScrollbarsClassName = 'with-scroll-bars-hidden';
var removedBarSizeVariable = '--removed-body-scroll-bar-size';

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aWIcL":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "assignRef", ()=>(0, _assignRef.assignRef));
// callback ref
parcelHelpers.export(exports, "useCallbackRef", ()=>(0, _useRef.useCallbackRef));
parcelHelpers.export(exports, "createCallbackRef", ()=>(0, _createRef.createCallbackRef));
// merge ref
parcelHelpers.export(exports, "mergeRefs", ()=>(0, _mergeRef.mergeRefs));
parcelHelpers.export(exports, "useMergeRefs", ()=>(0, _useMergeRef.useMergeRefs));
// transform ref
parcelHelpers.export(exports, "useTransformRef", ()=>(0, _useTransformRef.useTransformRef));
parcelHelpers.export(exports, "transformRef", ()=>(0, _transformRef.transformRef));
// refToCallback
parcelHelpers.export(exports, "refToCallback", ()=>(0, _refToCallback.refToCallback));
parcelHelpers.export(exports, "useRefToCallback", ()=>(0, _refToCallback.useRefToCallback));
var _assignRef = require("./assignRef");
var _useRef = require("./useRef");
var _createRef = require("./createRef");
var _mergeRef = require("./mergeRef");
var _useMergeRef = require("./useMergeRef");
var _useTransformRef = require("./useTransformRef");
var _transformRef = require("./transformRef");
var _refToCallback = require("./refToCallback");

},{"./assignRef":false,"./useRef":false,"./createRef":false,"./mergeRef":false,"./useMergeRef":"asiBb","./useTransformRef":false,"./transformRef":false,"./refToCallback":false,"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8SxUu":[function(require,module,exports,__globalThis) {
/**
 * Assigns a value for a given ref, no matter of the ref format
 * @param {RefObject} ref - a callback function or ref object
 * @param value - a new value
 *
 * @see https://github.com/theKashey/use-callback-ref#assignref
 * @example
 * const refObject = useRef();
 * const refFn = (ref) => {....}
 *
 * assignRef(refObject, "refValue");
 * assignRef(refFn, "refValue");
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "assignRef", ()=>assignRef);
function assignRef(ref, value) {
    if (typeof ref === 'function') ref(value);
    else if (ref) ref.current = value;
    return ref;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"i7LVT":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * creates a MutableRef with ref change callback
 * @param initialValue - initial ref value
 * @param {Function} callback - a callback to run when value changes
 *
 * @example
 * const ref = useCallbackRef(0, (newValue, oldValue) => console.log(oldValue, '->', newValue);
 * ref.current = 1;
 * // prints 0 -> 1
 *
 * @see https://reactjs.org/docs/hooks-reference.html#useref
 * @see https://github.com/theKashey/use-callback-ref#usecallbackref---to-replace-reactuseref
 * @returns {MutableRefObject}
 */ parcelHelpers.export(exports, "useCallbackRef", ()=>useCallbackRef);
var _react = require("react");
function useCallbackRef(initialValue, callback) {
    var ref = (0, _react.useState)(function() {
        return {
            // value
            value: initialValue,
            // last callback
            callback: callback,
            // "memoized" public interface
            facade: {
                get current () {
                    return ref.value;
                },
                set current (value){
                    var last = ref.value;
                    if (last !== value) {
                        ref.value = value;
                        ref.callback(value, last);
                    }
                }
            }
        };
    })[0];
    // update callback
    ref.callback = callback;
    return ref.facade;
}

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"asiBb":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Merges two or more refs together providing a single interface to set their value
 * @param {RefObject|Ref} refs
 * @returns {MutableRefObject} - a new ref, which translates all changes to {refs}
 *
 * @see {@link mergeRefs} a version without buit-in memoization
 * @see https://github.com/theKashey/use-callback-ref#usemergerefs
 * @example
 * const Component = React.forwardRef((props, ref) => {
 *   const ownRef = useRef();
 *   const domRef = useMergeRefs([ref, ownRef]); // 👈 merge together
 *   return <div ref={domRef}>...</div>
 * }
 */ parcelHelpers.export(exports, "useMergeRefs", ()=>useMergeRefs);
var _react = require("react");
var _assignRef = require("./assignRef");
var _useRef = require("./useRef");
var useIsomorphicLayoutEffect = typeof window !== 'undefined' ? _react.useLayoutEffect : _react.useEffect;
var currentValues = new WeakMap();
function useMergeRefs(refs, defaultValue) {
    var callbackRef = (0, _useRef.useCallbackRef)(defaultValue || null, function(newValue) {
        return refs.forEach(function(ref) {
            return (0, _assignRef.assignRef)(ref, newValue);
        });
    });
    // handle refs changes - added or removed
    useIsomorphicLayoutEffect(function() {
        var oldValue = currentValues.get(callbackRef);
        if (oldValue) {
            var prevRefs_1 = new Set(oldValue);
            var nextRefs_1 = new Set(refs);
            var current_1 = callbackRef.current;
            prevRefs_1.forEach(function(ref) {
                if (!nextRefs_1.has(ref)) (0, _assignRef.assignRef)(ref, null);
            });
            nextRefs_1.forEach(function(ref) {
                if (!prevRefs_1.has(ref)) (0, _assignRef.assignRef)(ref, current_1);
            });
        }
        currentValues.set(callbackRef, refs);
    }, [
        refs
    ]);
    return callbackRef;
}

},{"react":"jMk1U","./assignRef":"8SxUu","./useRef":"i7LVT","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hUXZN":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "effectCar", ()=>effectCar);
var _useSidecar = require("use-sidecar");
var effectCar = (0, _useSidecar.createSidecarMedium)();

},{"use-sidecar":"9DKys","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9DKys":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "sidecar", ()=>(0, _hoc.sidecar));
parcelHelpers.export(exports, "useSidecar", ()=>(0, _hook.useSidecar));
parcelHelpers.export(exports, "setConfig", ()=>(0, _config.setConfig));
parcelHelpers.export(exports, "createMedium", ()=>(0, _medium.createMedium));
parcelHelpers.export(exports, "createSidecarMedium", ()=>(0, _medium.createSidecarMedium));
parcelHelpers.export(exports, "renderCar", ()=>(0, _renderProp.renderCar));
parcelHelpers.export(exports, "exportSidecar", ()=>(0, _exports.exportSidecar));
var _hoc = require("./hoc");
var _hook = require("./hook");
var _config = require("./config");
var _medium = require("./medium");
var _renderProp = require("./renderProp");
var _exports = require("./exports");

},{"./hoc":false,"./hook":false,"./config":false,"./medium":"fJZJz","./renderProp":false,"./exports":"aFIQR","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fJZJz":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createMedium", ()=>createMedium);
// eslint-disable-next-line @typescript-eslint/ban-types
parcelHelpers.export(exports, "createSidecarMedium", ()=>createSidecarMedium);
var _tslib = require("tslib");
function ItoI(a) {
    return a;
}
function innerCreateMedium(defaults, middleware) {
    if (middleware === void 0) middleware = ItoI;
    var buffer = [];
    var assigned = false;
    var medium = {
        read: function() {
            if (assigned) throw new Error('Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`.');
            if (buffer.length) return buffer[buffer.length - 1];
            return defaults;
        },
        useMedium: function(data) {
            var item = middleware(data, assigned);
            buffer.push(item);
            return function() {
                buffer = buffer.filter(function(x) {
                    return x !== item;
                });
            };
        },
        assignSyncMedium: function(cb) {
            assigned = true;
            while(buffer.length){
                var cbs = buffer;
                buffer = [];
                cbs.forEach(cb);
            }
            buffer = {
                push: function(x) {
                    return cb(x);
                },
                filter: function() {
                    return buffer;
                }
            };
        },
        assignMedium: function(cb) {
            assigned = true;
            var pendingQueue = [];
            if (buffer.length) {
                var cbs = buffer;
                buffer = [];
                cbs.forEach(cb);
                pendingQueue = buffer;
            }
            var executeQueue = function() {
                var cbs = pendingQueue;
                pendingQueue = [];
                cbs.forEach(cb);
            };
            var cycle = function() {
                return Promise.resolve().then(executeQueue);
            };
            cycle();
            buffer = {
                push: function(x) {
                    pendingQueue.push(x);
                    cycle();
                },
                filter: function(filter) {
                    pendingQueue = pendingQueue.filter(filter);
                    return buffer;
                }
            };
        }
    };
    return medium;
}
function createMedium(defaults, middleware) {
    if (middleware === void 0) middleware = ItoI;
    return innerCreateMedium(defaults, middleware);
}
function createSidecarMedium(options) {
    if (options === void 0) options = {};
    var medium = innerCreateMedium(null);
    medium.options = (0, _tslib.__assign)({
        async: true,
        ssr: false
    }, options);
    return medium;
}

},{"tslib":"iC1Dx","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aFIQR":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "exportSidecar", ()=>exportSidecar);
var _tslib = require("tslib");
var _react = require("react");
var SideCar = function(_a) {
    var sideCar = _a.sideCar, rest = (0, _tslib.__rest)(_a, [
        "sideCar"
    ]);
    if (!sideCar) throw new Error('Sidecar: please provide `sideCar` property to import the right car');
    var Target = sideCar.read();
    if (!Target) throw new Error('Sidecar medium not found');
    return _react.createElement(Target, (0, _tslib.__assign)({}, rest));
};
SideCar.isSideCarExport = true;
function exportSidecar(medium, exported) {
    medium.useMedium(exported);
    return SideCar;
}

},{"tslib":"iC1Dx","react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"le5eL":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _useSidecar = require("use-sidecar");
var _sideEffect = require("./SideEffect");
var _medium = require("./medium");
exports.default = (0, _useSidecar.exportSidecar)((0, _medium.effectCar), (0, _sideEffect.RemoveScrollSideCar));

},{"use-sidecar":"9DKys","./SideEffect":"3Q2rB","./medium":"hUXZN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3Q2rB":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getTouchXY", ()=>getTouchXY);
parcelHelpers.export(exports, "getDeltaXY", ()=>getDeltaXY);
parcelHelpers.export(exports, "RemoveScrollSideCar", ()=>RemoveScrollSideCar);
var _tslib = require("tslib");
var _react = require("react");
var _reactRemoveScrollBar = require("react-remove-scroll-bar");
var _reactStyleSingleton = require("react-style-singleton");
var _aggresiveCapture = require("./aggresiveCapture");
var _handleScroll = require("./handleScroll");
var getTouchXY = function(event) {
    return 'changedTouches' in event ? [
        event.changedTouches[0].clientX,
        event.changedTouches[0].clientY
    ] : [
        0,
        0
    ];
};
var getDeltaXY = function(event) {
    return [
        event.deltaX,
        event.deltaY
    ];
};
var extractRef = function(ref) {
    return ref && 'current' in ref ? ref.current : ref;
};
var deltaCompare = function(x, y) {
    return x[0] === y[0] && x[1] === y[1];
};
var generateStyle = function(id) {
    return "\n  .block-interactivity-".concat(id, " {pointer-events: none;}\n  .allow-interactivity-").concat(id, " {pointer-events: all;}\n");
};
var idCounter = 0;
var lockStack = [];
function RemoveScrollSideCar(props) {
    var shouldPreventQueue = _react.useRef([]);
    var touchStartRef = _react.useRef([
        0,
        0
    ]);
    var activeAxis = _react.useRef();
    var id = _react.useState(idCounter++)[0];
    var Style = _react.useState((0, _reactStyleSingleton.styleSingleton))[0];
    var lastProps = _react.useRef(props);
    _react.useEffect(function() {
        lastProps.current = props;
    }, [
        props
    ]);
    _react.useEffect(function() {
        if (props.inert) {
            document.body.classList.add("block-interactivity-".concat(id));
            var allow_1 = (0, _tslib.__spreadArray)([
                props.lockRef.current
            ], (props.shards || []).map(extractRef), true).filter(Boolean);
            allow_1.forEach(function(el) {
                return el.classList.add("allow-interactivity-".concat(id));
            });
            return function() {
                document.body.classList.remove("block-interactivity-".concat(id));
                allow_1.forEach(function(el) {
                    return el.classList.remove("allow-interactivity-".concat(id));
                });
            };
        }
        return;
    }, [
        props.inert,
        props.lockRef.current,
        props.shards
    ]);
    var shouldCancelEvent = _react.useCallback(function(event, parent) {
        if ('touches' in event && event.touches.length === 2 || event.type === 'wheel' && event.ctrlKey) return !lastProps.current.allowPinchZoom;
        var touch = getTouchXY(event);
        var touchStart = touchStartRef.current;
        var deltaX = 'deltaX' in event ? event.deltaX : touchStart[0] - touch[0];
        var deltaY = 'deltaY' in event ? event.deltaY : touchStart[1] - touch[1];
        var currentAxis;
        var target = event.target;
        var moveDirection = Math.abs(deltaX) > Math.abs(deltaY) ? 'h' : 'v';
        // allow horizontal touch move on Range inputs. They will not cause any scroll
        if ('touches' in event && moveDirection === 'h' && target.type === 'range') return false;
        var canBeScrolledInMainDirection = (0, _handleScroll.locationCouldBeScrolled)(moveDirection, target);
        if (!canBeScrolledInMainDirection) return true;
        if (canBeScrolledInMainDirection) currentAxis = moveDirection;
        else {
            currentAxis = moveDirection === 'v' ? 'h' : 'v';
            canBeScrolledInMainDirection = (0, _handleScroll.locationCouldBeScrolled)(moveDirection, target);
        // other axis might be not scrollable
        }
        if (!canBeScrolledInMainDirection) return false;
        if (!activeAxis.current && 'changedTouches' in event && (deltaX || deltaY)) activeAxis.current = currentAxis;
        if (!currentAxis) return true;
        var cancelingAxis = activeAxis.current || currentAxis;
        return (0, _handleScroll.handleScroll)(cancelingAxis, parent, event, cancelingAxis === 'h' ? deltaX : deltaY, true);
    }, []);
    var shouldPrevent = _react.useCallback(function(_event) {
        var event = _event;
        if (!lockStack.length || lockStack[lockStack.length - 1] !== Style) // not the last active
        return;
        var delta = 'deltaY' in event ? getDeltaXY(event) : getTouchXY(event);
        var sourceEvent = shouldPreventQueue.current.filter(function(e) {
            return e.name === event.type && (e.target === event.target || event.target === e.shadowParent) && deltaCompare(e.delta, delta);
        })[0];
        // self event, and should be canceled
        if (sourceEvent && sourceEvent.should) {
            if (event.cancelable) event.preventDefault();
            return;
        }
        // outside or shard event
        if (!sourceEvent) {
            var shardNodes = (lastProps.current.shards || []).map(extractRef).filter(Boolean).filter(function(node) {
                return node.contains(event.target);
            });
            var shouldStop = shardNodes.length > 0 ? shouldCancelEvent(event, shardNodes[0]) : !lastProps.current.noIsolation;
            if (shouldStop) {
                if (event.cancelable) event.preventDefault();
            }
        }
    }, []);
    var shouldCancel = _react.useCallback(function(name, delta, target, should) {
        var event = {
            name: name,
            delta: delta,
            target: target,
            should: should,
            shadowParent: getOutermostShadowParent(target)
        };
        shouldPreventQueue.current.push(event);
        setTimeout(function() {
            shouldPreventQueue.current = shouldPreventQueue.current.filter(function(e) {
                return e !== event;
            });
        }, 1);
    }, []);
    var scrollTouchStart = _react.useCallback(function(event) {
        touchStartRef.current = getTouchXY(event);
        activeAxis.current = undefined;
    }, []);
    var scrollWheel = _react.useCallback(function(event) {
        shouldCancel(event.type, getDeltaXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));
    }, []);
    var scrollTouchMove = _react.useCallback(function(event) {
        shouldCancel(event.type, getTouchXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));
    }, []);
    _react.useEffect(function() {
        lockStack.push(Style);
        props.setCallbacks({
            onScrollCapture: scrollWheel,
            onWheelCapture: scrollWheel,
            onTouchMoveCapture: scrollTouchMove
        });
        document.addEventListener('wheel', shouldPrevent, (0, _aggresiveCapture.nonPassive));
        document.addEventListener('touchmove', shouldPrevent, (0, _aggresiveCapture.nonPassive));
        document.addEventListener('touchstart', scrollTouchStart, (0, _aggresiveCapture.nonPassive));
        return function() {
            lockStack = lockStack.filter(function(inst) {
                return inst !== Style;
            });
            document.removeEventListener('wheel', shouldPrevent, (0, _aggresiveCapture.nonPassive));
            document.removeEventListener('touchmove', shouldPrevent, (0, _aggresiveCapture.nonPassive));
            document.removeEventListener('touchstart', scrollTouchStart, (0, _aggresiveCapture.nonPassive));
        };
    }, []);
    var removeScrollBar = props.removeScrollBar, inert = props.inert;
    return _react.createElement(_react.Fragment, null, inert ? _react.createElement(Style, {
        styles: generateStyle(id)
    }) : null, removeScrollBar ? _react.createElement((0, _reactRemoveScrollBar.RemoveScrollBar), {
        noRelative: props.noRelative,
        gapMode: props.gapMode
    }) : null);
}
function getOutermostShadowParent(node) {
    var shadowParent = null;
    while(node !== null){
        if (node instanceof ShadowRoot) {
            shadowParent = node.host;
            node = node.host;
        }
        node = node.parentNode;
    }
    return shadowParent;
}

},{"tslib":"iC1Dx","react":"jMk1U","react-remove-scroll-bar":"56cnY","react-style-singleton":"fetdF","./aggresiveCapture":"2XG5L","./handleScroll":"fsxF0","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"56cnY":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "RemoveScrollBar", ()=>(0, _component.RemoveScrollBar));
parcelHelpers.export(exports, "zeroRightClassName", ()=>(0, _constants.zeroRightClassName));
parcelHelpers.export(exports, "fullWidthClassName", ()=>(0, _constants.fullWidthClassName));
parcelHelpers.export(exports, "noScrollbarsClassName", ()=>(0, _constants.noScrollbarsClassName));
parcelHelpers.export(exports, "removedBarSizeVariable", ()=>(0, _constants.removedBarSizeVariable));
parcelHelpers.export(exports, "getGapWidth", ()=>(0, _utils.getGapWidth));
var _component = require("./component");
var _constants = require("./constants");
var _utils = require("./utils");

},{"./component":"bR8HH","./constants":"aFGUt","./utils":"9C7iE","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bR8HH":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "lockAttribute", ()=>lockAttribute);
parcelHelpers.export(exports, "useLockAttribute", ()=>useLockAttribute);
parcelHelpers.export(exports, "RemoveScrollBar", ()=>RemoveScrollBar);
var _react = require("react");
var _reactStyleSingleton = require("react-style-singleton");
var _constants = require("./constants");
var _utils = require("./utils");
var Style = (0, _reactStyleSingleton.styleSingleton)();
var lockAttribute = 'data-scroll-locked';
// important tip - once we measure scrollBar width and remove them
// we could not repeat this operation
// thus we are using style-singleton - only the first "yet correct" style will be applied.
var getStyles = function(_a, allowRelative, gapMode, important) {
    var left = _a.left, top = _a.top, right = _a.right, gap = _a.gap;
    if (gapMode === void 0) gapMode = 'margin';
    return "\n  .".concat((0, _constants.noScrollbarsClassName), " {\n   overflow: hidden ").concat(important, ";\n   padding-right: ").concat(gap, "px ").concat(important, ";\n  }\n  body[").concat(lockAttribute, "] {\n    overflow: hidden ").concat(important, ";\n    overscroll-behavior: contain;\n    ").concat([
        allowRelative && "position: relative ".concat(important, ";"),
        gapMode === 'margin' && "\n    padding-left: ".concat(left, "px;\n    padding-top: ").concat(top, "px;\n    padding-right: ").concat(right, "px;\n    margin-left:0;\n    margin-top:0;\n    margin-right: ").concat(gap, "px ").concat(important, ";\n    "),
        gapMode === 'padding' && "padding-right: ".concat(gap, "px ").concat(important, ";")
    ].filter(Boolean).join(''), "\n  }\n  \n  .").concat((0, _constants.zeroRightClassName), " {\n    right: ").concat(gap, "px ").concat(important, ";\n  }\n  \n  .").concat((0, _constants.fullWidthClassName), " {\n    margin-right: ").concat(gap, "px ").concat(important, ";\n  }\n  \n  .").concat((0, _constants.zeroRightClassName), " .").concat((0, _constants.zeroRightClassName), " {\n    right: 0 ").concat(important, ";\n  }\n  \n  .").concat((0, _constants.fullWidthClassName), " .").concat((0, _constants.fullWidthClassName), " {\n    margin-right: 0 ").concat(important, ";\n  }\n  \n  body[").concat(lockAttribute, "] {\n    ").concat((0, _constants.removedBarSizeVariable), ": ").concat(gap, "px;\n  }\n");
};
var getCurrentUseCounter = function() {
    var counter = parseInt(document.body.getAttribute(lockAttribute) || '0', 10);
    return isFinite(counter) ? counter : 0;
};
var useLockAttribute = function() {
    _react.useEffect(function() {
        document.body.setAttribute(lockAttribute, (getCurrentUseCounter() + 1).toString());
        return function() {
            var newCounter = getCurrentUseCounter() - 1;
            if (newCounter <= 0) document.body.removeAttribute(lockAttribute);
            else document.body.setAttribute(lockAttribute, newCounter.toString());
        };
    }, []);
};
var RemoveScrollBar = function(_a) {
    var noRelative = _a.noRelative, noImportant = _a.noImportant, _b = _a.gapMode, gapMode = _b === void 0 ? 'margin' : _b;
    useLockAttribute();
    /*
     gap will be measured on every component mount
     however it will be used only by the "first" invocation
     due to singleton nature of <Style
     */ var gap = _react.useMemo(function() {
        return (0, _utils.getGapWidth)(gapMode);
    }, [
        gapMode
    ]);
    return _react.createElement(Style, {
        styles: getStyles(gap, !noRelative, gapMode, !noImportant ? '!important' : '')
    });
};

},{"react":"jMk1U","react-style-singleton":"fetdF","./constants":"aFGUt","./utils":"9C7iE","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fetdF":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styleSingleton", ()=>(0, _component.styleSingleton));
parcelHelpers.export(exports, "stylesheetSingleton", ()=>(0, _singleton.stylesheetSingleton));
parcelHelpers.export(exports, "styleHookSingleton", ()=>(0, _hook.styleHookSingleton));
var _component = require("./component");
var _singleton = require("./singleton");
var _hook = require("./hook");

},{"./component":"kebmf","./singleton":"1CXwN","./hook":"2LaSz","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"kebmf":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styleSingleton", ()=>styleSingleton);
var _hook = require("./hook");
var styleSingleton = function() {
    var useStyle = (0, _hook.styleHookSingleton)();
    var Sheet = function(_a) {
        var styles = _a.styles, dynamic = _a.dynamic;
        useStyle(styles, dynamic);
        return null;
    };
    return Sheet;
};

},{"./hook":"2LaSz","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2LaSz":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styleHookSingleton", ()=>styleHookSingleton);
var _react = require("react");
var _singleton = require("./singleton");
var styleHookSingleton = function() {
    var sheet = (0, _singleton.stylesheetSingleton)();
    return function(styles, isDynamic) {
        _react.useEffect(function() {
            sheet.add(styles);
            return function() {
                sheet.remove();
            };
        }, [
            styles && isDynamic
        ]);
    };
};

},{"react":"jMk1U","./singleton":"1CXwN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1CXwN":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "stylesheetSingleton", ()=>stylesheetSingleton);
var _getNonce = require("get-nonce");
function makeStyleTag() {
    if (!document) return null;
    var tag = document.createElement('style');
    tag.type = 'text/css';
    var nonce = (0, _getNonce.getNonce)();
    if (nonce) tag.setAttribute('nonce', nonce);
    return tag;
}
function injectStyles(tag, css) {
    // @ts-ignore
    if (tag.styleSheet) // @ts-ignore
    tag.styleSheet.cssText = css;
    else tag.appendChild(document.createTextNode(css));
}
function insertStyleTag(tag) {
    var head = document.head || document.getElementsByTagName('head')[0];
    head.appendChild(tag);
}
var stylesheetSingleton = function() {
    var counter = 0;
    var stylesheet = null;
    return {
        add: function(style) {
            if (counter == 0) {
                if (stylesheet = makeStyleTag()) {
                    injectStyles(stylesheet, style);
                    insertStyleTag(stylesheet);
                }
            }
            counter++;
        },
        remove: function() {
            counter--;
            if (!counter && stylesheet) {
                stylesheet.parentNode && stylesheet.parentNode.removeChild(stylesheet);
                stylesheet = null;
            }
        }
    };
};

},{"get-nonce":"3EFG9","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3EFG9":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "setNonce", ()=>setNonce);
parcelHelpers.export(exports, "getNonce", ()=>getNonce);
var currentNonce;
var setNonce = function(nonce) {
    currentNonce = nonce;
};
var getNonce = function() {
    if (currentNonce) return currentNonce;
    if (typeof __webpack_nonce__ !== 'undefined') return __webpack_nonce__;
    return undefined;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9C7iE":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "zeroGap", ()=>zeroGap);
parcelHelpers.export(exports, "getGapWidth", ()=>getGapWidth);
var zeroGap = {
    left: 0,
    top: 0,
    right: 0,
    gap: 0
};
var parse = function(x) {
    return parseInt(x || '', 10) || 0;
};
var getOffset = function(gapMode) {
    var cs = window.getComputedStyle(document.body);
    var left = cs[gapMode === 'padding' ? 'paddingLeft' : 'marginLeft'];
    var top = cs[gapMode === 'padding' ? 'paddingTop' : 'marginTop'];
    var right = cs[gapMode === 'padding' ? 'paddingRight' : 'marginRight'];
    return [
        parse(left),
        parse(top),
        parse(right)
    ];
};
var getGapWidth = function(gapMode) {
    if (gapMode === void 0) gapMode = 'margin';
    if (typeof window === 'undefined') return zeroGap;
    var offsets = getOffset(gapMode);
    var documentWidth = document.documentElement.clientWidth;
    var windowWidth = window.innerWidth;
    return {
        left: offsets[0],
        top: offsets[1],
        right: offsets[2],
        gap: Math.max(0, windowWidth - documentWidth + offsets[2] - offsets[0])
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2XG5L":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "nonPassive", ()=>nonPassive);
var passiveSupported = false;
if (typeof window !== 'undefined') try {
    var options = Object.defineProperty({}, 'passive', {
        get: function() {
            passiveSupported = true;
            return true;
        }
    });
    // @ts-ignore
    window.addEventListener('test', options, options);
    // @ts-ignore
    window.removeEventListener('test', options, options);
} catch (err) {
    passiveSupported = false;
}
var nonPassive = passiveSupported ? {
    passive: false
} : false;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fsxF0":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "locationCouldBeScrolled", ()=>locationCouldBeScrolled);
parcelHelpers.export(exports, "handleScroll", ()=>handleScroll);
var alwaysContainsScroll = function(node) {
    // textarea will always _contain_ scroll inside self. It only can be hidden
    return node.tagName === 'TEXTAREA';
};
var elementCanBeScrolled = function(node, overflow) {
    if (!(node instanceof Element)) return false;
    var styles = window.getComputedStyle(node);
    return(// not-not-scrollable
    styles[overflow] !== 'hidden' && // contains scroll inside self
    !(styles.overflowY === styles.overflowX && !alwaysContainsScroll(node) && styles[overflow] === 'visible'));
};
var elementCouldBeVScrolled = function(node) {
    return elementCanBeScrolled(node, 'overflowY');
};
var elementCouldBeHScrolled = function(node) {
    return elementCanBeScrolled(node, 'overflowX');
};
var locationCouldBeScrolled = function(axis, node) {
    var ownerDocument = node.ownerDocument;
    var current = node;
    do {
        // Skip over shadow root
        if (typeof ShadowRoot !== 'undefined' && current instanceof ShadowRoot) current = current.host;
        var isScrollable = elementCouldBeScrolled(axis, current);
        if (isScrollable) {
            var _a = getScrollVariables(axis, current), scrollHeight = _a[1], clientHeight = _a[2];
            if (scrollHeight > clientHeight) return true;
        }
        current = current.parentNode;
    }while (current && current !== ownerDocument.body);
    return false;
};
var getVScrollVariables = function(_a) {
    var scrollTop = _a.scrollTop, scrollHeight = _a.scrollHeight, clientHeight = _a.clientHeight;
    return [
        scrollTop,
        scrollHeight,
        clientHeight
    ];
};
var getHScrollVariables = function(_a) {
    var scrollLeft = _a.scrollLeft, scrollWidth = _a.scrollWidth, clientWidth = _a.clientWidth;
    return [
        scrollLeft,
        scrollWidth,
        clientWidth
    ];
};
var elementCouldBeScrolled = function(axis, node) {
    return axis === 'v' ? elementCouldBeVScrolled(node) : elementCouldBeHScrolled(node);
};
var getScrollVariables = function(axis, node) {
    return axis === 'v' ? getVScrollVariables(node) : getHScrollVariables(node);
};
var getDirectionFactor = function(axis, direction) {
    /**
     * If the element's direction is rtl (right-to-left), then scrollLeft is 0 when the scrollbar is at its rightmost position,
     * and then increasingly negative as you scroll towards the end of the content.
     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollLeft
     */ return axis === 'h' && direction === 'rtl' ? -1 : 1;
};
var handleScroll = function(axis, endTarget, event, sourceDelta, noOverscroll) {
    var directionFactor = getDirectionFactor(axis, window.getComputedStyle(endTarget).direction);
    var delta = directionFactor * sourceDelta;
    // find scrollable target
    var target = event.target;
    var targetInLock = endTarget.contains(target);
    var shouldCancelScroll = false;
    var isDeltaPositive = delta > 0;
    var availableScroll = 0;
    var availableScrollTop = 0;
    do {
        if (!target) break;
        var _a = getScrollVariables(axis, target), position = _a[0], scroll_1 = _a[1], capacity = _a[2];
        var elementScroll = scroll_1 - capacity - directionFactor * position;
        if (position || elementScroll) {
            if (elementCouldBeScrolled(axis, target)) {
                availableScroll += elementScroll;
                availableScrollTop += position;
            }
        }
        var parent_1 = target.parentNode;
        // we will "bubble" from ShadowDom in case we are, or just to the parent in normal case
        // this is the same logic used in focus-lock
        target = parent_1 && parent_1.nodeType === Node.DOCUMENT_FRAGMENT_NODE ? parent_1.host : parent_1;
    }while (// portaled content
    !targetInLock && target !== document.body || // self content
    targetInLock && (endTarget.contains(target) || endTarget === target));
    // handle epsilon around 0 (non standard zoom levels)
    if (isDeltaPositive && (noOverscroll && Math.abs(availableScroll) < 1 || !noOverscroll && delta > availableScroll)) shouldCancelScroll = true;
    else if (!isDeltaPositive && (noOverscroll && Math.abs(availableScrollTop) < 1 || !noOverscroll && -delta > availableScrollTop)) shouldCancelScroll = true;
    return shouldCancelScroll;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"d4DfU":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$c939 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$c939.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$c939.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Card", ()=>Card);
parcelHelpers.export(exports, "CardHeader", ()=>CardHeader);
parcelHelpers.export(exports, "CardFooter", ()=>CardFooter);
parcelHelpers.export(exports, "CardTitle", ()=>CardTitle);
parcelHelpers.export(exports, "CardAction", ()=>CardAction);
parcelHelpers.export(exports, "CardDescription", ()=>CardDescription);
parcelHelpers.export(exports, "CardContent", ()=>CardContent);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _utils = require("./utils");
function Card({ className, ...props }) {
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        "data-slot": "card",
        className: (0, _utils.cn)("bg-card text-card-foreground flex flex-col gap-6 rounded-xl border", className),
        ...props
    }, void 0, false, {
        fileName: "src/components/ui/card.tsx",
        lineNumber: 7,
        columnNumber: 5
    }, this);
}
_c = Card;
function CardHeader({ className, ...props }) {
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        "data-slot": "card-header",
        className: (0, _utils.cn)("@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 pt-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6", className),
        ...props
    }, void 0, false, {
        fileName: "src/components/ui/card.tsx",
        lineNumber: 20,
        columnNumber: 5
    }, this);
}
_c1 = CardHeader;
function CardTitle({ className, ...props }) {
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("h4", {
        "data-slot": "card-title",
        className: (0, _utils.cn)("leading-none", className),
        ...props
    }, void 0, false, {
        fileName: "src/components/ui/card.tsx",
        lineNumber: 33,
        columnNumber: 5
    }, this);
}
_c2 = CardTitle;
function CardDescription({ className, ...props }) {
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
        "data-slot": "card-description",
        className: (0, _utils.cn)("text-muted-foreground", className),
        ...props
    }, void 0, false, {
        fileName: "src/components/ui/card.tsx",
        lineNumber: 43,
        columnNumber: 5
    }, this);
}
_c3 = CardDescription;
function CardAction({ className, ...props }) {
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        "data-slot": "card-action",
        className: (0, _utils.cn)("col-start-2 row-span-2 row-start-1 self-start justify-self-end", className),
        ...props
    }, void 0, false, {
        fileName: "src/components/ui/card.tsx",
        lineNumber: 53,
        columnNumber: 5
    }, this);
}
_c4 = CardAction;
function CardContent({ className, ...props }) {
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        "data-slot": "card-content",
        className: (0, _utils.cn)("px-6 [&:last-child]:pb-6", className),
        ...props
    }, void 0, false, {
        fileName: "src/components/ui/card.tsx",
        lineNumber: 66,
        columnNumber: 5
    }, this);
}
_c5 = CardContent;
function CardFooter({ className, ...props }) {
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        "data-slot": "card-footer",
        className: (0, _utils.cn)("flex items-center px-6 pb-6 [.border-t]:pt-6", className),
        ...props
    }, void 0, false, {
        fileName: "src/components/ui/card.tsx",
        lineNumber: 76,
        columnNumber: 5
    }, this);
}
_c6 = CardFooter;
var _c, _c1, _c2, _c3, _c4, _c5, _c6;
$RefreshReg$(_c, "Card");
$RefreshReg$(_c1, "CardHeader");
$RefreshReg$(_c2, "CardTitle");
$RefreshReg$(_c3, "CardDescription");
$RefreshReg$(_c4, "CardAction");
$RefreshReg$(_c5, "CardContent");
$RefreshReg$(_c6, "CardFooter");

  $parcel$ReactRefreshHelpers$c939.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","./utils":"3OSqM","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"kK7Kb":[function(require,module,exports,__globalThis) {
'use client';
function __insertCSS(code) {
    if (!code || typeof document == 'undefined') return;
    let head = document.head || document.getElementsByTagName('head')[0];
    let style = document.createElement('style');
    style.type = 'text/css';
    head.appendChild(style);
    style.styleSheet ? style.styleSheet.cssText = code : style.appendChild(document.createTextNode(code));
}
Object.defineProperty(exports, '__esModule', {
    value: true
});
var React = require("3f174e72235a2879");
var ReactDOM = require("8b51ad213197056a");
function _interopDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
var React__default = /*#__PURE__*/ _interopDefault(React);
var ReactDOM__default = /*#__PURE__*/ _interopDefault(ReactDOM);
const getAsset = (type)=>{
    switch(type){
        case 'success':
            return SuccessIcon;
        case 'info':
            return InfoIcon;
        case 'warning':
            return WarningIcon;
        case 'error':
            return ErrorIcon;
        default:
            return null;
    }
};
const bars = Array(12).fill(0);
const Loader = ({ visible, className })=>{
    return /*#__PURE__*/ React__default.default.createElement("div", {
        className: [
            'sonner-loading-wrapper',
            className
        ].filter(Boolean).join(' '),
        "data-visible": visible
    }, /*#__PURE__*/ React__default.default.createElement("div", {
        className: "sonner-spinner"
    }, bars.map((_, i)=>/*#__PURE__*/ React__default.default.createElement("div", {
            className: "sonner-loading-bar",
            key: `spinner-bar-${i}`
        }))));
};
const SuccessIcon = /*#__PURE__*/ React__default.default.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 20 20",
    fill: "currentColor",
    height: "20",
    width: "20"
}, /*#__PURE__*/ React__default.default.createElement("path", {
    fillRule: "evenodd",
    d: "M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z",
    clipRule: "evenodd"
}));
const WarningIcon = /*#__PURE__*/ React__default.default.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    fill: "currentColor",
    height: "20",
    width: "20"
}, /*#__PURE__*/ React__default.default.createElement("path", {
    fillRule: "evenodd",
    d: "M9.401 3.003c1.155-2 4.043-2 5.197 0l7.355 12.748c1.154 2-.29 4.5-2.599 4.5H4.645c-2.309 0-3.752-2.5-2.598-4.5L9.4 3.003zM12 8.25a.75.75 0 01.75.75v3.75a.75.75 0 01-1.5 0V9a.75.75 0 01.75-.75zm0 8.25a.75.75 0 100-1.5.75.75 0 000 1.5z",
    clipRule: "evenodd"
}));
const InfoIcon = /*#__PURE__*/ React__default.default.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 20 20",
    fill: "currentColor",
    height: "20",
    width: "20"
}, /*#__PURE__*/ React__default.default.createElement("path", {
    fillRule: "evenodd",
    d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a.75.75 0 000 1.5h.253a.25.25 0 01.244.304l-.459 2.066A1.75 1.75 0 0010.747 15H11a.75.75 0 000-1.5h-.253a.25.25 0 01-.244-.304l.459-2.066A1.75 1.75 0 009.253 9H9z",
    clipRule: "evenodd"
}));
const ErrorIcon = /*#__PURE__*/ React__default.default.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 20 20",
    fill: "currentColor",
    height: "20",
    width: "20"
}, /*#__PURE__*/ React__default.default.createElement("path", {
    fillRule: "evenodd",
    d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-5a.75.75 0 01.75.75v4.5a.75.75 0 01-1.5 0v-4.5A.75.75 0 0110 5zm0 10a1 1 0 100-2 1 1 0 000 2z",
    clipRule: "evenodd"
}));
const CloseIcon = /*#__PURE__*/ React__default.default.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "12",
    height: "12",
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: "currentColor",
    strokeWidth: "1.5",
    strokeLinecap: "round",
    strokeLinejoin: "round"
}, /*#__PURE__*/ React__default.default.createElement("line", {
    x1: "18",
    y1: "6",
    x2: "6",
    y2: "18"
}), /*#__PURE__*/ React__default.default.createElement("line", {
    x1: "6",
    y1: "6",
    x2: "18",
    y2: "18"
}));
const useIsDocumentHidden = ()=>{
    const [isDocumentHidden, setIsDocumentHidden] = React__default.default.useState(document.hidden);
    React__default.default.useEffect(()=>{
        const callback = ()=>{
            setIsDocumentHidden(document.hidden);
        };
        document.addEventListener('visibilitychange', callback);
        return ()=>window.removeEventListener('visibilitychange', callback);
    }, []);
    return isDocumentHidden;
};
let toastsCounter = 1;
class Observer {
    constructor(){
        // We use arrow functions to maintain the correct `this` reference
        this.subscribe = (subscriber)=>{
            this.subscribers.push(subscriber);
            return ()=>{
                const index = this.subscribers.indexOf(subscriber);
                this.subscribers.splice(index, 1);
            };
        };
        this.publish = (data)=>{
            this.subscribers.forEach((subscriber)=>subscriber(data));
        };
        this.addToast = (data)=>{
            this.publish(data);
            this.toasts = [
                ...this.toasts,
                data
            ];
        };
        this.create = (data)=>{
            var _data_id;
            const { message, ...rest } = data;
            const id = typeof (data == null ? void 0 : data.id) === 'number' || ((_data_id = data.id) == null ? void 0 : _data_id.length) > 0 ? data.id : toastsCounter++;
            const alreadyExists = this.toasts.find((toast)=>{
                return toast.id === id;
            });
            const dismissible = data.dismissible === undefined ? true : data.dismissible;
            if (this.dismissedToasts.has(id)) this.dismissedToasts.delete(id);
            if (alreadyExists) this.toasts = this.toasts.map((toast)=>{
                if (toast.id === id) {
                    this.publish({
                        ...toast,
                        ...data,
                        id,
                        title: message
                    });
                    return {
                        ...toast,
                        ...data,
                        id,
                        dismissible,
                        title: message
                    };
                }
                return toast;
            });
            else this.addToast({
                title: message,
                ...rest,
                dismissible,
                id
            });
            return id;
        };
        this.dismiss = (id)=>{
            if (id) {
                this.dismissedToasts.add(id);
                requestAnimationFrame(()=>this.subscribers.forEach((subscriber)=>subscriber({
                            id,
                            dismiss: true
                        })));
            } else this.toasts.forEach((toast)=>{
                this.subscribers.forEach((subscriber)=>subscriber({
                        id: toast.id,
                        dismiss: true
                    }));
            });
            return id;
        };
        this.message = (message, data)=>{
            return this.create({
                ...data,
                message
            });
        };
        this.error = (message, data)=>{
            return this.create({
                ...data,
                message,
                type: 'error'
            });
        };
        this.success = (message, data)=>{
            return this.create({
                ...data,
                type: 'success',
                message
            });
        };
        this.info = (message, data)=>{
            return this.create({
                ...data,
                type: 'info',
                message
            });
        };
        this.warning = (message, data)=>{
            return this.create({
                ...data,
                type: 'warning',
                message
            });
        };
        this.loading = (message, data)=>{
            return this.create({
                ...data,
                type: 'loading',
                message
            });
        };
        this.promise = (promise, data)=>{
            if (!data) // Nothing to show
            return;
            let id = undefined;
            if (data.loading !== undefined) id = this.create({
                ...data,
                promise,
                type: 'loading',
                message: data.loading,
                description: typeof data.description !== 'function' ? data.description : undefined
            });
            const p = Promise.resolve(promise instanceof Function ? promise() : promise);
            let shouldDismiss = id !== undefined;
            let result;
            const originalPromise = p.then(async (response)=>{
                result = [
                    'resolve',
                    response
                ];
                const isReactElementResponse = React__default.default.isValidElement(response);
                if (isReactElementResponse) {
                    shouldDismiss = false;
                    this.create({
                        id,
                        type: 'default',
                        message: response
                    });
                } else if (isHttpResponse(response) && !response.ok) {
                    shouldDismiss = false;
                    const promiseData = typeof data.error === 'function' ? await data.error(`HTTP error! status: ${response.status}`) : data.error;
                    const description = typeof data.description === 'function' ? await data.description(`HTTP error! status: ${response.status}`) : data.description;
                    const isExtendedResult = typeof promiseData === 'object' && !React__default.default.isValidElement(promiseData);
                    const toastSettings = isExtendedResult ? promiseData : {
                        message: promiseData
                    };
                    this.create({
                        id,
                        type: 'error',
                        description,
                        ...toastSettings
                    });
                } else if (response instanceof Error) {
                    shouldDismiss = false;
                    const promiseData = typeof data.error === 'function' ? await data.error(response) : data.error;
                    const description = typeof data.description === 'function' ? await data.description(response) : data.description;
                    const isExtendedResult = typeof promiseData === 'object' && !React__default.default.isValidElement(promiseData);
                    const toastSettings = isExtendedResult ? promiseData : {
                        message: promiseData
                    };
                    this.create({
                        id,
                        type: 'error',
                        description,
                        ...toastSettings
                    });
                } else if (data.success !== undefined) {
                    shouldDismiss = false;
                    const promiseData = typeof data.success === 'function' ? await data.success(response) : data.success;
                    const description = typeof data.description === 'function' ? await data.description(response) : data.description;
                    const isExtendedResult = typeof promiseData === 'object' && !React__default.default.isValidElement(promiseData);
                    const toastSettings = isExtendedResult ? promiseData : {
                        message: promiseData
                    };
                    this.create({
                        id,
                        type: 'success',
                        description,
                        ...toastSettings
                    });
                }
            }).catch(async (error)=>{
                result = [
                    'reject',
                    error
                ];
                if (data.error !== undefined) {
                    shouldDismiss = false;
                    const promiseData = typeof data.error === 'function' ? await data.error(error) : data.error;
                    const description = typeof data.description === 'function' ? await data.description(error) : data.description;
                    const isExtendedResult = typeof promiseData === 'object' && !React__default.default.isValidElement(promiseData);
                    const toastSettings = isExtendedResult ? promiseData : {
                        message: promiseData
                    };
                    this.create({
                        id,
                        type: 'error',
                        description,
                        ...toastSettings
                    });
                }
            }).finally(()=>{
                if (shouldDismiss) {
                    // Toast is still in load state (and will be indefinitely — dismiss it)
                    this.dismiss(id);
                    id = undefined;
                }
                data.finally == null || data.finally.call(data);
            });
            const unwrap = ()=>new Promise((resolve, reject)=>originalPromise.then(()=>result[0] === 'reject' ? reject(result[1]) : resolve(result[1])).catch(reject));
            if (typeof id !== 'string' && typeof id !== 'number') // cannot Object.assign on undefined
            return {
                unwrap
            };
            else return Object.assign(id, {
                unwrap
            });
        };
        this.custom = (jsx, data)=>{
            const id = (data == null ? void 0 : data.id) || toastsCounter++;
            this.create({
                jsx: jsx(id),
                id,
                ...data
            });
            return id;
        };
        this.getActiveToasts = ()=>{
            return this.toasts.filter((toast)=>!this.dismissedToasts.has(toast.id));
        };
        this.subscribers = [];
        this.toasts = [];
        this.dismissedToasts = new Set();
    }
}
const ToastState = new Observer();
// bind this to the toast function
const toastFunction = (message, data)=>{
    const id = (data == null ? void 0 : data.id) || toastsCounter++;
    ToastState.addToast({
        title: message,
        ...data,
        id
    });
    return id;
};
const isHttpResponse = (data)=>{
    return data && typeof data === 'object' && 'ok' in data && typeof data.ok === 'boolean' && 'status' in data && typeof data.status === 'number';
};
const basicToast = toastFunction;
const getHistory = ()=>ToastState.toasts;
const getToasts = ()=>ToastState.getActiveToasts();
// We use `Object.assign` to maintain the correct types as we would lose them otherwise
const toast = Object.assign(basicToast, {
    success: ToastState.success,
    info: ToastState.info,
    warning: ToastState.warning,
    error: ToastState.error,
    custom: ToastState.custom,
    message: ToastState.message,
    promise: ToastState.promise,
    dismiss: ToastState.dismiss,
    loading: ToastState.loading
}, {
    getHistory,
    getToasts
});
__insertCSS("[data-sonner-toaster][dir=ltr],html[dir=ltr]{--toast-icon-margin-start:-3px;--toast-icon-margin-end:4px;--toast-svg-margin-start:-1px;--toast-svg-margin-end:0px;--toast-button-margin-start:auto;--toast-button-margin-end:0;--toast-close-button-start:0;--toast-close-button-end:unset;--toast-close-button-transform:translate(-35%, -35%)}[data-sonner-toaster][dir=rtl],html[dir=rtl]{--toast-icon-margin-start:4px;--toast-icon-margin-end:-3px;--toast-svg-margin-start:0px;--toast-svg-margin-end:-1px;--toast-button-margin-start:0;--toast-button-margin-end:auto;--toast-close-button-start:unset;--toast-close-button-end:0;--toast-close-button-transform:translate(35%, -35%)}[data-sonner-toaster]{position:fixed;width:var(--width);font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;--gray1:hsl(0, 0%, 99%);--gray2:hsl(0, 0%, 97.3%);--gray3:hsl(0, 0%, 95.1%);--gray4:hsl(0, 0%, 93%);--gray5:hsl(0, 0%, 90.9%);--gray6:hsl(0, 0%, 88.7%);--gray7:hsl(0, 0%, 85.8%);--gray8:hsl(0, 0%, 78%);--gray9:hsl(0, 0%, 56.1%);--gray10:hsl(0, 0%, 52.3%);--gray11:hsl(0, 0%, 43.5%);--gray12:hsl(0, 0%, 9%);--border-radius:8px;box-sizing:border-box;padding:0;margin:0;list-style:none;outline:0;z-index:999999999;transition:transform .4s ease}@media (hover:none) and (pointer:coarse){[data-sonner-toaster][data-lifted=true]{transform:none}}[data-sonner-toaster][data-x-position=right]{right:var(--offset-right)}[data-sonner-toaster][data-x-position=left]{left:var(--offset-left)}[data-sonner-toaster][data-x-position=center]{left:50%;transform:translateX(-50%)}[data-sonner-toaster][data-y-position=top]{top:var(--offset-top)}[data-sonner-toaster][data-y-position=bottom]{bottom:var(--offset-bottom)}[data-sonner-toast]{--y:translateY(100%);--lift-amount:calc(var(--lift) * var(--gap));z-index:var(--z-index);position:absolute;opacity:0;transform:var(--y);touch-action:none;transition:transform .4s,opacity .4s,height .4s,box-shadow .2s;box-sizing:border-box;outline:0;overflow-wrap:anywhere}[data-sonner-toast][data-styled=true]{padding:16px;background:var(--normal-bg);border:1px solid var(--normal-border);color:var(--normal-text);border-radius:var(--border-radius);box-shadow:0 4px 12px rgba(0,0,0,.1);width:var(--width);font-size:13px;display:flex;align-items:center;gap:6px}[data-sonner-toast]:focus-visible{box-shadow:0 4px 12px rgba(0,0,0,.1),0 0 0 2px rgba(0,0,0,.2)}[data-sonner-toast][data-y-position=top]{top:0;--y:translateY(-100%);--lift:1;--lift-amount:calc(1 * var(--gap))}[data-sonner-toast][data-y-position=bottom]{bottom:0;--y:translateY(100%);--lift:-1;--lift-amount:calc(var(--lift) * var(--gap))}[data-sonner-toast][data-styled=true] [data-description]{font-weight:400;line-height:1.4;color:#3f3f3f}[data-rich-colors=true][data-sonner-toast][data-styled=true] [data-description]{color:inherit}[data-sonner-toaster][data-sonner-theme=dark] [data-description]{color:#e8e8e8}[data-sonner-toast][data-styled=true] [data-title]{font-weight:500;line-height:1.5;color:inherit}[data-sonner-toast][data-styled=true] [data-icon]{display:flex;height:16px;width:16px;position:relative;justify-content:flex-start;align-items:center;flex-shrink:0;margin-left:var(--toast-icon-margin-start);margin-right:var(--toast-icon-margin-end)}[data-sonner-toast][data-promise=true] [data-icon]>svg{opacity:0;transform:scale(.8);transform-origin:center;animation:sonner-fade-in .3s ease forwards}[data-sonner-toast][data-styled=true] [data-icon]>*{flex-shrink:0}[data-sonner-toast][data-styled=true] [data-icon] svg{margin-left:var(--toast-svg-margin-start);margin-right:var(--toast-svg-margin-end)}[data-sonner-toast][data-styled=true] [data-content]{display:flex;flex-direction:column;gap:2px}[data-sonner-toast][data-styled=true] [data-button]{border-radius:4px;padding-left:8px;padding-right:8px;height:24px;font-size:12px;color:var(--normal-bg);background:var(--normal-text);margin-left:var(--toast-button-margin-start);margin-right:var(--toast-button-margin-end);border:none;font-weight:500;cursor:pointer;outline:0;display:flex;align-items:center;flex-shrink:0;transition:opacity .4s,box-shadow .2s}[data-sonner-toast][data-styled=true] [data-button]:focus-visible{box-shadow:0 0 0 2px rgba(0,0,0,.4)}[data-sonner-toast][data-styled=true] [data-button]:first-of-type{margin-left:var(--toast-button-margin-start);margin-right:var(--toast-button-margin-end)}[data-sonner-toast][data-styled=true] [data-cancel]{color:var(--normal-text);background:rgba(0,0,0,.08)}[data-sonner-toaster][data-sonner-theme=dark] [data-sonner-toast][data-styled=true] [data-cancel]{background:rgba(255,255,255,.3)}[data-sonner-toast][data-styled=true] [data-close-button]{position:absolute;left:var(--toast-close-button-start);right:var(--toast-close-button-end);top:0;height:20px;width:20px;display:flex;justify-content:center;align-items:center;padding:0;color:var(--gray12);background:var(--normal-bg);border:1px solid var(--gray4);transform:var(--toast-close-button-transform);border-radius:50%;cursor:pointer;z-index:1;transition:opacity .1s,background .2s,border-color .2s}[data-sonner-toast][data-styled=true] [data-close-button]:focus-visible{box-shadow:0 4px 12px rgba(0,0,0,.1),0 0 0 2px rgba(0,0,0,.2)}[data-sonner-toast][data-styled=true] [data-disabled=true]{cursor:not-allowed}[data-sonner-toast][data-styled=true]:hover [data-close-button]:hover{background:var(--gray2);border-color:var(--gray5)}[data-sonner-toast][data-swiping=true]::before{content:'';position:absolute;left:-100%;right:-100%;height:100%;z-index:-1}[data-sonner-toast][data-y-position=top][data-swiping=true]::before{bottom:50%;transform:scaleY(3) translateY(50%)}[data-sonner-toast][data-y-position=bottom][data-swiping=true]::before{top:50%;transform:scaleY(3) translateY(-50%)}[data-sonner-toast][data-swiping=false][data-removed=true]::before{content:'';position:absolute;inset:0;transform:scaleY(2)}[data-sonner-toast][data-expanded=true]::after{content:'';position:absolute;left:0;height:calc(var(--gap) + 1px);bottom:100%;width:100%}[data-sonner-toast][data-mounted=true]{--y:translateY(0);opacity:1}[data-sonner-toast][data-expanded=false][data-front=false]{--scale:var(--toasts-before) * 0.05 + 1;--y:translateY(calc(var(--lift-amount) * var(--toasts-before))) scale(calc(-1 * var(--scale)));height:var(--front-toast-height)}[data-sonner-toast]>*{transition:opacity .4s}[data-sonner-toast][data-x-position=right]{right:0}[data-sonner-toast][data-x-position=left]{left:0}[data-sonner-toast][data-expanded=false][data-front=false][data-styled=true]>*{opacity:0}[data-sonner-toast][data-visible=false]{opacity:0;pointer-events:none}[data-sonner-toast][data-mounted=true][data-expanded=true]{--y:translateY(calc(var(--lift) * var(--offset)));height:var(--initial-height)}[data-sonner-toast][data-removed=true][data-front=true][data-swipe-out=false]{--y:translateY(calc(var(--lift) * -100%));opacity:0}[data-sonner-toast][data-removed=true][data-front=false][data-swipe-out=false][data-expanded=true]{--y:translateY(calc(var(--lift) * var(--offset) + var(--lift) * -100%));opacity:0}[data-sonner-toast][data-removed=true][data-front=false][data-swipe-out=false][data-expanded=false]{--y:translateY(40%);opacity:0;transition:transform .5s,opacity .2s}[data-sonner-toast][data-removed=true][data-front=false]::before{height:calc(var(--initial-height) + 20%)}[data-sonner-toast][data-swiping=true]{transform:var(--y) translateY(var(--swipe-amount-y,0)) translateX(var(--swipe-amount-x,0));transition:none}[data-sonner-toast][data-swiped=true]{user-select:none}[data-sonner-toast][data-swipe-out=true][data-y-position=bottom],[data-sonner-toast][data-swipe-out=true][data-y-position=top]{animation-duration:.2s;animation-timing-function:ease-out;animation-fill-mode:forwards}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=left]{animation-name:swipe-out-left}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=right]{animation-name:swipe-out-right}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=up]{animation-name:swipe-out-up}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=down]{animation-name:swipe-out-down}@keyframes swipe-out-left{from{transform:var(--y) translateX(var(--swipe-amount-x));opacity:1}to{transform:var(--y) translateX(calc(var(--swipe-amount-x) - 100%));opacity:0}}@keyframes swipe-out-right{from{transform:var(--y) translateX(var(--swipe-amount-x));opacity:1}to{transform:var(--y) translateX(calc(var(--swipe-amount-x) + 100%));opacity:0}}@keyframes swipe-out-up{from{transform:var(--y) translateY(var(--swipe-amount-y));opacity:1}to{transform:var(--y) translateY(calc(var(--swipe-amount-y) - 100%));opacity:0}}@keyframes swipe-out-down{from{transform:var(--y) translateY(var(--swipe-amount-y));opacity:1}to{transform:var(--y) translateY(calc(var(--swipe-amount-y) + 100%));opacity:0}}@media (max-width:600px){[data-sonner-toaster]{position:fixed;right:var(--mobile-offset-right);left:var(--mobile-offset-left);width:100%}[data-sonner-toaster][dir=rtl]{left:calc(var(--mobile-offset-left) * -1)}[data-sonner-toaster] [data-sonner-toast]{left:0;right:0;width:calc(100% - var(--mobile-offset-left) * 2)}[data-sonner-toaster][data-x-position=left]{left:var(--mobile-offset-left)}[data-sonner-toaster][data-y-position=bottom]{bottom:var(--mobile-offset-bottom)}[data-sonner-toaster][data-y-position=top]{top:var(--mobile-offset-top)}[data-sonner-toaster][data-x-position=center]{left:var(--mobile-offset-left);right:var(--mobile-offset-right);transform:none}}[data-sonner-toaster][data-sonner-theme=light]{--normal-bg:#fff;--normal-border:var(--gray4);--normal-text:var(--gray12);--success-bg:hsl(143, 85%, 96%);--success-border:hsl(145, 92%, 87%);--success-text:hsl(140, 100%, 27%);--info-bg:hsl(208, 100%, 97%);--info-border:hsl(221, 91%, 93%);--info-text:hsl(210, 92%, 45%);--warning-bg:hsl(49, 100%, 97%);--warning-border:hsl(49, 91%, 84%);--warning-text:hsl(31, 92%, 45%);--error-bg:hsl(359, 100%, 97%);--error-border:hsl(359, 100%, 94%);--error-text:hsl(360, 100%, 45%)}[data-sonner-toaster][data-sonner-theme=light] [data-sonner-toast][data-invert=true]{--normal-bg:#000;--normal-border:hsl(0, 0%, 20%);--normal-text:var(--gray1)}[data-sonner-toaster][data-sonner-theme=dark] [data-sonner-toast][data-invert=true]{--normal-bg:#fff;--normal-border:var(--gray3);--normal-text:var(--gray12)}[data-sonner-toaster][data-sonner-theme=dark]{--normal-bg:#000;--normal-bg-hover:hsl(0, 0%, 12%);--normal-border:hsl(0, 0%, 20%);--normal-border-hover:hsl(0, 0%, 25%);--normal-text:var(--gray1);--success-bg:hsl(150, 100%, 6%);--success-border:hsl(147, 100%, 12%);--success-text:hsl(150, 86%, 65%);--info-bg:hsl(215, 100%, 6%);--info-border:hsl(223, 43%, 17%);--info-text:hsl(216, 87%, 65%);--warning-bg:hsl(64, 100%, 6%);--warning-border:hsl(60, 100%, 9%);--warning-text:hsl(46, 87%, 65%);--error-bg:hsl(358, 76%, 10%);--error-border:hsl(357, 89%, 16%);--error-text:hsl(358, 100%, 81%)}[data-sonner-toaster][data-sonner-theme=dark] [data-sonner-toast] [data-close-button]{background:var(--normal-bg);border-color:var(--normal-border);color:var(--normal-text)}[data-sonner-toaster][data-sonner-theme=dark] [data-sonner-toast] [data-close-button]:hover{background:var(--normal-bg-hover);border-color:var(--normal-border-hover)}[data-rich-colors=true][data-sonner-toast][data-type=success]{background:var(--success-bg);border-color:var(--success-border);color:var(--success-text)}[data-rich-colors=true][data-sonner-toast][data-type=success] [data-close-button]{background:var(--success-bg);border-color:var(--success-border);color:var(--success-text)}[data-rich-colors=true][data-sonner-toast][data-type=info]{background:var(--info-bg);border-color:var(--info-border);color:var(--info-text)}[data-rich-colors=true][data-sonner-toast][data-type=info] [data-close-button]{background:var(--info-bg);border-color:var(--info-border);color:var(--info-text)}[data-rich-colors=true][data-sonner-toast][data-type=warning]{background:var(--warning-bg);border-color:var(--warning-border);color:var(--warning-text)}[data-rich-colors=true][data-sonner-toast][data-type=warning] [data-close-button]{background:var(--warning-bg);border-color:var(--warning-border);color:var(--warning-text)}[data-rich-colors=true][data-sonner-toast][data-type=error]{background:var(--error-bg);border-color:var(--error-border);color:var(--error-text)}[data-rich-colors=true][data-sonner-toast][data-type=error] [data-close-button]{background:var(--error-bg);border-color:var(--error-border);color:var(--error-text)}.sonner-loading-wrapper{--size:16px;height:var(--size);width:var(--size);position:absolute;inset:0;z-index:10}.sonner-loading-wrapper[data-visible=false]{transform-origin:center;animation:sonner-fade-out .2s ease forwards}.sonner-spinner{position:relative;top:50%;left:50%;height:var(--size);width:var(--size)}.sonner-loading-bar{animation:sonner-spin 1.2s linear infinite;background:var(--gray11);border-radius:6px;height:8%;left:-10%;position:absolute;top:-3.9%;width:24%}.sonner-loading-bar:first-child{animation-delay:-1.2s;transform:rotate(.0001deg) translate(146%)}.sonner-loading-bar:nth-child(2){animation-delay:-1.1s;transform:rotate(30deg) translate(146%)}.sonner-loading-bar:nth-child(3){animation-delay:-1s;transform:rotate(60deg) translate(146%)}.sonner-loading-bar:nth-child(4){animation-delay:-.9s;transform:rotate(90deg) translate(146%)}.sonner-loading-bar:nth-child(5){animation-delay:-.8s;transform:rotate(120deg) translate(146%)}.sonner-loading-bar:nth-child(6){animation-delay:-.7s;transform:rotate(150deg) translate(146%)}.sonner-loading-bar:nth-child(7){animation-delay:-.6s;transform:rotate(180deg) translate(146%)}.sonner-loading-bar:nth-child(8){animation-delay:-.5s;transform:rotate(210deg) translate(146%)}.sonner-loading-bar:nth-child(9){animation-delay:-.4s;transform:rotate(240deg) translate(146%)}.sonner-loading-bar:nth-child(10){animation-delay:-.3s;transform:rotate(270deg) translate(146%)}.sonner-loading-bar:nth-child(11){animation-delay:-.2s;transform:rotate(300deg) translate(146%)}.sonner-loading-bar:nth-child(12){animation-delay:-.1s;transform:rotate(330deg) translate(146%)}@keyframes sonner-fade-in{0%{opacity:0;transform:scale(.8)}100%{opacity:1;transform:scale(1)}}@keyframes sonner-fade-out{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(.8)}}@keyframes sonner-spin{0%{opacity:1}100%{opacity:.15}}@media (prefers-reduced-motion){.sonner-loading-bar,[data-sonner-toast],[data-sonner-toast]>*{transition:none!important;animation:none!important}}.sonner-loader{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);transform-origin:center;transition:opacity .2s,transform .2s}.sonner-loader[data-visible=false]{opacity:0;transform:scale(.8) translate(-50%,-50%)}");
function isAction(action) {
    return action.label !== undefined;
}
// Visible toasts amount
const VISIBLE_TOASTS_AMOUNT = 3;
// Viewport padding
const VIEWPORT_OFFSET = '24px';
// Mobile viewport padding
const MOBILE_VIEWPORT_OFFSET = '16px';
// Default lifetime of a toasts (in ms)
const TOAST_LIFETIME = 4000;
// Default toast width
const TOAST_WIDTH = 356;
// Default gap between toasts
const GAP = 14;
// Threshold to dismiss a toast
const SWIPE_THRESHOLD = 45;
// Equal to exit animation duration
const TIME_BEFORE_UNMOUNT = 200;
function cn(...classes) {
    return classes.filter(Boolean).join(' ');
}
function getDefaultSwipeDirections(position) {
    const [y, x] = position.split('-');
    const directions = [];
    if (y) directions.push(y);
    if (x) directions.push(x);
    return directions;
}
const Toast = (props)=>{
    var _toast_classNames, _toast_classNames1, _toast_classNames2, _toast_classNames3, _toast_classNames4, _toast_classNames5, _toast_classNames6, _toast_classNames7, _toast_classNames8;
    const { invert: ToasterInvert, toast, unstyled, interacting, setHeights, visibleToasts, heights, index, toasts, expanded, removeToast, defaultRichColors, closeButton: closeButtonFromToaster, style, cancelButtonStyle, actionButtonStyle, className = '', descriptionClassName = '', duration: durationFromToaster, position, gap, expandByDefault, classNames, icons, closeButtonAriaLabel = 'Close toast' } = props;
    const [swipeDirection, setSwipeDirection] = React__default.default.useState(null);
    const [swipeOutDirection, setSwipeOutDirection] = React__default.default.useState(null);
    const [mounted, setMounted] = React__default.default.useState(false);
    const [removed, setRemoved] = React__default.default.useState(false);
    const [swiping, setSwiping] = React__default.default.useState(false);
    const [swipeOut, setSwipeOut] = React__default.default.useState(false);
    const [isSwiped, setIsSwiped] = React__default.default.useState(false);
    const [offsetBeforeRemove, setOffsetBeforeRemove] = React__default.default.useState(0);
    const [initialHeight, setInitialHeight] = React__default.default.useState(0);
    const remainingTime = React__default.default.useRef(toast.duration || durationFromToaster || TOAST_LIFETIME);
    const dragStartTime = React__default.default.useRef(null);
    const toastRef = React__default.default.useRef(null);
    const isFront = index === 0;
    const isVisible = index + 1 <= visibleToasts;
    const toastType = toast.type;
    const dismissible = toast.dismissible !== false;
    const toastClassname = toast.className || '';
    const toastDescriptionClassname = toast.descriptionClassName || '';
    // Height index is used to calculate the offset as it gets updated before the toast array, which means we can calculate the new layout faster.
    const heightIndex = React__default.default.useMemo(()=>heights.findIndex((height)=>height.toastId === toast.id) || 0, [
        heights,
        toast.id
    ]);
    const closeButton = React__default.default.useMemo(()=>{
        var _toast_closeButton;
        return (_toast_closeButton = toast.closeButton) != null ? _toast_closeButton : closeButtonFromToaster;
    }, [
        toast.closeButton,
        closeButtonFromToaster
    ]);
    const duration = React__default.default.useMemo(()=>toast.duration || durationFromToaster || TOAST_LIFETIME, [
        toast.duration,
        durationFromToaster
    ]);
    const closeTimerStartTimeRef = React__default.default.useRef(0);
    const offset = React__default.default.useRef(0);
    const lastCloseTimerStartTimeRef = React__default.default.useRef(0);
    const pointerStartRef = React__default.default.useRef(null);
    const [y, x] = position.split('-');
    const toastsHeightBefore = React__default.default.useMemo(()=>{
        return heights.reduce((prev, curr, reducerIndex)=>{
            // Calculate offset up until current toast
            if (reducerIndex >= heightIndex) return prev;
            return prev + curr.height;
        }, 0);
    }, [
        heights,
        heightIndex
    ]);
    const isDocumentHidden = useIsDocumentHidden();
    const invert = toast.invert || ToasterInvert;
    const disabled = toastType === 'loading';
    offset.current = React__default.default.useMemo(()=>heightIndex * gap + toastsHeightBefore, [
        heightIndex,
        toastsHeightBefore
    ]);
    React__default.default.useEffect(()=>{
        remainingTime.current = duration;
    }, [
        duration
    ]);
    React__default.default.useEffect(()=>{
        // Trigger enter animation without using CSS animation
        setMounted(true);
    }, []);
    React__default.default.useEffect(()=>{
        const toastNode = toastRef.current;
        if (toastNode) {
            const height = toastNode.getBoundingClientRect().height;
            // Add toast height to heights array after the toast is mounted
            setInitialHeight(height);
            setHeights((h)=>[
                    {
                        toastId: toast.id,
                        height,
                        position: toast.position
                    },
                    ...h
                ]);
            return ()=>setHeights((h)=>h.filter((height)=>height.toastId !== toast.id));
        }
    }, [
        setHeights,
        toast.id
    ]);
    React__default.default.useLayoutEffect(()=>{
        // Keep height up to date with the content in case it updates
        if (!mounted) return;
        const toastNode = toastRef.current;
        const originalHeight = toastNode.style.height;
        toastNode.style.height = 'auto';
        const newHeight = toastNode.getBoundingClientRect().height;
        toastNode.style.height = originalHeight;
        setInitialHeight(newHeight);
        setHeights((heights)=>{
            const alreadyExists = heights.find((height)=>height.toastId === toast.id);
            if (!alreadyExists) return [
                {
                    toastId: toast.id,
                    height: newHeight,
                    position: toast.position
                },
                ...heights
            ];
            else return heights.map((height)=>height.toastId === toast.id ? {
                    ...height,
                    height: newHeight
                } : height);
        });
    }, [
        mounted,
        toast.title,
        toast.description,
        setHeights,
        toast.id,
        toast.jsx,
        toast.action,
        toast.cancel
    ]);
    const deleteToast = React__default.default.useCallback(()=>{
        // Save the offset for the exit swipe animation
        setRemoved(true);
        setOffsetBeforeRemove(offset.current);
        setHeights((h)=>h.filter((height)=>height.toastId !== toast.id));
        setTimeout(()=>{
            removeToast(toast);
        }, TIME_BEFORE_UNMOUNT);
    }, [
        toast,
        removeToast,
        setHeights,
        offset
    ]);
    React__default.default.useEffect(()=>{
        if (toast.promise && toastType === 'loading' || toast.duration === Infinity || toast.type === 'loading') return;
        let timeoutId;
        // Pause the timer on each hover
        const pauseTimer = ()=>{
            if (lastCloseTimerStartTimeRef.current < closeTimerStartTimeRef.current) {
                // Get the elapsed time since the timer started
                const elapsedTime = new Date().getTime() - closeTimerStartTimeRef.current;
                remainingTime.current = remainingTime.current - elapsedTime;
            }
            lastCloseTimerStartTimeRef.current = new Date().getTime();
        };
        const startTimer = ()=>{
            // setTimeout(, Infinity) behaves as if the delay is 0.
            // As a result, the toast would be closed immediately, giving the appearance that it was never rendered.
            // See: https://github.com/denysdovhan/wtfjs?tab=readme-ov-file#an-infinite-timeout
            if (remainingTime.current === Infinity) return;
            closeTimerStartTimeRef.current = new Date().getTime();
            // Let the toast know it has started
            timeoutId = setTimeout(()=>{
                toast.onAutoClose == null || toast.onAutoClose.call(toast, toast);
                deleteToast();
            }, remainingTime.current);
        };
        if (expanded || interacting || isDocumentHidden) pauseTimer();
        else startTimer();
        return ()=>clearTimeout(timeoutId);
    }, [
        expanded,
        interacting,
        toast,
        toastType,
        isDocumentHidden,
        deleteToast
    ]);
    React__default.default.useEffect(()=>{
        if (toast.delete) {
            deleteToast();
            toast.onDismiss == null || toast.onDismiss.call(toast, toast);
        }
    }, [
        deleteToast,
        toast.delete
    ]);
    function getLoadingIcon() {
        var _toast_classNames;
        if (icons == null ? void 0 : icons.loading) {
            var _toast_classNames1;
            return /*#__PURE__*/ React__default.default.createElement("div", {
                className: cn(classNames == null ? void 0 : classNames.loader, toast == null ? void 0 : (_toast_classNames1 = toast.classNames) == null ? void 0 : _toast_classNames1.loader, 'sonner-loader'),
                "data-visible": toastType === 'loading'
            }, icons.loading);
        }
        return /*#__PURE__*/ React__default.default.createElement(Loader, {
            className: cn(classNames == null ? void 0 : classNames.loader, toast == null ? void 0 : (_toast_classNames = toast.classNames) == null ? void 0 : _toast_classNames.loader),
            visible: toastType === 'loading'
        });
    }
    const icon = toast.icon || (icons == null ? void 0 : icons[toastType]) || getAsset(toastType);
    var _toast_richColors, _icons_close;
    return /*#__PURE__*/ React__default.default.createElement("li", {
        tabIndex: 0,
        ref: toastRef,
        className: cn(className, toastClassname, classNames == null ? void 0 : classNames.toast, toast == null ? void 0 : (_toast_classNames = toast.classNames) == null ? void 0 : _toast_classNames.toast, classNames == null ? void 0 : classNames.default, classNames == null ? void 0 : classNames[toastType], toast == null ? void 0 : (_toast_classNames1 = toast.classNames) == null ? void 0 : _toast_classNames1[toastType]),
        "data-sonner-toast": "",
        "data-rich-colors": (_toast_richColors = toast.richColors) != null ? _toast_richColors : defaultRichColors,
        "data-styled": !Boolean(toast.jsx || toast.unstyled || unstyled),
        "data-mounted": mounted,
        "data-promise": Boolean(toast.promise),
        "data-swiped": isSwiped,
        "data-removed": removed,
        "data-visible": isVisible,
        "data-y-position": y,
        "data-x-position": x,
        "data-index": index,
        "data-front": isFront,
        "data-swiping": swiping,
        "data-dismissible": dismissible,
        "data-type": toastType,
        "data-invert": invert,
        "data-swipe-out": swipeOut,
        "data-swipe-direction": swipeOutDirection,
        "data-expanded": Boolean(expanded || expandByDefault && mounted),
        "data-testid": toast.testId,
        style: {
            '--index': index,
            '--toasts-before': index,
            '--z-index': toasts.length - index,
            '--offset': `${removed ? offsetBeforeRemove : offset.current}px`,
            '--initial-height': expandByDefault ? 'auto' : `${initialHeight}px`,
            ...style,
            ...toast.style
        },
        onDragEnd: ()=>{
            setSwiping(false);
            setSwipeDirection(null);
            pointerStartRef.current = null;
        },
        onPointerDown: (event)=>{
            if (event.button === 2) return; // Return early on right click
            if (disabled || !dismissible) return;
            dragStartTime.current = new Date();
            setOffsetBeforeRemove(offset.current);
            // Ensure we maintain correct pointer capture even when going outside of the toast (e.g. when swiping)
            event.target.setPointerCapture(event.pointerId);
            if (event.target.tagName === 'BUTTON') return;
            setSwiping(true);
            pointerStartRef.current = {
                x: event.clientX,
                y: event.clientY
            };
        },
        onPointerUp: ()=>{
            var _toastRef_current, _toastRef_current1, _dragStartTime_current;
            if (swipeOut || !dismissible) return;
            pointerStartRef.current = null;
            const swipeAmountX = Number(((_toastRef_current = toastRef.current) == null ? void 0 : _toastRef_current.style.getPropertyValue('--swipe-amount-x').replace('px', '')) || 0);
            const swipeAmountY = Number(((_toastRef_current1 = toastRef.current) == null ? void 0 : _toastRef_current1.style.getPropertyValue('--swipe-amount-y').replace('px', '')) || 0);
            const timeTaken = new Date().getTime() - ((_dragStartTime_current = dragStartTime.current) == null ? void 0 : _dragStartTime_current.getTime());
            const swipeAmount = swipeDirection === 'x' ? swipeAmountX : swipeAmountY;
            const velocity = Math.abs(swipeAmount) / timeTaken;
            if (Math.abs(swipeAmount) >= SWIPE_THRESHOLD || velocity > 0.11) {
                setOffsetBeforeRemove(offset.current);
                toast.onDismiss == null || toast.onDismiss.call(toast, toast);
                if (swipeDirection === 'x') setSwipeOutDirection(swipeAmountX > 0 ? 'right' : 'left');
                else setSwipeOutDirection(swipeAmountY > 0 ? 'down' : 'up');
                deleteToast();
                setSwipeOut(true);
                return;
            } else {
                var _toastRef_current2, _toastRef_current3;
                (_toastRef_current2 = toastRef.current) == null || _toastRef_current2.style.setProperty('--swipe-amount-x', `0px`);
                (_toastRef_current3 = toastRef.current) == null || _toastRef_current3.style.setProperty('--swipe-amount-y', `0px`);
            }
            setIsSwiped(false);
            setSwiping(false);
            setSwipeDirection(null);
        },
        onPointerMove: (event)=>{
            var _window_getSelection, _toastRef_current, _toastRef_current1;
            if (!pointerStartRef.current || !dismissible) return;
            const isHighlighted = ((_window_getSelection = window.getSelection()) == null ? void 0 : _window_getSelection.toString().length) > 0;
            if (isHighlighted) return;
            const yDelta = event.clientY - pointerStartRef.current.y;
            const xDelta = event.clientX - pointerStartRef.current.x;
            var _props_swipeDirections;
            const swipeDirections = (_props_swipeDirections = props.swipeDirections) != null ? _props_swipeDirections : getDefaultSwipeDirections(position);
            // Determine swipe direction if not already locked
            if (!swipeDirection && (Math.abs(xDelta) > 1 || Math.abs(yDelta) > 1)) setSwipeDirection(Math.abs(xDelta) > Math.abs(yDelta) ? 'x' : 'y');
            let swipeAmount = {
                x: 0,
                y: 0
            };
            const getDampening = (delta)=>{
                const factor = Math.abs(delta) / 20;
                return 1 / (1.5 + factor);
            };
            // Only apply swipe in the locked direction
            if (swipeDirection === 'y') // Handle vertical swipes
            {
                if (swipeDirections.includes('top') || swipeDirections.includes('bottom')) {
                    if (swipeDirections.includes('top') && yDelta < 0 || swipeDirections.includes('bottom') && yDelta > 0) swipeAmount.y = yDelta;
                    else {
                        // Smoothly transition to dampened movement
                        const dampenedDelta = yDelta * getDampening(yDelta);
                        // Ensure we don't jump when transitioning to dampened movement
                        swipeAmount.y = Math.abs(dampenedDelta) < Math.abs(yDelta) ? dampenedDelta : yDelta;
                    }
                }
            } else if (swipeDirection === 'x') // Handle horizontal swipes
            {
                if (swipeDirections.includes('left') || swipeDirections.includes('right')) {
                    if (swipeDirections.includes('left') && xDelta < 0 || swipeDirections.includes('right') && xDelta > 0) swipeAmount.x = xDelta;
                    else {
                        // Smoothly transition to dampened movement
                        const dampenedDelta = xDelta * getDampening(xDelta);
                        // Ensure we don't jump when transitioning to dampened movement
                        swipeAmount.x = Math.abs(dampenedDelta) < Math.abs(xDelta) ? dampenedDelta : xDelta;
                    }
                }
            }
            if (Math.abs(swipeAmount.x) > 0 || Math.abs(swipeAmount.y) > 0) setIsSwiped(true);
            (_toastRef_current = toastRef.current) == null || _toastRef_current.style.setProperty('--swipe-amount-x', `${swipeAmount.x}px`);
            (_toastRef_current1 = toastRef.current) == null || _toastRef_current1.style.setProperty('--swipe-amount-y', `${swipeAmount.y}px`);
        }
    }, closeButton && !toast.jsx && toastType !== 'loading' ? /*#__PURE__*/ React__default.default.createElement("button", {
        "aria-label": closeButtonAriaLabel,
        "data-disabled": disabled,
        "data-close-button": true,
        onClick: disabled || !dismissible ? ()=>{} : ()=>{
            deleteToast();
            toast.onDismiss == null || toast.onDismiss.call(toast, toast);
        },
        className: cn(classNames == null ? void 0 : classNames.closeButton, toast == null ? void 0 : (_toast_classNames2 = toast.classNames) == null ? void 0 : _toast_classNames2.closeButton)
    }, (_icons_close = icons == null ? void 0 : icons.close) != null ? _icons_close : CloseIcon) : null, (toastType || toast.icon || toast.promise) && toast.icon !== null && ((icons == null ? void 0 : icons[toastType]) !== null || toast.icon) ? /*#__PURE__*/ React__default.default.createElement("div", {
        "data-icon": "",
        className: cn(classNames == null ? void 0 : classNames.icon, toast == null ? void 0 : (_toast_classNames3 = toast.classNames) == null ? void 0 : _toast_classNames3.icon)
    }, toast.promise || toast.type === 'loading' && !toast.icon ? toast.icon || getLoadingIcon() : null, toast.type !== 'loading' ? icon : null) : null, /*#__PURE__*/ React__default.default.createElement("div", {
        "data-content": "",
        className: cn(classNames == null ? void 0 : classNames.content, toast == null ? void 0 : (_toast_classNames4 = toast.classNames) == null ? void 0 : _toast_classNames4.content)
    }, /*#__PURE__*/ React__default.default.createElement("div", {
        "data-title": "",
        className: cn(classNames == null ? void 0 : classNames.title, toast == null ? void 0 : (_toast_classNames5 = toast.classNames) == null ? void 0 : _toast_classNames5.title)
    }, toast.jsx ? toast.jsx : typeof toast.title === 'function' ? toast.title() : toast.title), toast.description ? /*#__PURE__*/ React__default.default.createElement("div", {
        "data-description": "",
        className: cn(descriptionClassName, toastDescriptionClassname, classNames == null ? void 0 : classNames.description, toast == null ? void 0 : (_toast_classNames6 = toast.classNames) == null ? void 0 : _toast_classNames6.description)
    }, typeof toast.description === 'function' ? toast.description() : toast.description) : null), /*#__PURE__*/ React__default.default.isValidElement(toast.cancel) ? toast.cancel : toast.cancel && isAction(toast.cancel) ? /*#__PURE__*/ React__default.default.createElement("button", {
        "data-button": true,
        "data-cancel": true,
        style: toast.cancelButtonStyle || cancelButtonStyle,
        onClick: (event)=>{
            // We need to check twice because typescript
            if (!isAction(toast.cancel)) return;
            if (!dismissible) return;
            toast.cancel.onClick == null || toast.cancel.onClick.call(toast.cancel, event);
            deleteToast();
        },
        className: cn(classNames == null ? void 0 : classNames.cancelButton, toast == null ? void 0 : (_toast_classNames7 = toast.classNames) == null ? void 0 : _toast_classNames7.cancelButton)
    }, toast.cancel.label) : null, /*#__PURE__*/ React__default.default.isValidElement(toast.action) ? toast.action : toast.action && isAction(toast.action) ? /*#__PURE__*/ React__default.default.createElement("button", {
        "data-button": true,
        "data-action": true,
        style: toast.actionButtonStyle || actionButtonStyle,
        onClick: (event)=>{
            // We need to check twice because typescript
            if (!isAction(toast.action)) return;
            toast.action.onClick == null || toast.action.onClick.call(toast.action, event);
            if (event.defaultPrevented) return;
            deleteToast();
        },
        className: cn(classNames == null ? void 0 : classNames.actionButton, toast == null ? void 0 : (_toast_classNames8 = toast.classNames) == null ? void 0 : _toast_classNames8.actionButton)
    }, toast.action.label) : null);
};
function getDocumentDirection() {
    if (typeof window === 'undefined') return 'ltr';
    if (typeof document === 'undefined') return 'ltr'; // For Fresh purpose
    const dirAttribute = document.documentElement.getAttribute('dir');
    if (dirAttribute === 'auto' || !dirAttribute) return window.getComputedStyle(document.documentElement).direction;
    return dirAttribute;
}
function assignOffset(defaultOffset, mobileOffset) {
    const styles = {};
    [
        defaultOffset,
        mobileOffset
    ].forEach((offset, index)=>{
        const isMobile = index === 1;
        const prefix = isMobile ? '--mobile-offset' : '--offset';
        const defaultValue = isMobile ? MOBILE_VIEWPORT_OFFSET : VIEWPORT_OFFSET;
        function assignAll(offset) {
            [
                'top',
                'right',
                'bottom',
                'left'
            ].forEach((key)=>{
                styles[`${prefix}-${key}`] = typeof offset === 'number' ? `${offset}px` : offset;
            });
        }
        if (typeof offset === 'number' || typeof offset === 'string') assignAll(offset);
        else if (typeof offset === 'object') [
            'top',
            'right',
            'bottom',
            'left'
        ].forEach((key)=>{
            if (offset[key] === undefined) styles[`${prefix}-${key}`] = defaultValue;
            else styles[`${prefix}-${key}`] = typeof offset[key] === 'number' ? `${offset[key]}px` : offset[key];
        });
        else assignAll(defaultValue);
    });
    return styles;
}
function useSonner() {
    const [activeToasts, setActiveToasts] = React__default.default.useState([]);
    React__default.default.useEffect(()=>{
        return ToastState.subscribe((toast)=>{
            if (toast.dismiss) {
                setTimeout(()=>{
                    ReactDOM__default.default.flushSync(()=>{
                        setActiveToasts((toasts)=>toasts.filter((t)=>t.id !== toast.id));
                    });
                });
                return;
            }
            // Prevent batching, temp solution.
            setTimeout(()=>{
                ReactDOM__default.default.flushSync(()=>{
                    setActiveToasts((toasts)=>{
                        const indexOfExistingToast = toasts.findIndex((t)=>t.id === toast.id);
                        // Update the toast if it already exists
                        if (indexOfExistingToast !== -1) return [
                            ...toasts.slice(0, indexOfExistingToast),
                            {
                                ...toasts[indexOfExistingToast],
                                ...toast
                            },
                            ...toasts.slice(indexOfExistingToast + 1)
                        ];
                        return [
                            toast,
                            ...toasts
                        ];
                    });
                });
            });
        });
    }, []);
    return {
        toasts: activeToasts
    };
}
const Toaster = /*#__PURE__*/ React__default.default.forwardRef(function Toaster(props, ref) {
    const { id, invert, position = 'bottom-right', hotkey = [
        'altKey',
        'KeyT'
    ], expand, closeButton, className, offset, mobileOffset, theme = 'light', richColors, duration, style, visibleToasts = VISIBLE_TOASTS_AMOUNT, toastOptions, dir = getDocumentDirection(), gap = GAP, icons, containerAriaLabel = 'Notifications' } = props;
    const [toasts, setToasts] = React__default.default.useState([]);
    const filteredToasts = React__default.default.useMemo(()=>{
        if (id) return toasts.filter((toast)=>toast.toasterId === id);
        return toasts.filter((toast)=>!toast.toasterId);
    }, [
        toasts,
        id
    ]);
    const possiblePositions = React__default.default.useMemo(()=>{
        return Array.from(new Set([
            position
        ].concat(filteredToasts.filter((toast)=>toast.position).map((toast)=>toast.position))));
    }, [
        filteredToasts,
        position
    ]);
    const [heights, setHeights] = React__default.default.useState([]);
    const [expanded, setExpanded] = React__default.default.useState(false);
    const [interacting, setInteracting] = React__default.default.useState(false);
    const [actualTheme, setActualTheme] = React__default.default.useState(theme !== 'system' ? theme : typeof window !== 'undefined' ? window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light' : 'light');
    const listRef = React__default.default.useRef(null);
    const hotkeyLabel = hotkey.join('+').replace(/Key/g, '').replace(/Digit/g, '');
    const lastFocusedElementRef = React__default.default.useRef(null);
    const isFocusWithinRef = React__default.default.useRef(false);
    const removeToast = React__default.default.useCallback((toastToRemove)=>{
        setToasts((toasts)=>{
            var _toasts_find;
            if (!((_toasts_find = toasts.find((toast)=>toast.id === toastToRemove.id)) == null ? void 0 : _toasts_find.delete)) ToastState.dismiss(toastToRemove.id);
            return toasts.filter(({ id })=>id !== toastToRemove.id);
        });
    }, []);
    React__default.default.useEffect(()=>{
        return ToastState.subscribe((toast)=>{
            if (toast.dismiss) {
                // Prevent batching of other state updates
                requestAnimationFrame(()=>{
                    setToasts((toasts)=>toasts.map((t)=>t.id === toast.id ? {
                                ...t,
                                delete: true
                            } : t));
                });
                return;
            }
            // Prevent batching, temp solution.
            setTimeout(()=>{
                ReactDOM__default.default.flushSync(()=>{
                    setToasts((toasts)=>{
                        const indexOfExistingToast = toasts.findIndex((t)=>t.id === toast.id);
                        // Update the toast if it already exists
                        if (indexOfExistingToast !== -1) return [
                            ...toasts.slice(0, indexOfExistingToast),
                            {
                                ...toasts[indexOfExistingToast],
                                ...toast
                            },
                            ...toasts.slice(indexOfExistingToast + 1)
                        ];
                        return [
                            toast,
                            ...toasts
                        ];
                    });
                });
            });
        });
    }, [
        toasts
    ]);
    React__default.default.useEffect(()=>{
        if (theme !== 'system') {
            setActualTheme(theme);
            return;
        }
        if (theme === 'system') {
            // check if current preference is dark
            if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) // it's currently dark
            setActualTheme('dark');
            else // it's not dark
            setActualTheme('light');
        }
        if (typeof window === 'undefined') return;
        const darkMediaQuery = window.matchMedia('(prefers-color-scheme: dark)');
        try {
            // Chrome & Firefox
            darkMediaQuery.addEventListener('change', ({ matches })=>{
                if (matches) setActualTheme('dark');
                else setActualTheme('light');
            });
        } catch (error) {
            // Safari < 14
            darkMediaQuery.addListener(({ matches })=>{
                try {
                    if (matches) setActualTheme('dark');
                    else setActualTheme('light');
                } catch (e) {
                    console.error(e);
                }
            });
        }
    }, [
        theme
    ]);
    React__default.default.useEffect(()=>{
        // Ensure expanded is always false when no toasts are present / only one left
        if (toasts.length <= 1) setExpanded(false);
    }, [
        toasts
    ]);
    React__default.default.useEffect(()=>{
        const handleKeyDown = (event)=>{
            var _listRef_current;
            const isHotkeyPressed = hotkey.every((key)=>event[key] || event.code === key);
            if (isHotkeyPressed) {
                var _listRef_current1;
                setExpanded(true);
                (_listRef_current1 = listRef.current) == null || _listRef_current1.focus();
            }
            if (event.code === 'Escape' && (document.activeElement === listRef.current || ((_listRef_current = listRef.current) == null ? void 0 : _listRef_current.contains(document.activeElement)))) setExpanded(false);
        };
        document.addEventListener('keydown', handleKeyDown);
        return ()=>document.removeEventListener('keydown', handleKeyDown);
    }, [
        hotkey
    ]);
    React__default.default.useEffect(()=>{
        if (listRef.current) return ()=>{
            if (lastFocusedElementRef.current) {
                lastFocusedElementRef.current.focus({
                    preventScroll: true
                });
                lastFocusedElementRef.current = null;
                isFocusWithinRef.current = false;
            }
        };
    }, [
        listRef.current
    ]);
    return /*#__PURE__*/ React__default.default.createElement("section", {
        ref: ref,
        "aria-label": `${containerAriaLabel} ${hotkeyLabel}`,
        tabIndex: -1,
        "aria-live": "polite",
        "aria-relevant": "additions text",
        "aria-atomic": "false",
        suppressHydrationWarning: true
    }, possiblePositions.map((position, index)=>{
        var _heights_;
        const [y, x] = position.split('-');
        if (!filteredToasts.length) return null;
        return /*#__PURE__*/ React__default.default.createElement("ol", {
            key: position,
            dir: dir === 'auto' ? getDocumentDirection() : dir,
            tabIndex: -1,
            ref: listRef,
            className: className,
            "data-sonner-toaster": true,
            "data-sonner-theme": actualTheme,
            "data-y-position": y,
            "data-x-position": x,
            style: {
                '--front-toast-height': `${((_heights_ = heights[0]) == null ? void 0 : _heights_.height) || 0}px`,
                '--width': `${TOAST_WIDTH}px`,
                '--gap': `${gap}px`,
                ...style,
                ...assignOffset(offset, mobileOffset)
            },
            onBlur: (event)=>{
                if (isFocusWithinRef.current && !event.currentTarget.contains(event.relatedTarget)) {
                    isFocusWithinRef.current = false;
                    if (lastFocusedElementRef.current) {
                        lastFocusedElementRef.current.focus({
                            preventScroll: true
                        });
                        lastFocusedElementRef.current = null;
                    }
                }
            },
            onFocus: (event)=>{
                const isNotDismissible = event.target instanceof HTMLElement && event.target.dataset.dismissible === 'false';
                if (isNotDismissible) return;
                if (!isFocusWithinRef.current) {
                    isFocusWithinRef.current = true;
                    lastFocusedElementRef.current = event.relatedTarget;
                }
            },
            onMouseEnter: ()=>setExpanded(true),
            onMouseMove: ()=>setExpanded(true),
            onMouseLeave: ()=>{
                // Avoid setting expanded to false when interacting with a toast, e.g. swiping
                if (!interacting) setExpanded(false);
            },
            onDragEnd: ()=>setExpanded(false),
            onPointerDown: (event)=>{
                const isNotDismissible = event.target instanceof HTMLElement && event.target.dataset.dismissible === 'false';
                if (isNotDismissible) return;
                setInteracting(true);
            },
            onPointerUp: ()=>setInteracting(false)
        }, filteredToasts.filter((toast)=>!toast.position && index === 0 || toast.position === position).map((toast, index)=>{
            var _toastOptions_duration, _toastOptions_closeButton;
            return /*#__PURE__*/ React__default.default.createElement(Toast, {
                key: toast.id,
                icons: icons,
                index: index,
                toast: toast,
                defaultRichColors: richColors,
                duration: (_toastOptions_duration = toastOptions == null ? void 0 : toastOptions.duration) != null ? _toastOptions_duration : duration,
                className: toastOptions == null ? void 0 : toastOptions.className,
                descriptionClassName: toastOptions == null ? void 0 : toastOptions.descriptionClassName,
                invert: invert,
                visibleToasts: visibleToasts,
                closeButton: (_toastOptions_closeButton = toastOptions == null ? void 0 : toastOptions.closeButton) != null ? _toastOptions_closeButton : closeButton,
                interacting: interacting,
                position: position,
                style: toastOptions == null ? void 0 : toastOptions.style,
                unstyled: toastOptions == null ? void 0 : toastOptions.unstyled,
                classNames: toastOptions == null ? void 0 : toastOptions.classNames,
                cancelButtonStyle: toastOptions == null ? void 0 : toastOptions.cancelButtonStyle,
                actionButtonStyle: toastOptions == null ? void 0 : toastOptions.actionButtonStyle,
                closeButtonAriaLabel: toastOptions == null ? void 0 : toastOptions.closeButtonAriaLabel,
                removeToast: removeToast,
                toasts: filteredToasts.filter((t)=>t.position == toast.position),
                heights: heights.filter((h)=>h.position == toast.position),
                setHeights: setHeights,
                expandByDefault: expand,
                gap: gap,
                expanded: expanded,
                swipeDirections: props.swipeDirections
            });
        }));
    }));
});
exports.Toaster = Toaster;
exports.toast = toast;
exports.useSonner = useSonner;

},{"3f174e72235a2879":"jMk1U","8b51ad213197056a":"i4X7T"}],"cAOHJ":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "BarLoader", ()=>(0, _barLoaderDefault.default));
parcelHelpers.export(exports, "BeatLoader", ()=>(0, _beatLoaderDefault.default));
parcelHelpers.export(exports, "BounceLoader", ()=>(0, _bounceLoaderDefault.default));
parcelHelpers.export(exports, "CircleLoader", ()=>(0, _circleLoaderDefault.default));
parcelHelpers.export(exports, "ClimbingBoxLoader", ()=>(0, _climbingBoxLoaderDefault.default));
parcelHelpers.export(exports, "ClipLoader", ()=>(0, _clipLoaderDefault.default));
parcelHelpers.export(exports, "ClockLoader", ()=>(0, _clockLoaderDefault.default));
parcelHelpers.export(exports, "DotLoader", ()=>(0, _dotLoaderDefault.default));
parcelHelpers.export(exports, "FadeLoader", ()=>(0, _fadeLoaderDefault.default));
parcelHelpers.export(exports, "GridLoader", ()=>(0, _gridLoaderDefault.default));
parcelHelpers.export(exports, "HashLoader", ()=>(0, _hashLoaderDefault.default));
parcelHelpers.export(exports, "MoonLoader", ()=>(0, _moonLoaderDefault.default));
parcelHelpers.export(exports, "PacmanLoader", ()=>(0, _pacmanLoaderDefault.default));
parcelHelpers.export(exports, "PropagateLoader", ()=>(0, _propagateLoaderDefault.default));
parcelHelpers.export(exports, "PulseLoader", ()=>(0, _pulseLoaderDefault.default));
parcelHelpers.export(exports, "PuffLoader", ()=>(0, _puffLoaderDefault.default));
parcelHelpers.export(exports, "RingLoader", ()=>(0, _ringLoaderDefault.default));
parcelHelpers.export(exports, "RiseLoader", ()=>(0, _riseLoaderDefault.default));
parcelHelpers.export(exports, "RotateLoader", ()=>(0, _rotateLoaderDefault.default));
parcelHelpers.export(exports, "ScaleLoader", ()=>(0, _scaleLoaderDefault.default));
parcelHelpers.export(exports, "SkewLoader", ()=>(0, _skewLoaderDefault.default));
parcelHelpers.export(exports, "SquareLoader", ()=>(0, _squareLoaderDefault.default));
parcelHelpers.export(exports, "SyncLoader", ()=>(0, _syncLoaderDefault.default));
var _barLoader = require("./BarLoader");
var _barLoaderDefault = parcelHelpers.interopDefault(_barLoader);
var _beatLoader = require("./BeatLoader");
var _beatLoaderDefault = parcelHelpers.interopDefault(_beatLoader);
var _bounceLoader = require("./BounceLoader");
var _bounceLoaderDefault = parcelHelpers.interopDefault(_bounceLoader);
var _circleLoader = require("./CircleLoader");
var _circleLoaderDefault = parcelHelpers.interopDefault(_circleLoader);
var _climbingBoxLoader = require("./ClimbingBoxLoader");
var _climbingBoxLoaderDefault = parcelHelpers.interopDefault(_climbingBoxLoader);
var _clipLoader = require("./ClipLoader");
var _clipLoaderDefault = parcelHelpers.interopDefault(_clipLoader);
var _clockLoader = require("./ClockLoader");
var _clockLoaderDefault = parcelHelpers.interopDefault(_clockLoader);
var _dotLoader = require("./DotLoader");
var _dotLoaderDefault = parcelHelpers.interopDefault(_dotLoader);
var _fadeLoader = require("./FadeLoader");
var _fadeLoaderDefault = parcelHelpers.interopDefault(_fadeLoader);
var _gridLoader = require("./GridLoader");
var _gridLoaderDefault = parcelHelpers.interopDefault(_gridLoader);
var _hashLoader = require("./HashLoader");
var _hashLoaderDefault = parcelHelpers.interopDefault(_hashLoader);
var _moonLoader = require("./MoonLoader");
var _moonLoaderDefault = parcelHelpers.interopDefault(_moonLoader);
var _pacmanLoader = require("./PacmanLoader");
var _pacmanLoaderDefault = parcelHelpers.interopDefault(_pacmanLoader);
var _propagateLoader = require("./PropagateLoader");
var _propagateLoaderDefault = parcelHelpers.interopDefault(_propagateLoader);
var _pulseLoader = require("./PulseLoader");
var _pulseLoaderDefault = parcelHelpers.interopDefault(_pulseLoader);
var _puffLoader = require("./PuffLoader");
var _puffLoaderDefault = parcelHelpers.interopDefault(_puffLoader);
var _ringLoader = require("./RingLoader");
var _ringLoaderDefault = parcelHelpers.interopDefault(_ringLoader);
var _riseLoader = require("./RiseLoader");
var _riseLoaderDefault = parcelHelpers.interopDefault(_riseLoader);
var _rotateLoader = require("./RotateLoader");
var _rotateLoaderDefault = parcelHelpers.interopDefault(_rotateLoader);
var _scaleLoader = require("./ScaleLoader");
var _scaleLoaderDefault = parcelHelpers.interopDefault(_scaleLoader);
var _skewLoader = require("./SkewLoader");
var _skewLoaderDefault = parcelHelpers.interopDefault(_skewLoader);
var _squareLoader = require("./SquareLoader");
var _squareLoaderDefault = parcelHelpers.interopDefault(_squareLoader);
var _syncLoader = require("./SyncLoader");
var _syncLoaderDefault = parcelHelpers.interopDefault(_syncLoader);

},{"./BarLoader":false,"./BeatLoader":false,"./BounceLoader":false,"./CircleLoader":false,"./ClimbingBoxLoader":false,"./ClipLoader":false,"./ClockLoader":false,"./DotLoader":false,"./FadeLoader":false,"./GridLoader":false,"./HashLoader":false,"./MoonLoader":false,"./PacmanLoader":false,"./PropagateLoader":false,"./PulseLoader":false,"./PuffLoader":"684Du","./RingLoader":false,"./RiseLoader":false,"./RotateLoader":false,"./ScaleLoader":false,"./SkewLoader":false,"./SquareLoader":false,"./SyncLoader":false,"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"684Du":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _unitConverter = require("./helpers/unitConverter");
var _animation = require("./helpers/animation");
"use client";
var __assign = undefined && undefined.__assign || function() {
    __assign = Object.assign || function(t) {
        for(var s, i = 1, n = arguments.length; i < n; i++){
            s = arguments[i];
            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = undefined && undefined.__rest || function(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") {
        for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++)if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
};
var puff = [
    (0, _animation.createAnimation)("PuffLoader", "0% {transform: scale(0)} 100% {transform: scale(1.0)}", "puff-1"),
    (0, _animation.createAnimation)("PuffLoader", "0% {opacity: 1} 100% {opacity: 0}", "puff-2")
];
function PuffLoader(_a) {
    var _b = _a.loading, loading = _b === void 0 ? true : _b, _c = _a.color, color = _c === void 0 ? "#000000" : _c, _d = _a.speedMultiplier, speedMultiplier = _d === void 0 ? 1 : _d, _e = _a.cssOverride, cssOverride = _e === void 0 ? {} : _e, _f = _a.size, size = _f === void 0 ? 60 : _f, additionalprops = __rest(_a, [
        "loading",
        "color",
        "speedMultiplier",
        "cssOverride",
        "size"
    ]);
    var wrapper = __assign({
        display: "inherit",
        position: "relative",
        width: (0, _unitConverter.cssValue)(size),
        height: (0, _unitConverter.cssValue)(size)
    }, cssOverride);
    var style = function(i) {
        return {
            position: "absolute",
            height: (0, _unitConverter.cssValue)(size),
            width: (0, _unitConverter.cssValue)(size),
            border: "thick solid ".concat(color),
            borderRadius: "50%",
            opacity: "1",
            top: "0",
            left: "0",
            animationFillMode: "both",
            animation: "".concat(puff[0], ", ").concat(puff[1]),
            animationDuration: "".concat(2 / speedMultiplier, "s"),
            animationIterationCount: "infinite",
            animationTimingFunction: "cubic-bezier(0.165, 0.84, 0.44, 1), cubic-bezier(0.3, 0.61, 0.355, 1)",
            animationDelay: i === 1 ? "-1s" : "0s"
        };
    };
    if (!loading) return null;
    return _react.createElement("span", __assign({
        style: wrapper
    }, additionalprops), _react.createElement("span", {
        style: style(1)
    }), _react.createElement("span", {
        style: style(2)
    }));
}
exports.default = PuffLoader;

},{"react":"jMk1U","./helpers/unitConverter":"5zJ4u","./helpers/animation":"gCtDf","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5zJ4u":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * If size is a number, append px to the value as default unit.
 * If size is a string, validate against list of valid units.
 * If unit is valid, return size as is.
 * If unit is invalid, console warn issue, replace with px as the unit.
 *
 * @param {(number | string)} size
 * @return {LengthObject} LengthObject
 */ parcelHelpers.export(exports, "parseLengthAndUnit", ()=>parseLengthAndUnit);
/**
 * Take value as an input and return valid css value
 *
 * @param {(number | string)} value
 * @return {string} valid css value
 */ parcelHelpers.export(exports, "cssValue", ()=>cssValue);
var cssUnit = {
    cm: true,
    mm: true,
    in: true,
    px: true,
    pt: true,
    pc: true,
    em: true,
    ex: true,
    ch: true,
    rem: true,
    vw: true,
    vh: true,
    vmin: true,
    vmax: true,
    "%": true
};
function parseLengthAndUnit(size) {
    if (typeof size === "number") return {
        value: size,
        unit: "px"
    };
    var value;
    var valueString = (size.match(/^[0-9.]*/) || "").toString();
    if (valueString.includes(".")) value = parseFloat(valueString);
    else value = parseInt(valueString, 10);
    var unit = (size.match(/[^0-9]*$/) || "").toString();
    if (cssUnit[unit]) return {
        value: value,
        unit: unit
    };
    console.warn("React Spinners: ".concat(size, " is not a valid css value. Defaulting to ").concat(value, "px."));
    return {
        value: value,
        unit: "px"
    };
}
function cssValue(value) {
    var lengthWithunit = parseLengthAndUnit(value);
    return "".concat(lengthWithunit.value).concat(lengthWithunit.unit);
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gCtDf":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createAnimation", ()=>createAnimation);
var createAnimation = function(loaderName, frames, suffix) {
    var animationName = "react-spinners-".concat(loaderName, "-").concat(suffix);
    if (typeof window == "undefined" || !window.document) return animationName;
    var styleEl = document.createElement("style");
    document.head.appendChild(styleEl);
    var styleSheet = styleEl.sheet;
    var keyFrames = "\n    @keyframes ".concat(animationName, " {\n      ").concat(frames, "\n    }\n  ");
    if (styleSheet) styleSheet.insertRule(keyFrames, 0);
    return animationName;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3Hn3D":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$84ce = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$84ce.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$84ce.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Toaster", ()=>Toaster);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _nextThemes = require("next-themes");
var _sonner = require("sonner");
var _s = $RefreshSig$();
"use client";
const Toaster = ({ ...props })=>{
    _s();
    const { theme = "system" } = (0, _nextThemes.useTheme)();
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _sonner.Toaster), {
        theme: theme,
        className: "toaster group",
        style: {
            "--normal-bg": "var(--popover)",
            "--normal-text": "var(--popover-foreground)",
            "--normal-border": "var(--border)"
        },
        ...props
    }, void 0, false, {
        fileName: "src/components/ui/sonner.tsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_s(Toaster, "EriOrahfenYKDCErPq+L6926Dw4=", false, function() {
    return [
        (0, _nextThemes.useTheme)
    ];
});
_c = Toaster;
var _c;
$RefreshReg$(_c, "Toaster");

  $parcel$ReactRefreshHelpers$84ce.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","next-themes":"c7nUI","sonner":"kK7Kb","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"c7nUI":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ThemeProvider", ()=>J);
parcelHelpers.export(exports, "useTheme", ()=>z);
var _react = require("react");
"use client";
var M = (e, i, s, u, m, a, l, h)=>{
    let d = document.documentElement, w = [
        "light",
        "dark"
    ];
    function p(n) {
        (Array.isArray(e) ? e : [
            e
        ]).forEach((y)=>{
            let k = y === "class", S = k && a ? m.map((f)=>a[f] || f) : m;
            k ? (d.classList.remove(...S), d.classList.add(a && a[n] ? a[n] : n)) : d.setAttribute(y, n);
        }), R(n);
    }
    function R(n) {
        h && w.includes(n) && (d.style.colorScheme = n);
    }
    function c() {
        return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
    }
    if (u) p(u);
    else try {
        let n = localStorage.getItem(i) || s, y = l && n === "system" ? c() : n;
        p(y);
    } catch (n) {}
};
var b = [
    "light",
    "dark"
], I = "(prefers-color-scheme: dark)", O = typeof window == "undefined", x = _react.createContext(void 0), U = {
    setTheme: (e)=>{},
    themes: []
}, z = ()=>{
    var e;
    return (e = _react.useContext(x)) != null ? e : U;
}, J = (e)=>_react.useContext(x) ? _react.createElement(_react.Fragment, null, e.children) : _react.createElement(V, {
        ...e
    }), N = [
    "light",
    "dark"
], V = ({ forcedTheme: e, disableTransitionOnChange: i = !1, enableSystem: s = !0, enableColorScheme: u = !0, storageKey: m = "theme", themes: a = N, defaultTheme: l = s ? "system" : "light", attribute: h = "data-theme", value: d, children: w, nonce: p, scriptProps: R })=>{
    let [c, n] = _react.useState(()=>H(m, l)), [T, y] = _react.useState(()=>c === "system" ? E() : c), k = d ? Object.values(d) : a, S = _react.useCallback((o)=>{
        let r = o;
        if (!r) return;
        o === "system" && s && (r = E());
        let v = d ? d[r] : r, C = i ? W(p) : null, P = document.documentElement, L = (g)=>{
            g === "class" ? (P.classList.remove(...k), v && P.classList.add(v)) : g.startsWith("data-") && (v ? P.setAttribute(g, v) : P.removeAttribute(g));
        };
        if (Array.isArray(h) ? h.forEach(L) : L(h), u) {
            let g = b.includes(l) ? l : null, D = b.includes(r) ? r : g;
            P.style.colorScheme = D;
        }
        C == null || C();
    }, [
        p
    ]), f = _react.useCallback((o)=>{
        let r = typeof o == "function" ? o(c) : o;
        n(r);
        try {
            localStorage.setItem(m, r);
        } catch (v) {}
    }, [
        c
    ]), A = _react.useCallback((o)=>{
        let r = E(o);
        y(r), c === "system" && s && !e && S("system");
    }, [
        c,
        e
    ]);
    _react.useEffect(()=>{
        let o = window.matchMedia(I);
        return o.addListener(A), A(o), ()=>o.removeListener(A);
    }, [
        A
    ]), _react.useEffect(()=>{
        let o = (r)=>{
            r.key === m && (r.newValue ? n(r.newValue) : f(l));
        };
        return window.addEventListener("storage", o), ()=>window.removeEventListener("storage", o);
    }, [
        f
    ]), _react.useEffect(()=>{
        S(e != null ? e : c);
    }, [
        e,
        c
    ]);
    let Q = _react.useMemo(()=>({
            theme: c,
            setTheme: f,
            forcedTheme: e,
            resolvedTheme: c === "system" ? T : c,
            themes: s ? [
                ...a,
                "system"
            ] : a,
            systemTheme: s ? T : void 0
        }), [
        c,
        f,
        e,
        T,
        s,
        a
    ]);
    return _react.createElement(x.Provider, {
        value: Q
    }, _react.createElement(_, {
        forcedTheme: e,
        storageKey: m,
        attribute: h,
        enableSystem: s,
        enableColorScheme: u,
        defaultTheme: l,
        value: d,
        themes: a,
        nonce: p,
        scriptProps: R
    }), w);
}, _ = _react.memo(({ forcedTheme: e, storageKey: i, attribute: s, enableSystem: u, enableColorScheme: m, defaultTheme: a, value: l, themes: h, nonce: d, scriptProps: w })=>{
    let p = JSON.stringify([
        s,
        i,
        a,
        e,
        h,
        l,
        u,
        m
    ]).slice(1, -1);
    return _react.createElement("script", {
        ...w,
        suppressHydrationWarning: !0,
        nonce: typeof window == "undefined" ? d : "",
        dangerouslySetInnerHTML: {
            __html: `(${M.toString()})(${p})`
        }
    });
}), H = (e, i)=>{
    if (O) return;
    let s;
    try {
        s = localStorage.getItem(e) || void 0;
    } catch (u) {}
    return s || i;
}, W = (e)=>{
    let i = document.createElement("style");
    return e && i.setAttribute("nonce", e), i.appendChild(document.createTextNode("*,*::before,*::after{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}")), document.head.appendChild(i), ()=>{
        window.getComputedStyle(document.body), setTimeout(()=>{
            document.head.removeChild(i);
        }, 1);
    };
}, E = (e)=>(e || (e = window.matchMedia(I)), e.matches ? "dark" : "light");

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8LKgj":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$55fe = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$55fe.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$55fe.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>WeddingTimeline);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _framerMotion = require("framer-motion");
var _lucideReact = require("lucide-react");
var _s = $RefreshSig$();
const timeline = [
    {
        time: "16:00",
        title: "Welcome Drink",
        description: "\u0413\u0440\u0430\u043D\u0434 \u0445\u043E\u0442\u0435\u043B \u041F\u043B\u043E\u0432\u0434\u0438\u0432 \u2013 \u043F\u043B\u043E\u0449\u0430\u0434 \u201E\u0426\u0435\u043D\u0442\u0440\u0430\u043B\u0435\u043D\u201C \u21161",
        icon: (0, _lucideReact.Wine)
    },
    {
        time: "17:00",
        title: "\u0421\u0432\u0430\u0442\u0431\u0435\u043D\u0430 \u0446\u0435\u0440\u0435\u043C\u043E\u043D\u0438\u044F",
        description: "\u0413\u0440\u0430\u043D\u0434 \u0445\u043E\u0442\u0435\u043B \u041F\u043B\u043E\u0432\u0434\u0438\u0432 \u2013 \u043F\u043B\u043E\u0449\u0430\u0434 \u201E\u0426\u0435\u043D\u0442\u0440\u0430\u043B\u0435\u043D\u201C \u21161",
        icon: (0, _lucideReact.Award)
    },
    {
        time: "18:00",
        title: "\u0421\u0432\u0430\u0442\u0431\u0435\u043D\u0430 \u0432\u0435\u0447\u0435\u0440\u044F",
        description: "\u0413\u0440\u0430\u043D\u0434 \u0445\u043E\u0442\u0435\u043B \u041F\u043B\u043E\u0432\u0434\u0438\u0432 \u2013 \u043F\u043B\u043E\u0449\u0430\u0434 \u201E\u0426\u0435\u043D\u0442\u0440\u0430\u043B\u0435\u043D\u201C \u21161",
        icon: (0, _lucideReact.Utensils)
    }
];
function WeddingTimeline() {
    _s();
    const [progress, setProgress] = (0, _react.useState)(0);
    const timelineRef = (0, _react.useRef)(null);
    const itemsRef = (0, _react.useRef)([]);
    (0, _react.useEffect)(()=>{
        const handleScroll = ()=>{
            if (!timelineRef.current || !itemsRef.current.length) return;
            const firstItem = itemsRef.current[0].getBoundingClientRect();
            const lastItem = itemsRef.current[itemsRef.current.length - 1].getBoundingClientRect();
            const windowHeight = window.innerHeight;
            const totalHeight = lastItem.bottom - firstItem.top;
            const scrolled = Math.min(Math.max(0, windowHeight / 2 - firstItem.top) / totalHeight, 1);
            setProgress(scrolled);
        };
        window.addEventListener("scroll", handleScroll, {
            passive: true
        });
        handleScroll();
        return ()=>window.removeEventListener("scroll", handleScroll);
    }, []);
    const getCircleColor = (idx)=>{
        return idx / (timeline.length - 1) <= progress ? "bg-olivewood" : "bg-sage";
    };
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: "max-w-5xl mx-auto py-16 px-4",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("h2", {
                className: "text-center text-3xl md:text-4xl mb-4 text-olivewood",
                children: "\u0421\u0432\u0430\u0442\u0431\u0435\u043D\u0430 \u043F\u0440\u043E\u0433\u0440\u0430\u043C\u0430"
            }, void 0, false, {
                fileName: "src/components/Timeline.tsx",
                lineNumber: 41,
                columnNumber: 13
            }, this),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                ref: timelineRef,
                className: "relative",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "absolute top-0 left-1/2 w-1 -translate-x-1/2 bg-sand/50 rounded-full hidden sm:block z-0",
                        style: {
                            top: itemsRef.current.length ? itemsRef.current[0].offsetTop + itemsRef.current[0].offsetHeight / 2 : 0,
                            height: itemsRef.current.length ? itemsRef.current[itemsRef.current.length - 1].offsetTop + itemsRef.current[itemsRef.current.length - 1].offsetHeight / 2 - (itemsRef.current[0].offsetTop + itemsRef.current[0].offsetHeight / 2) : "100%"
                        },
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _framerMotion.motion).div, {
                            className: "absolute left-0 top-0 w-full bg-olivewood rounded-full",
                            style: {
                                height: `${progress * 100}%`
                            }
                        }, void 0, false, {
                            fileName: "src/components/Timeline.tsx",
                            lineNumber: 60,
                            columnNumber: 21
                        }, this)
                    }, void 0, false, {
                        fileName: "src/components/Timeline.tsx",
                        lineNumber: 47,
                        columnNumber: 17
                    }, this),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "absolute left-8 w-1 bg-sand/50 rounded-full sm:hidden",
                        style: {
                            top: itemsRef.current.length ? itemsRef.current[0].offsetTop + itemsRef.current[0].offsetHeight / 2 : 0,
                            height: itemsRef.current.length ? itemsRef.current[itemsRef.current.length - 1].offsetTop + itemsRef.current[itemsRef.current.length - 1].offsetHeight / 2 - (itemsRef.current[0].offsetTop + itemsRef.current[0].offsetHeight / 2) : "100%"
                        },
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _framerMotion.motion).div, {
                            className: "absolute left-0 top-0 w-full bg-olivewood rounded-full",
                            style: {
                                height: `${progress * 100}%`,
                                transformOrigin: "top"
                            }
                        }, void 0, false, {
                            fileName: "src/components/Timeline.tsx",
                            lineNumber: 80,
                            columnNumber: 21
                        }, this)
                    }, void 0, false, {
                        fileName: "src/components/Timeline.tsx",
                        lineNumber: 67,
                        columnNumber: 17
                    }, this),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "flex flex-col gap-12 sm:gap-32",
                        children: timeline.map((item, idx)=>{
                            const isLeft = idx % 2 === 0;
                            const IconComponent = item.icon;
                            return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _framerMotion.motion).div, {
                                ref: (el)=>itemsRef.current[idx] = el,
                                initial: {
                                    opacity: 0,
                                    y: 50
                                },
                                whileInView: {
                                    opacity: 1,
                                    y: 0
                                },
                                viewport: {
                                    once: true
                                },
                                transition: {
                                    duration: 0.6
                                },
                                className: "relative flex sm:justify-between items-start sm:items-center",
                                children: [
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: `absolute sm:left-1/2 -translate-x-1/2 w-8 h-8 rounded-full border-4 border-sand z-20 shadow-md ${getCircleColor(idx)}`,
                                        style: {
                                            left: window.innerWidth < 640 ? "34px" : undefined,
                                            top: "50%",
                                            transform: "translate(-50%, -50%)"
                                        }
                                    }, void 0, false, {
                                        fileName: "src/components/Timeline.tsx",
                                        lineNumber: 106,
                                        columnNumber: 33
                                    }, this),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: `p-6 rounded-2xl shadow-xl bg-wedding-white/90 backdrop-blur-sm border border-sand/50 w-full sm:w-[40%] ${isLeft ? "sm:mr-auto sm:text-right max-sm:ml-16" : "sm:ml-auto sm:text-left max-sm:ml-16"}`,
                                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: `flex items-center gap-4 flex-row ${isLeft ? "sm:flex-row-reverse" : "sm:flex-row"}`,
                                            children: [
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                    className: "w-12 h-12 rounded-full bg-sage flex items-center justify-center",
                                                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)(IconComponent, {
                                                        className: "w-6 h-6 text-olivewood"
                                                    }, void 0, false, {
                                                        fileName: "src/components/Timeline.tsx",
                                                        lineNumber: 129,
                                                        columnNumber: 45
                                                    }, this)
                                                }, void 0, false, {
                                                    fileName: "src/components/Timeline.tsx",
                                                    lineNumber: 128,
                                                    columnNumber: 41
                                                }, this),
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                                            className: "text-sm text-sage font-semibold",
                                                            children: item.time
                                                        }, void 0, false, {
                                                            fileName: "src/components/Timeline.tsx",
                                                            lineNumber: 132,
                                                            columnNumber: 45
                                                        }, this),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("h4", {
                                                            className: "text-lg font-bold text-olivewood",
                                                            children: item.title
                                                        }, void 0, false, {
                                                            fileName: "src/components/Timeline.tsx",
                                                            lineNumber: 133,
                                                            columnNumber: 45
                                                        }, this),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                                            className: "text-bark text-sm mt-1",
                                                            children: item.description
                                                        }, void 0, false, {
                                                            fileName: "src/components/Timeline.tsx",
                                                            lineNumber: 134,
                                                            columnNumber: 45
                                                        }, this)
                                                    ]
                                                }, void 0, true, {
                                                    fileName: "src/components/Timeline.tsx",
                                                    lineNumber: 131,
                                                    columnNumber: 41
                                                }, this)
                                            ]
                                        }, void 0, true, {
                                            fileName: "src/components/Timeline.tsx",
                                            lineNumber: 124,
                                            columnNumber: 37
                                        }, this)
                                    }, void 0, false, {
                                        fileName: "src/components/Timeline.tsx",
                                        lineNumber: 118,
                                        columnNumber: 33
                                    }, this)
                                ]
                            }, idx, true, {
                                fileName: "src/components/Timeline.tsx",
                                lineNumber: 96,
                                columnNumber: 29
                            }, this);
                        })
                    }, void 0, false, {
                        fileName: "src/components/Timeline.tsx",
                        lineNumber: 90,
                        columnNumber: 17
                    }, this)
                ]
            }, void 0, true, {
                fileName: "src/components/Timeline.tsx",
                lineNumber: 45,
                columnNumber: 13
            }, this)
        ]
    }, void 0, true, {
        fileName: "src/components/Timeline.tsx",
        lineNumber: 40,
        columnNumber: 9
    }, this);
}
_s(WeddingTimeline, "Scf1zf1s+OLr/9ACO4fNoFZbEko=");
_c = WeddingTimeline;
var _c;
$RefreshReg$(_c, "WeddingTimeline");

  $parcel$ReactRefreshHelpers$55fe.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","framer-motion":"6Fwkt","lucide-react":"2I7qR","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"6Fwkt":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AnimatePresence", ()=>(0, _indexMjs.AnimatePresence));
parcelHelpers.export(exports, "LayoutGroup", ()=>(0, _indexMjs1.LayoutGroup));
parcelHelpers.export(exports, "LazyMotion", ()=>(0, _indexMjs2.LazyMotion));
parcelHelpers.export(exports, "MotionConfig", ()=>(0, _indexMjs3.MotionConfig));
parcelHelpers.export(exports, "m", ()=>(0, _proxyMjs.m));
parcelHelpers.export(exports, "motion", ()=>(0, _proxyMjs1.motion));
parcelHelpers.export(exports, "addPointerEvent", ()=>(0, _addPointerEventMjs.addPointerEvent));
parcelHelpers.export(exports, "addPointerInfo", ()=>(0, _eventInfoMjs.addPointerInfo));
parcelHelpers.export(exports, "animations", ()=>(0, _animationsMjs.animations));
parcelHelpers.export(exports, "makeUseVisualState", ()=>(0, _useVisualStateMjs.makeUseVisualState));
parcelHelpers.export(exports, "calcLength", ()=>(0, _deltaCalcMjs.calcLength));
parcelHelpers.export(exports, "createBox", ()=>(0, _modelsMjs.createBox));
parcelHelpers.export(exports, "filterProps", ()=>(0, _filterPropsMjs.filterProps));
parcelHelpers.export(exports, "isBrowser", ()=>(0, _isBrowserMjs.isBrowser));
parcelHelpers.export(exports, "useComposedRefs", ()=>(0, _useComposedRefMjs.useComposedRefs));
parcelHelpers.export(exports, "useForceUpdate", ()=>(0, _useForceUpdateMjs.useForceUpdate));
parcelHelpers.export(exports, "useIsomorphicLayoutEffect", ()=>(0, _useIsomorphicEffectMjs.useIsomorphicLayoutEffect));
parcelHelpers.export(exports, "useUnmountEffect", ()=>(0, _useUnmountEffectMjs.useUnmountEffect));
parcelHelpers.export(exports, "domAnimation", ()=>(0, _featuresAnimationMjs.domAnimation));
parcelHelpers.export(exports, "domMax", ()=>(0, _featuresMaxMjs.domMax));
parcelHelpers.export(exports, "domMin", ()=>(0, _featuresMinMjs.domMin));
parcelHelpers.export(exports, "useMotionValueEvent", ()=>(0, _useMotionValueEventMjs.useMotionValueEvent));
parcelHelpers.export(exports, "useElementScroll", ()=>(0, _useElementScrollMjs.useElementScroll));
parcelHelpers.export(exports, "useViewportScroll", ()=>(0, _useViewportScrollMjs.useViewportScroll));
parcelHelpers.export(exports, "useMotionTemplate", ()=>(0, _useMotionTemplateMjs.useMotionTemplate));
parcelHelpers.export(exports, "useMotionValue", ()=>(0, _useMotionValueMjs.useMotionValue));
parcelHelpers.export(exports, "useScroll", ()=>(0, _useScrollMjs.useScroll));
parcelHelpers.export(exports, "useSpring", ()=>(0, _useSpringMjs.useSpring));
parcelHelpers.export(exports, "useTime", ()=>(0, _useTimeMjs.useTime));
parcelHelpers.export(exports, "useTransform", ()=>(0, _useTransformMjs.useTransform));
parcelHelpers.export(exports, "useVelocity", ()=>(0, _useVelocityMjs.useVelocity));
parcelHelpers.export(exports, "useWillChange", ()=>(0, _indexMjs4.useWillChange));
parcelHelpers.export(exports, "WillChangeMotionValue", ()=>(0, _willChangeMotionValueMjs.WillChangeMotionValue));
parcelHelpers.export(exports, "resolveMotionValue", ()=>(0, _resolveMotionValueMjs.resolveMotionValue));
parcelHelpers.export(exports, "useReducedMotion", ()=>(0, _useReducedMotionMjs.useReducedMotion));
parcelHelpers.export(exports, "useReducedMotionConfig", ()=>(0, _useReducedMotionConfigMjs.useReducedMotionConfig));
parcelHelpers.export(exports, "MotionGlobalConfig", ()=>(0, _motionUtils.MotionGlobalConfig));
parcelHelpers.export(exports, "animationControls", ()=>(0, _animationControlsMjs.animationControls));
parcelHelpers.export(exports, "useAnimate", ()=>(0, _useAnimateMjs.useAnimate));
parcelHelpers.export(exports, "useAnimateMini", ()=>(0, _useAnimateStyleMjs.useAnimateMini));
parcelHelpers.export(exports, "useAnimation", ()=>(0, _useAnimationMjs.useAnimation));
parcelHelpers.export(exports, "useAnimationControls", ()=>(0, _useAnimationMjs.useAnimationControls));
parcelHelpers.export(exports, "animateVisualElement", ()=>(0, _visualElementMjs.animateVisualElement));
parcelHelpers.export(exports, "useIsPresent", ()=>(0, _usePresenceMjs.useIsPresent));
parcelHelpers.export(exports, "usePresence", ()=>(0, _usePresenceMjs.usePresence));
parcelHelpers.export(exports, "usePresenceData", ()=>(0, _usePresenceDataMjs.usePresenceData));
parcelHelpers.export(exports, "useDomEvent", ()=>(0, _useDomEventMjs.useDomEvent));
parcelHelpers.export(exports, "DragControls", ()=>(0, _useDragControlsMjs.DragControls));
parcelHelpers.export(exports, "useDragControls", ()=>(0, _useDragControlsMjs.useDragControls));
parcelHelpers.export(exports, "isMotionComponent", ()=>(0, _isMotionComponentMjs.isMotionComponent));
parcelHelpers.export(exports, "unwrapMotionComponent", ()=>(0, _unwrapMotionComponentMjs.unwrapMotionComponent));
parcelHelpers.export(exports, "isValidMotionProp", ()=>(0, _validPropMjs.isValidMotionProp));
parcelHelpers.export(exports, "addScaleCorrector", ()=>(0, _scaleCorrectionMjs.addScaleCorrector));
parcelHelpers.export(exports, "useInstantLayoutTransition", ()=>(0, _useInstantLayoutTransitionMjs.useInstantLayoutTransition));
parcelHelpers.export(exports, "useResetProjection", ()=>(0, _useResetProjectionMjs.useResetProjection));
parcelHelpers.export(exports, "buildTransform", ()=>(0, _buildTransformMjs.buildTransform));
parcelHelpers.export(exports, "visualElementStore", ()=>(0, _storeMjs.visualElementStore));
parcelHelpers.export(exports, "VisualElement", ()=>(0, _visualElementMjs1.VisualElement));
parcelHelpers.export(exports, "useAnimationFrame", ()=>(0, _useAnimationFrameMjs.useAnimationFrame));
parcelHelpers.export(exports, "useCycle", ()=>(0, _useCycleMjs.useCycle));
parcelHelpers.export(exports, "useInView", ()=>(0, _useInViewMjs.useInView));
parcelHelpers.export(exports, "disableInstantTransitions", ()=>(0, _useInstantTransitionMjs.disableInstantTransitions));
parcelHelpers.export(exports, "useInstantTransition", ()=>(0, _useInstantTransitionMjs.useInstantTransition));
parcelHelpers.export(exports, "usePageInView", ()=>(0, _usePageInViewMjs.usePageInView));
parcelHelpers.export(exports, "optimizedAppearDataAttribute", ()=>(0, _dataIdMjs.optimizedAppearDataAttribute));
parcelHelpers.export(exports, "startOptimizedAppearAnimation", ()=>(0, _startMjs.startOptimizedAppearAnimation));
parcelHelpers.export(exports, "LayoutGroupContext", ()=>(0, _layoutGroupContextMjs.LayoutGroupContext));
parcelHelpers.export(exports, "MotionConfigContext", ()=>(0, _motionConfigContextMjs.MotionConfigContext));
parcelHelpers.export(exports, "MotionContext", ()=>(0, _indexMjs5.MotionContext));
parcelHelpers.export(exports, "PresenceContext", ()=>(0, _presenceContextMjs.PresenceContext));
parcelHelpers.export(exports, "SwitchLayoutGroupContext", ()=>(0, _switchLayoutGroupContextMjs.SwitchLayoutGroupContext));
parcelHelpers.export(exports, "useDeprecatedAnimatedState", ()=>(0, _useAnimatedStateMjs.useAnimatedState));
parcelHelpers.export(exports, "AnimateSharedLayout", ()=>(0, _animateSharedLayoutMjs.AnimateSharedLayout));
parcelHelpers.export(exports, "DeprecatedLayoutGroupContext", ()=>(0, _deprecatedLayoutGroupContextMjs.DeprecatedLayoutGroupContext));
parcelHelpers.export(exports, "useDeprecatedInvertedScale", ()=>(0, _useInvertedScaleMjs.useInvertedScale));
parcelHelpers.export(exports, "delay", ()=>(0, _delayMjs.delay));
parcelHelpers.export(exports, "animate", ()=>(0, _indexMjs6.animate));
parcelHelpers.export(exports, "createScopedAnimate", ()=>(0, _indexMjs6.createScopedAnimate));
parcelHelpers.export(exports, "animateMini", ()=>(0, _animateStyleMjs.animateMini));
parcelHelpers.export(exports, "scroll", ()=>(0, _indexMjs7.scroll));
parcelHelpers.export(exports, "scrollInfo", ()=>(0, _trackMjs.scrollInfo));
parcelHelpers.export(exports, "inView", ()=>(0, _indexMjs8.inView));
parcelHelpers.export(exports, "distance", ()=>(0, _distanceMjs.distance));
parcelHelpers.export(exports, "distance2D", ()=>(0, _distanceMjs.distance2D));
parcelHelpers.export(exports, "Reorder", ()=>_namespaceMjs);
var _indexMjs = require("./components/AnimatePresence/index.mjs");
var _indexMjs1 = require("./components/LayoutGroup/index.mjs");
var _indexMjs2 = require("./components/LazyMotion/index.mjs");
var _indexMjs3 = require("./components/MotionConfig/index.mjs");
var _proxyMjs = require("./render/components/m/proxy.mjs");
var _proxyMjs1 = require("./render/components/motion/proxy.mjs");
var _addPointerEventMjs = require("./events/add-pointer-event.mjs");
var _eventInfoMjs = require("./events/event-info.mjs");
var _animationsMjs = require("./motion/features/animations.mjs");
var _useVisualStateMjs = require("./motion/utils/use-visual-state.mjs");
var _deltaCalcMjs = require("./projection/geometry/delta-calc.mjs");
var _modelsMjs = require("./projection/geometry/models.mjs");
var _filterPropsMjs = require("./render/dom/utils/filter-props.mjs");
var _isBrowserMjs = require("./utils/is-browser.mjs");
var _useComposedRefMjs = require("./utils/use-composed-ref.mjs");
var _useForceUpdateMjs = require("./utils/use-force-update.mjs");
var _useIsomorphicEffectMjs = require("./utils/use-isomorphic-effect.mjs");
var _useUnmountEffectMjs = require("./utils/use-unmount-effect.mjs");
var _featuresAnimationMjs = require("./render/dom/features-animation.mjs");
var _featuresMaxMjs = require("./render/dom/features-max.mjs");
var _featuresMinMjs = require("./render/dom/features-min.mjs");
var _useMotionValueEventMjs = require("./utils/use-motion-value-event.mjs");
var _useElementScrollMjs = require("./value/scroll/use-element-scroll.mjs");
var _useViewportScrollMjs = require("./value/scroll/use-viewport-scroll.mjs");
var _useMotionTemplateMjs = require("./value/use-motion-template.mjs");
var _useMotionValueMjs = require("./value/use-motion-value.mjs");
var _useScrollMjs = require("./value/use-scroll.mjs");
var _useSpringMjs = require("./value/use-spring.mjs");
var _useTimeMjs = require("./value/use-time.mjs");
var _useTransformMjs = require("./value/use-transform.mjs");
var _useVelocityMjs = require("./value/use-velocity.mjs");
var _indexMjs4 = require("./value/use-will-change/index.mjs");
var _willChangeMotionValueMjs = require("./value/use-will-change/WillChangeMotionValue.mjs");
var _resolveMotionValueMjs = require("./value/utils/resolve-motion-value.mjs");
var _useReducedMotionMjs = require("./utils/reduced-motion/use-reduced-motion.mjs");
var _useReducedMotionConfigMjs = require("./utils/reduced-motion/use-reduced-motion-config.mjs");
var _motionUtils = require("motion-utils");
parcelHelpers.exportAll(_motionUtils, exports);
var _animationControlsMjs = require("./animation/hooks/animation-controls.mjs");
var _useAnimateMjs = require("./animation/hooks/use-animate.mjs");
var _useAnimateStyleMjs = require("./animation/hooks/use-animate-style.mjs");
var _useAnimationMjs = require("./animation/hooks/use-animation.mjs");
var _visualElementMjs = require("./animation/interfaces/visual-element.mjs");
var _usePresenceMjs = require("./components/AnimatePresence/use-presence.mjs");
var _usePresenceDataMjs = require("./components/AnimatePresence/use-presence-data.mjs");
var _useDomEventMjs = require("./events/use-dom-event.mjs");
var _useDragControlsMjs = require("./gestures/drag/use-drag-controls.mjs");
var _isMotionComponentMjs = require("./motion/utils/is-motion-component.mjs");
var _unwrapMotionComponentMjs = require("./motion/utils/unwrap-motion-component.mjs");
var _validPropMjs = require("./motion/utils/valid-prop.mjs");
var _scaleCorrectionMjs = require("./projection/styles/scale-correction.mjs");
var _useInstantLayoutTransitionMjs = require("./projection/use-instant-layout-transition.mjs");
var _useResetProjectionMjs = require("./projection/use-reset-projection.mjs");
var _buildTransformMjs = require("./render/html/utils/build-transform.mjs");
var _storeMjs = require("./render/store.mjs");
var _visualElementMjs1 = require("./render/VisualElement.mjs");
var _useAnimationFrameMjs = require("./utils/use-animation-frame.mjs");
var _useCycleMjs = require("./utils/use-cycle.mjs");
var _useInViewMjs = require("./utils/use-in-view.mjs");
var _useInstantTransitionMjs = require("./utils/use-instant-transition.mjs");
var _usePageInViewMjs = require("./utils/use-page-in-view.mjs");
var _dataIdMjs = require("./animation/optimized-appear/data-id.mjs");
var _startMjs = require("./animation/optimized-appear/start.mjs");
var _layoutGroupContextMjs = require("./context/LayoutGroupContext.mjs");
var _motionConfigContextMjs = require("./context/MotionConfigContext.mjs");
var _indexMjs5 = require("./context/MotionContext/index.mjs");
var _presenceContextMjs = require("./context/PresenceContext.mjs");
var _switchLayoutGroupContextMjs = require("./context/SwitchLayoutGroupContext.mjs");
var _useAnimatedStateMjs = require("./animation/hooks/use-animated-state.mjs");
var _animateSharedLayoutMjs = require("./components/AnimateSharedLayout.mjs");
var _deprecatedLayoutGroupContextMjs = require("./context/DeprecatedLayoutGroupContext.mjs");
var _useInvertedScaleMjs = require("./value/use-inverted-scale.mjs");
var _delayMjs = require("./utils/delay.mjs");
var _namespaceMjs = require("./components/Reorder/namespace.mjs");
var _indexMjs6 = require("./animation/animate/index.mjs");
var _animateStyleMjs = require("./animation/animators/waapi/animate-style.mjs");
var _indexMjs7 = require("./render/dom/scroll/index.mjs");
var _trackMjs = require("./render/dom/scroll/track.mjs");
var _indexMjs8 = require("./render/dom/viewport/index.mjs");
var _distanceMjs = require("./utils/distance.mjs");
var _motionDom = require("motion-dom");
parcelHelpers.exportAll(_motionDom, exports);

},{"./components/AnimatePresence/index.mjs":false,"./components/LayoutGroup/index.mjs":false,"./components/LazyMotion/index.mjs":false,"./components/MotionConfig/index.mjs":false,"./render/components/m/proxy.mjs":false,"./render/components/motion/proxy.mjs":"gFHyt","./events/add-pointer-event.mjs":false,"./events/event-info.mjs":false,"./motion/features/animations.mjs":false,"./motion/utils/use-visual-state.mjs":false,"./projection/geometry/delta-calc.mjs":false,"./projection/geometry/models.mjs":false,"./render/dom/utils/filter-props.mjs":false,"./utils/is-browser.mjs":false,"./utils/use-composed-ref.mjs":false,"./utils/use-force-update.mjs":false,"./utils/use-isomorphic-effect.mjs":false,"./utils/use-unmount-effect.mjs":false,"./render/dom/features-animation.mjs":false,"./render/dom/features-max.mjs":false,"./render/dom/features-min.mjs":false,"./utils/use-motion-value-event.mjs":false,"./value/scroll/use-element-scroll.mjs":false,"./value/scroll/use-viewport-scroll.mjs":false,"./value/use-motion-template.mjs":false,"./value/use-motion-value.mjs":false,"./value/use-scroll.mjs":false,"./value/use-spring.mjs":false,"./value/use-time.mjs":false,"./value/use-transform.mjs":false,"./value/use-velocity.mjs":false,"./value/use-will-change/index.mjs":false,"./value/use-will-change/WillChangeMotionValue.mjs":false,"./value/utils/resolve-motion-value.mjs":false,"./utils/reduced-motion/use-reduced-motion.mjs":false,"./utils/reduced-motion/use-reduced-motion-config.mjs":false,"motion-utils":false,"./animation/hooks/animation-controls.mjs":false,"./animation/hooks/use-animate.mjs":false,"./animation/hooks/use-animate-style.mjs":false,"./animation/hooks/use-animation.mjs":false,"./animation/interfaces/visual-element.mjs":false,"./components/AnimatePresence/use-presence.mjs":false,"./components/AnimatePresence/use-presence-data.mjs":false,"./events/use-dom-event.mjs":false,"./gestures/drag/use-drag-controls.mjs":false,"./motion/utils/is-motion-component.mjs":false,"./motion/utils/unwrap-motion-component.mjs":false,"./motion/utils/valid-prop.mjs":false,"./projection/styles/scale-correction.mjs":false,"./projection/use-instant-layout-transition.mjs":false,"./projection/use-reset-projection.mjs":false,"./render/html/utils/build-transform.mjs":false,"./render/store.mjs":false,"./render/VisualElement.mjs":false,"./utils/use-animation-frame.mjs":false,"./utils/use-cycle.mjs":false,"./utils/use-in-view.mjs":false,"./utils/use-instant-transition.mjs":false,"./utils/use-page-in-view.mjs":false,"./animation/optimized-appear/data-id.mjs":false,"./animation/optimized-appear/start.mjs":false,"./context/LayoutGroupContext.mjs":false,"./context/MotionConfigContext.mjs":false,"./context/MotionContext/index.mjs":false,"./context/PresenceContext.mjs":false,"./context/SwitchLayoutGroupContext.mjs":false,"./animation/hooks/use-animated-state.mjs":false,"./components/AnimateSharedLayout.mjs":false,"./context/DeprecatedLayoutGroupContext.mjs":false,"./value/use-inverted-scale.mjs":false,"./utils/delay.mjs":false,"./components/Reorder/namespace.mjs":false,"./animation/animate/index.mjs":false,"./animation/animators/waapi/animate-style.mjs":false,"./render/dom/scroll/index.mjs":false,"./render/dom/scroll/track.mjs":false,"./render/dom/viewport/index.mjs":false,"./utils/distance.mjs":false,"motion-dom":false,"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gFHyt":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "motion", ()=>motion);
var _createVisualElementMjs = require("../../dom/create-visual-element.mjs");
var _createProxyMjs = require("../create-proxy.mjs");
var _featureBundleMjs = require("./feature-bundle.mjs");
const motion = /*@__PURE__*/ (0, _createProxyMjs.createMotionProxy)((0, _featureBundleMjs.featureBundle), (0, _createVisualElementMjs.createDomVisualElement));

},{"../../dom/create-visual-element.mjs":"4NHtR","../create-proxy.mjs":"dZdZP","./feature-bundle.mjs":"hE92I","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4NHtR":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createDomVisualElement", ()=>createDomVisualElement);
var _react = require("react");
var _htmlvisualElementMjs = require("../html/HTMLVisualElement.mjs");
var _svgvisualElementMjs = require("../svg/SVGVisualElement.mjs");
var _isSvgComponentMjs = require("./utils/is-svg-component.mjs");
const createDomVisualElement = (Component, options)=>{
    return (0, _isSvgComponentMjs.isSVGComponent)(Component) ? new (0, _svgvisualElementMjs.SVGVisualElement)(options) : new (0, _htmlvisualElementMjs.HTMLVisualElement)(options, {
        allowProjection: Component !== (0, _react.Fragment)
    });
};

},{"react":"jMk1U","../html/HTMLVisualElement.mjs":"hnQoE","../svg/SVGVisualElement.mjs":"eTJ8e","./utils/is-svg-component.mjs":"6Cpca","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hnQoE":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "HTMLVisualElement", ()=>HTMLVisualElement);
parcelHelpers.export(exports, "getComputedStyle", ()=>getComputedStyle);
var _motionDom = require("motion-dom");
var _measureMjs = require("../../projection/utils/measure.mjs");
var _domvisualElementMjs = require("../dom/DOMVisualElement.mjs");
var _buildStylesMjs = require("./utils/build-styles.mjs");
var _renderMjs = require("./utils/render.mjs");
var _scrapeMotionValuesMjs = require("./utils/scrape-motion-values.mjs");
function getComputedStyle(element) {
    return window.getComputedStyle(element);
}
class HTMLVisualElement extends (0, _domvisualElementMjs.DOMVisualElement) {
    constructor(){
        super(...arguments);
        this.type = "html";
        this.renderInstance = (0, _renderMjs.renderHTML);
    }
    readValueFromInstance(instance, key) {
        if ((0, _motionDom.transformProps).has(key)) return this.projection?.isProjecting ? (0, _motionDom.defaultTransformValue)(key) : (0, _motionDom.readTransformValue)(instance, key);
        else {
            const computedStyle = getComputedStyle(instance);
            const value = ((0, _motionDom.isCSSVariableName)(key) ? computedStyle.getPropertyValue(key) : computedStyle[key]) || 0;
            return typeof value === "string" ? value.trim() : value;
        }
    }
    measureInstanceViewportBox(instance, { transformPagePoint }) {
        return (0, _measureMjs.measureViewportBox)(instance, transformPagePoint);
    }
    build(renderState, latestValues, props) {
        (0, _buildStylesMjs.buildHTMLStyles)(renderState, latestValues, props.transformTemplate);
    }
    scrapeMotionValuesFromProps(props, prevProps, visualElement) {
        return (0, _scrapeMotionValuesMjs.scrapeMotionValuesFromProps)(props, prevProps, visualElement);
    }
}

},{"motion-dom":"lRV3L","../../projection/utils/measure.mjs":"l97iJ","../dom/DOMVisualElement.mjs":"gkAIV","./utils/build-styles.mjs":"bq8Eb","./utils/render.mjs":"bU7sC","./utils/scrape-motion-values.mjs":"bVwEk","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lRV3L":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AsyncMotionValueAnimation", ()=>(0, _asyncMotionValueAnimationMjs.AsyncMotionValueAnimation));
parcelHelpers.export(exports, "GroupAnimation", ()=>(0, _groupAnimationMjs.GroupAnimation));
parcelHelpers.export(exports, "GroupAnimationWithThen", ()=>(0, _groupAnimationWithThenMjs.GroupAnimationWithThen));
parcelHelpers.export(exports, "JSAnimation", ()=>(0, _jsanimationMjs.JSAnimation));
parcelHelpers.export(exports, "animateValue", ()=>(0, _jsanimationMjs.animateValue));
parcelHelpers.export(exports, "NativeAnimation", ()=>(0, _nativeAnimationMjs.NativeAnimation));
parcelHelpers.export(exports, "NativeAnimationExtended", ()=>(0, _nativeAnimationExtendedMjs.NativeAnimationExtended));
parcelHelpers.export(exports, "NativeAnimationWrapper", ()=>(0, _nativeAnimationWrapperMjs.NativeAnimationWrapper));
parcelHelpers.export(exports, "animationMapKey", ()=>(0, _activeAnimationsMjs.animationMapKey));
parcelHelpers.export(exports, "getAnimationMap", ()=>(0, _activeAnimationsMjs.getAnimationMap));
parcelHelpers.export(exports, "getVariableValue", ()=>(0, _cssVariablesConversionMjs.getVariableValue));
parcelHelpers.export(exports, "parseCSSVariable", ()=>(0, _cssVariablesConversionMjs.parseCSSVariable));
parcelHelpers.export(exports, "getValueTransition", ()=>(0, _getValueTransitionMjs.getValueTransition));
parcelHelpers.export(exports, "isCSSVariableName", ()=>(0, _isCssVariableMjs.isCSSVariableName));
parcelHelpers.export(exports, "isCSSVariableToken", ()=>(0, _isCssVariableMjs.isCSSVariableToken));
parcelHelpers.export(exports, "makeAnimationInstant", ()=>(0, _makeAnimationInstantMjs.makeAnimationInstant));
parcelHelpers.export(exports, "inertia", ()=>(0, _inertiaMjs.inertia));
parcelHelpers.export(exports, "defaultEasing", ()=>(0, _keyframesMjs.defaultEasing));
parcelHelpers.export(exports, "keyframes", ()=>(0, _keyframesMjs.keyframes));
parcelHelpers.export(exports, "spring", ()=>(0, _indexMjs.spring));
parcelHelpers.export(exports, "calcGeneratorDuration", ()=>(0, _calcDurationMjs.calcGeneratorDuration));
parcelHelpers.export(exports, "maxGeneratorDuration", ()=>(0, _calcDurationMjs.maxGeneratorDuration));
parcelHelpers.export(exports, "createGeneratorEasing", ()=>(0, _createGeneratorEasingMjs.createGeneratorEasing));
parcelHelpers.export(exports, "isGenerator", ()=>(0, _isGeneratorMjs.isGenerator));
parcelHelpers.export(exports, "DOMKeyframesResolver", ()=>(0, _domkeyframesResolverMjs.DOMKeyframesResolver));
parcelHelpers.export(exports, "KeyframeResolver", ()=>(0, _keyframesResolverMjs.KeyframeResolver));
parcelHelpers.export(exports, "flushKeyframeResolvers", ()=>(0, _keyframesResolverMjs.flushKeyframeResolvers));
parcelHelpers.export(exports, "defaultOffset", ()=>(0, _defaultMjs.defaultOffset));
parcelHelpers.export(exports, "fillOffset", ()=>(0, _fillMjs.fillOffset));
parcelHelpers.export(exports, "convertOffsetToTimes", ()=>(0, _timeMjs.convertOffsetToTimes));
parcelHelpers.export(exports, "applyPxDefaults", ()=>(0, _applyPxDefaultsMjs.applyPxDefaults));
parcelHelpers.export(exports, "fillWildcards", ()=>(0, _fillWildcardsMjs.fillWildcards));
parcelHelpers.export(exports, "cubicBezierAsString", ()=>(0, _cubicBezierMjs.cubicBezierAsString));
parcelHelpers.export(exports, "isWaapiSupportedEasing", ()=>(0, _isSupportedMjs.isWaapiSupportedEasing));
parcelHelpers.export(exports, "mapEasingToNativeEasing", ()=>(0, _mapEasingMjs.mapEasingToNativeEasing));
parcelHelpers.export(exports, "supportedWaapiEasing", ()=>(0, _supportedMjs.supportedWaapiEasing));
parcelHelpers.export(exports, "startWaapiAnimation", ()=>(0, _startWaapiAnimationMjs.startWaapiAnimation));
parcelHelpers.export(exports, "supportsPartialKeyframes", ()=>(0, _partialKeyframesMjs.supportsPartialKeyframes));
parcelHelpers.export(exports, "supportsBrowserAnimation", ()=>(0, _waapiMjs.supportsBrowserAnimation));
parcelHelpers.export(exports, "acceleratedValues", ()=>(0, _acceleratedValuesMjs.acceleratedValues));
parcelHelpers.export(exports, "applyGeneratorOptions", ()=>(0, _applyGeneratorMjs.applyGeneratorOptions));
parcelHelpers.export(exports, "generateLinearEasing", ()=>(0, _linearMjs.generateLinearEasing));
parcelHelpers.export(exports, "addAttrValue", ()=>(0, _indexMjs1.addAttrValue));
parcelHelpers.export(exports, "attrEffect", ()=>(0, _indexMjs1.attrEffect));
parcelHelpers.export(exports, "propEffect", ()=>(0, _indexMjs2.propEffect));
parcelHelpers.export(exports, "addStyleValue", ()=>(0, _indexMjs3.addStyleValue));
parcelHelpers.export(exports, "styleEffect", ()=>(0, _indexMjs3.styleEffect));
parcelHelpers.export(exports, "svgEffect", ()=>(0, _indexMjs4.svgEffect));
parcelHelpers.export(exports, "createRenderBatcher", ()=>(0, _batcherMjs.createRenderBatcher));
parcelHelpers.export(exports, "cancelMicrotask", ()=>(0, _microtaskMjs.cancelMicrotask));
parcelHelpers.export(exports, "microtask", ()=>(0, _microtaskMjs.microtask));
parcelHelpers.export(exports, "time", ()=>(0, _syncTimeMjs.time));
parcelHelpers.export(exports, "isDragActive", ()=>(0, _isActiveMjs.isDragActive));
parcelHelpers.export(exports, "isDragging", ()=>(0, _isActiveMjs.isDragging));
parcelHelpers.export(exports, "setDragLock", ()=>(0, _setActiveMjs.setDragLock));
parcelHelpers.export(exports, "hover", ()=>(0, _hoverMjs.hover));
parcelHelpers.export(exports, "press", ()=>(0, _indexMjs5.press));
parcelHelpers.export(exports, "isNodeOrChild", ()=>(0, _isNodeOrChildMjs.isNodeOrChild));
parcelHelpers.export(exports, "isPrimaryPointer", ()=>(0, _isPrimaryPointerMjs.isPrimaryPointer));
parcelHelpers.export(exports, "defaultTransformValue", ()=>(0, _parseTransformMjs.defaultTransformValue));
parcelHelpers.export(exports, "parseValueFromTransform", ()=>(0, _parseTransformMjs.parseValueFromTransform));
parcelHelpers.export(exports, "readTransformValue", ()=>(0, _parseTransformMjs.readTransformValue));
parcelHelpers.export(exports, "getComputedStyle", ()=>(0, _styleComputedMjs.getComputedStyle));
parcelHelpers.export(exports, "setStyle", ()=>(0, _styleSetMjs.setStyle));
parcelHelpers.export(exports, "positionalKeys", ()=>(0, _keysPositionMjs.positionalKeys));
parcelHelpers.export(exports, "transformPropOrder", ()=>(0, _keysTransformMjs.transformPropOrder));
parcelHelpers.export(exports, "transformProps", ()=>(0, _keysTransformMjs.transformProps));
parcelHelpers.export(exports, "resize", ()=>(0, _indexMjs6.resize));
parcelHelpers.export(exports, "observeTimeline", ()=>(0, _observeMjs.observeTimeline));
parcelHelpers.export(exports, "recordStats", ()=>(0, _indexMjs7.recordStats));
parcelHelpers.export(exports, "activeAnimations", ()=>(0, _animationCountMjs.activeAnimations));
parcelHelpers.export(exports, "statsBuffer", ()=>(0, _bufferMjs.statsBuffer));
parcelHelpers.export(exports, "interpolate", ()=>(0, _interpolateMjs.interpolate));
parcelHelpers.export(exports, "isHTMLElement", ()=>(0, _isHtmlElementMjs.isHTMLElement));
parcelHelpers.export(exports, "isSVGElement", ()=>(0, _isSvgElementMjs.isSVGElement));
parcelHelpers.export(exports, "isSVGSVGElement", ()=>(0, _isSvgSvgElementMjs.isSVGSVGElement));
parcelHelpers.export(exports, "mix", ()=>(0, _indexMjs8.mix));
parcelHelpers.export(exports, "mixColor", ()=>(0, _colorMjs.mixColor));
parcelHelpers.export(exports, "mixLinearColor", ()=>(0, _colorMjs.mixLinearColor));
parcelHelpers.export(exports, "getMixer", ()=>(0, _complexMjs.getMixer));
parcelHelpers.export(exports, "mixArray", ()=>(0, _complexMjs.mixArray));
parcelHelpers.export(exports, "mixComplex", ()=>(0, _complexMjs.mixComplex));
parcelHelpers.export(exports, "mixObject", ()=>(0, _complexMjs.mixObject));
parcelHelpers.export(exports, "mixImmediate", ()=>(0, _immediateMjs.mixImmediate));
parcelHelpers.export(exports, "mixNumber", ()=>(0, _numberMjs.mixNumber));
parcelHelpers.export(exports, "invisibleValues", ()=>(0, _visibilityMjs.invisibleValues));
parcelHelpers.export(exports, "mixVisibility", ()=>(0, _visibilityMjs.mixVisibility));
parcelHelpers.export(exports, "resolveElements", ()=>(0, _resolveElementsMjs.resolveElements));
parcelHelpers.export(exports, "getOriginIndex", ()=>(0, _staggerMjs.getOriginIndex));
parcelHelpers.export(exports, "stagger", ()=>(0, _staggerMjs.stagger));
parcelHelpers.export(exports, "supportsFlags", ()=>(0, _flagsMjs.supportsFlags));
parcelHelpers.export(exports, "supportsLinearEasing", ()=>(0, _linearEasingMjs.supportsLinearEasing));
parcelHelpers.export(exports, "supportsScrollTimeline", ()=>(0, _scrollTimelineMjs.supportsScrollTimeline));
parcelHelpers.export(exports, "transform", ()=>(0, _transformMjs.transform));
parcelHelpers.export(exports, "MotionValue", ()=>(0, _indexMjs9.MotionValue));
parcelHelpers.export(exports, "collectMotionValues", ()=>(0, _indexMjs9.collectMotionValues));
parcelHelpers.export(exports, "motionValue", ()=>(0, _indexMjs9.motionValue));
parcelHelpers.export(exports, "mapValue", ()=>(0, _mapValueMjs.mapValue));
parcelHelpers.export(exports, "attachSpring", ()=>(0, _springValueMjs.attachSpring));
parcelHelpers.export(exports, "springValue", ()=>(0, _springValueMjs.springValue));
parcelHelpers.export(exports, "transformValue", ()=>(0, _transformValueMjs.transformValue));
parcelHelpers.export(exports, "color", ()=>(0, _indexMjs10.color));
parcelHelpers.export(exports, "hex", ()=>(0, _hexMjs.hex));
parcelHelpers.export(exports, "hsla", ()=>(0, _hslaMjs.hsla));
parcelHelpers.export(exports, "hslaToRgba", ()=>(0, _hslaToRgbaMjs.hslaToRgba));
parcelHelpers.export(exports, "rgbUnit", ()=>(0, _rgbaMjs.rgbUnit));
parcelHelpers.export(exports, "rgba", ()=>(0, _rgbaMjs.rgba));
parcelHelpers.export(exports, "analyseComplexValue", ()=>(0, _indexMjs11.analyseComplexValue));
parcelHelpers.export(exports, "complex", ()=>(0, _indexMjs11.complex));
parcelHelpers.export(exports, "dimensionValueTypes", ()=>(0, _dimensionsMjs.dimensionValueTypes));
parcelHelpers.export(exports, "findDimensionValueType", ()=>(0, _dimensionsMjs.findDimensionValueType));
parcelHelpers.export(exports, "defaultValueTypes", ()=>(0, _defaultsMjs.defaultValueTypes));
parcelHelpers.export(exports, "getDefaultValueType", ()=>(0, _defaultsMjs.getDefaultValueType));
parcelHelpers.export(exports, "numberValueTypes", ()=>(0, _numberMjs1.numberValueTypes));
parcelHelpers.export(exports, "transformValueTypes", ()=>(0, _transformMjs1.transformValueTypes));
parcelHelpers.export(exports, "alpha", ()=>(0, _indexMjs12.alpha));
parcelHelpers.export(exports, "number", ()=>(0, _indexMjs12.number));
parcelHelpers.export(exports, "scale", ()=>(0, _indexMjs12.scale));
parcelHelpers.export(exports, "degrees", ()=>(0, _unitsMjs.degrees));
parcelHelpers.export(exports, "percent", ()=>(0, _unitsMjs.percent));
parcelHelpers.export(exports, "progressPercentage", ()=>(0, _unitsMjs.progressPercentage));
parcelHelpers.export(exports, "px", ()=>(0, _unitsMjs.px));
parcelHelpers.export(exports, "vh", ()=>(0, _unitsMjs.vh));
parcelHelpers.export(exports, "vw", ()=>(0, _unitsMjs.vw));
parcelHelpers.export(exports, "testValueType", ()=>(0, _testMjs.testValueType));
parcelHelpers.export(exports, "getAnimatableNone", ()=>(0, _animatableNoneMjs.getAnimatableNone));
parcelHelpers.export(exports, "findValueType", ()=>(0, _findMjs.findValueType));
parcelHelpers.export(exports, "getValueAsType", ()=>(0, _getAsTypeMjs.getValueAsType));
parcelHelpers.export(exports, "isMotionValue", ()=>(0, _isMotionValueMjs.isMotionValue));
parcelHelpers.export(exports, "ViewTransitionBuilder", ()=>(0, _indexMjs13.ViewTransitionBuilder));
parcelHelpers.export(exports, "animateView", ()=>(0, _indexMjs13.animateView));
parcelHelpers.export(exports, "getViewAnimationLayerInfo", ()=>(0, _getLayerInfoMjs.getViewAnimationLayerInfo));
parcelHelpers.export(exports, "getViewAnimations", ()=>(0, _getViewAnimationsMjs.getViewAnimations));
parcelHelpers.export(exports, "cancelSync", ()=>(0, _indexLegacyMjs.cancelSync));
parcelHelpers.export(exports, "sync", ()=>(0, _indexLegacyMjs.sync));
parcelHelpers.export(exports, "cancelFrame", ()=>(0, _frameMjs.cancelFrame));
parcelHelpers.export(exports, "frame", ()=>(0, _frameMjs.frame));
parcelHelpers.export(exports, "frameData", ()=>(0, _frameMjs.frameData));
parcelHelpers.export(exports, "frameSteps", ()=>(0, _frameMjs.frameSteps));
var _asyncMotionValueAnimationMjs = require("./animation/AsyncMotionValueAnimation.mjs");
var _groupAnimationMjs = require("./animation/GroupAnimation.mjs");
var _groupAnimationWithThenMjs = require("./animation/GroupAnimationWithThen.mjs");
var _jsanimationMjs = require("./animation/JSAnimation.mjs");
var _nativeAnimationMjs = require("./animation/NativeAnimation.mjs");
var _nativeAnimationExtendedMjs = require("./animation/NativeAnimationExtended.mjs");
var _nativeAnimationWrapperMjs = require("./animation/NativeAnimationWrapper.mjs");
var _activeAnimationsMjs = require("./animation/utils/active-animations.mjs");
var _cssVariablesConversionMjs = require("./animation/utils/css-variables-conversion.mjs");
var _getValueTransitionMjs = require("./animation/utils/get-value-transition.mjs");
var _isCssVariableMjs = require("./animation/utils/is-css-variable.mjs");
var _makeAnimationInstantMjs = require("./animation/utils/make-animation-instant.mjs");
var _inertiaMjs = require("./animation/generators/inertia.mjs");
var _keyframesMjs = require("./animation/generators/keyframes.mjs");
var _indexMjs = require("./animation/generators/spring/index.mjs");
var _calcDurationMjs = require("./animation/generators/utils/calc-duration.mjs");
var _createGeneratorEasingMjs = require("./animation/generators/utils/create-generator-easing.mjs");
var _isGeneratorMjs = require("./animation/generators/utils/is-generator.mjs");
var _domkeyframesResolverMjs = require("./animation/keyframes/DOMKeyframesResolver.mjs");
var _keyframesResolverMjs = require("./animation/keyframes/KeyframesResolver.mjs");
var _defaultMjs = require("./animation/keyframes/offsets/default.mjs");
var _fillMjs = require("./animation/keyframes/offsets/fill.mjs");
var _timeMjs = require("./animation/keyframes/offsets/time.mjs");
var _applyPxDefaultsMjs = require("./animation/keyframes/utils/apply-px-defaults.mjs");
var _fillWildcardsMjs = require("./animation/keyframes/utils/fill-wildcards.mjs");
var _cubicBezierMjs = require("./animation/waapi/easing/cubic-bezier.mjs");
var _isSupportedMjs = require("./animation/waapi/easing/is-supported.mjs");
var _mapEasingMjs = require("./animation/waapi/easing/map-easing.mjs");
var _supportedMjs = require("./animation/waapi/easing/supported.mjs");
var _startWaapiAnimationMjs = require("./animation/waapi/start-waapi-animation.mjs");
var _partialKeyframesMjs = require("./animation/waapi/supports/partial-keyframes.mjs");
var _waapiMjs = require("./animation/waapi/supports/waapi.mjs");
var _acceleratedValuesMjs = require("./animation/waapi/utils/accelerated-values.mjs");
var _applyGeneratorMjs = require("./animation/waapi/utils/apply-generator.mjs");
var _linearMjs = require("./animation/waapi/utils/linear.mjs");
var _indexMjs1 = require("./effects/attr/index.mjs");
var _indexMjs2 = require("./effects/prop/index.mjs");
var _indexMjs3 = require("./effects/style/index.mjs");
var _indexMjs4 = require("./effects/svg/index.mjs");
var _batcherMjs = require("./frameloop/batcher.mjs");
var _microtaskMjs = require("./frameloop/microtask.mjs");
var _syncTimeMjs = require("./frameloop/sync-time.mjs");
var _isActiveMjs = require("./gestures/drag/state/is-active.mjs");
var _setActiveMjs = require("./gestures/drag/state/set-active.mjs");
var _hoverMjs = require("./gestures/hover.mjs");
var _indexMjs5 = require("./gestures/press/index.mjs");
var _isNodeOrChildMjs = require("./gestures/utils/is-node-or-child.mjs");
var _isPrimaryPointerMjs = require("./gestures/utils/is-primary-pointer.mjs");
var _parseTransformMjs = require("./render/dom/parse-transform.mjs");
var _styleComputedMjs = require("./render/dom/style-computed.mjs");
var _styleSetMjs = require("./render/dom/style-set.mjs");
var _keysPositionMjs = require("./render/utils/keys-position.mjs");
var _keysTransformMjs = require("./render/utils/keys-transform.mjs");
var _indexMjs6 = require("./resize/index.mjs");
var _observeMjs = require("./scroll/observe.mjs");
var _indexMjs7 = require("./stats/index.mjs");
var _animationCountMjs = require("./stats/animation-count.mjs");
var _bufferMjs = require("./stats/buffer.mjs");
var _interpolateMjs = require("./utils/interpolate.mjs");
var _isHtmlElementMjs = require("./utils/is-html-element.mjs");
var _isSvgElementMjs = require("./utils/is-svg-element.mjs");
var _isSvgSvgElementMjs = require("./utils/is-svg-svg-element.mjs");
var _indexMjs8 = require("./utils/mix/index.mjs");
var _colorMjs = require("./utils/mix/color.mjs");
var _complexMjs = require("./utils/mix/complex.mjs");
var _immediateMjs = require("./utils/mix/immediate.mjs");
var _numberMjs = require("./utils/mix/number.mjs");
var _visibilityMjs = require("./utils/mix/visibility.mjs");
var _resolveElementsMjs = require("./utils/resolve-elements.mjs");
var _staggerMjs = require("./utils/stagger.mjs");
var _flagsMjs = require("./utils/supports/flags.mjs");
var _linearEasingMjs = require("./utils/supports/linear-easing.mjs");
var _scrollTimelineMjs = require("./utils/supports/scroll-timeline.mjs");
var _transformMjs = require("./utils/transform.mjs");
var _indexMjs9 = require("./value/index.mjs");
var _mapValueMjs = require("./value/map-value.mjs");
var _springValueMjs = require("./value/spring-value.mjs");
var _transformValueMjs = require("./value/transform-value.mjs");
var _indexMjs10 = require("./value/types/color/index.mjs");
var _hexMjs = require("./value/types/color/hex.mjs");
var _hslaMjs = require("./value/types/color/hsla.mjs");
var _hslaToRgbaMjs = require("./value/types/color/hsla-to-rgba.mjs");
var _rgbaMjs = require("./value/types/color/rgba.mjs");
var _indexMjs11 = require("./value/types/complex/index.mjs");
var _dimensionsMjs = require("./value/types/dimensions.mjs");
var _defaultsMjs = require("./value/types/maps/defaults.mjs");
var _numberMjs1 = require("./value/types/maps/number.mjs");
var _transformMjs1 = require("./value/types/maps/transform.mjs");
var _indexMjs12 = require("./value/types/numbers/index.mjs");
var _unitsMjs = require("./value/types/numbers/units.mjs");
var _testMjs = require("./value/types/test.mjs");
var _animatableNoneMjs = require("./value/types/utils/animatable-none.mjs");
var _findMjs = require("./value/types/utils/find.mjs");
var _getAsTypeMjs = require("./value/types/utils/get-as-type.mjs");
var _isMotionValueMjs = require("./value/utils/is-motion-value.mjs");
var _indexMjs13 = require("./view/index.mjs");
var _getLayerInfoMjs = require("./view/utils/get-layer-info.mjs");
var _getViewAnimationsMjs = require("./view/utils/get-view-animations.mjs");
var _indexLegacyMjs = require("./frameloop/index-legacy.mjs");
var _frameMjs = require("./frameloop/frame.mjs");

},{"./animation/AsyncMotionValueAnimation.mjs":"fVwbC","./animation/GroupAnimation.mjs":false,"./animation/GroupAnimationWithThen.mjs":false,"./animation/JSAnimation.mjs":"lNHfP","./animation/NativeAnimation.mjs":false,"./animation/NativeAnimationExtended.mjs":false,"./animation/NativeAnimationWrapper.mjs":false,"./animation/utils/active-animations.mjs":false,"./animation/utils/css-variables-conversion.mjs":false,"./animation/utils/get-value-transition.mjs":"hQe3d","./animation/utils/is-css-variable.mjs":"fWq3y","./animation/utils/make-animation-instant.mjs":"9nuIy","./animation/generators/inertia.mjs":false,"./animation/generators/keyframes.mjs":false,"./animation/generators/spring/index.mjs":false,"./animation/generators/utils/calc-duration.mjs":false,"./animation/generators/utils/create-generator-easing.mjs":false,"./animation/generators/utils/is-generator.mjs":false,"./animation/keyframes/DOMKeyframesResolver.mjs":"e0euv","./animation/keyframes/KeyframesResolver.mjs":"2zsno","./animation/keyframes/offsets/default.mjs":false,"./animation/keyframes/offsets/fill.mjs":false,"./animation/keyframes/offsets/time.mjs":false,"./animation/keyframes/utils/apply-px-defaults.mjs":false,"./animation/keyframes/utils/fill-wildcards.mjs":false,"./animation/waapi/easing/cubic-bezier.mjs":false,"./animation/waapi/easing/is-supported.mjs":false,"./animation/waapi/easing/map-easing.mjs":false,"./animation/waapi/easing/supported.mjs":false,"./animation/waapi/start-waapi-animation.mjs":false,"./animation/waapi/supports/partial-keyframes.mjs":false,"./animation/waapi/supports/waapi.mjs":false,"./animation/waapi/utils/accelerated-values.mjs":false,"./animation/waapi/utils/apply-generator.mjs":false,"./animation/waapi/utils/linear.mjs":false,"./effects/attr/index.mjs":false,"./effects/prop/index.mjs":false,"./effects/style/index.mjs":false,"./effects/svg/index.mjs":false,"./frameloop/batcher.mjs":false,"./frameloop/microtask.mjs":"dwHSt","./frameloop/sync-time.mjs":"7oxaC","./gestures/drag/state/is-active.mjs":false,"./gestures/drag/state/set-active.mjs":"flXje","./gestures/hover.mjs":"3uHN2","./gestures/press/index.mjs":"5UNMz","./gestures/utils/is-node-or-child.mjs":false,"./gestures/utils/is-primary-pointer.mjs":"iO3rF","./render/dom/parse-transform.mjs":"bdwsj","./render/dom/style-computed.mjs":false,"./render/dom/style-set.mjs":false,"./render/utils/keys-position.mjs":"OUtz6","./render/utils/keys-transform.mjs":"lC9VE","./resize/index.mjs":false,"./scroll/observe.mjs":false,"./stats/index.mjs":false,"./stats/animation-count.mjs":"j8Cp5","./stats/buffer.mjs":"en8S3","./utils/interpolate.mjs":false,"./utils/is-html-element.mjs":false,"./utils/is-svg-element.mjs":"hytWY","./utils/is-svg-svg-element.mjs":"hRltZ","./utils/mix/index.mjs":false,"./utils/mix/color.mjs":false,"./utils/mix/complex.mjs":false,"./utils/mix/immediate.mjs":false,"./utils/mix/number.mjs":"7FgQR","./utils/mix/visibility.mjs":false,"./utils/resolve-elements.mjs":false,"./utils/stagger.mjs":false,"./utils/supports/flags.mjs":false,"./utils/supports/linear-easing.mjs":false,"./utils/supports/scroll-timeline.mjs":false,"./utils/transform.mjs":false,"./value/index.mjs":"fW4BT","./value/map-value.mjs":false,"./value/spring-value.mjs":false,"./value/transform-value.mjs":false,"./value/types/color/index.mjs":false,"./value/types/color/hex.mjs":false,"./value/types/color/hsla.mjs":false,"./value/types/color/hsla-to-rgba.mjs":false,"./value/types/color/rgba.mjs":false,"./value/types/complex/index.mjs":"fH52E","./value/types/dimensions.mjs":false,"./value/types/maps/defaults.mjs":"f3IhA","./value/types/maps/number.mjs":"d9aLH","./value/types/maps/transform.mjs":false,"./value/types/numbers/index.mjs":false,"./value/types/numbers/units.mjs":"iToJc","./value/types/test.mjs":false,"./value/types/utils/animatable-none.mjs":"byPq0","./value/types/utils/find.mjs":"5SKmS","./value/types/utils/get-as-type.mjs":"jdgfU","./value/utils/is-motion-value.mjs":"ltB4Y","./view/index.mjs":false,"./view/utils/get-layer-info.mjs":false,"./view/utils/get-view-animations.mjs":false,"./frameloop/index-legacy.mjs":false,"./frameloop/frame.mjs":"5aQJa","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fVwbC":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AsyncMotionValueAnimation", ()=>AsyncMotionValueAnimation);
var _motionUtils = require("motion-utils");
var _syncTimeMjs = require("../frameloop/sync-time.mjs");
var _jsanimationMjs = require("./JSAnimation.mjs");
var _getFinalMjs = require("./keyframes/get-final.mjs");
var _keyframesResolverMjs = require("./keyframes/KeyframesResolver.mjs");
var _nativeAnimationExtendedMjs = require("./NativeAnimationExtended.mjs");
var _canAnimateMjs = require("./utils/can-animate.mjs");
var _makeAnimationInstantMjs = require("./utils/make-animation-instant.mjs");
var _withPromiseMjs = require("./utils/WithPromise.mjs");
var _waapiMjs = require("./waapi/supports/waapi.mjs");
/**
 * Maximum time allowed between an animation being created and it being
 * resolved for us to use the latter as the start time.
 *
 * This is to ensure that while we prefer to "start" an animation as soon
 * as it's triggered, we also want to avoid a visual jump if there's a big delay
 * between these two moments.
 */ const MAX_RESOLVE_DELAY = 40;
class AsyncMotionValueAnimation extends (0, _withPromiseMjs.WithPromise) {
    constructor({ autoplay = true, delay = 0, type = "keyframes", repeat = 0, repeatDelay = 0, repeatType = "loop", keyframes, name, motionValue, element, ...options }){
        super();
        /**
         * Bound to support return animation.stop pattern
         */ this.stop = ()=>{
            if (this._animation) {
                this._animation.stop();
                this.stopTimeline?.();
            }
            this.keyframeResolver?.cancel();
        };
        this.createdAt = (0, _syncTimeMjs.time).now();
        const optionsWithDefaults = {
            autoplay,
            delay,
            type,
            repeat,
            repeatDelay,
            repeatType,
            name,
            motionValue,
            element,
            ...options
        };
        const KeyframeResolver$1 = element?.KeyframeResolver || (0, _keyframesResolverMjs.KeyframeResolver);
        this.keyframeResolver = new KeyframeResolver$1(keyframes, (resolvedKeyframes, finalKeyframe, forced)=>this.onKeyframesResolved(resolvedKeyframes, finalKeyframe, optionsWithDefaults, !forced), name, motionValue, element);
        this.keyframeResolver?.scheduleResolve();
    }
    onKeyframesResolved(keyframes, finalKeyframe, options, sync) {
        this.keyframeResolver = undefined;
        const { name, type, velocity, delay, isHandoff, onUpdate } = options;
        this.resolvedAt = (0, _syncTimeMjs.time).now();
        /**
         * If we can't animate this value with the resolved keyframes
         * then we should complete it immediately.
         */ if (!(0, _canAnimateMjs.canAnimate)(keyframes, name, type, velocity)) {
            if ((0, _motionUtils.MotionGlobalConfig).instantAnimations || !delay) onUpdate?.((0, _getFinalMjs.getFinalKeyframe)(keyframes, options, finalKeyframe));
            keyframes[0] = keyframes[keyframes.length - 1];
            (0, _makeAnimationInstantMjs.makeAnimationInstant)(options);
            options.repeat = 0;
        }
        /**
         * Resolve startTime for the animation.
         *
         * This method uses the createdAt and resolvedAt to calculate the
         * animation startTime. *Ideally*, we would use the createdAt time as t=0
         * as the following frame would then be the first frame of the animation in
         * progress, which would feel snappier.
         *
         * However, if there's a delay (main thread work) between the creation of
         * the animation and the first commited frame, we prefer to use resolvedAt
         * to avoid a sudden jump into the animation.
         */ const startTime = sync ? !this.resolvedAt ? this.createdAt : this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY ? this.resolvedAt : this.createdAt : undefined;
        const resolvedOptions = {
            startTime,
            finalKeyframe,
            ...options,
            keyframes
        };
        /**
         * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via
         * WAAPI. Therefore, this animation must be JS to ensure it runs "under" the
         * optimised animation.
         */ const animation = !isHandoff && (0, _waapiMjs.supportsBrowserAnimation)(resolvedOptions) ? new (0, _nativeAnimationExtendedMjs.NativeAnimationExtended)({
            ...resolvedOptions,
            element: resolvedOptions.motionValue.owner.current
        }) : new (0, _jsanimationMjs.JSAnimation)(resolvedOptions);
        animation.finished.then(()=>this.notifyFinished()).catch((0, _motionUtils.noop));
        if (this.pendingTimeline) {
            this.stopTimeline = animation.attachTimeline(this.pendingTimeline);
            this.pendingTimeline = undefined;
        }
        this._animation = animation;
    }
    get finished() {
        if (!this._animation) return this._finished;
        else return this.animation.finished;
    }
    then(onResolve, _onReject) {
        return this.finished.finally(onResolve).then(()=>{});
    }
    get animation() {
        if (!this._animation) {
            this.keyframeResolver?.resume();
            (0, _keyframesResolverMjs.flushKeyframeResolvers)();
        }
        return this._animation;
    }
    get duration() {
        return this.animation.duration;
    }
    get iterationDuration() {
        return this.animation.iterationDuration;
    }
    get time() {
        return this.animation.time;
    }
    set time(newTime) {
        this.animation.time = newTime;
    }
    get speed() {
        return this.animation.speed;
    }
    get state() {
        return this.animation.state;
    }
    set speed(newSpeed) {
        this.animation.speed = newSpeed;
    }
    get startTime() {
        return this.animation.startTime;
    }
    attachTimeline(timeline) {
        if (this._animation) this.stopTimeline = this.animation.attachTimeline(timeline);
        else this.pendingTimeline = timeline;
        return ()=>this.stop();
    }
    play() {
        this.animation.play();
    }
    pause() {
        this.animation.pause();
    }
    complete() {
        this.animation.complete();
    }
    cancel() {
        if (this._animation) this.animation.cancel();
        this.keyframeResolver?.cancel();
    }
}

},{"motion-utils":"33eo7","../frameloop/sync-time.mjs":"7oxaC","./JSAnimation.mjs":"lNHfP","./keyframes/get-final.mjs":"2geIJ","./keyframes/KeyframesResolver.mjs":"2zsno","./NativeAnimationExtended.mjs":"gnGVT","./utils/can-animate.mjs":"3ldXM","./utils/make-animation-instant.mjs":"9nuIy","./utils/WithPromise.mjs":"dCrCX","./waapi/supports/waapi.mjs":"8ykih","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"33eo7":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "addUniqueItem", ()=>(0, _arrayMjs.addUniqueItem));
parcelHelpers.export(exports, "moveItem", ()=>(0, _arrayMjs.moveItem));
parcelHelpers.export(exports, "removeItem", ()=>(0, _arrayMjs.removeItem));
parcelHelpers.export(exports, "clamp", ()=>(0, _clampMjs.clamp));
parcelHelpers.export(exports, "invariant", ()=>(0, _errorsMjs.invariant));
parcelHelpers.export(exports, "warning", ()=>(0, _errorsMjs.warning));
parcelHelpers.export(exports, "MotionGlobalConfig", ()=>(0, _globalConfigMjs.MotionGlobalConfig));
parcelHelpers.export(exports, "isNumericalString", ()=>(0, _isNumericalStringMjs.isNumericalString));
parcelHelpers.export(exports, "isObject", ()=>(0, _isObjectMjs.isObject));
parcelHelpers.export(exports, "isZeroValueString", ()=>(0, _isZeroValueStringMjs.isZeroValueString));
parcelHelpers.export(exports, "memo", ()=>(0, _memoMjs.memo));
parcelHelpers.export(exports, "noop", ()=>(0, _noopMjs.noop));
parcelHelpers.export(exports, "pipe", ()=>(0, _pipeMjs.pipe));
parcelHelpers.export(exports, "progress", ()=>(0, _progressMjs.progress));
parcelHelpers.export(exports, "SubscriptionManager", ()=>(0, _subscriptionManagerMjs.SubscriptionManager));
parcelHelpers.export(exports, "millisecondsToSeconds", ()=>(0, _timeConversionMjs.millisecondsToSeconds));
parcelHelpers.export(exports, "secondsToMilliseconds", ()=>(0, _timeConversionMjs.secondsToMilliseconds));
parcelHelpers.export(exports, "velocityPerSecond", ()=>(0, _velocityPerSecondMjs.velocityPerSecond));
parcelHelpers.export(exports, "hasWarned", ()=>(0, _warnOnceMjs.hasWarned));
parcelHelpers.export(exports, "warnOnce", ()=>(0, _warnOnceMjs.warnOnce));
parcelHelpers.export(exports, "wrap", ()=>(0, _wrapMjs.wrap));
parcelHelpers.export(exports, "anticipate", ()=>(0, _anticipateMjs.anticipate));
parcelHelpers.export(exports, "backIn", ()=>(0, _backMjs.backIn));
parcelHelpers.export(exports, "backInOut", ()=>(0, _backMjs.backInOut));
parcelHelpers.export(exports, "backOut", ()=>(0, _backMjs.backOut));
parcelHelpers.export(exports, "circIn", ()=>(0, _circMjs.circIn));
parcelHelpers.export(exports, "circInOut", ()=>(0, _circMjs.circInOut));
parcelHelpers.export(exports, "circOut", ()=>(0, _circMjs.circOut));
parcelHelpers.export(exports, "cubicBezier", ()=>(0, _cubicBezierMjs.cubicBezier));
parcelHelpers.export(exports, "easeIn", ()=>(0, _easeMjs.easeIn));
parcelHelpers.export(exports, "easeInOut", ()=>(0, _easeMjs.easeInOut));
parcelHelpers.export(exports, "easeOut", ()=>(0, _easeMjs.easeOut));
parcelHelpers.export(exports, "mirrorEasing", ()=>(0, _mirrorMjs.mirrorEasing));
parcelHelpers.export(exports, "reverseEasing", ()=>(0, _reverseMjs.reverseEasing));
parcelHelpers.export(exports, "steps", ()=>(0, _stepsMjs.steps));
parcelHelpers.export(exports, "getEasingForSegment", ()=>(0, _getEasingForSegmentMjs.getEasingForSegment));
parcelHelpers.export(exports, "isBezierDefinition", ()=>(0, _isBezierDefinitionMjs.isBezierDefinition));
parcelHelpers.export(exports, "isEasingArray", ()=>(0, _isEasingArrayMjs.isEasingArray));
parcelHelpers.export(exports, "easingDefinitionToFunction", ()=>(0, _mapMjs.easingDefinitionToFunction));
var _arrayMjs = require("./array.mjs");
var _clampMjs = require("./clamp.mjs");
var _errorsMjs = require("./errors.mjs");
var _globalConfigMjs = require("./global-config.mjs");
var _isNumericalStringMjs = require("./is-numerical-string.mjs");
var _isObjectMjs = require("./is-object.mjs");
var _isZeroValueStringMjs = require("./is-zero-value-string.mjs");
var _memoMjs = require("./memo.mjs");
var _noopMjs = require("./noop.mjs");
var _pipeMjs = require("./pipe.mjs");
var _progressMjs = require("./progress.mjs");
var _subscriptionManagerMjs = require("./subscription-manager.mjs");
var _timeConversionMjs = require("./time-conversion.mjs");
var _velocityPerSecondMjs = require("./velocity-per-second.mjs");
var _warnOnceMjs = require("./warn-once.mjs");
var _wrapMjs = require("./wrap.mjs");
var _anticipateMjs = require("./easing/anticipate.mjs");
var _backMjs = require("./easing/back.mjs");
var _circMjs = require("./easing/circ.mjs");
var _cubicBezierMjs = require("./easing/cubic-bezier.mjs");
var _easeMjs = require("./easing/ease.mjs");
var _mirrorMjs = require("./easing/modifiers/mirror.mjs");
var _reverseMjs = require("./easing/modifiers/reverse.mjs");
var _stepsMjs = require("./easing/steps.mjs");
var _getEasingForSegmentMjs = require("./easing/utils/get-easing-for-segment.mjs");
var _isBezierDefinitionMjs = require("./easing/utils/is-bezier-definition.mjs");
var _isEasingArrayMjs = require("./easing/utils/is-easing-array.mjs");
var _mapMjs = require("./easing/utils/map.mjs");

},{"./array.mjs":"5WDWU","./clamp.mjs":"eBFDj","./errors.mjs":"bylNr","./global-config.mjs":"3NGHk","./is-numerical-string.mjs":"4puFk","./is-object.mjs":"iUd2u","./is-zero-value-string.mjs":"g7Xqv","./memo.mjs":"bsYGA","./noop.mjs":"5y3Qd","./pipe.mjs":"1Wb7E","./progress.mjs":"kH56D","./subscription-manager.mjs":"aWqxZ","./time-conversion.mjs":"6l7Ro","./velocity-per-second.mjs":"1PGau","./warn-once.mjs":"feuAu","./wrap.mjs":false,"./easing/anticipate.mjs":"f5O24","./easing/back.mjs":"d14ZQ","./easing/circ.mjs":"2Kqz2","./easing/cubic-bezier.mjs":false,"./easing/ease.mjs":"jJBxc","./easing/modifiers/mirror.mjs":false,"./easing/modifiers/reverse.mjs":false,"./easing/steps.mjs":false,"./easing/utils/get-easing-for-segment.mjs":false,"./easing/utils/is-bezier-definition.mjs":"4sbA6","./easing/utils/is-easing-array.mjs":"9o4wF","./easing/utils/map.mjs":"aL9Bg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5WDWU":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "addUniqueItem", ()=>addUniqueItem);
parcelHelpers.export(exports, "moveItem", ()=>moveItem);
parcelHelpers.export(exports, "removeItem", ()=>removeItem);
function addUniqueItem(arr, item) {
    if (arr.indexOf(item) === -1) arr.push(item);
}
function removeItem(arr, item) {
    const index = arr.indexOf(item);
    if (index > -1) arr.splice(index, 1);
}
// Adapted from array-move
function moveItem([...arr], fromIndex, toIndex) {
    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;
    if (startIndex >= 0 && startIndex < arr.length) {
        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;
        const [item] = arr.splice(fromIndex, 1);
        arr.splice(endIndex, 0, item);
    }
    return arr;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"eBFDj":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "clamp", ()=>clamp);
const clamp = (min, max, v)=>{
    if (v > max) return max;
    if (v < min) return min;
    return v;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bylNr":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "invariant", ()=>invariant);
parcelHelpers.export(exports, "warning", ()=>warning);
var _formatErrorMessageMjs = require("./format-error-message.mjs");
let warning = ()=>{};
let invariant = ()=>{};
warning = (check, message, errorCode)=>{
    if (!check && typeof console !== "undefined") console.warn((0, _formatErrorMessageMjs.formatErrorMessage)(message, errorCode));
};
invariant = (check, message, errorCode)=>{
    if (!check) throw new Error((0, _formatErrorMessageMjs.formatErrorMessage)(message, errorCode));
};

},{"./format-error-message.mjs":"f2EXM","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"f2EXM":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "formatErrorMessage", ()=>formatErrorMessage);
function formatErrorMessage(message, errorCode) {
    return errorCode ? `${message}. For more information and steps for solving, visit https://motion.dev/troubleshooting/${errorCode}` : message;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3NGHk":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "MotionGlobalConfig", ()=>MotionGlobalConfig);
const MotionGlobalConfig = {};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4puFk":[function(require,module,exports,__globalThis) {
/**
 * Check if value is a numerical string, ie a string that is purely a number eg "100" or "-100.1"
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isNumericalString", ()=>isNumericalString);
const isNumericalString = (v)=>/^-?(?:\d+(?:\.\d+)?|\.\d+)$/u.test(v);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"iUd2u":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isObject", ()=>isObject);
function isObject(value) {
    return typeof value === "object" && value !== null;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"g7Xqv":[function(require,module,exports,__globalThis) {
/**
 * Check if the value is a zero value string like "0px" or "0%"
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isZeroValueString", ()=>isZeroValueString);
const isZeroValueString = (v)=>/^0[^.\s]+$/u.test(v);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bsYGA":[function(require,module,exports,__globalThis) {
/*#__NO_SIDE_EFFECTS__*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "memo", ()=>memo);
function memo(callback) {
    let result;
    return ()=>{
        if (result === undefined) result = callback();
        return result;
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5y3Qd":[function(require,module,exports,__globalThis) {
/*#__NO_SIDE_EFFECTS__*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "noop", ()=>noop);
const noop = (any)=>any;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1Wb7E":[function(require,module,exports,__globalThis) {
/**
 * Pipe
 * Compose other transformers to run linearily
 * pipe(min(20), max(40))
 * @param  {...functions} transformers
 * @return {function}
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "pipe", ()=>pipe);
const combineFunctions = (a, b)=>(v)=>b(a(v));
const pipe = (...transformers)=>transformers.reduce(combineFunctions);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"kH56D":[function(require,module,exports,__globalThis) {
/*
  Progress within given range

  Given a lower limit and an upper limit, we return the progress
  (expressed as a number 0-1) represented by the given value, and
  limit that progress to within 0-1.

  @param [number]: Lower limit
  @param [number]: Upper limit
  @param [number]: Value to find progress within given range
  @return [number]: Progress of value within range as expressed 0-1
*/ /*#__NO_SIDE_EFFECTS__*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "progress", ()=>progress);
const progress = (from, to, value)=>{
    const toFromDifference = to - from;
    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aWqxZ":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "SubscriptionManager", ()=>SubscriptionManager);
var _arrayMjs = require("./array.mjs");
class SubscriptionManager {
    constructor(){
        this.subscriptions = [];
    }
    add(handler) {
        (0, _arrayMjs.addUniqueItem)(this.subscriptions, handler);
        return ()=>(0, _arrayMjs.removeItem)(this.subscriptions, handler);
    }
    notify(a, b, c) {
        const numSubscriptions = this.subscriptions.length;
        if (!numSubscriptions) return;
        if (numSubscriptions === 1) /**
             * If there's only a single handler we can just call it without invoking a loop.
             */ this.subscriptions[0](a, b, c);
        else for(let i = 0; i < numSubscriptions; i++){
            /**
                 * Check whether the handler exists before firing as it's possible
                 * the subscriptions were modified during this loop running.
                 */ const handler = this.subscriptions[i];
            handler && handler(a, b, c);
        }
    }
    getSize() {
        return this.subscriptions.length;
    }
    clear() {
        this.subscriptions.length = 0;
    }
}

},{"./array.mjs":"5WDWU","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6l7Ro":[function(require,module,exports,__globalThis) {
/**
 * Converts seconds to milliseconds
 *
 * @param seconds - Time in seconds.
 * @return milliseconds - Converted time in milliseconds.
 */ /*#__NO_SIDE_EFFECTS__*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "millisecondsToSeconds", ()=>millisecondsToSeconds);
parcelHelpers.export(exports, "secondsToMilliseconds", ()=>secondsToMilliseconds);
const secondsToMilliseconds = (seconds)=>seconds * 1000;
/*#__NO_SIDE_EFFECTS__*/ const millisecondsToSeconds = (milliseconds)=>milliseconds / 1000;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1PGau":[function(require,module,exports,__globalThis) {
/*
  Convert velocity into velocity per second

  @param [number]: Unit per frame
  @param [number]: Frame duration in ms
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "velocityPerSecond", ()=>velocityPerSecond);
function velocityPerSecond(velocity, frameDuration) {
    return frameDuration ? velocity * (1000 / frameDuration) : 0;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"feuAu":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "hasWarned", ()=>hasWarned);
parcelHelpers.export(exports, "warnOnce", ()=>warnOnce);
var _formatErrorMessageMjs = require("./format-error-message.mjs");
const warned = new Set();
function hasWarned(message) {
    return warned.has(message);
}
function warnOnce(condition, message, errorCode) {
    if (condition || warned.has(message)) return;
    console.warn((0, _formatErrorMessageMjs.formatErrorMessage)(message, errorCode));
    warned.add(message);
}

},{"./format-error-message.mjs":"f2EXM","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"f5O24":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "anticipate", ()=>anticipate);
var _backMjs = require("./back.mjs");
const anticipate = (p)=>(p *= 2) < 1 ? 0.5 * (0, _backMjs.backIn)(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));

},{"./back.mjs":"d14ZQ","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"d14ZQ":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "backIn", ()=>backIn);
parcelHelpers.export(exports, "backInOut", ()=>backInOut);
parcelHelpers.export(exports, "backOut", ()=>backOut);
var _cubicBezierMjs = require("./cubic-bezier.mjs");
var _mirrorMjs = require("./modifiers/mirror.mjs");
var _reverseMjs = require("./modifiers/reverse.mjs");
const backOut = /*@__PURE__*/ (0, _cubicBezierMjs.cubicBezier)(0.33, 1.53, 0.69, 0.99);
const backIn = /*@__PURE__*/ (0, _reverseMjs.reverseEasing)(backOut);
const backInOut = /*@__PURE__*/ (0, _mirrorMjs.mirrorEasing)(backIn);

},{"./cubic-bezier.mjs":"4WMjb","./modifiers/mirror.mjs":"13ce7","./modifiers/reverse.mjs":"WI0jN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4WMjb":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "cubicBezier", ()=>cubicBezier);
var _noopMjs = require("../noop.mjs");
/*
  Bezier function generator
  This has been modified from Gaëtan Renaudeau's BezierEasing
  https://github.com/gre/bezier-easing/blob/master/src/index.js
  https://github.com/gre/bezier-easing/blob/master/LICENSE
  
  I've removed the newtonRaphsonIterate algo because in benchmarking it
  wasn't noticeably faster than binarySubdivision, indeed removing it
  usually improved times, depending on the curve.
  I also removed the lookup table, as for the added bundle size and loop we're
  only cutting ~4 or so subdivision iterations. I bumped the max iterations up
  to 12 to compensate and this still tended to be faster for no perceivable
  loss in accuracy.
  Usage
    const easeOut = cubicBezier(.17,.67,.83,.67);
    const x = easeOut(0.5); // returns 0.627...
*/ // Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.
const calcBezier = (t, a1, a2)=>(((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) * t;
const subdivisionPrecision = 0.0000001;
const subdivisionMaxIterations = 12;
function binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {
    let currentX;
    let currentT;
    let i = 0;
    do {
        currentT = lowerBound + (upperBound - lowerBound) / 2.0;
        currentX = calcBezier(currentT, mX1, mX2) - x;
        if (currentX > 0.0) upperBound = currentT;
        else lowerBound = currentT;
    }while (Math.abs(currentX) > subdivisionPrecision && ++i < subdivisionMaxIterations);
    return currentT;
}
function cubicBezier(mX1, mY1, mX2, mY2) {
    // If this is a linear gradient, return linear easing
    if (mX1 === mY1 && mX2 === mY2) return 0, _noopMjs.noop;
    const getTForX = (aX)=>binarySubdivide(aX, 0, 1, mX1, mX2);
    // If animation is at start/end, return t without easing
    return (t)=>t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);
}

},{"../noop.mjs":"5y3Qd","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"13ce7":[function(require,module,exports,__globalThis) {
// Accepts an easing function and returns a new one that outputs mirrored values for
// the second half of the animation. Turns easeIn into easeInOut.
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "mirrorEasing", ()=>mirrorEasing);
const mirrorEasing = (easing)=>(p)=>p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"WI0jN":[function(require,module,exports,__globalThis) {
// Accepts an easing function and returns a new one that outputs reversed values.
// Turns easeIn into easeOut.
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "reverseEasing", ()=>reverseEasing);
const reverseEasing = (easing)=>(p)=>1 - easing(1 - p);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2Kqz2":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "circIn", ()=>circIn);
parcelHelpers.export(exports, "circInOut", ()=>circInOut);
parcelHelpers.export(exports, "circOut", ()=>circOut);
var _mirrorMjs = require("./modifiers/mirror.mjs");
var _reverseMjs = require("./modifiers/reverse.mjs");
const circIn = (p)=>1 - Math.sin(Math.acos(p));
const circOut = (0, _reverseMjs.reverseEasing)(circIn);
const circInOut = (0, _mirrorMjs.mirrorEasing)(circIn);

},{"./modifiers/mirror.mjs":"13ce7","./modifiers/reverse.mjs":"WI0jN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jJBxc":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "easeIn", ()=>easeIn);
parcelHelpers.export(exports, "easeInOut", ()=>easeInOut);
parcelHelpers.export(exports, "easeOut", ()=>easeOut);
var _cubicBezierMjs = require("./cubic-bezier.mjs");
const easeIn = /*@__PURE__*/ (0, _cubicBezierMjs.cubicBezier)(0.42, 0, 1, 1);
const easeOut = /*@__PURE__*/ (0, _cubicBezierMjs.cubicBezier)(0, 0, 0.58, 1);
const easeInOut = /*@__PURE__*/ (0, _cubicBezierMjs.cubicBezier)(0.42, 0, 0.58, 1);

},{"./cubic-bezier.mjs":"4WMjb","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4sbA6":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isBezierDefinition", ()=>isBezierDefinition);
const isBezierDefinition = (easing)=>Array.isArray(easing) && typeof easing[0] === "number";

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9o4wF":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isEasingArray", ()=>isEasingArray);
const isEasingArray = (ease)=>{
    return Array.isArray(ease) && typeof ease[0] !== "number";
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aL9Bg":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "easingDefinitionToFunction", ()=>easingDefinitionToFunction);
var _errorsMjs = require("../../errors.mjs");
var _noopMjs = require("../../noop.mjs");
var _anticipateMjs = require("../anticipate.mjs");
var _backMjs = require("../back.mjs");
var _circMjs = require("../circ.mjs");
var _cubicBezierMjs = require("../cubic-bezier.mjs");
var _easeMjs = require("../ease.mjs");
var _isBezierDefinitionMjs = require("./is-bezier-definition.mjs");
const easingLookup = {
    linear: (0, _noopMjs.noop),
    easeIn: (0, _easeMjs.easeIn),
    easeInOut: (0, _easeMjs.easeInOut),
    easeOut: (0, _easeMjs.easeOut),
    circIn: (0, _circMjs.circIn),
    circInOut: (0, _circMjs.circInOut),
    circOut: (0, _circMjs.circOut),
    backIn: (0, _backMjs.backIn),
    backInOut: (0, _backMjs.backInOut),
    backOut: (0, _backMjs.backOut),
    anticipate: (0, _anticipateMjs.anticipate)
};
const isValidEasing = (easing)=>{
    return typeof easing === "string";
};
const easingDefinitionToFunction = (definition)=>{
    if ((0, _isBezierDefinitionMjs.isBezierDefinition)(definition)) {
        // If cubic bezier definition, create bezier curve
        (0, _errorsMjs.invariant)(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`, "cubic-bezier-length");
        const [x1, y1, x2, y2] = definition;
        return (0, _cubicBezierMjs.cubicBezier)(x1, y1, x2, y2);
    } else if (isValidEasing(definition)) {
        // Else lookup from table
        (0, _errorsMjs.invariant)(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`, "invalid-easing-type");
        return easingLookup[definition];
    }
    return definition;
};

},{"../../errors.mjs":"bylNr","../../noop.mjs":"5y3Qd","../anticipate.mjs":"f5O24","../back.mjs":"d14ZQ","../circ.mjs":"2Kqz2","../cubic-bezier.mjs":"4WMjb","../ease.mjs":"jJBxc","./is-bezier-definition.mjs":"4sbA6","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7oxaC":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "time", ()=>time);
var _motionUtils = require("motion-utils");
var _frameMjs = require("./frame.mjs");
let now;
function clearTime() {
    now = undefined;
}
/**
 * An eventloop-synchronous alternative to performance.now().
 *
 * Ensures that time measurements remain consistent within a synchronous context.
 * Usually calling performance.now() twice within the same synchronous context
 * will return different values which isn't useful for animations when we're usually
 * trying to sync animations to the same frame.
 */ const time = {
    now: ()=>{
        if (now === undefined) time.set((0, _frameMjs.frameData).isProcessing || (0, _motionUtils.MotionGlobalConfig).useManualTiming ? (0, _frameMjs.frameData).timestamp : performance.now());
        return now;
    },
    set: (newTime)=>{
        now = newTime;
        queueMicrotask(clearTime);
    }
};

},{"motion-utils":"33eo7","./frame.mjs":"5aQJa","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5aQJa":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "cancelFrame", ()=>cancelFrame);
parcelHelpers.export(exports, "frame", ()=>frame);
parcelHelpers.export(exports, "frameData", ()=>frameData);
parcelHelpers.export(exports, "frameSteps", ()=>frameSteps);
var _motionUtils = require("motion-utils");
var _batcherMjs = require("./batcher.mjs");
const { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps } = /* @__PURE__ */ (0, _batcherMjs.createRenderBatcher)(typeof requestAnimationFrame !== "undefined" ? requestAnimationFrame : (0, _motionUtils.noop), true);

},{"motion-utils":"33eo7","./batcher.mjs":"7IEYc","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7IEYc":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createRenderBatcher", ()=>createRenderBatcher);
var _motionUtils = require("motion-utils");
var _orderMjs = require("./order.mjs");
var _renderStepMjs = require("./render-step.mjs");
const maxElapsed = 40;
function createRenderBatcher(scheduleNextBatch, allowKeepAlive) {
    let runNextFrame = false;
    let useDefaultElapsed = true;
    const state = {
        delta: 0.0,
        timestamp: 0.0,
        isProcessing: false
    };
    const flagRunNextFrame = ()=>runNextFrame = true;
    const steps = (0, _orderMjs.stepsOrder).reduce((acc, key)=>{
        acc[key] = (0, _renderStepMjs.createRenderStep)(flagRunNextFrame, allowKeepAlive ? key : undefined);
        return acc;
    }, {});
    const { setup, read, resolveKeyframes, preUpdate, update, preRender, render, postRender } = steps;
    const processBatch = ()=>{
        const timestamp = (0, _motionUtils.MotionGlobalConfig).useManualTiming ? state.timestamp : performance.now();
        runNextFrame = false;
        if (!(0, _motionUtils.MotionGlobalConfig).useManualTiming) state.delta = useDefaultElapsed ? 1000 / 60 : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);
        state.timestamp = timestamp;
        state.isProcessing = true;
        // Unrolled render loop for better per-frame performance
        setup.process(state);
        read.process(state);
        resolveKeyframes.process(state);
        preUpdate.process(state);
        update.process(state);
        preRender.process(state);
        render.process(state);
        postRender.process(state);
        state.isProcessing = false;
        if (runNextFrame && allowKeepAlive) {
            useDefaultElapsed = false;
            scheduleNextBatch(processBatch);
        }
    };
    const wake = ()=>{
        runNextFrame = true;
        useDefaultElapsed = true;
        if (!state.isProcessing) scheduleNextBatch(processBatch);
    };
    const schedule = (0, _orderMjs.stepsOrder).reduce((acc, key)=>{
        const step = steps[key];
        acc[key] = (process, keepAlive = false, immediate = false)=>{
            if (!runNextFrame) wake();
            return step.schedule(process, keepAlive, immediate);
        };
        return acc;
    }, {});
    const cancel = (process)=>{
        for(let i = 0; i < (0, _orderMjs.stepsOrder).length; i++)steps[(0, _orderMjs.stepsOrder)[i]].cancel(process);
    };
    return {
        schedule,
        cancel,
        state,
        steps
    };
}

},{"motion-utils":"33eo7","./order.mjs":"1Kuij","./render-step.mjs":"5bimI","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1Kuij":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "stepsOrder", ()=>stepsOrder);
const stepsOrder = [
    "setup",
    "read",
    "resolveKeyframes",
    "preUpdate",
    "update",
    "preRender",
    "render",
    "postRender"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5bimI":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createRenderStep", ()=>createRenderStep);
var _bufferMjs = require("../stats/buffer.mjs");
function createRenderStep(runNextFrame, stepName) {
    /**
     * We create and reuse two queues, one to queue jobs for the current frame
     * and one for the next. We reuse to avoid triggering GC after x frames.
     */ let thisFrame = new Set();
    let nextFrame = new Set();
    /**
     * Track whether we're currently processing jobs in this step. This way
     * we can decide whether to schedule new jobs for this frame or next.
     */ let isProcessing = false;
    let flushNextFrame = false;
    /**
     * A set of processes which were marked keepAlive when scheduled.
     */ const toKeepAlive = new WeakSet();
    let latestFrameData = {
        delta: 0.0,
        timestamp: 0.0,
        isProcessing: false
    };
    let numCalls = 0;
    function triggerCallback(callback) {
        if (toKeepAlive.has(callback)) {
            step.schedule(callback);
            runNextFrame();
        }
        numCalls++;
        callback(latestFrameData);
    }
    const step = {
        /**
         * Schedule a process to run on the next frame.
         */ schedule: (callback, keepAlive = false, immediate = false)=>{
            const addToCurrentFrame = immediate && isProcessing;
            const queue = addToCurrentFrame ? thisFrame : nextFrame;
            if (keepAlive) toKeepAlive.add(callback);
            if (!queue.has(callback)) queue.add(callback);
            return callback;
        },
        /**
         * Cancel the provided callback from running on the next frame.
         */ cancel: (callback)=>{
            nextFrame.delete(callback);
            toKeepAlive.delete(callback);
        },
        /**
         * Execute all schedule callbacks.
         */ process: (frameData)=>{
            latestFrameData = frameData;
            /**
             * If we're already processing we've probably been triggered by a flushSync
             * inside an existing process. Instead of executing, mark flushNextFrame
             * as true and ensure we flush the following frame at the end of this one.
             */ if (isProcessing) {
                flushNextFrame = true;
                return;
            }
            isProcessing = true;
            [thisFrame, nextFrame] = [
                nextFrame,
                thisFrame
            ];
            // Execute this frame
            thisFrame.forEach(triggerCallback);
            /**
             * If we're recording stats then
             */ if (stepName && (0, _bufferMjs.statsBuffer).value) (0, _bufferMjs.statsBuffer).value.frameloop[stepName].push(numCalls);
            numCalls = 0;
            // Clear the frame so no callbacks remain. This is to avoid
            // memory leaks should this render step not run for a while.
            thisFrame.clear();
            isProcessing = false;
            if (flushNextFrame) {
                flushNextFrame = false;
                step.process(frameData);
            }
        }
    };
    return step;
}

},{"../stats/buffer.mjs":"en8S3","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"en8S3":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "statsBuffer", ()=>statsBuffer);
const statsBuffer = {
    value: null,
    addProjectionMetrics: null
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lNHfP":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "JSAnimation", ()=>JSAnimation);
parcelHelpers.export(exports, "animateValue", ()=>animateValue);
var _motionUtils = require("motion-utils");
var _syncTimeMjs = require("../frameloop/sync-time.mjs");
var _animationCountMjs = require("../stats/animation-count.mjs");
var _indexMjs = require("../utils/mix/index.mjs");
var _frameMjs = require("./drivers/frame.mjs");
var _inertiaMjs = require("./generators/inertia.mjs");
var _keyframesMjs = require("./generators/keyframes.mjs");
var _calcDurationMjs = require("./generators/utils/calc-duration.mjs");
var _getFinalMjs = require("./keyframes/get-final.mjs");
var _replaceTransitionTypeMjs = require("./utils/replace-transition-type.mjs");
var _withPromiseMjs = require("./utils/WithPromise.mjs");
const percentToProgress = (percent)=>percent / 100;
class JSAnimation extends (0, _withPromiseMjs.WithPromise) {
    constructor(options){
        super();
        this.state = "idle";
        this.startTime = null;
        this.isStopped = false;
        /**
         * The current time of the animation.
         */ this.currentTime = 0;
        /**
         * The time at which the animation was paused.
         */ this.holdTime = null;
        /**
         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.
         */ this.playbackSpeed = 1;
        /**
         * This method is bound to the instance to fix a pattern where
         * animation.stop is returned as a reference from a useEffect.
         */ this.stop = ()=>{
            const { motionValue } = this.options;
            if (motionValue && motionValue.updatedAt !== (0, _syncTimeMjs.time).now()) this.tick((0, _syncTimeMjs.time).now());
            this.isStopped = true;
            if (this.state === "idle") return;
            this.teardown();
            this.options.onStop?.();
        };
        (0, _animationCountMjs.activeAnimations).mainThread++;
        this.options = options;
        this.initAnimation();
        this.play();
        if (options.autoplay === false) this.pause();
    }
    initAnimation() {
        const { options } = this;
        (0, _replaceTransitionTypeMjs.replaceTransitionType)(options);
        const { type = (0, _keyframesMjs.keyframes), repeat = 0, repeatDelay = 0, repeatType, velocity = 0 } = options;
        let { keyframes: keyframes$1 } = options;
        const generatorFactory = type || (0, _keyframesMjs.keyframes);
        if (generatorFactory !== (0, _keyframesMjs.keyframes)) (0, _motionUtils.invariant)(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`, "spring-two-frames");
        if (generatorFactory !== (0, _keyframesMjs.keyframes) && typeof keyframes$1[0] !== "number") {
            this.mixKeyframes = (0, _motionUtils.pipe)(percentToProgress, (0, _indexMjs.mix)(keyframes$1[0], keyframes$1[1]));
            keyframes$1 = [
                0,
                100
            ];
        }
        const generator = generatorFactory({
            ...options,
            keyframes: keyframes$1
        });
        /**
         * If we have a mirror repeat type we need to create a second generator that outputs the
         * mirrored (not reversed) animation and later ping pong between the two generators.
         */ if (repeatType === "mirror") this.mirroredGenerator = generatorFactory({
            ...options,
            keyframes: [
                ...keyframes$1
            ].reverse(),
            velocity: -velocity
        });
        /**
         * If duration is undefined and we have repeat options,
         * we need to calculate a duration from the generator.
         *
         * We set it to the generator itself to cache the duration.
         * Any timeline resolver will need to have already precalculated
         * the duration by this step.
         */ if (generator.calculatedDuration === null) generator.calculatedDuration = (0, _calcDurationMjs.calcGeneratorDuration)(generator);
        const { calculatedDuration } = generator;
        this.calculatedDuration = calculatedDuration;
        this.resolvedDuration = calculatedDuration + repeatDelay;
        this.totalDuration = this.resolvedDuration * (repeat + 1) - repeatDelay;
        this.generator = generator;
    }
    updateTime(timestamp) {
        const animationTime = Math.round(timestamp - this.startTime) * this.playbackSpeed;
        // Update currentTime
        if (this.holdTime !== null) this.currentTime = this.holdTime;
        else // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =
        // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for
        // example.
        this.currentTime = animationTime;
    }
    tick(timestamp, sample = false) {
        const { generator, totalDuration, mixKeyframes, mirroredGenerator, resolvedDuration, calculatedDuration } = this;
        if (this.startTime === null) return generator.next(0);
        const { delay = 0, keyframes, repeat, repeatType, repeatDelay, type, onUpdate, finalKeyframe } = this.options;
        /**
         * requestAnimationFrame timestamps can come through as lower than
         * the startTime as set by performance.now(). Here we prevent this,
         * though in the future it could be possible to make setting startTime
         * a pending operation that gets resolved here.
         */ if (this.speed > 0) this.startTime = Math.min(this.startTime, timestamp);
        else if (this.speed < 0) this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);
        if (sample) this.currentTime = timestamp;
        else this.updateTime(timestamp);
        // Rebase on delay
        const timeWithoutDelay = this.currentTime - delay * (this.playbackSpeed >= 0 ? 1 : -1);
        const isInDelayPhase = this.playbackSpeed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;
        this.currentTime = Math.max(timeWithoutDelay, 0);
        // If this animation has finished, set the current time  to the total duration.
        if (this.state === "finished" && this.holdTime === null) this.currentTime = totalDuration;
        let elapsed = this.currentTime;
        let frameGenerator = generator;
        if (repeat) {
            /**
             * Get the current progress (0-1) of the animation. If t is >
             * than duration we'll get values like 2.5 (midway through the
             * third iteration)
             */ const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;
            /**
             * Get the current iteration (0 indexed). For instance the floor of
             * 2.5 is 2.
             */ let currentIteration = Math.floor(progress);
            /**
             * Get the current progress of the iteration by taking the remainder
             * so 2.5 is 0.5 through iteration 2
             */ let iterationProgress = progress % 1.0;
            /**
             * If iteration progress is 1 we count that as the end
             * of the previous iteration.
             */ if (!iterationProgress && progress >= 1) iterationProgress = 1;
            iterationProgress === 1 && currentIteration--;
            currentIteration = Math.min(currentIteration, repeat + 1);
            /**
             * Reverse progress if we're not running in "normal" direction
             */ const isOddIteration = Boolean(currentIteration % 2);
            if (isOddIteration) {
                if (repeatType === "reverse") {
                    iterationProgress = 1 - iterationProgress;
                    if (repeatDelay) iterationProgress -= repeatDelay / resolvedDuration;
                } else if (repeatType === "mirror") frameGenerator = mirroredGenerator;
            }
            elapsed = (0, _motionUtils.clamp)(0, 1, iterationProgress) * resolvedDuration;
        }
        /**
         * If we're in negative time, set state as the initial keyframe.
         * This prevents delay: x, duration: 0 animations from finishing
         * instantly.
         */ const state = isInDelayPhase ? {
            done: false,
            value: keyframes[0]
        } : frameGenerator.next(elapsed);
        if (mixKeyframes) state.value = mixKeyframes(state.value);
        let { done } = state;
        if (!isInDelayPhase && calculatedDuration !== null) done = this.playbackSpeed >= 0 ? this.currentTime >= totalDuration : this.currentTime <= 0;
        const isAnimationFinished = this.holdTime === null && (this.state === "finished" || this.state === "running" && done);
        // TODO: The exception for inertia could be cleaner here
        if (isAnimationFinished && type !== (0, _inertiaMjs.inertia)) state.value = (0, _getFinalMjs.getFinalKeyframe)(keyframes, this.options, finalKeyframe, this.speed);
        if (onUpdate) onUpdate(state.value);
        if (isAnimationFinished) this.finish();
        return state;
    }
    /**
     * Allows the returned animation to be awaited or promise-chained. Currently
     * resolves when the animation finishes at all but in a future update could/should
     * reject if its cancels.
     */ then(resolve, reject) {
        return this.finished.then(resolve, reject);
    }
    get duration() {
        return (0, _motionUtils.millisecondsToSeconds)(this.calculatedDuration);
    }
    get iterationDuration() {
        const { delay = 0 } = this.options || {};
        return this.duration + (0, _motionUtils.millisecondsToSeconds)(delay);
    }
    get time() {
        return (0, _motionUtils.millisecondsToSeconds)(this.currentTime);
    }
    set time(newTime) {
        newTime = (0, _motionUtils.secondsToMilliseconds)(newTime);
        this.currentTime = newTime;
        if (this.startTime === null || this.holdTime !== null || this.playbackSpeed === 0) this.holdTime = newTime;
        else if (this.driver) this.startTime = this.driver.now() - newTime / this.playbackSpeed;
        this.driver?.start(false);
    }
    get speed() {
        return this.playbackSpeed;
    }
    set speed(newSpeed) {
        this.updateTime((0, _syncTimeMjs.time).now());
        const hasChanged = this.playbackSpeed !== newSpeed;
        this.playbackSpeed = newSpeed;
        if (hasChanged) this.time = (0, _motionUtils.millisecondsToSeconds)(this.currentTime);
    }
    play() {
        if (this.isStopped) return;
        const { driver = (0, _frameMjs.frameloopDriver), startTime } = this.options;
        if (!this.driver) this.driver = driver((timestamp)=>this.tick(timestamp));
        this.options.onPlay?.();
        const now = this.driver.now();
        if (this.state === "finished") {
            this.updateFinished();
            this.startTime = now;
        } else if (this.holdTime !== null) this.startTime = now - this.holdTime;
        else if (!this.startTime) this.startTime = startTime ?? now;
        if (this.state === "finished" && this.speed < 0) this.startTime += this.calculatedDuration;
        this.holdTime = null;
        /**
         * Set playState to running only after we've used it in
         * the previous logic.
         */ this.state = "running";
        this.driver.start();
    }
    pause() {
        this.state = "paused";
        this.updateTime((0, _syncTimeMjs.time).now());
        this.holdTime = this.currentTime;
    }
    complete() {
        if (this.state !== "running") this.play();
        this.state = "finished";
        this.holdTime = null;
    }
    finish() {
        this.notifyFinished();
        this.teardown();
        this.state = "finished";
        this.options.onComplete?.();
    }
    cancel() {
        this.holdTime = null;
        this.startTime = 0;
        this.tick(0);
        this.teardown();
        this.options.onCancel?.();
    }
    teardown() {
        this.state = "idle";
        this.stopDriver();
        this.startTime = this.holdTime = null;
        (0, _animationCountMjs.activeAnimations).mainThread--;
    }
    stopDriver() {
        if (!this.driver) return;
        this.driver.stop();
        this.driver = undefined;
    }
    sample(sampleTime) {
        this.startTime = 0;
        return this.tick(sampleTime, true);
    }
    attachTimeline(timeline) {
        if (this.options.allowFlatten) {
            this.options.type = "keyframes";
            this.options.ease = "linear";
            this.initAnimation();
        }
        this.driver?.stop();
        return timeline.observe(this);
    }
}
// Legacy function support
function animateValue(options) {
    return new JSAnimation(options);
}

},{"motion-utils":"33eo7","../frameloop/sync-time.mjs":"7oxaC","../stats/animation-count.mjs":"j8Cp5","../utils/mix/index.mjs":"7IPIg","./drivers/frame.mjs":"craiw","./generators/inertia.mjs":"b2RI0","./generators/keyframes.mjs":"cuPkM","./generators/utils/calc-duration.mjs":"3MbjC","./keyframes/get-final.mjs":"2geIJ","./utils/replace-transition-type.mjs":"5WVBb","./utils/WithPromise.mjs":"dCrCX","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"j8Cp5":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "activeAnimations", ()=>activeAnimations);
const activeAnimations = {
    layout: 0,
    mainThread: 0,
    waapi: 0
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7IPIg":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "mix", ()=>mix);
var _complexMjs = require("./complex.mjs");
var _numberMjs = require("./number.mjs");
function mix(from, to, p) {
    if (typeof from === "number" && typeof to === "number" && typeof p === "number") return (0, _numberMjs.mixNumber)(from, to, p);
    const mixer = (0, _complexMjs.getMixer)(from);
    return mixer(from, to);
}

},{"./complex.mjs":"hCD0u","./number.mjs":"7FgQR","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hCD0u":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getMixer", ()=>getMixer);
parcelHelpers.export(exports, "mixArray", ()=>mixArray);
parcelHelpers.export(exports, "mixComplex", ()=>mixComplex);
parcelHelpers.export(exports, "mixObject", ()=>mixObject);
var _motionUtils = require("motion-utils");
var _isCssVariableMjs = require("../../animation/utils/is-css-variable.mjs");
var _indexMjs = require("../../value/types/color/index.mjs");
var _indexMjs1 = require("../../value/types/complex/index.mjs");
var _colorMjs = require("./color.mjs");
var _immediateMjs = require("./immediate.mjs");
var _numberMjs = require("./number.mjs");
var _visibilityMjs = require("./visibility.mjs");
function mixNumber(a, b) {
    return (p)=>(0, _numberMjs.mixNumber)(a, b, p);
}
function getMixer(a) {
    if (typeof a === "number") return mixNumber;
    else if (typeof a === "string") return (0, _isCssVariableMjs.isCSSVariableToken)(a) ? (0, _immediateMjs.mixImmediate) : (0, _indexMjs.color).test(a) ? (0, _colorMjs.mixColor) : mixComplex;
    else if (Array.isArray(a)) return mixArray;
    else if (typeof a === "object") return (0, _indexMjs.color).test(a) ? (0, _colorMjs.mixColor) : mixObject;
    return 0, _immediateMjs.mixImmediate;
}
function mixArray(a, b) {
    const output = [
        ...a
    ];
    const numValues = output.length;
    const blendValue = a.map((v, i)=>getMixer(v)(v, b[i]));
    return (p)=>{
        for(let i = 0; i < numValues; i++)output[i] = blendValue[i](p);
        return output;
    };
}
function mixObject(a, b) {
    const output = {
        ...a,
        ...b
    };
    const blendValue = {};
    for(const key in output)if (a[key] !== undefined && b[key] !== undefined) blendValue[key] = getMixer(a[key])(a[key], b[key]);
    return (v)=>{
        for(const key in blendValue)output[key] = blendValue[key](v);
        return output;
    };
}
function matchOrder(origin, target) {
    const orderedOrigin = [];
    const pointers = {
        color: 0,
        var: 0,
        number: 0
    };
    for(let i = 0; i < target.values.length; i++){
        const type = target.types[i];
        const originIndex = origin.indexes[type][pointers[type]];
        const originValue = origin.values[originIndex] ?? 0;
        orderedOrigin[i] = originValue;
        pointers[type]++;
    }
    return orderedOrigin;
}
const mixComplex = (origin, target)=>{
    const template = (0, _indexMjs1.complex).createTransformer(target);
    const originStats = (0, _indexMjs1.analyseComplexValue)(origin);
    const targetStats = (0, _indexMjs1.analyseComplexValue)(target);
    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length && originStats.indexes.color.length === targetStats.indexes.color.length && originStats.indexes.number.length >= targetStats.indexes.number.length;
    if (canInterpolate) {
        if ((0, _visibilityMjs.invisibleValues).has(origin) && !targetStats.values.length || (0, _visibilityMjs.invisibleValues).has(target) && !originStats.values.length) return (0, _visibilityMjs.mixVisibility)(origin, target);
        return (0, _motionUtils.pipe)(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);
    } else {
        (0, _motionUtils.warning)(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`, "complex-values-different");
        return (0, _immediateMjs.mixImmediate)(origin, target);
    }
};

},{"motion-utils":"33eo7","../../animation/utils/is-css-variable.mjs":"fWq3y","../../value/types/color/index.mjs":"97zRW","../../value/types/complex/index.mjs":"fH52E","./color.mjs":"ffb4h","./immediate.mjs":"4TtsB","./number.mjs":"7FgQR","./visibility.mjs":"42WrE","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fWq3y":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isCSSVariableName", ()=>isCSSVariableName);
parcelHelpers.export(exports, "isCSSVariableToken", ()=>isCSSVariableToken);
const checkStringStartsWith = (token)=>(key)=>typeof key === "string" && key.startsWith(token);
const isCSSVariableName = /*@__PURE__*/ checkStringStartsWith("--");
const startsAsVariableToken = /*@__PURE__*/ checkStringStartsWith("var(--");
const isCSSVariableToken = (value)=>{
    const startsWithToken = startsAsVariableToken(value);
    if (!startsWithToken) return false;
    // Ensure any comments are stripped from the value as this can harm performance of the regex.
    return singleCssVariableRegex.test(value.split("/*")[0].trim());
};
const singleCssVariableRegex = /var\(--(?:[\w-]+\s*|[\w-]+\s*,(?:\s*[^)(\s]|\s*\((?:[^)(]|\([^)(]*\))*\))+\s*)\)$/iu;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"97zRW":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "color", ()=>color);
var _hexMjs = require("./hex.mjs");
var _hslaMjs = require("./hsla.mjs");
var _rgbaMjs = require("./rgba.mjs");
const color = {
    test: (v)=>(0, _rgbaMjs.rgba).test(v) || (0, _hexMjs.hex).test(v) || (0, _hslaMjs.hsla).test(v),
    parse: (v)=>{
        if ((0, _rgbaMjs.rgba).test(v)) return (0, _rgbaMjs.rgba).parse(v);
        else if ((0, _hslaMjs.hsla).test(v)) return (0, _hslaMjs.hsla).parse(v);
        else return (0, _hexMjs.hex).parse(v);
    },
    transform: (v)=>{
        return typeof v === "string" ? v : v.hasOwnProperty("red") ? (0, _rgbaMjs.rgba).transform(v) : (0, _hslaMjs.hsla).transform(v);
    },
    getAnimatableNone: (v)=>{
        const parsed = color.parse(v);
        parsed.alpha = 0;
        return color.transform(parsed);
    }
};

},{"./hex.mjs":"kytkN","./hsla.mjs":"8oDBn","./rgba.mjs":"iOF28","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"kytkN":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "hex", ()=>hex);
var _rgbaMjs = require("./rgba.mjs");
var _utilsMjs = require("./utils.mjs");
function parseHex(v) {
    let r = "";
    let g = "";
    let b = "";
    let a = "";
    // If we have 6 characters, ie #FF0000
    if (v.length > 5) {
        r = v.substring(1, 3);
        g = v.substring(3, 5);
        b = v.substring(5, 7);
        a = v.substring(7, 9);
    // Or we have 3 characters, ie #F00
    } else {
        r = v.substring(1, 2);
        g = v.substring(2, 3);
        b = v.substring(3, 4);
        a = v.substring(4, 5);
        r += r;
        g += g;
        b += b;
        a += a;
    }
    return {
        red: parseInt(r, 16),
        green: parseInt(g, 16),
        blue: parseInt(b, 16),
        alpha: a ? parseInt(a, 16) / 255 : 1
    };
}
const hex = {
    test: /*@__PURE__*/ (0, _utilsMjs.isColorString)("#"),
    parse: parseHex,
    transform: (0, _rgbaMjs.rgba).transform
};

},{"./rgba.mjs":"iOF28","./utils.mjs":"8PRN0","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"iOF28":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "rgbUnit", ()=>rgbUnit);
parcelHelpers.export(exports, "rgba", ()=>rgba);
var _motionUtils = require("motion-utils");
var _indexMjs = require("../numbers/index.mjs");
var _sanitizeMjs = require("../utils/sanitize.mjs");
var _utilsMjs = require("./utils.mjs");
const clampRgbUnit = (v)=>(0, _motionUtils.clamp)(0, 255, v);
const rgbUnit = {
    ...(0, _indexMjs.number),
    transform: (v)=>Math.round(clampRgbUnit(v))
};
const rgba = {
    test: /*@__PURE__*/ (0, _utilsMjs.isColorString)("rgb", "red"),
    parse: /*@__PURE__*/ (0, _utilsMjs.splitColor)("red", "green", "blue"),
    transform: ({ red, green, blue, alpha: alpha$1 = 1 })=>"rgba(" + rgbUnit.transform(red) + ", " + rgbUnit.transform(green) + ", " + rgbUnit.transform(blue) + ", " + (0, _sanitizeMjs.sanitize)((0, _indexMjs.alpha).transform(alpha$1)) + ")"
};

},{"motion-utils":"33eo7","../numbers/index.mjs":"lWO0H","../utils/sanitize.mjs":"2bcBg","./utils.mjs":"8PRN0","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lWO0H":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "alpha", ()=>alpha);
parcelHelpers.export(exports, "number", ()=>number);
parcelHelpers.export(exports, "scale", ()=>scale);
var _motionUtils = require("motion-utils");
const number = {
    test: (v)=>typeof v === "number",
    parse: parseFloat,
    transform: (v)=>v
};
const alpha = {
    ...number,
    transform: (v)=>(0, _motionUtils.clamp)(0, 1, v)
};
const scale = {
    ...number,
    default: 1
};

},{"motion-utils":"33eo7","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2bcBg":[function(require,module,exports,__globalThis) {
// If this number is a decimal, make it just five decimal places
// to avoid exponents
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "sanitize", ()=>sanitize);
const sanitize = (v)=>Math.round(v * 100000) / 100000;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8PRN0":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isColorString", ()=>isColorString);
parcelHelpers.export(exports, "splitColor", ()=>splitColor);
var _floatRegexMjs = require("../utils/float-regex.mjs");
var _isNullishMjs = require("../utils/is-nullish.mjs");
var _singleColorRegexMjs = require("../utils/single-color-regex.mjs");
/**
 * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,
 * but false if a number or multiple colors
 */ const isColorString = (type, testProp)=>(v)=>{
        return Boolean(typeof v === "string" && (0, _singleColorRegexMjs.singleColorRegex).test(v) && v.startsWith(type) || testProp && !(0, _isNullishMjs.isNullish)(v) && Object.prototype.hasOwnProperty.call(v, testProp));
    };
const splitColor = (aName, bName, cName)=>(v)=>{
        if (typeof v !== "string") return v;
        const [a, b, c, alpha] = v.match((0, _floatRegexMjs.floatRegex));
        return {
            [aName]: parseFloat(a),
            [bName]: parseFloat(b),
            [cName]: parseFloat(c),
            alpha: alpha !== undefined ? parseFloat(alpha) : 1
        };
    };

},{"../utils/float-regex.mjs":"eQj4G","../utils/is-nullish.mjs":"99sQC","../utils/single-color-regex.mjs":"kclqu","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"eQj4G":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "floatRegex", ()=>floatRegex);
const floatRegex = /-?(?:\d+(?:\.\d+)?|\.\d+)/gu;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"99sQC":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isNullish", ()=>isNullish);
function isNullish(v) {
    return v == null;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"kclqu":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "singleColorRegex", ()=>singleColorRegex);
const singleColorRegex = /^(?:#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\))$/iu;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8oDBn":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "hsla", ()=>hsla);
var _indexMjs = require("../numbers/index.mjs");
var _unitsMjs = require("../numbers/units.mjs");
var _sanitizeMjs = require("../utils/sanitize.mjs");
var _utilsMjs = require("./utils.mjs");
const hsla = {
    test: /*@__PURE__*/ (0, _utilsMjs.isColorString)("hsl", "hue"),
    parse: /*@__PURE__*/ (0, _utilsMjs.splitColor)("hue", "saturation", "lightness"),
    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 })=>{
        return "hsla(" + Math.round(hue) + ", " + (0, _unitsMjs.percent).transform((0, _sanitizeMjs.sanitize)(saturation)) + ", " + (0, _unitsMjs.percent).transform((0, _sanitizeMjs.sanitize)(lightness)) + ", " + (0, _sanitizeMjs.sanitize)((0, _indexMjs.alpha).transform(alpha$1)) + ")";
    }
};

},{"../numbers/index.mjs":"lWO0H","../numbers/units.mjs":"iToJc","../utils/sanitize.mjs":"2bcBg","./utils.mjs":"8PRN0","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"iToJc":[function(require,module,exports,__globalThis) {
/*#__NO_SIDE_EFFECTS__*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "degrees", ()=>degrees);
parcelHelpers.export(exports, "percent", ()=>percent);
parcelHelpers.export(exports, "progressPercentage", ()=>progressPercentage);
parcelHelpers.export(exports, "px", ()=>px);
parcelHelpers.export(exports, "vh", ()=>vh);
parcelHelpers.export(exports, "vw", ()=>vw);
const createUnitType = (unit)=>({
        test: (v)=>typeof v === "string" && v.endsWith(unit) && v.split(" ").length === 1,
        parse: parseFloat,
        transform: (v)=>`${v}${unit}`
    });
const degrees = /*@__PURE__*/ createUnitType("deg");
const percent = /*@__PURE__*/ createUnitType("%");
const px = /*@__PURE__*/ createUnitType("px");
const vh = /*@__PURE__*/ createUnitType("vh");
const vw = /*@__PURE__*/ createUnitType("vw");
const progressPercentage = /*@__PURE__*/ (()=>({
        ...percent,
        parse: (v)=>percent.parse(v) / 100,
        transform: (v)=>percent.transform(v * 100)
    }))();

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fH52E":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "analyseComplexValue", ()=>analyseComplexValue);
parcelHelpers.export(exports, "complex", ()=>complex);
var _indexMjs = require("../color/index.mjs");
var _colorRegexMjs = require("../utils/color-regex.mjs");
var _floatRegexMjs = require("../utils/float-regex.mjs");
var _sanitizeMjs = require("../utils/sanitize.mjs");
function test(v) {
    return isNaN(v) && typeof v === "string" && (v.match((0, _floatRegexMjs.floatRegex))?.length || 0) + (v.match((0, _colorRegexMjs.colorRegex))?.length || 0) > 0;
}
const NUMBER_TOKEN = "number";
const COLOR_TOKEN = "color";
const VAR_TOKEN = "var";
const VAR_FUNCTION_TOKEN = "var(";
const SPLIT_TOKEN = "${}";
// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`
const complexRegex = /var\s*\(\s*--(?:[\w-]+\s*|[\w-]+\s*,(?:\s*[^)(\s]|\s*\((?:[^)(]|\([^)(]*\))*\))+\s*)\)|#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\)|-?(?:\d+(?:\.\d+)?|\.\d+)/giu;
function analyseComplexValue(value) {
    const originalValue = value.toString();
    const values = [];
    const indexes = {
        color: [],
        number: [],
        var: []
    };
    const types = [];
    let i = 0;
    const tokenised = originalValue.replace(complexRegex, (parsedValue)=>{
        if ((0, _indexMjs.color).test(parsedValue)) {
            indexes.color.push(i);
            types.push(COLOR_TOKEN);
            values.push((0, _indexMjs.color).parse(parsedValue));
        } else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {
            indexes.var.push(i);
            types.push(VAR_TOKEN);
            values.push(parsedValue);
        } else {
            indexes.number.push(i);
            types.push(NUMBER_TOKEN);
            values.push(parseFloat(parsedValue));
        }
        ++i;
        return SPLIT_TOKEN;
    });
    const split = tokenised.split(SPLIT_TOKEN);
    return {
        values,
        split,
        indexes,
        types
    };
}
function parseComplexValue(v) {
    return analyseComplexValue(v).values;
}
function createTransformer(source) {
    const { split, types } = analyseComplexValue(source);
    const numSections = split.length;
    return (v)=>{
        let output = "";
        for(let i = 0; i < numSections; i++){
            output += split[i];
            if (v[i] !== undefined) {
                const type = types[i];
                if (type === NUMBER_TOKEN) output += (0, _sanitizeMjs.sanitize)(v[i]);
                else if (type === COLOR_TOKEN) output += (0, _indexMjs.color).transform(v[i]);
                else output += v[i];
            }
        }
        return output;
    };
}
const convertNumbersToZero = (v)=>typeof v === "number" ? 0 : (0, _indexMjs.color).test(v) ? (0, _indexMjs.color).getAnimatableNone(v) : v;
function getAnimatableNone(v) {
    const parsed = parseComplexValue(v);
    const transformer = createTransformer(v);
    return transformer(parsed.map(convertNumbersToZero));
}
const complex = {
    test,
    parse: parseComplexValue,
    createTransformer,
    getAnimatableNone
};

},{"../color/index.mjs":"97zRW","../utils/color-regex.mjs":"5uuuF","../utils/float-regex.mjs":"eQj4G","../utils/sanitize.mjs":"2bcBg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5uuuF":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "colorRegex", ()=>colorRegex);
const colorRegex = /(?:#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\))/giu;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ffb4h":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "mixColor", ()=>mixColor);
parcelHelpers.export(exports, "mixLinearColor", ()=>mixLinearColor);
var _motionUtils = require("motion-utils");
var _hexMjs = require("../../value/types/color/hex.mjs");
var _hslaMjs = require("../../value/types/color/hsla.mjs");
var _hslaToRgbaMjs = require("../../value/types/color/hsla-to-rgba.mjs");
var _rgbaMjs = require("../../value/types/color/rgba.mjs");
var _immediateMjs = require("./immediate.mjs");
var _numberMjs = require("./number.mjs");
// Linear color space blending
// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw
// Demonstrated http://codepen.io/osublake/pen/xGVVaN
const mixLinearColor = (from, to, v)=>{
    const fromExpo = from * from;
    const expo = v * (to * to - fromExpo) + fromExpo;
    return expo < 0 ? 0 : Math.sqrt(expo);
};
const colorTypes = [
    (0, _hexMjs.hex),
    (0, _rgbaMjs.rgba),
    (0, _hslaMjs.hsla)
];
const getColorType = (v)=>colorTypes.find((type)=>type.test(v));
function asRGBA(color) {
    const type = getColorType(color);
    (0, _motionUtils.warning)(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`, "color-not-animatable");
    if (!Boolean(type)) return false;
    let model = type.parse(color);
    if (type === (0, _hslaMjs.hsla)) // TODO Remove this cast - needed since Motion's stricter typing
    model = (0, _hslaToRgbaMjs.hslaToRgba)(model);
    return model;
}
const mixColor = (from, to)=>{
    const fromRGBA = asRGBA(from);
    const toRGBA = asRGBA(to);
    if (!fromRGBA || !toRGBA) return (0, _immediateMjs.mixImmediate)(from, to);
    const blended = {
        ...fromRGBA
    };
    return (v)=>{
        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);
        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);
        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);
        blended.alpha = (0, _numberMjs.mixNumber)(fromRGBA.alpha, toRGBA.alpha, v);
        return (0, _rgbaMjs.rgba).transform(blended);
    };
};

},{"motion-utils":"33eo7","../../value/types/color/hex.mjs":"kytkN","../../value/types/color/hsla.mjs":"8oDBn","../../value/types/color/hsla-to-rgba.mjs":"2lZgZ","../../value/types/color/rgba.mjs":"iOF28","./immediate.mjs":"4TtsB","./number.mjs":"7FgQR","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2lZgZ":[function(require,module,exports,__globalThis) {
// Adapted from https://gist.github.com/mjackson/5311256
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "hslaToRgba", ()=>hslaToRgba);
function hueToRgb(p, q, t) {
    if (t < 0) t += 1;
    if (t > 1) t -= 1;
    if (t < 1 / 6) return p + (q - p) * 6 * t;
    if (t < 0.5) return q;
    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;
    return p;
}
function hslaToRgba({ hue, saturation, lightness, alpha }) {
    hue /= 360;
    saturation /= 100;
    lightness /= 100;
    let red = 0;
    let green = 0;
    let blue = 0;
    if (!saturation) red = green = blue = lightness;
    else {
        const q = lightness < 0.5 ? lightness * (1 + saturation) : lightness + saturation - lightness * saturation;
        const p = 2 * lightness - q;
        red = hueToRgb(p, q, hue + 1 / 3);
        green = hueToRgb(p, q, hue);
        blue = hueToRgb(p, q, hue - 1 / 3);
    }
    return {
        red: Math.round(red * 255),
        green: Math.round(green * 255),
        blue: Math.round(blue * 255),
        alpha
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4TtsB":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "mixImmediate", ()=>mixImmediate);
function mixImmediate(a, b) {
    return (p)=>p > 0 ? b : a;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7FgQR":[function(require,module,exports,__globalThis) {
/*
  Value in range from progress

  Given a lower limit and an upper limit, we return the value within
  that range as expressed by progress (usually a number from 0 to 1)

  So progress = 0.5 would change

  from -------- to

  to

  from ---- to

  E.g. from = 10, to = 20, progress = 0.5 => 15

  @param [number]: Lower limit of range
  @param [number]: Upper limit of range
  @param [number]: The progress between lower and upper limits expressed 0-1
  @return [number]: Value as calculated from progress within range (not limited within range)
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "mixNumber", ()=>mixNumber);
const mixNumber = (from, to, progress)=>{
    return from + (to - from) * progress;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"42WrE":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "invisibleValues", ()=>invisibleValues);
parcelHelpers.export(exports, "mixVisibility", ()=>mixVisibility);
const invisibleValues = new Set([
    "none",
    "hidden"
]);
/**
 * Returns a function that, when provided a progress value between 0 and 1,
 * will return the "none" or "hidden" string only when the progress is that of
 * the origin or target.
 */ function mixVisibility(origin, target) {
    if (invisibleValues.has(origin)) return (p)=>p <= 0 ? origin : target;
    else return (p)=>p >= 1 ? target : origin;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"craiw":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "frameloopDriver", ()=>frameloopDriver);
var _syncTimeMjs = require("../../frameloop/sync-time.mjs");
var _frameMjs = require("../../frameloop/frame.mjs");
const frameloopDriver = (update)=>{
    const passTimestamp = ({ timestamp })=>update(timestamp);
    return {
        start: (keepAlive = true)=>(0, _frameMjs.frame).update(passTimestamp, keepAlive),
        stop: ()=>(0, _frameMjs.cancelFrame)(passTimestamp),
        /**
         * If we're processing this frame we can use the
         * framelocked timestamp to keep things in sync.
         */ now: ()=>(0, _frameMjs.frameData).isProcessing ? (0, _frameMjs.frameData).timestamp : (0, _syncTimeMjs.time).now()
    };
};

},{"../../frameloop/sync-time.mjs":"7oxaC","../../frameloop/frame.mjs":"5aQJa","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"b2RI0":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "inertia", ()=>inertia);
var _indexMjs = require("./spring/index.mjs");
var _velocityMjs = require("./utils/velocity.mjs");
function inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed }) {
    const origin = keyframes[0];
    const state = {
        done: false,
        value: origin
    };
    const isOutOfBounds = (v)=>min !== undefined && v < min || max !== undefined && v > max;
    const nearestBoundary = (v)=>{
        if (min === undefined) return max;
        if (max === undefined) return min;
        return Math.abs(min - v) < Math.abs(max - v) ? min : max;
    };
    let amplitude = power * velocity;
    const ideal = origin + amplitude;
    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);
    /**
     * If the target has changed we need to re-calculate the amplitude, otherwise
     * the animation will start from the wrong position.
     */ if (target !== ideal) amplitude = target - origin;
    const calcDelta = (t)=>-amplitude * Math.exp(-t / timeConstant);
    const calcLatest = (t)=>target + calcDelta(t);
    const applyFriction = (t)=>{
        const delta = calcDelta(t);
        const latest = calcLatest(t);
        state.done = Math.abs(delta) <= restDelta;
        state.value = state.done ? target : latest;
    };
    /**
     * Ideally this would resolve for t in a stateless way, we could
     * do that by always precalculating the animation but as we know
     * this will be done anyway we can assume that spring will
     * be discovered during that.
     */ let timeReachedBoundary;
    let spring$1;
    const checkCatchBoundary = (t)=>{
        if (!isOutOfBounds(state.value)) return;
        timeReachedBoundary = t;
        spring$1 = (0, _indexMjs.spring)({
            keyframes: [
                state.value,
                nearestBoundary(state.value)
            ],
            velocity: (0, _velocityMjs.calcGeneratorVelocity)(calcLatest, t, state.value),
            damping: bounceDamping,
            stiffness: bounceStiffness,
            restDelta,
            restSpeed
        });
    };
    checkCatchBoundary(0);
    return {
        calculatedDuration: null,
        next: (t)=>{
            /**
             * We need to resolve the friction to figure out if we need a
             * spring but we don't want to do this twice per frame. So here
             * we flag if we updated for this frame and later if we did
             * we can skip doing it again.
             */ let hasUpdatedFrame = false;
            if (!spring$1 && timeReachedBoundary === undefined) {
                hasUpdatedFrame = true;
                applyFriction(t);
                checkCatchBoundary(t);
            }
            /**
             * If we have a spring and the provided t is beyond the moment the friction
             * animation crossed the min/max boundary, use the spring.
             */ if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) return spring$1.next(t - timeReachedBoundary);
            else {
                !hasUpdatedFrame && applyFriction(t);
                return state;
            }
        }
    };
}

},{"./spring/index.mjs":"6qu7W","./utils/velocity.mjs":"833P6","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6qu7W":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "spring", ()=>spring);
var _motionUtils = require("motion-utils");
var _linearMjs = require("../../waapi/utils/linear.mjs");
var _calcDurationMjs = require("../utils/calc-duration.mjs");
var _createGeneratorEasingMjs = require("../utils/create-generator-easing.mjs");
var _velocityMjs = require("../utils/velocity.mjs");
var _defaultsMjs = require("./defaults.mjs");
var _findMjs = require("./find.mjs");
const durationKeys = [
    "duration",
    "bounce"
];
const physicsKeys = [
    "stiffness",
    "damping",
    "mass"
];
function isSpringType(options, keys) {
    return keys.some((key)=>options[key] !== undefined);
}
function getSpringOptions(options) {
    let springOptions = {
        velocity: (0, _defaultsMjs.springDefaults).velocity,
        stiffness: (0, _defaultsMjs.springDefaults).stiffness,
        damping: (0, _defaultsMjs.springDefaults).damping,
        mass: (0, _defaultsMjs.springDefaults).mass,
        isResolvedFromDuration: false,
        ...options
    };
    // stiffness/damping/mass overrides duration/bounce
    if (!isSpringType(options, physicsKeys) && isSpringType(options, durationKeys)) {
        if (options.visualDuration) {
            const visualDuration = options.visualDuration;
            const root = 2 * Math.PI / (visualDuration * 1.2);
            const stiffness = root * root;
            const damping = 2 * (0, _motionUtils.clamp)(0.05, 1, 1 - (options.bounce || 0)) * Math.sqrt(stiffness);
            springOptions = {
                ...springOptions,
                mass: (0, _defaultsMjs.springDefaults).mass,
                stiffness,
                damping
            };
        } else {
            const derived = (0, _findMjs.findSpring)(options);
            springOptions = {
                ...springOptions,
                ...derived,
                mass: (0, _defaultsMjs.springDefaults).mass
            };
            springOptions.isResolvedFromDuration = true;
        }
    }
    return springOptions;
}
function spring(optionsOrVisualDuration = (0, _defaultsMjs.springDefaults).visualDuration, bounce = (0, _defaultsMjs.springDefaults).bounce) {
    const options = typeof optionsOrVisualDuration !== "object" ? {
        visualDuration: optionsOrVisualDuration,
        keyframes: [
            0,
            1
        ],
        bounce
    } : optionsOrVisualDuration;
    let { restSpeed, restDelta } = options;
    const origin = options.keyframes[0];
    const target = options.keyframes[options.keyframes.length - 1];
    /**
     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator
     * to reduce GC during animation.
     */ const state = {
        done: false,
        value: origin
    };
    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration } = getSpringOptions({
        ...options,
        velocity: -(0, _motionUtils.millisecondsToSeconds)(options.velocity || 0)
    });
    const initialVelocity = velocity || 0.0;
    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));
    const initialDelta = target - origin;
    const undampedAngularFreq = (0, _motionUtils.millisecondsToSeconds)(Math.sqrt(stiffness / mass));
    /**
     * If we're working on a granular scale, use smaller defaults for determining
     * when the spring is finished.
     *
     * These defaults have been selected emprically based on what strikes a good
     * ratio between feeling good and finishing as soon as changes are imperceptible.
     */ const isGranularScale = Math.abs(initialDelta) < 5;
    restSpeed || (restSpeed = isGranularScale ? (0, _defaultsMjs.springDefaults).restSpeed.granular : (0, _defaultsMjs.springDefaults).restSpeed.default);
    restDelta || (restDelta = isGranularScale ? (0, _defaultsMjs.springDefaults).restDelta.granular : (0, _defaultsMjs.springDefaults).restDelta.default);
    let resolveSpring;
    if (dampingRatio < 1) {
        const angularFreq = (0, _findMjs.calcAngularFreq)(undampedAngularFreq, dampingRatio);
        // Underdamped spring
        resolveSpring = (t)=>{
            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);
            return target - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq * Math.sin(angularFreq * t) + initialDelta * Math.cos(angularFreq * t));
        };
    } else if (dampingRatio === 1) // Critically damped spring
    resolveSpring = (t)=>target - Math.exp(-undampedAngularFreq * t) * (initialDelta + (initialVelocity + undampedAngularFreq * initialDelta) * t);
    else {
        // Overdamped spring
        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);
        resolveSpring = (t)=>{
            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);
            // When performing sinh or cosh values can hit Infinity so we cap them here
            const freqForT = Math.min(dampedAngularFreq * t, 300);
            return target - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) * Math.sinh(freqForT) + dampedAngularFreq * initialDelta * Math.cosh(freqForT)) / dampedAngularFreq;
        };
    }
    const generator = {
        calculatedDuration: isResolvedFromDuration ? duration || null : null,
        next: (t)=>{
            const current = resolveSpring(t);
            if (!isResolvedFromDuration) {
                let currentVelocity = t === 0 ? initialVelocity : 0.0;
                /**
                 * We only need to calculate velocity for under-damped springs
                 * as over- and critically-damped springs can't overshoot, so
                 * checking only for displacement is enough.
                 */ if (dampingRatio < 1) currentVelocity = t === 0 ? (0, _motionUtils.secondsToMilliseconds)(initialVelocity) : (0, _velocityMjs.calcGeneratorVelocity)(resolveSpring, t, current);
                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;
                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;
                state.done = isBelowVelocityThreshold && isBelowDisplacementThreshold;
            } else state.done = t >= duration;
            state.value = state.done ? target : current;
            return state;
        },
        toString: ()=>{
            const calculatedDuration = Math.min((0, _calcDurationMjs.calcGeneratorDuration)(generator), (0, _calcDurationMjs.maxGeneratorDuration));
            const easing = (0, _linearMjs.generateLinearEasing)((progress)=>generator.next(calculatedDuration * progress).value, calculatedDuration, 30);
            return calculatedDuration + "ms " + easing;
        },
        toTransition: ()=>{}
    };
    return generator;
}
spring.applyToOptions = (options)=>{
    const generatorOptions = (0, _createGeneratorEasingMjs.createGeneratorEasing)(options, 100, spring);
    options.ease = generatorOptions.ease;
    options.duration = (0, _motionUtils.secondsToMilliseconds)(generatorOptions.duration);
    options.type = "keyframes";
    return options;
};

},{"motion-utils":"33eo7","../../waapi/utils/linear.mjs":"5SsDx","../utils/calc-duration.mjs":"3MbjC","../utils/create-generator-easing.mjs":"do081","../utils/velocity.mjs":"833P6","./defaults.mjs":"63idW","./find.mjs":"dlcpT","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5SsDx":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "generateLinearEasing", ()=>generateLinearEasing);
const generateLinearEasing = (easing, duration, resolution = 10 // as milliseconds
)=>{
    let points = "";
    const numPoints = Math.max(Math.round(duration / resolution), 2);
    for(let i = 0; i < numPoints; i++)points += Math.round(easing(i / (numPoints - 1)) * 10000) / 10000 + ", ";
    return `linear(${points.substring(0, points.length - 2)})`;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3MbjC":[function(require,module,exports,__globalThis) {
/**
 * Implement a practical max duration for keyframe generation
 * to prevent infinite loops
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "calcGeneratorDuration", ()=>calcGeneratorDuration);
parcelHelpers.export(exports, "maxGeneratorDuration", ()=>maxGeneratorDuration);
const maxGeneratorDuration = 20000;
function calcGeneratorDuration(generator) {
    let duration = 0;
    const timeStep = 50;
    let state = generator.next(duration);
    while(!state.done && duration < maxGeneratorDuration){
        duration += timeStep;
        state = generator.next(duration);
    }
    return duration >= maxGeneratorDuration ? Infinity : duration;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"do081":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createGeneratorEasing", ()=>createGeneratorEasing);
var _motionUtils = require("motion-utils");
var _calcDurationMjs = require("./calc-duration.mjs");
/**
 * Create a progress => progress easing function from a generator.
 */ function createGeneratorEasing(options, scale = 100, createGenerator) {
    const generator = createGenerator({
        ...options,
        keyframes: [
            0,
            scale
        ]
    });
    const duration = Math.min((0, _calcDurationMjs.calcGeneratorDuration)(generator), (0, _calcDurationMjs.maxGeneratorDuration));
    return {
        type: "keyframes",
        ease: (progress)=>{
            return generator.next(duration * progress).value / scale;
        },
        duration: (0, _motionUtils.millisecondsToSeconds)(duration)
    };
}

},{"motion-utils":"33eo7","./calc-duration.mjs":"3MbjC","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"833P6":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "calcGeneratorVelocity", ()=>calcGeneratorVelocity);
var _motionUtils = require("motion-utils");
const velocitySampleDuration = 5; // ms
function calcGeneratorVelocity(resolveValue, t, current) {
    const prevT = Math.max(t - velocitySampleDuration, 0);
    return (0, _motionUtils.velocityPerSecond)(current - resolveValue(prevT), t - prevT);
}

},{"motion-utils":"33eo7","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"63idW":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "springDefaults", ()=>springDefaults);
const springDefaults = {
    // Default spring physics
    stiffness: 100,
    damping: 10,
    mass: 1.0,
    velocity: 0.0,
    // Default duration/bounce-based options
    duration: 800,
    bounce: 0.3,
    visualDuration: 0.3,
    // Rest thresholds
    restSpeed: {
        granular: 0.01,
        default: 2
    },
    restDelta: {
        granular: 0.005,
        default: 0.5
    },
    // Limits
    minDuration: 0.01,
    maxDuration: 10.0,
    minDamping: 0.05,
    maxDamping: 1
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dlcpT":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "calcAngularFreq", ()=>calcAngularFreq);
parcelHelpers.export(exports, "findSpring", ()=>findSpring);
var _motionUtils = require("motion-utils");
var _defaultsMjs = require("./defaults.mjs");
const safeMin = 0.001;
function findSpring({ duration = (0, _defaultsMjs.springDefaults).duration, bounce = (0, _defaultsMjs.springDefaults).bounce, velocity = (0, _defaultsMjs.springDefaults).velocity, mass = (0, _defaultsMjs.springDefaults).mass }) {
    let envelope;
    let derivative;
    (0, _motionUtils.warning)(duration <= (0, _motionUtils.secondsToMilliseconds)((0, _defaultsMjs.springDefaults).maxDuration), "Spring duration must be 10 seconds or less", "spring-duration-limit");
    let dampingRatio = 1 - bounce;
    /**
     * Restrict dampingRatio and duration to within acceptable ranges.
     */ dampingRatio = (0, _motionUtils.clamp)((0, _defaultsMjs.springDefaults).minDamping, (0, _defaultsMjs.springDefaults).maxDamping, dampingRatio);
    duration = (0, _motionUtils.clamp)((0, _defaultsMjs.springDefaults).minDuration, (0, _defaultsMjs.springDefaults).maxDuration, (0, _motionUtils.millisecondsToSeconds)(duration));
    if (dampingRatio < 1) {
        /**
         * Underdamped spring
         */ envelope = (undampedFreq)=>{
            const exponentialDecay = undampedFreq * dampingRatio;
            const delta = exponentialDecay * duration;
            const a = exponentialDecay - velocity;
            const b = calcAngularFreq(undampedFreq, dampingRatio);
            const c = Math.exp(-delta);
            return safeMin - a / b * c;
        };
        derivative = (undampedFreq)=>{
            const exponentialDecay = undampedFreq * dampingRatio;
            const delta = exponentialDecay * duration;
            const d = delta * velocity + velocity;
            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;
            const f = Math.exp(-delta);
            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);
            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;
            return factor * ((d - e) * f) / g;
        };
    } else {
        /**
         * Critically-damped spring
         */ envelope = (undampedFreq)=>{
            const a = Math.exp(-undampedFreq * duration);
            const b = (undampedFreq - velocity) * duration + 1;
            return -safeMin + a * b;
        };
        derivative = (undampedFreq)=>{
            const a = Math.exp(-undampedFreq * duration);
            const b = (velocity - undampedFreq) * (duration * duration);
            return a * b;
        };
    }
    const initialGuess = 5 / duration;
    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);
    duration = (0, _motionUtils.secondsToMilliseconds)(duration);
    if (isNaN(undampedFreq)) return {
        stiffness: (0, _defaultsMjs.springDefaults).stiffness,
        damping: (0, _defaultsMjs.springDefaults).damping,
        duration
    };
    else {
        const stiffness = Math.pow(undampedFreq, 2) * mass;
        return {
            stiffness,
            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),
            duration
        };
    }
}
const rootIterations = 12;
function approximateRoot(envelope, derivative, initialGuess) {
    let result = initialGuess;
    for(let i = 1; i < rootIterations; i++)result = result - envelope(result) / derivative(result);
    return result;
}
function calcAngularFreq(undampedFreq, dampingRatio) {
    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);
}

},{"motion-utils":"33eo7","./defaults.mjs":"63idW","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cuPkM":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "defaultEasing", ()=>defaultEasing);
parcelHelpers.export(exports, "keyframes", ()=>keyframes);
var _motionUtils = require("motion-utils");
var _interpolateMjs = require("../../utils/interpolate.mjs");
var _defaultMjs = require("../keyframes/offsets/default.mjs");
var _timeMjs = require("../keyframes/offsets/time.mjs");
function defaultEasing(values, easing) {
    return values.map(()=>easing || (0, _motionUtils.easeInOut)).splice(0, values.length - 1);
}
function keyframes({ duration = 300, keyframes: keyframeValues, times, ease = "easeInOut" }) {
    /**
     * Easing functions can be externally defined as strings. Here we convert them
     * into actual functions.
     */ const easingFunctions = (0, _motionUtils.isEasingArray)(ease) ? ease.map((0, _motionUtils.easingDefinitionToFunction)) : (0, _motionUtils.easingDefinitionToFunction)(ease);
    /**
     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator
     * to reduce GC during animation.
     */ const state = {
        done: false,
        value: keyframeValues[0]
    };
    /**
     * Create a times array based on the provided 0-1 offsets
     */ const absoluteTimes = (0, _timeMjs.convertOffsetToTimes)(// Only use the provided offsets if they're the correct length
    // TODO Maybe we should warn here if there's a length mismatch
    times && times.length === keyframeValues.length ? times : (0, _defaultMjs.defaultOffset)(keyframeValues), duration);
    const mapTimeToKeyframe = (0, _interpolateMjs.interpolate)(absoluteTimes, keyframeValues, {
        ease: Array.isArray(easingFunctions) ? easingFunctions : defaultEasing(keyframeValues, easingFunctions)
    });
    return {
        calculatedDuration: duration,
        next: (t)=>{
            state.value = mapTimeToKeyframe(t);
            state.done = t >= duration;
            return state;
        }
    };
}

},{"motion-utils":"33eo7","../../utils/interpolate.mjs":"5t1Ij","../keyframes/offsets/default.mjs":"3f67P","../keyframes/offsets/time.mjs":"7tYDF","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5t1Ij":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "interpolate", ()=>interpolate);
var _motionUtils = require("motion-utils");
var _indexMjs = require("./mix/index.mjs");
function createMixers(output, ease, customMixer) {
    const mixers = [];
    const mixerFactory = customMixer || (0, _motionUtils.MotionGlobalConfig).mix || (0, _indexMjs.mix);
    const numMixers = output.length - 1;
    for(let i = 0; i < numMixers; i++){
        let mixer = mixerFactory(output[i], output[i + 1]);
        if (ease) {
            const easingFunction = Array.isArray(ease) ? ease[i] || (0, _motionUtils.noop) : ease;
            mixer = (0, _motionUtils.pipe)(easingFunction, mixer);
        }
        mixers.push(mixer);
    }
    return mixers;
}
/**
 * Create a function that maps from a numerical input array to a generic output array.
 *
 * Accepts:
 *   - Numbers
 *   - Colors (hex, hsl, hsla, rgb, rgba)
 *   - Complex (combinations of one or more numbers or strings)
 *
 * ```jsx
 * const mixColor = interpolate([0, 1], ['#fff', '#000'])
 *
 * mixColor(0.5) // 'rgba(128, 128, 128, 1)'
 * ```
 *
 * TODO Revisit this approach once we've moved to data models for values,
 * probably not needed to pregenerate mixer functions.
 *
 * @public
 */ function interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {
    const inputLength = input.length;
    (0, _motionUtils.invariant)(inputLength === output.length, "Both input and output ranges must be the same length", "range-length");
    /**
     * If we're only provided a single input, we can just make a function
     * that returns the output.
     */ if (inputLength === 1) return ()=>output[0];
    if (inputLength === 2 && output[0] === output[1]) return ()=>output[1];
    const isZeroDeltaRange = input[0] === input[1];
    // If input runs highest -> lowest, reverse both arrays
    if (input[0] > input[inputLength - 1]) {
        input = [
            ...input
        ].reverse();
        output = [
            ...output
        ].reverse();
    }
    const mixers = createMixers(output, ease, mixer);
    const numMixers = mixers.length;
    const interpolator = (v)=>{
        if (isZeroDeltaRange && v < input[0]) return output[0];
        let i = 0;
        if (numMixers > 1) for(; i < input.length - 2; i++){
            if (v < input[i + 1]) break;
        }
        const progressInRange = (0, _motionUtils.progress)(input[i], input[i + 1], v);
        return mixers[i](progressInRange);
    };
    return isClamp ? (v)=>interpolator((0, _motionUtils.clamp)(input[0], input[inputLength - 1], v)) : interpolator;
}

},{"motion-utils":"33eo7","./mix/index.mjs":"7IPIg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3f67P":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "defaultOffset", ()=>defaultOffset);
var _fillMjs = require("./fill.mjs");
function defaultOffset(arr) {
    const offset = [
        0
    ];
    (0, _fillMjs.fillOffset)(offset, arr.length - 1);
    return offset;
}

},{"./fill.mjs":"hNQTb","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hNQTb":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "fillOffset", ()=>fillOffset);
var _motionUtils = require("motion-utils");
var _numberMjs = require("../../../utils/mix/number.mjs");
function fillOffset(offset, remaining) {
    const min = offset[offset.length - 1];
    for(let i = 1; i <= remaining; i++){
        const offsetProgress = (0, _motionUtils.progress)(0, remaining, i);
        offset.push((0, _numberMjs.mixNumber)(min, 1, offsetProgress));
    }
}

},{"motion-utils":"33eo7","../../../utils/mix/number.mjs":"7FgQR","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7tYDF":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "convertOffsetToTimes", ()=>convertOffsetToTimes);
function convertOffsetToTimes(offset, duration) {
    return offset.map((o)=>o * duration);
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2geIJ":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getFinalKeyframe", ()=>getFinalKeyframe);
const isNotNull = (value)=>value !== null;
function getFinalKeyframe(keyframes, { repeat, repeatType = "loop" }, finalKeyframe, speed = 1) {
    const resolvedKeyframes = keyframes.filter(isNotNull);
    const useFirstKeyframe = speed < 0 || repeat && repeatType !== "loop" && repeat % 2 === 1;
    const index = useFirstKeyframe ? 0 : resolvedKeyframes.length - 1;
    return !index || finalKeyframe === undefined ? resolvedKeyframes[index] : finalKeyframe;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5WVBb":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "replaceTransitionType", ()=>replaceTransitionType);
var _inertiaMjs = require("../generators/inertia.mjs");
var _keyframesMjs = require("../generators/keyframes.mjs");
var _indexMjs = require("../generators/spring/index.mjs");
const transitionTypeMap = {
    decay: (0, _inertiaMjs.inertia),
    inertia: (0, _inertiaMjs.inertia),
    tween: (0, _keyframesMjs.keyframes),
    keyframes: (0, _keyframesMjs.keyframes),
    spring: (0, _indexMjs.spring)
};
function replaceTransitionType(transition) {
    if (typeof transition.type === "string") transition.type = transitionTypeMap[transition.type];
}

},{"../generators/inertia.mjs":"b2RI0","../generators/keyframes.mjs":"cuPkM","../generators/spring/index.mjs":"6qu7W","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dCrCX":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "WithPromise", ()=>WithPromise);
class WithPromise {
    constructor(){
        this.updateFinished();
    }
    get finished() {
        return this._finished;
    }
    updateFinished() {
        this._finished = new Promise((resolve)=>{
            this.resolve = resolve;
        });
    }
    notifyFinished() {
        this.resolve();
    }
    /**
     * Allows the animation to be awaited.
     *
     * @deprecated Use `finished` instead.
     */ then(onResolve, onReject) {
        return this.finished.then(onResolve, onReject);
    }
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2zsno":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "KeyframeResolver", ()=>KeyframeResolver);
parcelHelpers.export(exports, "flushKeyframeResolvers", ()=>flushKeyframeResolvers);
var _fillWildcardsMjs = require("./utils/fill-wildcards.mjs");
var _unitConversionMjs = require("./utils/unit-conversion.mjs");
var _frameMjs = require("../../frameloop/frame.mjs");
const toResolve = new Set();
let isScheduled = false;
let anyNeedsMeasurement = false;
let isForced = false;
function measureAllKeyframes() {
    if (anyNeedsMeasurement) {
        const resolversToMeasure = Array.from(toResolve).filter((resolver)=>resolver.needsMeasurement);
        const elementsToMeasure = new Set(resolversToMeasure.map((resolver)=>resolver.element));
        const transformsToRestore = new Map();
        /**
         * Write pass
         * If we're measuring elements we want to remove bounding box-changing transforms.
         */ elementsToMeasure.forEach((element)=>{
            const removedTransforms = (0, _unitConversionMjs.removeNonTranslationalTransform)(element);
            if (!removedTransforms.length) return;
            transformsToRestore.set(element, removedTransforms);
            element.render();
        });
        // Read
        resolversToMeasure.forEach((resolver)=>resolver.measureInitialState());
        // Write
        elementsToMeasure.forEach((element)=>{
            element.render();
            const restore = transformsToRestore.get(element);
            if (restore) restore.forEach(([key, value])=>{
                element.getValue(key)?.set(value);
            });
        });
        // Read
        resolversToMeasure.forEach((resolver)=>resolver.measureEndState());
        // Write
        resolversToMeasure.forEach((resolver)=>{
            if (resolver.suspendedScrollY !== undefined) window.scrollTo(0, resolver.suspendedScrollY);
        });
    }
    anyNeedsMeasurement = false;
    isScheduled = false;
    toResolve.forEach((resolver)=>resolver.complete(isForced));
    toResolve.clear();
}
function readAllKeyframes() {
    toResolve.forEach((resolver)=>{
        resolver.readKeyframes();
        if (resolver.needsMeasurement) anyNeedsMeasurement = true;
    });
}
function flushKeyframeResolvers() {
    isForced = true;
    readAllKeyframes();
    measureAllKeyframes();
    isForced = false;
}
class KeyframeResolver {
    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false){
        this.state = "pending";
        /**
         * Track whether this resolver is async. If it is, it'll be added to the
         * resolver queue and flushed in the next frame. Resolvers that aren't going
         * to trigger read/write thrashing don't need to be async.
         */ this.isAsync = false;
        /**
         * Track whether this resolver needs to perform a measurement
         * to resolve its keyframes.
         */ this.needsMeasurement = false;
        this.unresolvedKeyframes = [
            ...unresolvedKeyframes
        ];
        this.onComplete = onComplete;
        this.name = name;
        this.motionValue = motionValue;
        this.element = element;
        this.isAsync = isAsync;
    }
    scheduleResolve() {
        this.state = "scheduled";
        if (this.isAsync) {
            toResolve.add(this);
            if (!isScheduled) {
                isScheduled = true;
                (0, _frameMjs.frame).read(readAllKeyframes);
                (0, _frameMjs.frame).resolveKeyframes(measureAllKeyframes);
            }
        } else {
            this.readKeyframes();
            this.complete();
        }
    }
    readKeyframes() {
        const { unresolvedKeyframes, name, element, motionValue } = this;
        // If initial keyframe is null we need to read it from the DOM
        if (unresolvedKeyframes[0] === null) {
            const currentValue = motionValue?.get();
            // TODO: This doesn't work if the final keyframe is a wildcard
            const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];
            if (currentValue !== undefined) unresolvedKeyframes[0] = currentValue;
            else if (element && name) {
                const valueAsRead = element.readValue(name, finalKeyframe);
                if (valueAsRead !== undefined && valueAsRead !== null) unresolvedKeyframes[0] = valueAsRead;
            }
            if (unresolvedKeyframes[0] === undefined) unresolvedKeyframes[0] = finalKeyframe;
            if (motionValue && currentValue === undefined) motionValue.set(unresolvedKeyframes[0]);
        }
        (0, _fillWildcardsMjs.fillWildcards)(unresolvedKeyframes);
    }
    setFinalKeyframe() {}
    measureInitialState() {}
    renderEndStyles() {}
    measureEndState() {}
    complete(isForcedComplete = false) {
        this.state = "complete";
        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, isForcedComplete);
        toResolve.delete(this);
    }
    cancel() {
        if (this.state === "scheduled") {
            toResolve.delete(this);
            this.state = "pending";
        }
    }
    resume() {
        if (this.state === "pending") this.scheduleResolve();
    }
}

},{"./utils/fill-wildcards.mjs":"7dmBy","./utils/unit-conversion.mjs":"5F98y","../../frameloop/frame.mjs":"5aQJa","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7dmBy":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "fillWildcards", ()=>fillWildcards);
function fillWildcards(keyframes) {
    for(let i = 1; i < keyframes.length; i++)keyframes[i] ?? (keyframes[i] = keyframes[i - 1]);
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5F98y":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isNumOrPxType", ()=>isNumOrPxType);
parcelHelpers.export(exports, "positionalValues", ()=>positionalValues);
parcelHelpers.export(exports, "removeNonTranslationalTransform", ()=>removeNonTranslationalTransform);
var _parseTransformMjs = require("../../../render/dom/parse-transform.mjs");
var _keysTransformMjs = require("../../../render/utils/keys-transform.mjs");
var _indexMjs = require("../../../value/types/numbers/index.mjs");
var _unitsMjs = require("../../../value/types/numbers/units.mjs");
const isNumOrPxType = (v)=>v === (0, _indexMjs.number) || v === (0, _unitsMjs.px);
const transformKeys = new Set([
    "x",
    "y",
    "z"
]);
const nonTranslationalTransformKeys = (0, _keysTransformMjs.transformPropOrder).filter((key)=>!transformKeys.has(key));
function removeNonTranslationalTransform(visualElement) {
    const removedTransforms = [];
    nonTranslationalTransformKeys.forEach((key)=>{
        const value = visualElement.getValue(key);
        if (value !== undefined) {
            removedTransforms.push([
                key,
                value.get()
            ]);
            value.set(key.startsWith("scale") ? 1 : 0);
        }
    });
    return removedTransforms;
}
const positionalValues = {
    // Dimensions
    width: ({ x }, { paddingLeft = "0", paddingRight = "0" })=>x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),
    height: ({ y }, { paddingTop = "0", paddingBottom = "0" })=>y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),
    top: (_bbox, { top })=>parseFloat(top),
    left: (_bbox, { left })=>parseFloat(left),
    bottom: ({ y }, { top })=>parseFloat(top) + (y.max - y.min),
    right: ({ x }, { left })=>parseFloat(left) + (x.max - x.min),
    // Transform
    x: (_bbox, { transform })=>(0, _parseTransformMjs.parseValueFromTransform)(transform, "x"),
    y: (_bbox, { transform })=>(0, _parseTransformMjs.parseValueFromTransform)(transform, "y")
};
// Alias translate longform names
positionalValues.translateX = positionalValues.x;
positionalValues.translateY = positionalValues.y;

},{"../../../render/dom/parse-transform.mjs":"bdwsj","../../../render/utils/keys-transform.mjs":"lC9VE","../../../value/types/numbers/index.mjs":"lWO0H","../../../value/types/numbers/units.mjs":"iToJc","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bdwsj":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "defaultTransformValue", ()=>defaultTransformValue);
parcelHelpers.export(exports, "parseValueFromTransform", ()=>parseValueFromTransform);
parcelHelpers.export(exports, "readTransformValue", ()=>readTransformValue);
const radToDeg = (rad)=>rad * 180 / Math.PI;
const rotate = (v)=>{
    const angle = radToDeg(Math.atan2(v[1], v[0]));
    return rebaseAngle(angle);
};
const matrix2dParsers = {
    x: 4,
    y: 5,
    translateX: 4,
    translateY: 5,
    scaleX: 0,
    scaleY: 3,
    scale: (v)=>(Math.abs(v[0]) + Math.abs(v[3])) / 2,
    rotate,
    rotateZ: rotate,
    skewX: (v)=>radToDeg(Math.atan(v[1])),
    skewY: (v)=>radToDeg(Math.atan(v[2])),
    skew: (v)=>(Math.abs(v[1]) + Math.abs(v[2])) / 2
};
const rebaseAngle = (angle)=>{
    angle = angle % 360;
    if (angle < 0) angle += 360;
    return angle;
};
const rotateZ = rotate;
const scaleX = (v)=>Math.sqrt(v[0] * v[0] + v[1] * v[1]);
const scaleY = (v)=>Math.sqrt(v[4] * v[4] + v[5] * v[5]);
const matrix3dParsers = {
    x: 12,
    y: 13,
    z: 14,
    translateX: 12,
    translateY: 13,
    translateZ: 14,
    scaleX,
    scaleY,
    scale: (v)=>(scaleX(v) + scaleY(v)) / 2,
    rotateX: (v)=>rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),
    rotateY: (v)=>rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),
    rotateZ,
    rotate: rotateZ,
    skewX: (v)=>radToDeg(Math.atan(v[4])),
    skewY: (v)=>radToDeg(Math.atan(v[1])),
    skew: (v)=>(Math.abs(v[1]) + Math.abs(v[4])) / 2
};
function defaultTransformValue(name) {
    return name.includes("scale") ? 1 : 0;
}
function parseValueFromTransform(transform, name) {
    if (!transform || transform === "none") return defaultTransformValue(name);
    const matrix3dMatch = transform.match(/^matrix3d\(([-\d.e\s,]+)\)$/u);
    let parsers;
    let match;
    if (matrix3dMatch) {
        parsers = matrix3dParsers;
        match = matrix3dMatch;
    } else {
        const matrix2dMatch = transform.match(/^matrix\(([-\d.e\s,]+)\)$/u);
        parsers = matrix2dParsers;
        match = matrix2dMatch;
    }
    if (!match) return defaultTransformValue(name);
    const valueParser = parsers[name];
    const values = match[1].split(",").map(convertTransformToNumber);
    return typeof valueParser === "function" ? valueParser(values) : values[valueParser];
}
const readTransformValue = (instance, name)=>{
    const { transform = "none" } = getComputedStyle(instance);
    return parseValueFromTransform(transform, name);
};
function convertTransformToNumber(value) {
    return parseFloat(value.trim());
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lC9VE":[function(require,module,exports,__globalThis) {
/**
 * Generate a list of every possible transform key.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "transformPropOrder", ()=>transformPropOrder);
parcelHelpers.export(exports, "transformProps", ()=>transformProps);
const transformPropOrder = [
    "transformPerspective",
    "x",
    "y",
    "z",
    "translateX",
    "translateY",
    "translateZ",
    "scale",
    "scaleX",
    "scaleY",
    "rotate",
    "rotateX",
    "rotateY",
    "rotateZ",
    "skew",
    "skewX",
    "skewY"
];
/**
 * A quick lookup for transform props.
 */ const transformProps = /*@__PURE__*/ (()=>new Set(transformPropOrder))();

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gnGVT":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "NativeAnimationExtended", ()=>NativeAnimationExtended);
var _motionUtils = require("motion-utils");
var _jsanimationMjs = require("./JSAnimation.mjs");
var _nativeAnimationMjs = require("./NativeAnimation.mjs");
var _replaceTransitionTypeMjs = require("./utils/replace-transition-type.mjs");
var _unsupportedEasingMjs = require("./waapi/utils/unsupported-easing.mjs");
/**
 * 10ms is chosen here as it strikes a balance between smooth
 * results (more than one keyframe per frame at 60fps) and
 * keyframe quantity.
 */ const sampleDelta = 10; //ms
class NativeAnimationExtended extends (0, _nativeAnimationMjs.NativeAnimation) {
    constructor(options){
        /**
         * The base NativeAnimation function only supports a subset
         * of Motion easings, and WAAPI also only supports some
         * easing functions via string/cubic-bezier definitions.
         *
         * This function replaces those unsupported easing functions
         * with a JS easing function. This will later get compiled
         * to a linear() easing function.
         */ (0, _unsupportedEasingMjs.replaceStringEasing)(options);
        /**
         * Ensure we replace the transition type with a generator function
         * before passing to WAAPI.
         *
         * TODO: Does this have a better home? It could be shared with
         * JSAnimation.
         */ (0, _replaceTransitionTypeMjs.replaceTransitionType)(options);
        super(options);
        if (options.startTime) this.startTime = options.startTime;
        this.options = options;
    }
    /**
     * WAAPI doesn't natively have any interruption capabilities.
     *
     * Rather than read commited styles back out of the DOM, we can
     * create a renderless JS animation and sample it twice to calculate
     * its current value, "previous" value, and therefore allow
     * Motion to calculate velocity for any subsequent animation.
     */ updateMotionValue(value) {
        const { motionValue, onUpdate, onComplete, element, ...options } = this.options;
        if (!motionValue) return;
        if (value !== undefined) {
            motionValue.set(value);
            return;
        }
        const sampleAnimation = new (0, _jsanimationMjs.JSAnimation)({
            ...options,
            autoplay: false
        });
        const sampleTime = (0, _motionUtils.secondsToMilliseconds)(this.finishedTime ?? this.time);
        motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);
        sampleAnimation.stop();
    }
}

},{"motion-utils":"33eo7","./JSAnimation.mjs":"lNHfP","./NativeAnimation.mjs":"jPzcv","./utils/replace-transition-type.mjs":"5WVBb","./waapi/utils/unsupported-easing.mjs":"4WgVm","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jPzcv":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "NativeAnimation", ()=>NativeAnimation);
var _motionUtils = require("motion-utils");
var _styleSetMjs = require("../render/dom/style-set.mjs");
var _scrollTimelineMjs = require("../utils/supports/scroll-timeline.mjs");
var _getFinalMjs = require("./keyframes/get-final.mjs");
var _withPromiseMjs = require("./utils/WithPromise.mjs");
var _startWaapiAnimationMjs = require("./waapi/start-waapi-animation.mjs");
var _applyGeneratorMjs = require("./waapi/utils/apply-generator.mjs");
/**
 * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.
 */ class NativeAnimation extends (0, _withPromiseMjs.WithPromise) {
    constructor(options){
        super();
        this.finishedTime = null;
        this.isStopped = false;
        if (!options) return;
        const { element, name, keyframes, pseudoElement, allowFlatten = false, finalKeyframe, onComplete } = options;
        this.isPseudoElement = Boolean(pseudoElement);
        this.allowFlatten = allowFlatten;
        this.options = options;
        (0, _motionUtils.invariant)(typeof options.type !== "string", `Mini animate() doesn't support "type" as a string.`, "mini-spring");
        const transition = (0, _applyGeneratorMjs.applyGeneratorOptions)(options);
        this.animation = (0, _startWaapiAnimationMjs.startWaapiAnimation)(element, name, keyframes, transition, pseudoElement);
        if (transition.autoplay === false) this.animation.pause();
        this.animation.onfinish = ()=>{
            this.finishedTime = this.time;
            if (!pseudoElement) {
                const keyframe = (0, _getFinalMjs.getFinalKeyframe)(keyframes, this.options, finalKeyframe, this.speed);
                if (this.updateMotionValue) this.updateMotionValue(keyframe);
                else /**
                     * If we can, we want to commit the final style as set by the user,
                     * rather than the computed keyframe value supplied by the animation.
                     */ (0, _styleSetMjs.setStyle)(element, name, keyframe);
                this.animation.cancel();
            }
            onComplete?.();
            this.notifyFinished();
        };
    }
    play() {
        if (this.isStopped) return;
        this.animation.play();
        if (this.state === "finished") this.updateFinished();
    }
    pause() {
        this.animation.pause();
    }
    complete() {
        this.animation.finish?.();
    }
    cancel() {
        try {
            this.animation.cancel();
        } catch (e) {}
    }
    stop() {
        if (this.isStopped) return;
        this.isStopped = true;
        const { state } = this;
        if (state === "idle" || state === "finished") return;
        if (this.updateMotionValue) this.updateMotionValue();
        else this.commitStyles();
        if (!this.isPseudoElement) this.cancel();
    }
    /**
     * WAAPI doesn't natively have any interruption capabilities.
     *
     * In this method, we commit styles back to the DOM before cancelling
     * the animation.
     *
     * This is designed to be overridden by NativeAnimationExtended, which
     * will create a renderless JS animation and sample it twice to calculate
     * its current value, "previous" value, and therefore allow
     * Motion to also correctly calculate velocity for any subsequent animation
     * while deferring the commit until the next animation frame.
     */ commitStyles() {
        if (!this.isPseudoElement) this.animation.commitStyles?.();
    }
    get duration() {
        const duration = this.animation.effect?.getComputedTiming?.().duration || 0;
        return (0, _motionUtils.millisecondsToSeconds)(Number(duration));
    }
    get iterationDuration() {
        const { delay = 0 } = this.options || {};
        return this.duration + (0, _motionUtils.millisecondsToSeconds)(delay);
    }
    get time() {
        return (0, _motionUtils.millisecondsToSeconds)(Number(this.animation.currentTime) || 0);
    }
    set time(newTime) {
        this.finishedTime = null;
        this.animation.currentTime = (0, _motionUtils.secondsToMilliseconds)(newTime);
    }
    /**
     * The playback speed of the animation.
     * 1 = normal speed, 2 = double speed, 0.5 = half speed.
     */ get speed() {
        return this.animation.playbackRate;
    }
    set speed(newSpeed) {
        // Allow backwards playback after finishing
        if (newSpeed < 0) this.finishedTime = null;
        this.animation.playbackRate = newSpeed;
    }
    get state() {
        return this.finishedTime !== null ? "finished" : this.animation.playState;
    }
    get startTime() {
        return Number(this.animation.startTime);
    }
    set startTime(newStartTime) {
        this.animation.startTime = newStartTime;
    }
    /**
     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.
     */ attachTimeline({ timeline, observe }) {
        if (this.allowFlatten) this.animation.effect?.updateTiming({
            easing: "linear"
        });
        this.animation.onfinish = null;
        if (timeline && (0, _scrollTimelineMjs.supportsScrollTimeline)()) {
            this.animation.timeline = timeline;
            return 0, _motionUtils.noop;
        } else return observe(this);
    }
}

},{"motion-utils":"33eo7","../render/dom/style-set.mjs":"ibC1H","../utils/supports/scroll-timeline.mjs":"7g0wq","./keyframes/get-final.mjs":"2geIJ","./utils/WithPromise.mjs":"dCrCX","./waapi/start-waapi-animation.mjs":"j2puc","./waapi/utils/apply-generator.mjs":"ivNtC","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ibC1H":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "setStyle", ()=>setStyle);
var _isCssVarMjs = require("./is-css-var.mjs");
function setStyle(element, name, value) {
    (0, _isCssVarMjs.isCSSVar)(name) ? element.style.setProperty(name, value) : element.style[name] = value;
}

},{"./is-css-var.mjs":"kU0Dh","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"kU0Dh":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isCSSVar", ()=>isCSSVar);
const isCSSVar = (name)=>name.startsWith("--");

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7g0wq":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "supportsScrollTimeline", ()=>supportsScrollTimeline);
var _motionUtils = require("motion-utils");
const supportsScrollTimeline = /* @__PURE__ */ (0, _motionUtils.memo)(()=>window.ScrollTimeline !== undefined);

},{"motion-utils":"33eo7","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"j2puc":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "startWaapiAnimation", ()=>startWaapiAnimation);
var _animationCountMjs = require("../../stats/animation-count.mjs");
var _bufferMjs = require("../../stats/buffer.mjs");
var _mapEasingMjs = require("./easing/map-easing.mjs");
function startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = "loop", ease = "easeOut", times } = {}, pseudoElement) {
    const keyframeOptions = {
        [valueName]: keyframes
    };
    if (times) keyframeOptions.offset = times;
    const easing = (0, _mapEasingMjs.mapEasingToNativeEasing)(ease, duration);
    /**
     * If this is an easing array, apply to keyframes, not animation as a whole
     */ if (Array.isArray(easing)) keyframeOptions.easing = easing;
    if ((0, _bufferMjs.statsBuffer).value) (0, _animationCountMjs.activeAnimations).waapi++;
    const options = {
        delay,
        duration,
        easing: !Array.isArray(easing) ? easing : "linear",
        fill: "both",
        iterations: repeat + 1,
        direction: repeatType === "reverse" ? "alternate" : "normal"
    };
    if (pseudoElement) options.pseudoElement = pseudoElement;
    const animation = element.animate(keyframeOptions, options);
    if ((0, _bufferMjs.statsBuffer).value) animation.finished.finally(()=>{
        (0, _animationCountMjs.activeAnimations).waapi--;
    });
    return animation;
}

},{"../../stats/animation-count.mjs":"j8Cp5","../../stats/buffer.mjs":"en8S3","./easing/map-easing.mjs":"jSgdr","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jSgdr":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "mapEasingToNativeEasing", ()=>mapEasingToNativeEasing);
var _motionUtils = require("motion-utils");
var _linearEasingMjs = require("../../../utils/supports/linear-easing.mjs");
var _linearMjs = require("../utils/linear.mjs");
var _cubicBezierMjs = require("./cubic-bezier.mjs");
var _supportedMjs = require("./supported.mjs");
function mapEasingToNativeEasing(easing, duration) {
    if (!easing) return undefined;
    else if (typeof easing === "function") return (0, _linearEasingMjs.supportsLinearEasing)() ? (0, _linearMjs.generateLinearEasing)(easing, duration) : "ease-out";
    else if ((0, _motionUtils.isBezierDefinition)(easing)) return (0, _cubicBezierMjs.cubicBezierAsString)(easing);
    else if (Array.isArray(easing)) return easing.map((segmentEasing)=>mapEasingToNativeEasing(segmentEasing, duration) || (0, _supportedMjs.supportedWaapiEasing).easeOut);
    else return (0, _supportedMjs.supportedWaapiEasing)[easing];
}

},{"motion-utils":"33eo7","../../../utils/supports/linear-easing.mjs":"8N0Wt","../utils/linear.mjs":"5SsDx","./cubic-bezier.mjs":"51oic","./supported.mjs":"lKgzZ","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8N0Wt":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "supportsLinearEasing", ()=>supportsLinearEasing);
var _memoMjs = require("./memo.mjs");
const supportsLinearEasing = /*@__PURE__*/ (0, _memoMjs.memoSupports)(()=>{
    try {
        document.createElement("div").animate({
            opacity: 0
        }, {
            easing: "linear(0, 1)"
        });
    } catch (e) {
        return false;
    }
    return true;
}, "linearEasing");

},{"./memo.mjs":"lOjMe","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lOjMe":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "memoSupports", ()=>memoSupports);
var _motionUtils = require("motion-utils");
var _flagsMjs = require("./flags.mjs");
function memoSupports(callback, supportsFlag) {
    const memoized = (0, _motionUtils.memo)(callback);
    return ()=>(0, _flagsMjs.supportsFlags)[supportsFlag] ?? memoized();
}

},{"motion-utils":"33eo7","./flags.mjs":"l6CeB","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"l6CeB":[function(require,module,exports,__globalThis) {
/**
 * Add the ability for test suites to manually set support flags
 * to better test more environments.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "supportsFlags", ()=>supportsFlags);
const supportsFlags = {};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"51oic":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "cubicBezierAsString", ()=>cubicBezierAsString);
const cubicBezierAsString = ([a, b, c, d])=>`cubic-bezier(${a}, ${b}, ${c}, ${d})`;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lKgzZ":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "supportedWaapiEasing", ()=>supportedWaapiEasing);
var _cubicBezierMjs = require("./cubic-bezier.mjs");
const supportedWaapiEasing = {
    linear: "linear",
    ease: "ease",
    easeIn: "ease-in",
    easeOut: "ease-out",
    easeInOut: "ease-in-out",
    circIn: /*@__PURE__*/ (0, _cubicBezierMjs.cubicBezierAsString)([
        0,
        0.65,
        0.55,
        1
    ]),
    circOut: /*@__PURE__*/ (0, _cubicBezierMjs.cubicBezierAsString)([
        0.55,
        0,
        1,
        0.45
    ]),
    backIn: /*@__PURE__*/ (0, _cubicBezierMjs.cubicBezierAsString)([
        0.31,
        0.01,
        0.66,
        -0.59
    ]),
    backOut: /*@__PURE__*/ (0, _cubicBezierMjs.cubicBezierAsString)([
        0.33,
        1.53,
        0.69,
        0.99
    ])
};

},{"./cubic-bezier.mjs":"51oic","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ivNtC":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "applyGeneratorOptions", ()=>applyGeneratorOptions);
var _linearEasingMjs = require("../../../utils/supports/linear-easing.mjs");
var _isGeneratorMjs = require("../../generators/utils/is-generator.mjs");
function applyGeneratorOptions({ type, ...options }) {
    if ((0, _isGeneratorMjs.isGenerator)(type) && (0, _linearEasingMjs.supportsLinearEasing)()) return type.applyToOptions(options);
    else {
        options.duration ?? (options.duration = 300);
        options.ease ?? (options.ease = "easeOut");
    }
    return options;
}

},{"../../../utils/supports/linear-easing.mjs":"8N0Wt","../../generators/utils/is-generator.mjs":"937Jh","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"937Jh":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isGenerator", ()=>isGenerator);
function isGenerator(type) {
    return typeof type === "function" && "applyToOptions" in type;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4WgVm":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "replaceStringEasing", ()=>replaceStringEasing);
var _motionUtils = require("motion-utils");
const unsupportedEasingFunctions = {
    anticipate: (0, _motionUtils.anticipate),
    backInOut: (0, _motionUtils.backInOut),
    circInOut: (0, _motionUtils.circInOut)
};
function isUnsupportedEase(key) {
    return key in unsupportedEasingFunctions;
}
function replaceStringEasing(transition) {
    if (typeof transition.ease === "string" && isUnsupportedEase(transition.ease)) transition.ease = unsupportedEasingFunctions[transition.ease];
}

},{"motion-utils":"33eo7","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3ldXM":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "canAnimate", ()=>canAnimate);
var _motionUtils = require("motion-utils");
var _isGeneratorMjs = require("../generators/utils/is-generator.mjs");
var _isAnimatableMjs = require("./is-animatable.mjs");
function hasKeyframesChanged(keyframes) {
    const current = keyframes[0];
    if (keyframes.length === 1) return true;
    for(let i = 0; i < keyframes.length; i++){
        if (keyframes[i] !== current) return true;
    }
}
function canAnimate(keyframes, name, type, velocity) {
    /**
     * Check if we're able to animate between the start and end keyframes,
     * and throw a warning if we're attempting to animate between one that's
     * animatable and another that isn't.
     */ const originKeyframe = keyframes[0];
    if (originKeyframe === null) return false;
    /**
     * These aren't traditionally animatable but we do support them.
     * In future we could look into making this more generic or replacing
     * this function with mix() === mixImmediate
     */ if (name === "display" || name === "visibility") return true;
    const targetKeyframe = keyframes[keyframes.length - 1];
    const isOriginAnimatable = (0, _isAnimatableMjs.isAnimatable)(originKeyframe, name);
    const isTargetAnimatable = (0, _isAnimatableMjs.isAnimatable)(targetKeyframe, name);
    (0, _motionUtils.warning)(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from "${originKeyframe}" to "${targetKeyframe}". "${isOriginAnimatable ? targetKeyframe : originKeyframe}" is not an animatable value.`, "value-not-animatable");
    // Always skip if any of these are true
    if (!isOriginAnimatable || !isTargetAnimatable) return false;
    return hasKeyframesChanged(keyframes) || (type === "spring" || (0, _isGeneratorMjs.isGenerator)(type)) && velocity;
}

},{"motion-utils":"33eo7","../generators/utils/is-generator.mjs":"937Jh","./is-animatable.mjs":"60pPc","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"60pPc":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isAnimatable", ()=>isAnimatable);
var _indexMjs = require("../../value/types/complex/index.mjs");
/**
 * Check if a value is animatable. Examples:
 *
 * ✅: 100, "100px", "#fff"
 * ❌: "block", "url(2.jpg)"
 * @param value
 *
 * @internal
 */ const isAnimatable = (value, name)=>{
    // If the list of keys that might be non-animatable grows, replace with Set
    if (name === "zIndex") return false;
    // If it's a number or a keyframes array, we can animate it. We might at some point
    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,
    // but for now lets leave it like this for performance reasons
    if (typeof value === "number" || Array.isArray(value)) return true;
    if (typeof value === "string" && // It's animatable if we have a string
    ((0, _indexMjs.complex).test(value) || value === "0") && // And it contains numbers and/or colors
    !value.startsWith("url(") // Unless it starts with "url("
    ) return true;
    return false;
};

},{"../../value/types/complex/index.mjs":"fH52E","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9nuIy":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeAnimationInstant", ()=>makeAnimationInstant);
function makeAnimationInstant(options) {
    options.duration = 0;
    options.type = "keyframes";
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8ykih":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "supportsBrowserAnimation", ()=>supportsBrowserAnimation);
var _motionUtils = require("motion-utils");
/**
 * A list of values that can be hardware-accelerated.
 */ const acceleratedValues = new Set([
    "opacity",
    "clipPath",
    "filter",
    "transform"
]);
const supportsWaapi = /*@__PURE__*/ (0, _motionUtils.memo)(()=>Object.hasOwnProperty.call(Element.prototype, "animate"));
function supportsBrowserAnimation(options) {
    const { motionValue, name, repeatDelay, repeatType, damping, type } = options;
    const subject = motionValue?.owner?.current;
    /**
     * We use this check instead of isHTMLElement() because we explicitly
     * **don't** want elements in different timing contexts (i.e. popups)
     * to be accelerated, as it's not possible to sync these animations
     * properly with those driven from the main window frameloop.
     */ if (!(subject instanceof HTMLElement)) return false;
    const { onUpdate, transformTemplate } = motionValue.owner.getProps();
    return supportsWaapi() && name && acceleratedValues.has(name) && (name !== "transform" || !transformTemplate) && /**
         * If we're outputting values to onUpdate then we can't use WAAPI as there's
         * no way to read the value from WAAPI every frame.
         */ !onUpdate && !repeatDelay && repeatType !== "mirror" && damping !== 0 && type !== "inertia";
}

},{"motion-utils":"33eo7","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5HyWC":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getVariableValue", ()=>getVariableValue);
parcelHelpers.export(exports, "parseCSSVariable", ()=>parseCSSVariable);
var _motionUtils = require("motion-utils");
var _isCssVariableMjs = require("./is-css-variable.mjs");
/**
 * Parse Framer's special CSS variable format into a CSS token and a fallback.
 *
 * ```
 * `var(--foo, #fff)` => [`--foo`, '#fff']
 * ```
 *
 * @param current
 */ const splitCSSVariableRegex = // eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words
/^var\(--(?:([\w-]+)|([\w-]+), ?([a-zA-Z\d ()%#.,-]+))\)/u;
function parseCSSVariable(current) {
    const match = splitCSSVariableRegex.exec(current);
    if (!match) return [
        , 
    ];
    const [, token1, token2, fallback] = match;
    return [
        `--${token1 ?? token2}`,
        fallback
    ];
}
const maxDepth = 4;
function getVariableValue(current, element, depth = 1) {
    (0, _motionUtils.invariant)(depth <= maxDepth, `Max CSS variable fallback depth detected in property "${current}". This may indicate a circular fallback dependency.`, "max-css-var-depth");
    const [token, fallback] = parseCSSVariable(current);
    // No CSS variable detected
    if (!token) return;
    // Attempt to read this CSS variable off the element
    const resolved = window.getComputedStyle(element).getPropertyValue(token);
    if (resolved) {
        const trimmed = resolved.trim();
        return (0, _motionUtils.isNumericalString)(trimmed) ? parseFloat(trimmed) : trimmed;
    }
    return (0, _isCssVariableMjs.isCSSVariableToken)(fallback) ? getVariableValue(fallback, element, depth + 1) : fallback;
}

},{"motion-utils":"33eo7","./is-css-variable.mjs":"fWq3y","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hQe3d":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getValueTransition", ()=>getValueTransition);
function getValueTransition(transition, key) {
    return transition?.[key] ?? transition?.["default"] ?? transition;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"e0euv":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "DOMKeyframesResolver", ()=>DOMKeyframesResolver);
var _keysPositionMjs = require("../../render/utils/keys-position.mjs");
var _dimensionsMjs = require("../../value/types/dimensions.mjs");
var _cssVariablesConversionMjs = require("../utils/css-variables-conversion.mjs");
var _isCssVariableMjs = require("../utils/is-css-variable.mjs");
var _keyframesResolverMjs = require("./KeyframesResolver.mjs");
var _isNoneMjs = require("./utils/is-none.mjs");
var _makeNoneAnimatableMjs = require("./utils/make-none-animatable.mjs");
var _unitConversionMjs = require("./utils/unit-conversion.mjs");
class DOMKeyframesResolver extends (0, _keyframesResolverMjs.KeyframeResolver) {
    constructor(unresolvedKeyframes, onComplete, name, motionValue, element){
        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);
    }
    readKeyframes() {
        const { unresolvedKeyframes, element, name } = this;
        if (!element || !element.current) return;
        super.readKeyframes();
        /**
         * If any keyframe is a CSS variable, we need to find its value by sampling the element
         */ for(let i = 0; i < unresolvedKeyframes.length; i++){
            let keyframe = unresolvedKeyframes[i];
            if (typeof keyframe === "string") {
                keyframe = keyframe.trim();
                if ((0, _isCssVariableMjs.isCSSVariableToken)(keyframe)) {
                    const resolved = (0, _cssVariablesConversionMjs.getVariableValue)(keyframe, element.current);
                    if (resolved !== undefined) unresolvedKeyframes[i] = resolved;
                    if (i === unresolvedKeyframes.length - 1) this.finalKeyframe = keyframe;
                }
            }
        }
        /**
         * Resolve "none" values. We do this potentially twice - once before and once after measuring keyframes.
         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which
         * have a far bigger performance impact.
         */ this.resolveNoneKeyframes();
        /**
         * Check to see if unit type has changed. If so schedule jobs that will
         * temporarily set styles to the destination keyframes.
         * Skip if we have more than two keyframes or this isn't a positional value.
         * TODO: We can throw if there are multiple keyframes and the value type changes.
         */ if (!(0, _keysPositionMjs.positionalKeys).has(name) || unresolvedKeyframes.length !== 2) return;
        const [origin, target] = unresolvedKeyframes;
        const originType = (0, _dimensionsMjs.findDimensionValueType)(origin);
        const targetType = (0, _dimensionsMjs.findDimensionValueType)(target);
        /**
         * Either we don't recognise these value types or we can animate between them.
         */ if (originType === targetType) return;
        /**
         * If both values are numbers or pixels, we can animate between them by
         * converting them to numbers.
         */ if ((0, _unitConversionMjs.isNumOrPxType)(originType) && (0, _unitConversionMjs.isNumOrPxType)(targetType)) for(let i = 0; i < unresolvedKeyframes.length; i++){
            const value = unresolvedKeyframes[i];
            if (typeof value === "string") unresolvedKeyframes[i] = parseFloat(value);
        }
        else if ((0, _unitConversionMjs.positionalValues)[name]) /**
             * Else, the only way to resolve this is by measuring the element.
             */ this.needsMeasurement = true;
    }
    resolveNoneKeyframes() {
        const { unresolvedKeyframes, name } = this;
        const noneKeyframeIndexes = [];
        for(let i = 0; i < unresolvedKeyframes.length; i++)if (unresolvedKeyframes[i] === null || (0, _isNoneMjs.isNone)(unresolvedKeyframes[i])) noneKeyframeIndexes.push(i);
        if (noneKeyframeIndexes.length) (0, _makeNoneAnimatableMjs.makeNoneKeyframesAnimatable)(unresolvedKeyframes, noneKeyframeIndexes, name);
    }
    measureInitialState() {
        const { element, unresolvedKeyframes, name } = this;
        if (!element || !element.current) return;
        if (name === "height") this.suspendedScrollY = window.pageYOffset;
        this.measuredOrigin = (0, _unitConversionMjs.positionalValues)[name](element.measureViewportBox(), window.getComputedStyle(element.current));
        unresolvedKeyframes[0] = this.measuredOrigin;
        // Set final key frame to measure after next render
        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];
        if (measureKeyframe !== undefined) element.getValue(name, measureKeyframe).jump(measureKeyframe, false);
    }
    measureEndState() {
        const { element, name, unresolvedKeyframes } = this;
        if (!element || !element.current) return;
        const value = element.getValue(name);
        value && value.jump(this.measuredOrigin, false);
        const finalKeyframeIndex = unresolvedKeyframes.length - 1;
        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];
        unresolvedKeyframes[finalKeyframeIndex] = (0, _unitConversionMjs.positionalValues)[name](element.measureViewportBox(), window.getComputedStyle(element.current));
        if (finalKeyframe !== null && this.finalKeyframe === undefined) this.finalKeyframe = finalKeyframe;
        // If we removed transform values, reapply them before the next render
        if (this.removedTransforms?.length) this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue])=>{
            element.getValue(unsetTransformName).set(unsetTransformValue);
        });
        this.resolveNoneKeyframes();
    }
}

},{"../../render/utils/keys-position.mjs":"OUtz6","../../value/types/dimensions.mjs":"jgF7D","../utils/css-variables-conversion.mjs":"5HyWC","../utils/is-css-variable.mjs":"fWq3y","./KeyframesResolver.mjs":"2zsno","./utils/is-none.mjs":"gyvDt","./utils/make-none-animatable.mjs":"z2iY8","./utils/unit-conversion.mjs":"5F98y","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"OUtz6":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "positionalKeys", ()=>positionalKeys);
var _keysTransformMjs = require("./keys-transform.mjs");
const positionalKeys = new Set([
    "width",
    "height",
    "top",
    "left",
    "right",
    "bottom",
    ...(0, _keysTransformMjs.transformPropOrder)
]);

},{"./keys-transform.mjs":"lC9VE","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jgF7D":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "dimensionValueTypes", ()=>dimensionValueTypes);
parcelHelpers.export(exports, "findDimensionValueType", ()=>findDimensionValueType);
var _autoMjs = require("./auto.mjs");
var _indexMjs = require("./numbers/index.mjs");
var _unitsMjs = require("./numbers/units.mjs");
var _testMjs = require("./test.mjs");
/**
 * A list of value types commonly used for dimensions
 */ const dimensionValueTypes = [
    (0, _indexMjs.number),
    (0, _unitsMjs.px),
    (0, _unitsMjs.percent),
    (0, _unitsMjs.degrees),
    (0, _unitsMjs.vw),
    (0, _unitsMjs.vh),
    (0, _autoMjs.auto)
];
/**
 * Tests a dimensional value against the list of dimension ValueTypes
 */ const findDimensionValueType = (v)=>dimensionValueTypes.find((0, _testMjs.testValueType)(v));

},{"./auto.mjs":"dSuqZ","./numbers/index.mjs":"lWO0H","./numbers/units.mjs":"iToJc","./test.mjs":"2xdbs","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dSuqZ":[function(require,module,exports,__globalThis) {
/**
 * ValueType for "auto"
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "auto", ()=>auto);
const auto = {
    test: (v)=>v === "auto",
    parse: (v)=>v
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2xdbs":[function(require,module,exports,__globalThis) {
/**
 * Tests a provided value against a ValueType
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "testValueType", ()=>testValueType);
const testValueType = (v)=>(type)=>type.test(v);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gyvDt":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isNone", ()=>isNone);
var _motionUtils = require("motion-utils");
function isNone(value) {
    if (typeof value === "number") return value === 0;
    else if (value !== null) return value === "none" || value === "0" || (0, _motionUtils.isZeroValueString)(value);
    else return true;
}

},{"motion-utils":"33eo7","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"z2iY8":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeNoneKeyframesAnimatable", ()=>makeNoneKeyframesAnimatable);
var _indexMjs = require("../../../value/types/complex/index.mjs");
var _animatableNoneMjs = require("../../../value/types/utils/animatable-none.mjs");
/**
 * If we encounter keyframes like "none" or "0" and we also have keyframes like
 * "#fff" or "200px 200px" we want to find a keyframe to serve as a template for
 * the "none" keyframes. In this case "#fff" or "200px 200px" - then these get turned into
 * zero equivalents, i.e. "#fff0" or "0px 0px".
 */ const invalidTemplates = new Set([
    "auto",
    "none",
    "0"
]);
function makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {
    let i = 0;
    let animatableTemplate = undefined;
    while(i < unresolvedKeyframes.length && !animatableTemplate){
        const keyframe = unresolvedKeyframes[i];
        if (typeof keyframe === "string" && !invalidTemplates.has(keyframe) && (0, _indexMjs.analyseComplexValue)(keyframe).values.length) animatableTemplate = unresolvedKeyframes[i];
        i++;
    }
    if (animatableTemplate && name) for (const noneIndex of noneKeyframeIndexes)unresolvedKeyframes[noneIndex] = (0, _animatableNoneMjs.getAnimatableNone)(name, animatableTemplate);
}

},{"../../../value/types/complex/index.mjs":"fH52E","../../../value/types/utils/animatable-none.mjs":"byPq0","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"byPq0":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getAnimatableNone", ()=>getAnimatableNone);
var _indexMjs = require("../complex/index.mjs");
var _filterMjs = require("../complex/filter.mjs");
var _defaultsMjs = require("../maps/defaults.mjs");
function getAnimatableNone(key, value) {
    let defaultValueType = (0, _defaultsMjs.getDefaultValueType)(key);
    if (defaultValueType !== (0, _filterMjs.filter)) defaultValueType = (0, _indexMjs.complex);
    // If value is not recognised as animatable, ie "none", create an animatable version origin based on the target
    return defaultValueType.getAnimatableNone ? defaultValueType.getAnimatableNone(value) : undefined;
}

},{"../complex/index.mjs":"fH52E","../complex/filter.mjs":"dQe1L","../maps/defaults.mjs":"f3IhA","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dQe1L":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "filter", ()=>filter);
var _indexMjs = require("./index.mjs");
var _floatRegexMjs = require("../utils/float-regex.mjs");
/**
 * Properties that should default to 1 or 100%
 */ const maxDefaults = new Set([
    "brightness",
    "contrast",
    "saturate",
    "opacity"
]);
function applyDefaultFilter(v) {
    const [name, value] = v.slice(0, -1).split("(");
    if (name === "drop-shadow") return v;
    const [number] = value.match((0, _floatRegexMjs.floatRegex)) || [];
    if (!number) return v;
    const unit = value.replace(number, "");
    let defaultValue = maxDefaults.has(name) ? 1 : 0;
    if (number !== value) defaultValue *= 100;
    return name + "(" + defaultValue + unit + ")";
}
const functionRegex = /\b([a-z-]*)\(.*?\)/gu;
const filter = {
    ...(0, _indexMjs.complex),
    getAnimatableNone: (v)=>{
        const functions = v.match(functionRegex);
        return functions ? functions.map(applyDefaultFilter).join(" ") : v;
    }
};

},{"./index.mjs":"fH52E","../utils/float-regex.mjs":"eQj4G","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"f3IhA":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "defaultValueTypes", ()=>defaultValueTypes);
parcelHelpers.export(exports, "getDefaultValueType", ()=>getDefaultValueType);
var _indexMjs = require("../color/index.mjs");
var _filterMjs = require("../complex/filter.mjs");
var _numberMjs = require("./number.mjs");
/**
 * A map of default value types for common values
 */ const defaultValueTypes = {
    ...(0, _numberMjs.numberValueTypes),
    color: // Color props
    (0, _indexMjs.color),
    backgroundColor: (0, _indexMjs.color),
    outlineColor: (0, _indexMjs.color),
    fill: (0, _indexMjs.color),
    stroke: (0, _indexMjs.color),
    // Border props
    borderColor: (0, _indexMjs.color),
    borderTopColor: (0, _indexMjs.color),
    borderRightColor: (0, _indexMjs.color),
    borderBottomColor: (0, _indexMjs.color),
    borderLeftColor: (0, _indexMjs.color),
    filter: (0, _filterMjs.filter),
    WebkitFilter: (0, _filterMjs.filter)
};
/**
 * Gets the default ValueType for the provided value key
 */ const getDefaultValueType = (key)=>defaultValueTypes[key];

},{"../color/index.mjs":"97zRW","../complex/filter.mjs":"dQe1L","./number.mjs":"d9aLH","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"d9aLH":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "numberValueTypes", ()=>numberValueTypes);
var _intMjs = require("../int.mjs");
var _indexMjs = require("../numbers/index.mjs");
var _unitsMjs = require("../numbers/units.mjs");
var _transformMjs = require("./transform.mjs");
const numberValueTypes = {
    // Border props
    borderWidth: (0, _unitsMjs.px),
    borderTopWidth: (0, _unitsMjs.px),
    borderRightWidth: (0, _unitsMjs.px),
    borderBottomWidth: (0, _unitsMjs.px),
    borderLeftWidth: (0, _unitsMjs.px),
    borderRadius: (0, _unitsMjs.px),
    radius: (0, _unitsMjs.px),
    borderTopLeftRadius: (0, _unitsMjs.px),
    borderTopRightRadius: (0, _unitsMjs.px),
    borderBottomRightRadius: (0, _unitsMjs.px),
    borderBottomLeftRadius: (0, _unitsMjs.px),
    // Positioning props
    width: (0, _unitsMjs.px),
    maxWidth: (0, _unitsMjs.px),
    height: (0, _unitsMjs.px),
    maxHeight: (0, _unitsMjs.px),
    top: (0, _unitsMjs.px),
    right: (0, _unitsMjs.px),
    bottom: (0, _unitsMjs.px),
    left: (0, _unitsMjs.px),
    // Spacing props
    padding: (0, _unitsMjs.px),
    paddingTop: (0, _unitsMjs.px),
    paddingRight: (0, _unitsMjs.px),
    paddingBottom: (0, _unitsMjs.px),
    paddingLeft: (0, _unitsMjs.px),
    margin: (0, _unitsMjs.px),
    marginTop: (0, _unitsMjs.px),
    marginRight: (0, _unitsMjs.px),
    marginBottom: (0, _unitsMjs.px),
    marginLeft: (0, _unitsMjs.px),
    // Misc
    backgroundPositionX: (0, _unitsMjs.px),
    backgroundPositionY: (0, _unitsMjs.px),
    ...(0, _transformMjs.transformValueTypes),
    zIndex: (0, _intMjs.int),
    // SVG
    fillOpacity: (0, _indexMjs.alpha),
    strokeOpacity: (0, _indexMjs.alpha),
    numOctaves: (0, _intMjs.int)
};

},{"../int.mjs":"aRHOy","../numbers/index.mjs":"lWO0H","../numbers/units.mjs":"iToJc","./transform.mjs":"9BKSL","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aRHOy":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "int", ()=>int);
var _indexMjs = require("./numbers/index.mjs");
const int = {
    ...(0, _indexMjs.number),
    transform: Math.round
};

},{"./numbers/index.mjs":"lWO0H","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9BKSL":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "transformValueTypes", ()=>transformValueTypes);
var _indexMjs = require("../numbers/index.mjs");
var _unitsMjs = require("../numbers/units.mjs");
const transformValueTypes = {
    rotate: (0, _unitsMjs.degrees),
    rotateX: (0, _unitsMjs.degrees),
    rotateY: (0, _unitsMjs.degrees),
    rotateZ: (0, _unitsMjs.degrees),
    scale: (0, _indexMjs.scale),
    scaleX: (0, _indexMjs.scale),
    scaleY: (0, _indexMjs.scale),
    scaleZ: (0, _indexMjs.scale),
    skew: (0, _unitsMjs.degrees),
    skewX: (0, _unitsMjs.degrees),
    skewY: (0, _unitsMjs.degrees),
    distance: (0, _unitsMjs.px),
    translateX: (0, _unitsMjs.px),
    translateY: (0, _unitsMjs.px),
    translateZ: (0, _unitsMjs.px),
    x: (0, _unitsMjs.px),
    y: (0, _unitsMjs.px),
    z: (0, _unitsMjs.px),
    perspective: (0, _unitsMjs.px),
    transformPerspective: (0, _unitsMjs.px),
    opacity: (0, _indexMjs.alpha),
    originX: (0, _unitsMjs.progressPercentage),
    originY: (0, _unitsMjs.progressPercentage),
    originZ: (0, _unitsMjs.px)
};

},{"../numbers/index.mjs":"lWO0H","../numbers/units.mjs":"iToJc","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dwHSt":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "cancelMicrotask", ()=>cancelMicrotask);
parcelHelpers.export(exports, "microtask", ()=>microtask);
var _batcherMjs = require("./batcher.mjs");
const { schedule: microtask, cancel: cancelMicrotask } = /* @__PURE__ */ (0, _batcherMjs.createRenderBatcher)(queueMicrotask, false);

},{"./batcher.mjs":"7IEYc","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lxZgr":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isDragActive", ()=>isDragActive);
parcelHelpers.export(exports, "isDragging", ()=>isDragging);
const isDragging = {
    x: false,
    y: false
};
function isDragActive() {
    return isDragging.x || isDragging.y;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"flXje":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "setDragLock", ()=>setDragLock);
var _isActiveMjs = require("./is-active.mjs");
function setDragLock(axis) {
    if (axis === "x" || axis === "y") {
        if ((0, _isActiveMjs.isDragging)[axis]) return null;
        else {
            (0, _isActiveMjs.isDragging)[axis] = true;
            return ()=>{
                (0, _isActiveMjs.isDragging)[axis] = false;
            };
        }
    } else {
        if ((0, _isActiveMjs.isDragging).x || (0, _isActiveMjs.isDragging).y) return null;
        else {
            (0, _isActiveMjs.isDragging).x = (0, _isActiveMjs.isDragging).y = true;
            return ()=>{
                (0, _isActiveMjs.isDragging).x = (0, _isActiveMjs.isDragging).y = false;
            };
        }
    }
}

},{"./is-active.mjs":"lxZgr","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3uHN2":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "hover", ()=>hover);
var _isActiveMjs = require("./drag/state/is-active.mjs");
var _setupMjs = require("./utils/setup.mjs");
function isValidHover(event) {
    return !(event.pointerType === "touch" || (0, _isActiveMjs.isDragActive)());
}
/**
 * Create a hover gesture. hover() is different to .addEventListener("pointerenter")
 * in that it has an easier syntax, filters out polyfilled touch events, interoperates
 * with drag gestures, and automatically removes the "pointerennd" event listener when the hover ends.
 *
 * @public
 */ function hover(elementOrSelector, onHoverStart, options = {}) {
    const [elements, eventOptions, cancel] = (0, _setupMjs.setupGesture)(elementOrSelector, options);
    const onPointerEnter = (enterEvent)=>{
        if (!isValidHover(enterEvent)) return;
        const { target } = enterEvent;
        const onHoverEnd = onHoverStart(target, enterEvent);
        if (typeof onHoverEnd !== "function" || !target) return;
        const onPointerLeave = (leaveEvent)=>{
            if (!isValidHover(leaveEvent)) return;
            onHoverEnd(leaveEvent);
            target.removeEventListener("pointerleave", onPointerLeave);
        };
        target.addEventListener("pointerleave", onPointerLeave, eventOptions);
    };
    elements.forEach((element)=>{
        element.addEventListener("pointerenter", onPointerEnter, eventOptions);
    });
    return cancel;
}

},{"./drag/state/is-active.mjs":"lxZgr","./utils/setup.mjs":"1i1Fm","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1i1Fm":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "setupGesture", ()=>setupGesture);
var _resolveElementsMjs = require("../../utils/resolve-elements.mjs");
function setupGesture(elementOrSelector, options) {
    const elements = (0, _resolveElementsMjs.resolveElements)(elementOrSelector);
    const gestureAbortController = new AbortController();
    const eventOptions = {
        passive: true,
        ...options,
        signal: gestureAbortController.signal
    };
    const cancel = ()=>gestureAbortController.abort();
    return [
        elements,
        eventOptions,
        cancel
    ];
}

},{"../../utils/resolve-elements.mjs":"ygAM8","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ygAM8":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "resolveElements", ()=>resolveElements);
function resolveElements(elementOrSelector, scope, selectorCache) {
    if (elementOrSelector instanceof EventTarget) return [
        elementOrSelector
    ];
    else if (typeof elementOrSelector === "string") {
        let root = document;
        if (scope) root = scope.current;
        const elements = selectorCache?.[elementOrSelector] ?? root.querySelectorAll(elementOrSelector);
        return elements ? Array.from(elements) : [];
    }
    return Array.from(elementOrSelector);
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5UNMz":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "press", ()=>press);
var _isHtmlElementMjs = require("../../utils/is-html-element.mjs");
var _isActiveMjs = require("../drag/state/is-active.mjs");
var _isNodeOrChildMjs = require("../utils/is-node-or-child.mjs");
var _isPrimaryPointerMjs = require("../utils/is-primary-pointer.mjs");
var _setupMjs = require("../utils/setup.mjs");
var _isKeyboardAccessibleMjs = require("./utils/is-keyboard-accessible.mjs");
var _keyboardMjs = require("./utils/keyboard.mjs");
var _stateMjs = require("./utils/state.mjs");
/**
 * Filter out events that are not primary pointer events, or are triggering
 * while a Motion gesture is active.
 */ function isValidPressEvent(event) {
    return (0, _isPrimaryPointerMjs.isPrimaryPointer)(event) && !(0, _isActiveMjs.isDragActive)();
}
/**
 * Create a press gesture.
 *
 * Press is different to `"pointerdown"`, `"pointerup"` in that it
 * automatically filters out secondary pointer events like right
 * click and multitouch.
 *
 * It also adds accessibility support for keyboards, where
 * an element with a press gesture will receive focus and
 *  trigger on Enter `"keydown"` and `"keyup"` events.
 *
 * This is different to a browser's `"click"` event, which does
 * respond to keyboards but only for the `"click"` itself, rather
 * than the press start and end/cancel. The element also needs
 * to be focusable for this to work, whereas a press gesture will
 * make an element focusable by default.
 *
 * @public
 */ function press(targetOrSelector, onPressStart, options = {}) {
    const [targets, eventOptions, cancelEvents] = (0, _setupMjs.setupGesture)(targetOrSelector, options);
    const startPress = (startEvent)=>{
        const target = startEvent.currentTarget;
        if (!isValidPressEvent(startEvent)) return;
        (0, _stateMjs.isPressing).add(target);
        const onPressEnd = onPressStart(target, startEvent);
        const onPointerEnd = (endEvent, success)=>{
            window.removeEventListener("pointerup", onPointerUp);
            window.removeEventListener("pointercancel", onPointerCancel);
            if ((0, _stateMjs.isPressing).has(target)) (0, _stateMjs.isPressing).delete(target);
            if (!isValidPressEvent(endEvent)) return;
            if (typeof onPressEnd === "function") onPressEnd(endEvent, {
                success
            });
        };
        const onPointerUp = (upEvent)=>{
            onPointerEnd(upEvent, target === window || target === document || options.useGlobalTarget || (0, _isNodeOrChildMjs.isNodeOrChild)(target, upEvent.target));
        };
        const onPointerCancel = (cancelEvent)=>{
            onPointerEnd(cancelEvent, false);
        };
        window.addEventListener("pointerup", onPointerUp, eventOptions);
        window.addEventListener("pointercancel", onPointerCancel, eventOptions);
    };
    targets.forEach((target)=>{
        const pointerDownTarget = options.useGlobalTarget ? window : target;
        pointerDownTarget.addEventListener("pointerdown", startPress, eventOptions);
        if ((0, _isHtmlElementMjs.isHTMLElement)(target)) {
            target.addEventListener("focus", (event)=>(0, _keyboardMjs.enableKeyboardPress)(event, eventOptions));
            if (!(0, _isKeyboardAccessibleMjs.isElementKeyboardAccessible)(target) && !target.hasAttribute("tabindex")) target.tabIndex = 0;
        }
    });
    return cancelEvents;
}

},{"../../utils/is-html-element.mjs":"8AF73","../drag/state/is-active.mjs":"lxZgr","../utils/is-node-or-child.mjs":"d4wly","../utils/is-primary-pointer.mjs":"iO3rF","../utils/setup.mjs":"1i1Fm","./utils/is-keyboard-accessible.mjs":"aoums","./utils/keyboard.mjs":"drHUC","./utils/state.mjs":"ayLS8","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8AF73":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isHTMLElement", ()=>isHTMLElement);
var _motionUtils = require("motion-utils");
/**
 * Checks if an element is an HTML element in a way
 * that works across iframes
 */ function isHTMLElement(element) {
    return (0, _motionUtils.isObject)(element) && "offsetHeight" in element;
}

},{"motion-utils":"33eo7","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"d4wly":[function(require,module,exports,__globalThis) {
/**
 * Recursively traverse up the tree to check whether the provided child node
 * is the parent or a descendant of it.
 *
 * @param parent - Element to find
 * @param child - Element to test against parent
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isNodeOrChild", ()=>isNodeOrChild);
const isNodeOrChild = (parent, child)=>{
    if (!child) return false;
    else if (parent === child) return true;
    else return isNodeOrChild(parent, child.parentElement);
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"iO3rF":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isPrimaryPointer", ()=>isPrimaryPointer);
const isPrimaryPointer = (event)=>{
    if (event.pointerType === "mouse") return typeof event.button !== "number" || event.button <= 0;
    else /**
         * isPrimary is true for all mice buttons, whereas every touch point
         * is regarded as its own input. So subsequent concurrent touch points
         * will be false.
         *
         * Specifically match against false here as incomplete versions of
         * PointerEvents in very old browser might have it set as undefined.
         */ return event.isPrimary !== false;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aoums":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isElementKeyboardAccessible", ()=>isElementKeyboardAccessible);
const focusableElements = new Set([
    "BUTTON",
    "INPUT",
    "SELECT",
    "TEXTAREA",
    "A"
]);
function isElementKeyboardAccessible(element) {
    return focusableElements.has(element.tagName) || element.tabIndex !== -1;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"drHUC":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "enableKeyboardPress", ()=>enableKeyboardPress);
var _stateMjs = require("./state.mjs");
/**
 * Filter out events that are not "Enter" keys.
 */ function filterEvents(callback) {
    return (event)=>{
        if (event.key !== "Enter") return;
        callback(event);
    };
}
function firePointerEvent(target, type) {
    target.dispatchEvent(new PointerEvent("pointer" + type, {
        isPrimary: true,
        bubbles: true
    }));
}
const enableKeyboardPress = (focusEvent, eventOptions)=>{
    const element = focusEvent.currentTarget;
    if (!element) return;
    const handleKeydown = filterEvents(()=>{
        if ((0, _stateMjs.isPressing).has(element)) return;
        firePointerEvent(element, "down");
        const handleKeyup = filterEvents(()=>{
            firePointerEvent(element, "up");
        });
        const handleBlur = ()=>firePointerEvent(element, "cancel");
        element.addEventListener("keyup", handleKeyup, eventOptions);
        element.addEventListener("blur", handleBlur, eventOptions);
    });
    element.addEventListener("keydown", handleKeydown, eventOptions);
    /**
     * Add an event listener that fires on blur to remove the keydown events.
     */ element.addEventListener("blur", ()=>element.removeEventListener("keydown", handleKeydown), eventOptions);
};

},{"./state.mjs":"ayLS8","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ayLS8":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isPressing", ()=>isPressing);
const isPressing = new WeakSet();

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hytWY":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isSVGElement", ()=>isSVGElement);
var _motionUtils = require("motion-utils");
/**
 * Checks if an element is an SVG element in a way
 * that works across iframes
 */ function isSVGElement(element) {
    return (0, _motionUtils.isObject)(element) && "ownerSVGElement" in element;
}

},{"motion-utils":"33eo7","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hRltZ":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isSVGSVGElement", ()=>isSVGSVGElement);
var _isSvgElementMjs = require("./is-svg-element.mjs");
/**
 * Checks if an element is specifically an SVGSVGElement (the root SVG element)
 * in a way that works across iframes
 */ function isSVGSVGElement(element) {
    return (0, _isSvgElementMjs.isSVGElement)(element) && element.tagName === "svg";
}

},{"./is-svg-element.mjs":"hytWY","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fW4BT":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "MotionValue", ()=>MotionValue);
parcelHelpers.export(exports, "collectMotionValues", ()=>collectMotionValues);
parcelHelpers.export(exports, "motionValue", ()=>motionValue);
var _motionUtils = require("motion-utils");
var _syncTimeMjs = require("../frameloop/sync-time.mjs");
var _frameMjs = require("../frameloop/frame.mjs");
/**
 * Maximum time between the value of two frames, beyond which we
 * assume the velocity has since been 0.
 */ const MAX_VELOCITY_DELTA = 30;
const isFloat = (value)=>{
    return !isNaN(parseFloat(value));
};
const collectMotionValues = {
    current: undefined
};
/**
 * `MotionValue` is used to track the state and velocity of motion values.
 *
 * @public
 */ class MotionValue {
    /**
     * @param init - The initiating value
     * @param config - Optional configuration options
     *
     * -  `transformer`: A function to transform incoming values with.
     */ constructor(init, options = {}){
        /**
         * Tracks whether this value can output a velocity. Currently this is only true
         * if the value is numerical, but we might be able to widen the scope here and support
         * other value types.
         *
         * @internal
         */ this.canTrackVelocity = null;
        /**
         * An object containing a SubscriptionManager for each active event.
         */ this.events = {};
        this.updateAndNotify = (v)=>{
            const currentTime = (0, _syncTimeMjs.time).now();
            /**
             * If we're updating the value during another frame or eventloop
             * than the previous frame, then the we set the previous frame value
             * to current.
             */ if (this.updatedAt !== currentTime) this.setPrevFrameValue();
            this.prev = this.current;
            this.setCurrent(v);
            // Update update subscribers
            if (this.current !== this.prev) {
                this.events.change?.notify(this.current);
                if (this.dependents) for (const dependent of this.dependents)dependent.dirty();
            }
        };
        this.hasAnimated = false;
        this.setCurrent(init);
        this.owner = options.owner;
    }
    setCurrent(current) {
        this.current = current;
        this.updatedAt = (0, _syncTimeMjs.time).now();
        if (this.canTrackVelocity === null && current !== undefined) this.canTrackVelocity = isFloat(this.current);
    }
    setPrevFrameValue(prevFrameValue = this.current) {
        this.prevFrameValue = prevFrameValue;
        this.prevUpdatedAt = this.updatedAt;
    }
    /**
     * Adds a function that will be notified when the `MotionValue` is updated.
     *
     * It returns a function that, when called, will cancel the subscription.
     *
     * When calling `onChange` inside a React component, it should be wrapped with the
     * `useEffect` hook. As it returns an unsubscribe function, this should be returned
     * from the `useEffect` function to ensure you don't add duplicate subscribers..
     *
     * ```jsx
     * export const MyComponent = () => {
     *   const x = useMotionValue(0)
     *   const y = useMotionValue(0)
     *   const opacity = useMotionValue(1)
     *
     *   useEffect(() => {
     *     function updateOpacity() {
     *       const maxXY = Math.max(x.get(), y.get())
     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])
     *       opacity.set(newOpacity)
     *     }
     *
     *     const unsubscribeX = x.on("change", updateOpacity)
     *     const unsubscribeY = y.on("change", updateOpacity)
     *
     *     return () => {
     *       unsubscribeX()
     *       unsubscribeY()
     *     }
     *   }, [])
     *
     *   return <motion.div style={{ x }} />
     * }
     * ```
     *
     * @param subscriber - A function that receives the latest value.
     * @returns A function that, when called, will cancel this subscription.
     *
     * @deprecated
     */ onChange(subscription) {
        (0, _motionUtils.warnOnce)(false, `value.onChange(callback) is deprecated. Switch to value.on("change", callback).`);
        return this.on("change", subscription);
    }
    on(eventName, callback) {
        if (!this.events[eventName]) this.events[eventName] = new (0, _motionUtils.SubscriptionManager)();
        const unsubscribe = this.events[eventName].add(callback);
        if (eventName === "change") return ()=>{
            unsubscribe();
            /**
                 * If we have no more change listeners by the start
                 * of the next frame, stop active animations.
                 */ (0, _frameMjs.frame).read(()=>{
                if (!this.events.change.getSize()) this.stop();
            });
        };
        return unsubscribe;
    }
    clearListeners() {
        for(const eventManagers in this.events)this.events[eventManagers].clear();
    }
    /**
     * Attaches a passive effect to the `MotionValue`.
     */ attach(passiveEffect, stopPassiveEffect) {
        this.passiveEffect = passiveEffect;
        this.stopPassiveEffect = stopPassiveEffect;
    }
    /**
     * Sets the state of the `MotionValue`.
     *
     * @remarks
     *
     * ```jsx
     * const x = useMotionValue(0)
     * x.set(10)
     * ```
     *
     * @param latest - Latest value to set.
     * @param render - Whether to notify render subscribers. Defaults to `true`
     *
     * @public
     */ set(v) {
        if (!this.passiveEffect) this.updateAndNotify(v);
        else this.passiveEffect(v, this.updateAndNotify);
    }
    setWithVelocity(prev, current, delta) {
        this.set(current);
        this.prev = undefined;
        this.prevFrameValue = prev;
        this.prevUpdatedAt = this.updatedAt - delta;
    }
    /**
     * Set the state of the `MotionValue`, stopping any active animations,
     * effects, and resets velocity to `0`.
     */ jump(v, endAnimation = true) {
        this.updateAndNotify(v);
        this.prev = v;
        this.prevUpdatedAt = this.prevFrameValue = undefined;
        endAnimation && this.stop();
        if (this.stopPassiveEffect) this.stopPassiveEffect();
    }
    dirty() {
        this.events.change?.notify(this.current);
    }
    addDependent(dependent) {
        if (!this.dependents) this.dependents = new Set();
        this.dependents.add(dependent);
    }
    removeDependent(dependent) {
        if (this.dependents) this.dependents.delete(dependent);
    }
    /**
     * Returns the latest state of `MotionValue`
     *
     * @returns - The latest state of `MotionValue`
     *
     * @public
     */ get() {
        if (collectMotionValues.current) collectMotionValues.current.push(this);
        return this.current;
    }
    /**
     * @public
     */ getPrevious() {
        return this.prev;
    }
    /**
     * Returns the latest velocity of `MotionValue`
     *
     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.
     *
     * @public
     */ getVelocity() {
        const currentTime = (0, _syncTimeMjs.time).now();
        if (!this.canTrackVelocity || this.prevFrameValue === undefined || currentTime - this.updatedAt > MAX_VELOCITY_DELTA) return 0;
        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);
        // Casts because of parseFloat's poor typing
        return (0, _motionUtils.velocityPerSecond)(parseFloat(this.current) - parseFloat(this.prevFrameValue), delta);
    }
    /**
     * Registers a new animation to control this `MotionValue`. Only one
     * animation can drive a `MotionValue` at one time.
     *
     * ```jsx
     * value.start()
     * ```
     *
     * @param animation - A function that starts the provided animation
     */ start(startAnimation) {
        this.stop();
        return new Promise((resolve)=>{
            this.hasAnimated = true;
            this.animation = startAnimation(resolve);
            if (this.events.animationStart) this.events.animationStart.notify();
        }).then(()=>{
            if (this.events.animationComplete) this.events.animationComplete.notify();
            this.clearAnimation();
        });
    }
    /**
     * Stop the currently active animation.
     *
     * @public
     */ stop() {
        if (this.animation) {
            this.animation.stop();
            if (this.events.animationCancel) this.events.animationCancel.notify();
        }
        this.clearAnimation();
    }
    /**
     * Returns `true` if this value is currently animating.
     *
     * @public
     */ isAnimating() {
        return !!this.animation;
    }
    clearAnimation() {
        delete this.animation;
    }
    /**
     * Destroy and clean up subscribers to this `MotionValue`.
     *
     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically
     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually
     * created a `MotionValue` via the `motionValue` function.
     *
     * @public
     */ destroy() {
        this.dependents?.clear();
        this.events.destroy?.notify();
        this.clearListeners();
        this.stop();
        if (this.stopPassiveEffect) this.stopPassiveEffect();
    }
}
function motionValue(init, options) {
    return new MotionValue(init, options);
}

},{"motion-utils":"33eo7","../frameloop/sync-time.mjs":"7oxaC","../frameloop/frame.mjs":"5aQJa","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5SKmS":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "findValueType", ()=>findValueType);
var _indexMjs = require("../color/index.mjs");
var _indexMjs1 = require("../complex/index.mjs");
var _dimensionsMjs = require("../dimensions.mjs");
var _testMjs = require("../test.mjs");
/**
 * A list of all ValueTypes
 */ const valueTypes = [
    ...(0, _dimensionsMjs.dimensionValueTypes),
    (0, _indexMjs.color),
    (0, _indexMjs1.complex)
];
/**
 * Tests a value against the list of ValueTypes
 */ const findValueType = (v)=>valueTypes.find((0, _testMjs.testValueType)(v));

},{"../color/index.mjs":"97zRW","../complex/index.mjs":"fH52E","../dimensions.mjs":"jgF7D","../test.mjs":"2xdbs","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jdgfU":[function(require,module,exports,__globalThis) {
/**
 * Provided a value and a ValueType, returns the value as that value type.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getValueAsType", ()=>getValueAsType);
const getValueAsType = (value, type)=>{
    return type && typeof value === "number" ? type.transform(value) : value;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ltB4Y":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isMotionValue", ()=>isMotionValue);
const isMotionValue = (value)=>Boolean(value && value.getVelocity);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"l97iJ":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "measurePageBox", ()=>measurePageBox);
parcelHelpers.export(exports, "measureViewportBox", ()=>measureViewportBox);
var _conversionMjs = require("../geometry/conversion.mjs");
var _deltaApplyMjs = require("../geometry/delta-apply.mjs");
function measureViewportBox(instance, transformPoint) {
    return (0, _conversionMjs.convertBoundingBoxToBox)((0, _conversionMjs.transformBoxPoints)(instance.getBoundingClientRect(), transformPoint));
}
function measurePageBox(element, rootProjectionNode, transformPagePoint) {
    const viewportBox = measureViewportBox(element, transformPagePoint);
    const { scroll } = rootProjectionNode;
    if (scroll) {
        (0, _deltaApplyMjs.translateAxis)(viewportBox.x, scroll.offset.x);
        (0, _deltaApplyMjs.translateAxis)(viewportBox.y, scroll.offset.y);
    }
    return viewportBox;
}

},{"../geometry/conversion.mjs":"bMTZO","../geometry/delta-apply.mjs":"2oNMY","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bMTZO":[function(require,module,exports,__globalThis) {
/**
 * Bounding boxes tend to be defined as top, left, right, bottom. For various operations
 * it's easier to consider each axis individually. This function returns a bounding box
 * as a map of single-axis min/max values.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "convertBoundingBoxToBox", ()=>convertBoundingBoxToBox);
parcelHelpers.export(exports, "convertBoxToBoundingBox", ()=>convertBoxToBoundingBox);
parcelHelpers.export(exports, "transformBoxPoints", ()=>transformBoxPoints);
function convertBoundingBoxToBox({ top, left, right, bottom }) {
    return {
        x: {
            min: left,
            max: right
        },
        y: {
            min: top,
            max: bottom
        }
    };
}
function convertBoxToBoundingBox({ x, y }) {
    return {
        top: y.min,
        right: x.max,
        bottom: y.max,
        left: x.min
    };
}
/**
 * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function
 * provided by Framer to allow measured points to be corrected for device scaling. This is used
 * when measuring DOM elements and DOM event points.
 */ function transformBoxPoints(point, transformPoint) {
    if (!transformPoint) return point;
    const topLeft = transformPoint({
        x: point.left,
        y: point.top
    });
    const bottomRight = transformPoint({
        x: point.right,
        y: point.bottom
    });
    return {
        top: topLeft.y,
        left: topLeft.x,
        bottom: bottomRight.y,
        right: bottomRight.x
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2oNMY":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "applyAxisDelta", ()=>applyAxisDelta);
parcelHelpers.export(exports, "applyBoxDelta", ()=>applyBoxDelta);
parcelHelpers.export(exports, "applyPointDelta", ()=>applyPointDelta);
parcelHelpers.export(exports, "applyTreeDeltas", ()=>applyTreeDeltas);
parcelHelpers.export(exports, "scalePoint", ()=>scalePoint);
parcelHelpers.export(exports, "transformAxis", ()=>transformAxis);
parcelHelpers.export(exports, "transformBox", ()=>transformBox);
parcelHelpers.export(exports, "translateAxis", ()=>translateAxis);
var _motionDom = require("motion-dom");
var _hasTransformMjs = require("../utils/has-transform.mjs");
/**
 * Scales a point based on a factor and an originPoint
 */ function scalePoint(point, scale, originPoint) {
    const distanceFromOrigin = point - originPoint;
    const scaled = scale * distanceFromOrigin;
    return originPoint + scaled;
}
/**
 * Applies a translate/scale delta to a point
 */ function applyPointDelta(point, translate, scale, originPoint, boxScale) {
    if (boxScale !== undefined) point = scalePoint(point, boxScale, originPoint);
    return scalePoint(point, scale, originPoint) + translate;
}
/**
 * Applies a translate/scale delta to an axis
 */ function applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {
    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);
    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);
}
/**
 * Applies a translate/scale delta to a box
 */ function applyBoxDelta(box, { x, y }) {
    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);
    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);
}
const TREE_SCALE_SNAP_MIN = 0.999999999999;
const TREE_SCALE_SNAP_MAX = 1.0000000000001;
/**
 * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms
 * in a tree upon our box before then calculating how to project it into our desired viewport-relative box
 *
 * This is the final nested loop within updateLayoutDelta for future refactoring
 */ function applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {
    const treeLength = treePath.length;
    if (!treeLength) return;
    // Reset the treeScale
    treeScale.x = treeScale.y = 1;
    let node;
    let delta;
    for(let i = 0; i < treeLength; i++){
        node = treePath[i];
        delta = node.projectionDelta;
        /**
         * TODO: Prefer to remove this, but currently we have motion components with
         * display: contents in Framer.
         */ const { visualElement } = node.options;
        if (visualElement && visualElement.props.style && visualElement.props.style.display === "contents") continue;
        if (isSharedTransition && node.options.layoutScroll && node.scroll && node !== node.root) transformBox(box, {
            x: -node.scroll.offset.x,
            y: -node.scroll.offset.y
        });
        if (delta) {
            // Incoporate each ancestor's scale into a culmulative treeScale for this component
            treeScale.x *= delta.x.scale;
            treeScale.y *= delta.y.scale;
            // Apply each ancestor's calculated delta into this component's recorded layout box
            applyBoxDelta(box, delta);
        }
        if (isSharedTransition && (0, _hasTransformMjs.hasTransform)(node.latestValues)) transformBox(box, node.latestValues);
    }
    /**
     * Snap tree scale back to 1 if it's within a non-perceivable threshold.
     * This will help reduce useless scales getting rendered.
     */ if (treeScale.x < TREE_SCALE_SNAP_MAX && treeScale.x > TREE_SCALE_SNAP_MIN) treeScale.x = 1.0;
    if (treeScale.y < TREE_SCALE_SNAP_MAX && treeScale.y > TREE_SCALE_SNAP_MIN) treeScale.y = 1.0;
}
function translateAxis(axis, distance) {
    axis.min = axis.min + distance;
    axis.max = axis.max + distance;
}
/**
 * Apply a transform to an axis from the latest resolved motion values.
 * This function basically acts as a bridge between a flat motion value map
 * and applyAxisDelta
 */ function transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {
    const originPoint = (0, _motionDom.mixNumber)(axis.min, axis.max, axisOrigin);
    // Apply the axis delta to the final axis
    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);
}
/**
 * Apply a transform to a box from the latest resolved motion values.
 */ function transformBox(box, transform) {
    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);
    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);
}

},{"motion-dom":"lRV3L","../utils/has-transform.mjs":"gMVQ7","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gMVQ7":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "has2DTranslate", ()=>has2DTranslate);
parcelHelpers.export(exports, "hasScale", ()=>hasScale);
parcelHelpers.export(exports, "hasTransform", ()=>hasTransform);
function isIdentityScale(scale) {
    return scale === undefined || scale === 1;
}
function hasScale({ scale, scaleX, scaleY }) {
    return !isIdentityScale(scale) || !isIdentityScale(scaleX) || !isIdentityScale(scaleY);
}
function hasTransform(values) {
    return hasScale(values) || has2DTranslate(values) || values.z || values.rotate || values.rotateX || values.rotateY || values.skewX || values.skewY;
}
function has2DTranslate(values) {
    return is2DTranslate(values.x) || is2DTranslate(values.y);
}
function is2DTranslate(value) {
    return value && value !== "0%";
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gkAIV":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "DOMVisualElement", ()=>DOMVisualElement);
var _motionDom = require("motion-dom");
var _visualElementMjs = require("../VisualElement.mjs");
class DOMVisualElement extends (0, _visualElementMjs.VisualElement) {
    constructor(){
        super(...arguments);
        this.KeyframeResolver = (0, _motionDom.DOMKeyframesResolver);
    }
    sortInstanceNodePosition(a, b) {
        /**
         * compareDocumentPosition returns a bitmask, by using the bitwise &
         * we're returning true if 2 in that bitmask is set to true. 2 is set
         * to true if b preceeds a.
         */ return a.compareDocumentPosition(b) & 2 ? 1 : -1;
    }
    getBaseTargetFromProps(props, key) {
        return props.style ? props.style[key] : undefined;
    }
    removeValueFromRenderState(key, { vars, style }) {
        delete vars[key];
        delete style[key];
    }
    handleChildMotionValue() {
        if (this.childSubscription) {
            this.childSubscription();
            delete this.childSubscription;
        }
        const { children } = this.props;
        if ((0, _motionDom.isMotionValue)(children)) this.childSubscription = children.on("change", (latest)=>{
            if (this.current) this.current.textContent = `${latest}`;
        });
    }
}

},{"motion-dom":"lRV3L","../VisualElement.mjs":"hZTqu","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hZTqu":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VisualElement", ()=>VisualElement);
var _motionDom = require("motion-dom");
var _motionUtils = require("motion-utils");
var _definitionsMjs = require("../motion/features/definitions.mjs");
var _modelsMjs = require("../projection/geometry/models.mjs");
var _indexMjs = require("../utils/reduced-motion/index.mjs");
var _stateMjs = require("../utils/reduced-motion/state.mjs");
var _storeMjs = require("./store.mjs");
var _isControllingVariantsMjs = require("./utils/is-controlling-variants.mjs");
var _motionValuesMjs = require("./utils/motion-values.mjs");
var _resolveVariantsMjs = require("./utils/resolve-variants.mjs");
const propEventHandlers = [
    "AnimationStart",
    "AnimationComplete",
    "Update",
    "BeforeLayoutMeasure",
    "LayoutMeasure",
    "LayoutAnimationStart",
    "LayoutAnimationComplete"
];
/**
 * A VisualElement is an imperative abstraction around UI elements such as
 * HTMLElement, SVGElement, Three.Object3D etc.
 */ class VisualElement {
    /**
     * This method takes React props and returns found MotionValues. For example, HTML
     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.
     *
     * This isn't an abstract method as it needs calling in the constructor, but it is
     * intended to be one.
     */ scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {
        return {};
    }
    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState }, options = {}){
        /**
         * A reference to the current underlying Instance, e.g. a HTMLElement
         * or Three.Mesh etc.
         */ this.current = null;
        /**
         * A set containing references to this VisualElement's children.
         */ this.children = new Set();
        /**
         * Determine what role this visual element should take in the variant tree.
         */ this.isVariantNode = false;
        this.isControllingVariants = false;
        /**
         * Decides whether this VisualElement should animate in reduced motion
         * mode.
         *
         * TODO: This is currently set on every individual VisualElement but feels
         * like it could be set globally.
         */ this.shouldReduceMotion = null;
        /**
         * A map of all motion values attached to this visual element. Motion
         * values are source of truth for any given animated value. A motion
         * value might be provided externally by the component via props.
         */ this.values = new Map();
        this.KeyframeResolver = (0, _motionDom.KeyframeResolver);
        /**
         * Cleanup functions for active features (hover/tap/exit etc)
         */ this.features = {};
        /**
         * A map of every subscription that binds the provided or generated
         * motion values onChange listeners to this visual element.
         */ this.valueSubscriptions = new Map();
        /**
         * A reference to the previously-provided motion values as returned
         * from scrapeMotionValuesFromProps. We use the keys in here to determine
         * if any motion values need to be removed after props are updated.
         */ this.prevMotionValues = {};
        /**
         * An object containing a SubscriptionManager for each active event.
         */ this.events = {};
        /**
         * An object containing an unsubscribe function for each prop event subscription.
         * For example, every "Update" event can have multiple subscribers via
         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.
         */ this.propEventSubscriptions = {};
        this.notifyUpdate = ()=>this.notify("Update", this.latestValues);
        this.render = ()=>{
            if (!this.current) return;
            this.triggerBuild();
            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);
        };
        this.renderScheduledAt = 0.0;
        this.scheduleRender = ()=>{
            const now = (0, _motionDom.time).now();
            if (this.renderScheduledAt < now) {
                this.renderScheduledAt = now;
                (0, _motionDom.frame).render(this.render, false, true);
            }
        };
        const { latestValues, renderState } = visualState;
        this.latestValues = latestValues;
        this.baseTarget = {
            ...latestValues
        };
        this.initialValues = props.initial ? {
            ...latestValues
        } : {};
        this.renderState = renderState;
        this.parent = parent;
        this.props = props;
        this.presenceContext = presenceContext;
        this.depth = parent ? parent.depth + 1 : 0;
        this.reducedMotionConfig = reducedMotionConfig;
        this.options = options;
        this.blockInitialAnimation = Boolean(blockInitialAnimation);
        this.isControllingVariants = (0, _isControllingVariantsMjs.isControllingVariants)(props);
        this.isVariantNode = (0, _isControllingVariantsMjs.isVariantNode)(props);
        if (this.isVariantNode) this.variantChildren = new Set();
        this.manuallyAnimateOnMount = Boolean(parent && parent.current);
        /**
         * Any motion values that are provided to the element when created
         * aren't yet bound to the element, as this would technically be impure.
         * However, we iterate through the motion values and set them to the
         * initial values for this component.
         *
         * TODO: This is impure and we should look at changing this to run on mount.
         * Doing so will break some tests but this isn't necessarily a breaking change,
         * more a reflection of the test.
         */ const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);
        for(const key in initialMotionValues){
            const value = initialMotionValues[key];
            if (latestValues[key] !== undefined && (0, _motionDom.isMotionValue)(value)) value.set(latestValues[key]);
        }
    }
    mount(instance) {
        this.current = instance;
        (0, _storeMjs.visualElementStore).set(instance, this);
        if (this.projection && !this.projection.instance) this.projection.mount(instance);
        if (this.parent && this.isVariantNode && !this.isControllingVariants) this.removeFromVariantTree = this.parent.addVariantChild(this);
        this.values.forEach((value, key)=>this.bindToMotionValue(key, value));
        if (!(0, _stateMjs.hasReducedMotionListener).current) (0, _indexMjs.initPrefersReducedMotion)();
        this.shouldReduceMotion = this.reducedMotionConfig === "never" ? false : this.reducedMotionConfig === "always" ? true : (0, _stateMjs.prefersReducedMotion).current;
        (0, _motionUtils.warnOnce)(this.shouldReduceMotion !== true, "You have Reduced Motion enabled on your device. Animations may not appear as expected.", "reduced-motion-disabled");
        this.parent?.addChild(this);
        this.update(this.props, this.presenceContext);
    }
    unmount() {
        this.projection && this.projection.unmount();
        (0, _motionDom.cancelFrame)(this.notifyUpdate);
        (0, _motionDom.cancelFrame)(this.render);
        this.valueSubscriptions.forEach((remove)=>remove());
        this.valueSubscriptions.clear();
        this.removeFromVariantTree && this.removeFromVariantTree();
        this.parent?.removeChild(this);
        for(const key in this.events)this.events[key].clear();
        for(const key in this.features){
            const feature = this.features[key];
            if (feature) {
                feature.unmount();
                feature.isMounted = false;
            }
        }
        this.current = null;
    }
    addChild(child) {
        this.children.add(child);
        this.enteringChildren ?? (this.enteringChildren = new Set());
        this.enteringChildren.add(child);
    }
    removeChild(child) {
        this.children.delete(child);
        this.enteringChildren && this.enteringChildren.delete(child);
    }
    bindToMotionValue(key, value) {
        if (this.valueSubscriptions.has(key)) this.valueSubscriptions.get(key)();
        const valueIsTransform = (0, _motionDom.transformProps).has(key);
        if (valueIsTransform && this.onBindTransform) this.onBindTransform();
        const removeOnChange = value.on("change", (latestValue)=>{
            this.latestValues[key] = latestValue;
            this.props.onUpdate && (0, _motionDom.frame).preRender(this.notifyUpdate);
            if (valueIsTransform && this.projection) this.projection.isTransformDirty = true;
            this.scheduleRender();
        });
        let removeSyncCheck;
        if (window.MotionCheckAppearSync) removeSyncCheck = window.MotionCheckAppearSync(this, key, value);
        this.valueSubscriptions.set(key, ()=>{
            removeOnChange();
            if (removeSyncCheck) removeSyncCheck();
            if (value.owner) value.stop();
        });
    }
    sortNodePosition(other) {
        /**
         * If these nodes aren't even of the same type we can't compare their depth.
         */ if (!this.current || !this.sortInstanceNodePosition || this.type !== other.type) return 0;
        return this.sortInstanceNodePosition(this.current, other.current);
    }
    updateFeatures() {
        let key = "animation";
        for(key in 0, _definitionsMjs.featureDefinitions){
            const featureDefinition = (0, _definitionsMjs.featureDefinitions)[key];
            if (!featureDefinition) continue;
            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;
            /**
             * If this feature is enabled but not active, make a new instance.
             */ if (!this.features[key] && FeatureConstructor && isEnabled(this.props)) this.features[key] = new FeatureConstructor(this);
            /**
             * If we have a feature, mount or update it.
             */ if (this.features[key]) {
                const feature = this.features[key];
                if (feature.isMounted) feature.update();
                else {
                    feature.mount();
                    feature.isMounted = true;
                }
            }
        }
    }
    triggerBuild() {
        this.build(this.renderState, this.latestValues, this.props);
    }
    /**
     * Measure the current viewport box with or without transforms.
     * Only measures axis-aligned boxes, rotate and skew must be manually
     * removed with a re-render to work.
     */ measureViewportBox() {
        return this.current ? this.measureInstanceViewportBox(this.current, this.props) : (0, _modelsMjs.createBox)();
    }
    getStaticValue(key) {
        return this.latestValues[key];
    }
    setStaticValue(key, value) {
        this.latestValues[key] = value;
    }
    /**
     * Update the provided props. Ensure any newly-added motion values are
     * added to our map, old ones removed, and listeners updated.
     */ update(props, presenceContext) {
        if (props.transformTemplate || this.props.transformTemplate) this.scheduleRender();
        this.prevProps = this.props;
        this.props = props;
        this.prevPresenceContext = this.presenceContext;
        this.presenceContext = presenceContext;
        /**
         * Update prop event handlers ie onAnimationStart, onAnimationComplete
         */ for(let i = 0; i < propEventHandlers.length; i++){
            const key = propEventHandlers[i];
            if (this.propEventSubscriptions[key]) {
                this.propEventSubscriptions[key]();
                delete this.propEventSubscriptions[key];
            }
            const listenerName = "on" + key;
            const listener = props[listenerName];
            if (listener) this.propEventSubscriptions[key] = this.on(key, listener);
        }
        this.prevMotionValues = (0, _motionValuesMjs.updateMotionValuesFromProps)(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);
        if (this.handleChildMotionValue) this.handleChildMotionValue();
    }
    getProps() {
        return this.props;
    }
    /**
     * Returns the variant definition with a given name.
     */ getVariant(name) {
        return this.props.variants ? this.props.variants[name] : undefined;
    }
    /**
     * Returns the defined default transition on this component.
     */ getDefaultTransition() {
        return this.props.transition;
    }
    getTransformPagePoint() {
        return this.props.transformPagePoint;
    }
    getClosestVariantNode() {
        return this.isVariantNode ? this : this.parent ? this.parent.getClosestVariantNode() : undefined;
    }
    /**
     * Add a child visual element to our set of children.
     */ addVariantChild(child) {
        const closestVariantNode = this.getClosestVariantNode();
        if (closestVariantNode) {
            closestVariantNode.variantChildren && closestVariantNode.variantChildren.add(child);
            return ()=>closestVariantNode.variantChildren.delete(child);
        }
    }
    /**
     * Add a motion value and bind it to this visual element.
     */ addValue(key, value) {
        // Remove existing value if it exists
        const existingValue = this.values.get(key);
        if (value !== existingValue) {
            if (existingValue) this.removeValue(key);
            this.bindToMotionValue(key, value);
            this.values.set(key, value);
            this.latestValues[key] = value.get();
        }
    }
    /**
     * Remove a motion value and unbind any active subscriptions.
     */ removeValue(key) {
        this.values.delete(key);
        const unsubscribe = this.valueSubscriptions.get(key);
        if (unsubscribe) {
            unsubscribe();
            this.valueSubscriptions.delete(key);
        }
        delete this.latestValues[key];
        this.removeValueFromRenderState(key, this.renderState);
    }
    /**
     * Check whether we have a motion value for this key
     */ hasValue(key) {
        return this.values.has(key);
    }
    getValue(key, defaultValue) {
        if (this.props.values && this.props.values[key]) return this.props.values[key];
        let value = this.values.get(key);
        if (value === undefined && defaultValue !== undefined) {
            value = (0, _motionDom.motionValue)(defaultValue === null ? undefined : defaultValue, {
                owner: this
            });
            this.addValue(key, value);
        }
        return value;
    }
    /**
     * If we're trying to animate to a previously unencountered value,
     * we need to check for it in our state and as a last resort read it
     * directly from the instance (which might have performance implications).
     */ readValue(key, target) {
        let value = this.latestValues[key] !== undefined || !this.current ? this.latestValues[key] : this.getBaseTargetFromProps(this.props, key) ?? this.readValueFromInstance(this.current, key, this.options);
        if (value !== undefined && value !== null) {
            if (typeof value === "string" && ((0, _motionUtils.isNumericalString)(value) || (0, _motionUtils.isZeroValueString)(value))) // If this is a number read as a string, ie "0" or "200", convert it to a number
            value = parseFloat(value);
            else if (!(0, _motionDom.findValueType)(value) && (0, _motionDom.complex).test(target)) value = (0, _motionDom.getAnimatableNone)(key, target);
            this.setBaseTarget(key, (0, _motionDom.isMotionValue)(value) ? value.get() : value);
        }
        return (0, _motionDom.isMotionValue)(value) ? value.get() : value;
    }
    /**
     * Set the base target to later animate back to. This is currently
     * only hydrated on creation and when we first read a value.
     */ setBaseTarget(key, value) {
        this.baseTarget[key] = value;
    }
    /**
     * Find the base target for a value thats been removed from all animation
     * props.
     */ getBaseTarget(key) {
        const { initial } = this.props;
        let valueFromInitial;
        if (typeof initial === "string" || typeof initial === "object") {
            const variant = (0, _resolveVariantsMjs.resolveVariantFromProps)(this.props, initial, this.presenceContext?.custom);
            if (variant) valueFromInitial = variant[key];
        }
        /**
         * If this value still exists in the current initial variant, read that.
         */ if (initial && valueFromInitial !== undefined) return valueFromInitial;
        /**
         * Alternatively, if this VisualElement config has defined a getBaseTarget
         * so we can read the value from an alternative source, try that.
         */ const target = this.getBaseTargetFromProps(this.props, key);
        if (target !== undefined && !(0, _motionDom.isMotionValue)(target)) return target;
        /**
         * If the value was initially defined on initial, but it doesn't any more,
         * return undefined. Otherwise return the value as initially read from the DOM.
         */ return this.initialValues[key] !== undefined && valueFromInitial === undefined ? undefined : this.baseTarget[key];
    }
    on(eventName, callback) {
        if (!this.events[eventName]) this.events[eventName] = new (0, _motionUtils.SubscriptionManager)();
        return this.events[eventName].add(callback);
    }
    notify(eventName, ...args) {
        if (this.events[eventName]) this.events[eventName].notify(...args);
    }
    scheduleRenderMicrotask() {
        (0, _motionDom.microtask).render(this.render);
    }
}

},{"motion-dom":"lRV3L","motion-utils":"33eo7","../motion/features/definitions.mjs":"QCfrA","../projection/geometry/models.mjs":"4dIK0","../utils/reduced-motion/index.mjs":"f5koU","../utils/reduced-motion/state.mjs":"4BAH9","./store.mjs":"5CvaG","./utils/is-controlling-variants.mjs":"7r3S6","./utils/motion-values.mjs":"k2t1Z","./utils/resolve-variants.mjs":"3ji5H","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"QCfrA":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "featureDefinitions", ()=>featureDefinitions);
const featureProps = {
    animation: [
        "animate",
        "variants",
        "whileHover",
        "whileTap",
        "exit",
        "whileInView",
        "whileFocus",
        "whileDrag"
    ],
    exit: [
        "exit"
    ],
    drag: [
        "drag",
        "dragControls"
    ],
    focus: [
        "whileFocus"
    ],
    hover: [
        "whileHover",
        "onHoverStart",
        "onHoverEnd"
    ],
    tap: [
        "whileTap",
        "onTap",
        "onTapStart",
        "onTapCancel"
    ],
    pan: [
        "onPan",
        "onPanStart",
        "onPanSessionStart",
        "onPanEnd"
    ],
    inView: [
        "whileInView",
        "onViewportEnter",
        "onViewportLeave"
    ],
    layout: [
        "layout",
        "layoutId"
    ]
};
const featureDefinitions = {};
for(const key in featureProps)featureDefinitions[key] = {
    isEnabled: (props)=>featureProps[key].some((name)=>!!props[name])
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4dIK0":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createAxis", ()=>createAxis);
parcelHelpers.export(exports, "createAxisDelta", ()=>createAxisDelta);
parcelHelpers.export(exports, "createBox", ()=>createBox);
parcelHelpers.export(exports, "createDelta", ()=>createDelta);
const createAxisDelta = ()=>({
        translate: 0,
        scale: 1,
        origin: 0,
        originPoint: 0
    });
const createDelta = ()=>({
        x: createAxisDelta(),
        y: createAxisDelta()
    });
const createAxis = ()=>({
        min: 0,
        max: 0
    });
const createBox = ()=>({
        x: createAxis(),
        y: createAxis()
    });

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"f5koU":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "initPrefersReducedMotion", ()=>initPrefersReducedMotion);
var _isBrowserMjs = require("../is-browser.mjs");
var _stateMjs = require("./state.mjs");
function initPrefersReducedMotion() {
    (0, _stateMjs.hasReducedMotionListener).current = true;
    if (!(0, _isBrowserMjs.isBrowser)) return;
    if (window.matchMedia) {
        const motionMediaQuery = window.matchMedia("(prefers-reduced-motion)");
        const setReducedMotionPreferences = ()=>(0, _stateMjs.prefersReducedMotion).current = motionMediaQuery.matches;
        motionMediaQuery.addEventListener("change", setReducedMotionPreferences);
        setReducedMotionPreferences();
    } else (0, _stateMjs.prefersReducedMotion).current = false;
}

},{"../is-browser.mjs":"1rgdh","./state.mjs":"4BAH9","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1rgdh":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isBrowser", ()=>isBrowser);
const isBrowser = typeof window !== "undefined";

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4BAH9":[function(require,module,exports,__globalThis) {
// Does this device prefer reduced motion? Returns `null` server-side.
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "hasReducedMotionListener", ()=>hasReducedMotionListener);
parcelHelpers.export(exports, "prefersReducedMotion", ()=>prefersReducedMotion);
const prefersReducedMotion = {
    current: null
};
const hasReducedMotionListener = {
    current: false
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5CvaG":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "visualElementStore", ()=>visualElementStore);
const visualElementStore = new WeakMap();

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7r3S6":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isControllingVariants", ()=>isControllingVariants);
parcelHelpers.export(exports, "isVariantNode", ()=>isVariantNode);
var _isAnimationControlsMjs = require("../../animation/utils/is-animation-controls.mjs");
var _isVariantLabelMjs = require("./is-variant-label.mjs");
var _variantPropsMjs = require("./variant-props.mjs");
function isControllingVariants(props) {
    return (0, _isAnimationControlsMjs.isAnimationControls)(props.animate) || (0, _variantPropsMjs.variantProps).some((name)=>(0, _isVariantLabelMjs.isVariantLabel)(props[name]));
}
function isVariantNode(props) {
    return Boolean(isControllingVariants(props) || props.variants);
}

},{"../../animation/utils/is-animation-controls.mjs":"5Gu2H","./is-variant-label.mjs":"6NjJT","./variant-props.mjs":"irqp5","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5Gu2H":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isAnimationControls", ()=>isAnimationControls);
function isAnimationControls(v) {
    return v !== null && typeof v === "object" && typeof v.start === "function";
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6NjJT":[function(require,module,exports,__globalThis) {
/**
 * Decides if the supplied variable is variant label
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isVariantLabel", ()=>isVariantLabel);
function isVariantLabel(v) {
    return typeof v === "string" || Array.isArray(v);
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"irqp5":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "variantPriorityOrder", ()=>variantPriorityOrder);
parcelHelpers.export(exports, "variantProps", ()=>variantProps);
const variantPriorityOrder = [
    "animate",
    "whileInView",
    "whileFocus",
    "whileHover",
    "whileTap",
    "whileDrag",
    "exit"
];
const variantProps = [
    "initial",
    ...variantPriorityOrder
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"k2t1Z":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "updateMotionValuesFromProps", ()=>updateMotionValuesFromProps);
var _motionDom = require("motion-dom");
function updateMotionValuesFromProps(element, next, prev) {
    for(const key in next){
        const nextValue = next[key];
        const prevValue = prev[key];
        if ((0, _motionDom.isMotionValue)(nextValue)) /**
             * If this is a motion value found in props or style, we want to add it
             * to our visual element's motion value map.
             */ element.addValue(key, nextValue);
        else if ((0, _motionDom.isMotionValue)(prevValue)) /**
             * If we're swapping from a motion value to a static value,
             * create a new motion value from that
             */ element.addValue(key, (0, _motionDom.motionValue)(nextValue, {
            owner: element
        }));
        else if (prevValue !== nextValue) {
            /**
             * If this is a flat value that has changed, update the motion value
             * or create one if it doesn't exist. We only want to do this if we're
             * not handling the value with our animation state.
             */ if (element.hasValue(key)) {
                const existingValue = element.getValue(key);
                if (existingValue.liveStyle === true) existingValue.jump(nextValue);
                else if (!existingValue.hasAnimated) existingValue.set(nextValue);
            } else {
                const latestValue = element.getStaticValue(key);
                element.addValue(key, (0, _motionDom.motionValue)(latestValue !== undefined ? latestValue : nextValue, {
                    owner: element
                }));
            }
        }
    }
    // Handle removed values
    for(const key in prev)if (next[key] === undefined) element.removeValue(key);
    return next;
}

},{"motion-dom":"lRV3L","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3ji5H":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "resolveVariantFromProps", ()=>resolveVariantFromProps);
function getValueState(visualElement) {
    const state = [
        {},
        {}
    ];
    visualElement?.values.forEach((value, key)=>{
        state[0][key] = value.get();
        state[1][key] = value.getVelocity();
    });
    return state;
}
function resolveVariantFromProps(props, definition, custom, visualElement) {
    /**
     * If the variant definition is a function, resolve.
     */ if (typeof definition === "function") {
        const [current, velocity] = getValueState(visualElement);
        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);
    }
    /**
     * If the variant definition is a variant label, or
     * the function returned a variant label, resolve.
     */ if (typeof definition === "string") definition = props.variants && props.variants[definition];
    /**
     * At this point we've resolved both functions and variant labels,
     * but the resolved variant label might itself have been a function.
     * If so, resolve. This can only have returned a valid target object.
     */ if (typeof definition === "function") {
        const [current, velocity] = getValueState(visualElement);
        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);
    }
    return definition;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bq8Eb":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "buildHTMLStyles", ()=>buildHTMLStyles);
var _motionDom = require("motion-dom");
var _buildTransformMjs = require("./build-transform.mjs");
function buildHTMLStyles(state, latestValues, transformTemplate) {
    const { style, vars, transformOrigin } = state;
    // Track whether we encounter any transform or transformOrigin values.
    let hasTransform = false;
    let hasTransformOrigin = false;
    /**
     * Loop over all our latest animated values and decide whether to handle them
     * as a style or CSS variable.
     *
     * Transforms and transform origins are kept separately for further processing.
     */ for(const key in latestValues){
        const value = latestValues[key];
        if ((0, _motionDom.transformProps).has(key)) {
            // If this is a transform, flag to enable further transform processing
            hasTransform = true;
            continue;
        } else if ((0, _motionDom.isCSSVariableName)(key)) {
            vars[key] = value;
            continue;
        } else {
            // Convert the value to its default value type, ie 0 -> "0px"
            const valueAsType = (0, _motionDom.getValueAsType)(value, (0, _motionDom.numberValueTypes)[key]);
            if (key.startsWith("origin")) {
                // If this is a transform origin, flag and enable further transform-origin processing
                hasTransformOrigin = true;
                transformOrigin[key] = valueAsType;
            } else style[key] = valueAsType;
        }
    }
    if (!latestValues.transform) {
        if (hasTransform || transformTemplate) style.transform = (0, _buildTransformMjs.buildTransform)(latestValues, state.transform, transformTemplate);
        else if (style.transform) /**
             * If we have previously created a transform but currently don't have any,
             * reset transform style to none.
             */ style.transform = "none";
    }
    /**
     * Build a transformOrigin style. Uses the same defaults as the browser for
     * undefined origins.
     */ if (hasTransformOrigin) {
        const { originX = "50%", originY = "50%", originZ = 0 } = transformOrigin;
        style.transformOrigin = `${originX} ${originY} ${originZ}`;
    }
}

},{"motion-dom":"lRV3L","./build-transform.mjs":"8a8mn","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8a8mn":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "buildTransform", ()=>buildTransform);
var _motionDom = require("motion-dom");
const translateAlias = {
    x: "translateX",
    y: "translateY",
    z: "translateZ",
    transformPerspective: "perspective"
};
const numTransforms = (0, _motionDom.transformPropOrder).length;
/**
 * Build a CSS transform style from individual x/y/scale etc properties.
 *
 * This outputs with a default order of transforms/scales/rotations, this can be customised by
 * providing a transformTemplate function.
 */ function buildTransform(latestValues, transform, transformTemplate) {
    // The transform string we're going to build into.
    let transformString = "";
    let transformIsDefault = true;
    /**
     * Loop over all possible transforms in order, adding the ones that
     * are present to the transform string.
     */ for(let i = 0; i < numTransforms; i++){
        const key = (0, _motionDom.transformPropOrder)[i];
        const value = latestValues[key];
        if (value === undefined) continue;
        let valueIsDefault = true;
        if (typeof value === "number") valueIsDefault = value === (key.startsWith("scale") ? 1 : 0);
        else valueIsDefault = parseFloat(value) === 0;
        if (!valueIsDefault || transformTemplate) {
            const valueAsType = (0, _motionDom.getValueAsType)(value, (0, _motionDom.numberValueTypes)[key]);
            if (!valueIsDefault) {
                transformIsDefault = false;
                const transformName = translateAlias[key] || key;
                transformString += `${transformName}(${valueAsType}) `;
            }
            if (transformTemplate) transform[key] = valueAsType;
        }
    }
    transformString = transformString.trim();
    // If we have a custom `transform` template, pass our transform values and
    // generated transformString to that before returning
    if (transformTemplate) transformString = transformTemplate(transform, transformIsDefault ? "" : transformString);
    else if (transformIsDefault) transformString = "none";
    return transformString;
}

},{"motion-dom":"lRV3L","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bU7sC":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "renderHTML", ()=>renderHTML);
function renderHTML(element, { style, vars }, styleProp, projection) {
    const elementStyle = element.style;
    let key;
    for(key in style)// CSSStyleDeclaration has [index: number]: string; in the types, so we use that as key type.
    elementStyle[key] = style[key];
    // Write projection styles directly to element style
    projection?.applyProjectionStyles(elementStyle, styleProp);
    for(key in vars)// Loop over any CSS variables and assign those.
    // They can only be assigned using `setProperty`.
    elementStyle.setProperty(key, vars[key]);
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bVwEk":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "scrapeMotionValuesFromProps", ()=>scrapeMotionValuesFromProps);
var _motionDom = require("motion-dom");
var _isForcedMotionValueMjs = require("../../../motion/utils/is-forced-motion-value.mjs");
function scrapeMotionValuesFromProps(props, prevProps, visualElement) {
    const { style } = props;
    const newValues = {};
    for(const key in style)if ((0, _motionDom.isMotionValue)(style[key]) || prevProps.style && (0, _motionDom.isMotionValue)(prevProps.style[key]) || (0, _isForcedMotionValueMjs.isForcedMotionValue)(key, props) || visualElement?.getValue(key)?.liveStyle !== undefined) newValues[key] = style[key];
    return newValues;
}

},{"motion-dom":"lRV3L","../../../motion/utils/is-forced-motion-value.mjs":"kUsW5","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"kUsW5":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isForcedMotionValue", ()=>isForcedMotionValue);
var _motionDom = require("motion-dom");
var _scaleCorrectionMjs = require("../../projection/styles/scale-correction.mjs");
function isForcedMotionValue(key, { layout, layoutId }) {
    return (0, _motionDom.transformProps).has(key) || key.startsWith("origin") || (layout || layoutId !== undefined) && (!!(0, _scaleCorrectionMjs.scaleCorrectors)[key] || key === "opacity");
}

},{"motion-dom":"lRV3L","../../projection/styles/scale-correction.mjs":"7awp8","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7awp8":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "addScaleCorrector", ()=>addScaleCorrector);
parcelHelpers.export(exports, "scaleCorrectors", ()=>scaleCorrectors);
var _motionDom = require("motion-dom");
const scaleCorrectors = {};
function addScaleCorrector(correctors) {
    for(const key in correctors){
        scaleCorrectors[key] = correctors[key];
        if ((0, _motionDom.isCSSVariableName)(key)) scaleCorrectors[key].isCSSVariable = true;
    }
}

},{"motion-dom":"lRV3L","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"eTJ8e":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "SVGVisualElement", ()=>SVGVisualElement);
var _motionDom = require("motion-dom");
var _modelsMjs = require("../../projection/geometry/models.mjs");
var _domvisualElementMjs = require("../dom/DOMVisualElement.mjs");
var _camelToDashMjs = require("../dom/utils/camel-to-dash.mjs");
var _buildAttrsMjs = require("./utils/build-attrs.mjs");
var _camelCaseAttrsMjs = require("./utils/camel-case-attrs.mjs");
var _isSvgTagMjs = require("./utils/is-svg-tag.mjs");
var _renderMjs = require("./utils/render.mjs");
var _scrapeMotionValuesMjs = require("./utils/scrape-motion-values.mjs");
class SVGVisualElement extends (0, _domvisualElementMjs.DOMVisualElement) {
    constructor(){
        super(...arguments);
        this.type = "svg";
        this.isSVGTag = false;
        this.measureInstanceViewportBox = (0, _modelsMjs.createBox);
    }
    getBaseTargetFromProps(props, key) {
        return props[key];
    }
    readValueFromInstance(instance, key) {
        if ((0, _motionDom.transformProps).has(key)) {
            const defaultType = (0, _motionDom.getDefaultValueType)(key);
            return defaultType ? defaultType.default || 0 : 0;
        }
        key = !(0, _camelCaseAttrsMjs.camelCaseAttributes).has(key) ? (0, _camelToDashMjs.camelToDash)(key) : key;
        return instance.getAttribute(key);
    }
    scrapeMotionValuesFromProps(props, prevProps, visualElement) {
        return (0, _scrapeMotionValuesMjs.scrapeMotionValuesFromProps)(props, prevProps, visualElement);
    }
    build(renderState, latestValues, props) {
        (0, _buildAttrsMjs.buildSVGAttrs)(renderState, latestValues, this.isSVGTag, props.transformTemplate, props.style);
    }
    renderInstance(instance, renderState, styleProp, projection) {
        (0, _renderMjs.renderSVG)(instance, renderState, styleProp, projection);
    }
    mount(instance) {
        this.isSVGTag = (0, _isSvgTagMjs.isSVGTag)(instance.tagName);
        super.mount(instance);
    }
}

},{"motion-dom":"lRV3L","../../projection/geometry/models.mjs":"4dIK0","../dom/DOMVisualElement.mjs":"gkAIV","../dom/utils/camel-to-dash.mjs":"k3i8g","./utils/build-attrs.mjs":"8dVxy","./utils/camel-case-attrs.mjs":"el4IE","./utils/is-svg-tag.mjs":"a9NQP","./utils/render.mjs":"6qIrh","./utils/scrape-motion-values.mjs":"7dqh3","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"k3i8g":[function(require,module,exports,__globalThis) {
/**
 * Convert camelCase to dash-case properties.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "camelToDash", ()=>camelToDash);
const camelToDash = (str)=>str.replace(/([a-z])([A-Z])/gu, "$1-$2").toLowerCase();

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8dVxy":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "buildSVGAttrs", ()=>buildSVGAttrs);
var _buildStylesMjs = require("../../html/utils/build-styles.mjs");
var _pathMjs = require("./path.mjs");
/**
 * Build SVG visual attributes, like cx and style.transform
 */ function buildSVGAttrs(state, { attrX, attrY, attrScale, pathLength, pathSpacing = 1, pathOffset = 0, // This is object creation, which we try to avoid per-frame.
...latest }, isSVGTag, transformTemplate, styleProp) {
    (0, _buildStylesMjs.buildHTMLStyles)(state, latest, transformTemplate);
    /**
     * For svg tags we just want to make sure viewBox is animatable and treat all the styles
     * as normal HTML tags.
     */ if (isSVGTag) {
        if (state.style.viewBox) state.attrs.viewBox = state.style.viewBox;
        return;
    }
    state.attrs = state.style;
    state.style = {};
    const { attrs, style } = state;
    /**
     * However, we apply transforms as CSS transforms.
     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.
     */ if (attrs.transform) {
        style.transform = attrs.transform;
        delete attrs.transform;
    }
    if (style.transform || attrs.transformOrigin) {
        style.transformOrigin = attrs.transformOrigin ?? "50% 50%";
        delete attrs.transformOrigin;
    }
    if (style.transform) {
        /**
         * SVG's element transform-origin uses its own median as a reference.
         * Therefore, transformBox becomes a fill-box
         */ style.transformBox = styleProp?.transformBox ?? "fill-box";
        delete attrs.transformBox;
    }
    // Render attrX/attrY/attrScale as attributes
    if (attrX !== undefined) attrs.x = attrX;
    if (attrY !== undefined) attrs.y = attrY;
    if (attrScale !== undefined) attrs.scale = attrScale;
    // Build SVG path if one has been defined
    if (pathLength !== undefined) (0, _pathMjs.buildSVGPath)(attrs, pathLength, pathSpacing, pathOffset, false);
}

},{"../../html/utils/build-styles.mjs":"bq8Eb","./path.mjs":"fDz7C","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fDz7C":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "buildSVGPath", ()=>buildSVGPath);
var _motionDom = require("motion-dom");
const dashKeys = {
    offset: "stroke-dashoffset",
    array: "stroke-dasharray"
};
const camelKeys = {
    offset: "strokeDashoffset",
    array: "strokeDasharray"
};
/**
 * Build SVG path properties. Uses the path's measured length to convert
 * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset
 * and stroke-dasharray attributes.
 *
 * This function is mutative to reduce per-frame GC.
 */ function buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {
    // Normalise path length by setting SVG attribute pathLength to 1
    attrs.pathLength = 1;
    // We use dash case when setting attributes directly to the DOM node and camel case
    // when defining props on a React component.
    const keys = useDashCase ? dashKeys : camelKeys;
    // Build the dash offset
    attrs[keys.offset] = (0, _motionDom.px).transform(-offset);
    // Build the dash array
    const pathLength = (0, _motionDom.px).transform(length);
    const pathSpacing = (0, _motionDom.px).transform(spacing);
    attrs[keys.array] = `${pathLength} ${pathSpacing}`;
}

},{"motion-dom":"lRV3L","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"el4IE":[function(require,module,exports,__globalThis) {
/**
 * A set of attribute names that are always read/written as camel case.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "camelCaseAttributes", ()=>camelCaseAttributes);
const camelCaseAttributes = new Set([
    "baseFrequency",
    "diffuseConstant",
    "kernelMatrix",
    "kernelUnitLength",
    "keySplines",
    "keyTimes",
    "limitingConeAngle",
    "markerHeight",
    "markerWidth",
    "numOctaves",
    "targetX",
    "targetY",
    "surfaceScale",
    "specularConstant",
    "specularExponent",
    "stdDeviation",
    "tableValues",
    "viewBox",
    "gradientTransform",
    "pathLength",
    "startOffset",
    "textLength",
    "lengthAdjust"
]);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"a9NQP":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isSVGTag", ()=>isSVGTag);
const isSVGTag = (tag)=>typeof tag === "string" && tag.toLowerCase() === "svg";

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6qIrh":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "renderSVG", ()=>renderSVG);
var _camelToDashMjs = require("../../dom/utils/camel-to-dash.mjs");
var _renderMjs = require("../../html/utils/render.mjs");
var _camelCaseAttrsMjs = require("./camel-case-attrs.mjs");
function renderSVG(element, renderState, _styleProp, projection) {
    (0, _renderMjs.renderHTML)(element, renderState, undefined, projection);
    for(const key in renderState.attrs)element.setAttribute(!(0, _camelCaseAttrsMjs.camelCaseAttributes).has(key) ? (0, _camelToDashMjs.camelToDash)(key) : key, renderState.attrs[key]);
}

},{"../../dom/utils/camel-to-dash.mjs":"k3i8g","../../html/utils/render.mjs":"bU7sC","./camel-case-attrs.mjs":"el4IE","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7dqh3":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "scrapeMotionValuesFromProps", ()=>scrapeMotionValuesFromProps);
var _motionDom = require("motion-dom");
var _scrapeMotionValuesMjs = require("../../html/utils/scrape-motion-values.mjs");
function scrapeMotionValuesFromProps(props, prevProps, visualElement) {
    const newValues = (0, _scrapeMotionValuesMjs.scrapeMotionValuesFromProps)(props, prevProps, visualElement);
    for(const key in props)if ((0, _motionDom.isMotionValue)(props[key]) || (0, _motionDom.isMotionValue)(prevProps[key])) {
        const targetKey = (0, _motionDom.transformPropOrder).indexOf(key) !== -1 ? "attr" + key.charAt(0).toUpperCase() + key.substring(1) : key;
        newValues[targetKey] = props[key];
    }
    return newValues;
}

},{"motion-dom":"lRV3L","../../html/utils/scrape-motion-values.mjs":"bVwEk","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6Cpca":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isSVGComponent", ()=>isSVGComponent);
var _lowercaseElementsMjs = require("../../svg/lowercase-elements.mjs");
function isSVGComponent(Component) {
    if (/**
     * If it's not a string, it's a custom React component. Currently we only support
     * HTML custom React components.
     */ typeof Component !== "string" || /**
         * If it contains a dash, the element is a custom HTML webcomponent.
         */ Component.includes("-")) return false;
    else if (/**
     * If it's in our list of lowercase SVG tags, it's an SVG component
     */ (0, _lowercaseElementsMjs.lowercaseSVGElements).indexOf(Component) > -1 || /**
         * If it contains a capital letter, it's an SVG component
         */ /[A-Z]/u.test(Component)) return true;
    return false;
}

},{"../../svg/lowercase-elements.mjs":"j9aE3","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"j9aE3":[function(require,module,exports,__globalThis) {
/**
 * We keep these listed separately as we use the lowercase tag names as part
 * of the runtime bundle to detect SVG components
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "lowercaseSVGElements", ()=>lowercaseSVGElements);
const lowercaseSVGElements = [
    "animate",
    "circle",
    "defs",
    "desc",
    "ellipse",
    "g",
    "image",
    "line",
    "filter",
    "marker",
    "mask",
    "metadata",
    "path",
    "pattern",
    "polygon",
    "polyline",
    "rect",
    "stop",
    "switch",
    "symbol",
    "svg",
    "text",
    "tspan",
    "use",
    "view"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dZdZP":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createMotionProxy", ()=>createMotionProxy);
var _motionUtils = require("motion-utils");
var _indexMjs = require("../../motion/index.mjs");
function createMotionProxy(preloadedFeatures, createVisualElement) {
    if (typeof Proxy === "undefined") return 0, _indexMjs.createMotionComponent;
    /**
     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.
     * Rather than generating them anew every render.
     */ const componentCache = new Map();
    const factory = (Component, options)=>{
        return (0, _indexMjs.createMotionComponent)(Component, options, preloadedFeatures, createVisualElement);
    };
    /**
     * Support for deprecated`motion(Component)` pattern
     */ const deprecatedFactoryFunction = (Component, options)=>{
        (0, _motionUtils.warnOnce)(false, "motion() is deprecated. Use motion.create() instead.");
        return factory(Component, options);
    };
    return new Proxy(deprecatedFactoryFunction, {
        /**
         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.
         * The prop name is passed through as `key` and we can use that to generate a `motion`
         * DOM component with that name.
         */ get: (_target, key)=>{
            if (key === "create") return factory;
            /**
             * If this element doesn't exist in the component cache, create it and cache.
             */ if (!componentCache.has(key)) componentCache.set(key, (0, _indexMjs.createMotionComponent)(key, undefined, preloadedFeatures, createVisualElement));
            return componentCache.get(key);
        }
    });
}

},{"motion-utils":"33eo7","../../motion/index.mjs":"o3rBO","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"o3rBO":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createMotionComponent", ()=>createMotionComponent);
var _jsxRuntime = require("react/jsx-runtime");
var _motionUtils = require("motion-utils");
var _react = require("react");
var _layoutGroupContextMjs = require("../context/LayoutGroupContext.mjs");
var _lazyContextMjs = require("../context/LazyContext.mjs");
var _motionConfigContextMjs = require("../context/MotionConfigContext.mjs");
var _indexMjs = require("../context/MotionContext/index.mjs");
var _createMjs = require("../context/MotionContext/create.mjs");
var _useRenderMjs = require("../render/dom/use-render.mjs");
var _isSvgComponentMjs = require("../render/dom/utils/is-svg-component.mjs");
var _useHtmlVisualStateMjs = require("../render/html/use-html-visual-state.mjs");
var _useSvgVisualStateMjs = require("../render/svg/use-svg-visual-state.mjs");
var _isBrowserMjs = require("../utils/is-browser.mjs");
var _definitionsMjs = require("./features/definitions.mjs");
var _loadFeaturesMjs = require("./features/load-features.mjs");
var _symbolMjs = require("./utils/symbol.mjs");
var _useMotionRefMjs = require("./utils/use-motion-ref.mjs");
var _useVisualElementMjs = require("./utils/use-visual-element.mjs");
"use client";
/**
 * Create a `motion` component.
 *
 * This function accepts a Component argument, which can be either a string (ie "div"
 * for `motion.div`), or an actual React component.
 *
 * Alongside this is a config option which provides a way of rendering the provided
 * component "offline", or outside the React render cycle.
 */ function createMotionComponent(Component, { forwardMotionProps = false } = {}, preloadedFeatures, createVisualElement) {
    preloadedFeatures && (0, _loadFeaturesMjs.loadFeatures)(preloadedFeatures);
    const useVisualState = (0, _isSvgComponentMjs.isSVGComponent)(Component) ? (0, _useSvgVisualStateMjs.useSVGVisualState) : (0, _useHtmlVisualStateMjs.useHTMLVisualState);
    function MotionDOMComponent(props, externalRef) {
        /**
         * If we need to measure the element we load this functionality in a
         * separate class component in order to gain access to getSnapshotBeforeUpdate.
         */ let MeasureLayout;
        const configAndProps = {
            ...(0, _react.useContext)((0, _motionConfigContextMjs.MotionConfigContext)),
            ...props,
            layoutId: useLayoutId(props)
        };
        const { isStatic } = configAndProps;
        const context = (0, _createMjs.useCreateMotionContext)(props);
        const visualState = useVisualState(props, isStatic);
        if (!isStatic && (0, _isBrowserMjs.isBrowser)) {
            useStrictMode(configAndProps, preloadedFeatures);
            const layoutProjection = getProjectionFunctionality(configAndProps);
            MeasureLayout = layoutProjection.MeasureLayout;
            /**
             * Create a VisualElement for this component. A VisualElement provides a common
             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as
             * providing a way of rendering to these APIs outside of the React render loop
             * for more performant animations and interactions
             */ context.visualElement = (0, _useVisualElementMjs.useVisualElement)(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);
        }
        /**
         * The mount order and hierarchy is specific to ensure our element ref
         * is hydrated by the time features fire their effects.
         */ return (0, _jsxRuntime.jsxs)((0, _indexMjs.MotionContext).Provider, {
            value: context,
            children: [
                MeasureLayout && context.visualElement ? (0, _jsxRuntime.jsx)(MeasureLayout, {
                    visualElement: context.visualElement,
                    ...configAndProps
                }) : null,
                (0, _useRenderMjs.useRender)(Component, props, (0, _useMotionRefMjs.useMotionRef)(visualState, context.visualElement, externalRef), visualState, isStatic, forwardMotionProps)
            ]
        });
    }
    MotionDOMComponent.displayName = `motion.${typeof Component === "string" ? Component : `create(${Component.displayName ?? Component.name ?? ""})`}`;
    const ForwardRefMotionComponent = (0, _react.forwardRef)(MotionDOMComponent);
    ForwardRefMotionComponent[0, _symbolMjs.motionComponentSymbol] = Component;
    return ForwardRefMotionComponent;
}
function useLayoutId({ layoutId }) {
    const layoutGroupId = (0, _react.useContext)((0, _layoutGroupContextMjs.LayoutGroupContext)).id;
    return layoutGroupId && layoutId !== undefined ? layoutGroupId + "-" + layoutId : layoutId;
}
function useStrictMode(configAndProps, preloadedFeatures) {
    const isStrict = (0, _react.useContext)((0, _lazyContextMjs.LazyContext)).strict;
    /**
     * If we're in development mode, check to make sure we're not rendering a motion component
     * as a child of LazyMotion, as this will break the file-size benefits of using it.
     */ if (preloadedFeatures && isStrict) {
        const strictMessage = "You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.";
        configAndProps.ignoreStrict ? (0, _motionUtils.warning)(false, strictMessage, "lazy-strict-mode") : (0, _motionUtils.invariant)(false, strictMessage, "lazy-strict-mode");
    }
}
function getProjectionFunctionality(props) {
    const { drag, layout } = (0, _definitionsMjs.featureDefinitions);
    if (!drag && !layout) return {};
    const combined = {
        ...drag,
        ...layout
    };
    return {
        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props) ? combined.MeasureLayout : undefined,
        ProjectionNode: combined.ProjectionNode
    };
}

},{"react/jsx-runtime":"05iiF","motion-utils":"33eo7","react":"jMk1U","../context/LayoutGroupContext.mjs":"aGGao","../context/LazyContext.mjs":"6ILxn","../context/MotionConfigContext.mjs":"gwCIi","../context/MotionContext/index.mjs":"fZkfj","../context/MotionContext/create.mjs":"7A5Mu","../render/dom/use-render.mjs":"8klxW","../render/dom/utils/is-svg-component.mjs":"6Cpca","../render/html/use-html-visual-state.mjs":"03mK2","../render/svg/use-svg-visual-state.mjs":"2iTYE","../utils/is-browser.mjs":"1rgdh","./features/definitions.mjs":"QCfrA","./features/load-features.mjs":"f6Q0u","./utils/symbol.mjs":"dthQI","./utils/use-motion-ref.mjs":"8cpJv","./utils/use-visual-element.mjs":"4h3yE","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aGGao":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LayoutGroupContext", ()=>LayoutGroupContext);
var _react = require("react");
"use client";
const LayoutGroupContext = (0, _react.createContext)({});

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6ILxn":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LazyContext", ()=>LazyContext);
var _react = require("react");
"use client";
const LazyContext = (0, _react.createContext)({
    strict: false
});

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gwCIi":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "MotionConfigContext", ()=>MotionConfigContext);
var _react = require("react");
"use client";
/**
 * @public
 */ const MotionConfigContext = (0, _react.createContext)({
    transformPagePoint: (p)=>p,
    isStatic: false,
    reducedMotion: "never"
});

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fZkfj":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "MotionContext", ()=>MotionContext);
var _react = require("react");
"use client";
const MotionContext = /* @__PURE__ */ (0, _react.createContext)({});

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7A5Mu":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useCreateMotionContext", ()=>useCreateMotionContext);
var _react = require("react");
var _indexMjs = require("./index.mjs");
var _utilsMjs = require("./utils.mjs");
"use client";
function useCreateMotionContext(props) {
    const { initial, animate } = (0, _utilsMjs.getCurrentTreeVariants)(props, (0, _react.useContext)((0, _indexMjs.MotionContext)));
    return (0, _react.useMemo)(()=>({
            initial,
            animate
        }), [
        variantLabelsAsDependency(initial),
        variantLabelsAsDependency(animate)
    ]);
}
function variantLabelsAsDependency(prop) {
    return Array.isArray(prop) ? prop.join(" ") : prop;
}

},{"react":"jMk1U","./index.mjs":"fZkfj","./utils.mjs":"dONxH","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dONxH":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getCurrentTreeVariants", ()=>getCurrentTreeVariants);
var _isControllingVariantsMjs = require("../../render/utils/is-controlling-variants.mjs");
var _isVariantLabelMjs = require("../../render/utils/is-variant-label.mjs");
function getCurrentTreeVariants(props, context) {
    if ((0, _isControllingVariantsMjs.isControllingVariants)(props)) {
        const { initial, animate } = props;
        return {
            initial: initial === false || (0, _isVariantLabelMjs.isVariantLabel)(initial) ? initial : undefined,
            animate: (0, _isVariantLabelMjs.isVariantLabel)(animate) ? animate : undefined
        };
    }
    return props.inherit !== false ? context : {};
}

},{"../../render/utils/is-controlling-variants.mjs":"7r3S6","../../render/utils/is-variant-label.mjs":"6NjJT","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8klxW":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useRender", ()=>useRender);
var _motionDom = require("motion-dom");
var _react = require("react");
var _usePropsMjs = require("../html/use-props.mjs");
var _usePropsMjs1 = require("../svg/use-props.mjs");
var _filterPropsMjs = require("./utils/filter-props.mjs");
var _isSvgComponentMjs = require("./utils/is-svg-component.mjs");
"use client";
function useRender(Component, props, ref, { latestValues }, isStatic, forwardMotionProps = false) {
    const useVisualProps = (0, _isSvgComponentMjs.isSVGComponent)(Component) ? (0, _usePropsMjs1.useSVGProps) : (0, _usePropsMjs.useHTMLProps);
    const visualProps = useVisualProps(props, latestValues, isStatic, Component);
    const filteredProps = (0, _filterPropsMjs.filterProps)(props, typeof Component === "string", forwardMotionProps);
    const elementProps = Component !== (0, _react.Fragment) ? {
        ...filteredProps,
        ...visualProps,
        ref
    } : {};
    /**
     * If component has been handed a motion value as its child,
     * memoise its initial value and render that. Subsequent updates
     * will be handled by the onChange handler
     */ const { children } = props;
    const renderedChildren = (0, _react.useMemo)(()=>(0, _motionDom.isMotionValue)(children) ? children.get() : children, [
        children
    ]);
    return (0, _react.createElement)(Component, {
        ...elementProps,
        children: renderedChildren
    });
}

},{"motion-dom":"lRV3L","react":"jMk1U","../html/use-props.mjs":"7rBwG","../svg/use-props.mjs":"iTDyz","./utils/filter-props.mjs":"9B4YZ","./utils/is-svg-component.mjs":"6Cpca","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7rBwG":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "copyRawValuesOnly", ()=>copyRawValuesOnly);
parcelHelpers.export(exports, "useHTMLProps", ()=>useHTMLProps);
var _motionDom = require("motion-dom");
var _react = require("react");
var _isForcedMotionValueMjs = require("../../motion/utils/is-forced-motion-value.mjs");
var _buildStylesMjs = require("./utils/build-styles.mjs");
var _createRenderStateMjs = require("./utils/create-render-state.mjs");
"use client";
function copyRawValuesOnly(target, source, props) {
    for(const key in source)if (!(0, _motionDom.isMotionValue)(source[key]) && !(0, _isForcedMotionValueMjs.isForcedMotionValue)(key, props)) target[key] = source[key];
}
function useInitialMotionValues({ transformTemplate }, visualState) {
    return (0, _react.useMemo)(()=>{
        const state = (0, _createRenderStateMjs.createHtmlRenderState)();
        (0, _buildStylesMjs.buildHTMLStyles)(state, visualState, transformTemplate);
        return Object.assign({}, state.vars, state.style);
    }, [
        visualState
    ]);
}
function useStyle(props, visualState) {
    const styleProp = props.style || {};
    const style = {};
    /**
     * Copy non-Motion Values straight into style
     */ copyRawValuesOnly(style, styleProp, props);
    Object.assign(style, useInitialMotionValues(props, visualState));
    return style;
}
function useHTMLProps(props, visualState) {
    // The `any` isn't ideal but it is the type of createElement props argument
    const htmlProps = {};
    const style = useStyle(props, visualState);
    if (props.drag && props.dragListener !== false) {
        // Disable the ghost element when a user drags
        htmlProps.draggable = false;
        // Disable text selection
        style.userSelect = style.WebkitUserSelect = style.WebkitTouchCallout = "none";
        // Disable scrolling on the draggable direction
        style.touchAction = props.drag === true ? "none" : `pan-${props.drag === "x" ? "y" : "x"}`;
    }
    if (props.tabIndex === undefined && (props.onTap || props.onTapStart || props.whileTap)) htmlProps.tabIndex = 0;
    htmlProps.style = style;
    return htmlProps;
}

},{"motion-dom":"lRV3L","react":"jMk1U","../../motion/utils/is-forced-motion-value.mjs":"kUsW5","./utils/build-styles.mjs":"bq8Eb","./utils/create-render-state.mjs":"gfHKv","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gfHKv":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createHtmlRenderState", ()=>createHtmlRenderState);
const createHtmlRenderState = ()=>({
        style: {},
        transform: {},
        transformOrigin: {},
        vars: {}
    });

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"iTDyz":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useSVGProps", ()=>useSVGProps);
var _react = require("react");
var _usePropsMjs = require("../html/use-props.mjs");
var _buildAttrsMjs = require("./utils/build-attrs.mjs");
var _createRenderStateMjs = require("./utils/create-render-state.mjs");
var _isSvgTagMjs = require("./utils/is-svg-tag.mjs");
"use client";
function useSVGProps(props, visualState, _isStatic, Component) {
    const visualProps = (0, _react.useMemo)(()=>{
        const state = (0, _createRenderStateMjs.createSvgRenderState)();
        (0, _buildAttrsMjs.buildSVGAttrs)(state, visualState, (0, _isSvgTagMjs.isSVGTag)(Component), props.transformTemplate, props.style);
        return {
            ...state.attrs,
            style: {
                ...state.style
            }
        };
    }, [
        visualState
    ]);
    if (props.style) {
        const rawStyles = {};
        (0, _usePropsMjs.copyRawValuesOnly)(rawStyles, props.style, props);
        visualProps.style = {
            ...rawStyles,
            ...visualProps.style
        };
    }
    return visualProps;
}

},{"react":"jMk1U","../html/use-props.mjs":"7rBwG","./utils/build-attrs.mjs":"8dVxy","./utils/create-render-state.mjs":"7IpTT","./utils/is-svg-tag.mjs":"a9NQP","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7IpTT":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createSvgRenderState", ()=>createSvgRenderState);
var _createRenderStateMjs = require("../../html/utils/create-render-state.mjs");
const createSvgRenderState = ()=>({
        ...(0, _createRenderStateMjs.createHtmlRenderState)(),
        attrs: {}
    });

},{"../../html/utils/create-render-state.mjs":"gfHKv","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9B4YZ":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "filterProps", ()=>filterProps);
parcelHelpers.export(exports, "loadExternalIsValidProp", ()=>loadExternalIsValidProp);
var _validPropMjs = require("../../../motion/utils/valid-prop.mjs");
let shouldForward = (key)=>!(0, _validPropMjs.isValidMotionProp)(key);
function loadExternalIsValidProp(isValidProp) {
    if (typeof isValidProp !== "function") return;
    // Explicitly filter our events
    shouldForward = (key)=>key.startsWith("on") ? !(0, _validPropMjs.isValidMotionProp)(key) : isValidProp(key);
}
/**
 * Emotion and Styled Components both allow users to pass through arbitrary props to their components
 * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which
 * of these should be passed to the underlying DOM node.
 *
 * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props
 * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props
 * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of
 * `@emotion/is-prop-valid`, however to fix this problem we need to use it.
 *
 * By making it an optionalDependency we can offer this functionality only in the situations where it's
 * actually required.
 */ try {
    /**
     * We attempt to import this package but require won't be defined in esm environments, in that case
     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed
     * in favour of explicit injection.
     */ loadExternalIsValidProp(require("125f13913be7321c").default);
} catch  {
// We don't need to actually do anything here - the fallback is the existing `isPropValid`.
}
function filterProps(props, isDom, forwardMotionProps) {
    const filteredProps = {};
    for(const key in props){
        /**
         * values is considered a valid prop by Emotion, so if it's present
         * this will be rendered out to the DOM unless explicitly filtered.
         *
         * We check the type as it could be used with the `feColorMatrix`
         * element, which we support.
         */ if (key === "values" && typeof props.values === "object") continue;
        if (shouldForward(key) || forwardMotionProps === true && (0, _validPropMjs.isValidMotionProp)(key) || !isDom && !(0, _validPropMjs.isValidMotionProp)(key) || // If trying to use native HTML drag events, forward drag listeners
        props["draggable"] && key.startsWith("onDrag")) filteredProps[key] = props[key];
    }
    return filteredProps;
}

},{"../../../motion/utils/valid-prop.mjs":"hq8jb","125f13913be7321c":"@emotion/is-prop-valid","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hq8jb":[function(require,module,exports,__globalThis) {
/**
 * A list of all valid MotionProps.
 *
 * @privateRemarks
 * This doesn't throw if a `MotionProp` name is missing - it should.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isValidMotionProp", ()=>isValidMotionProp);
const validMotionProps = new Set([
    "animate",
    "exit",
    "variants",
    "initial",
    "style",
    "values",
    "variants",
    "transition",
    "transformTemplate",
    "custom",
    "inherit",
    "onBeforeLayoutMeasure",
    "onAnimationStart",
    "onAnimationComplete",
    "onUpdate",
    "onDragStart",
    "onDrag",
    "onDragEnd",
    "onMeasureDragConstraints",
    "onDirectionLock",
    "onDragTransitionEnd",
    "_dragX",
    "_dragY",
    "onHoverStart",
    "onHoverEnd",
    "onViewportEnter",
    "onViewportLeave",
    "globalTapTarget",
    "ignoreStrict",
    "viewport"
]);
/**
 * Check whether a prop name is a valid `MotionProp` key.
 *
 * @param key - Name of the property to check
 * @returns `true` is key is a valid `MotionProp`.
 *
 * @public
 */ function isValidMotionProp(key) {
    return key.startsWith("while") || key.startsWith("drag") && key !== "draggable" || key.startsWith("layout") || key.startsWith("onTap") || key.startsWith("onPan") || key.startsWith("onLayout") || validMotionProps.has(key);
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"03mK2":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useHTMLVisualState", ()=>useHTMLVisualState);
var _useVisualStateMjs = require("../../motion/utils/use-visual-state.mjs");
var _createRenderStateMjs = require("./utils/create-render-state.mjs");
var _scrapeMotionValuesMjs = require("./utils/scrape-motion-values.mjs");
"use client";
const useHTMLVisualState = /*@__PURE__*/ (0, _useVisualStateMjs.makeUseVisualState)({
    scrapeMotionValuesFromProps: (0, _scrapeMotionValuesMjs.scrapeMotionValuesFromProps),
    createRenderState: (0, _createRenderStateMjs.createHtmlRenderState)
});

},{"../../motion/utils/use-visual-state.mjs":"hqKPa","./utils/create-render-state.mjs":"gfHKv","./utils/scrape-motion-values.mjs":"bVwEk","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hqKPa":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeUseVisualState", ()=>makeUseVisualState);
var _react = require("react");
var _isAnimationControlsMjs = require("../../animation/utils/is-animation-controls.mjs");
var _indexMjs = require("../../context/MotionContext/index.mjs");
var _presenceContextMjs = require("../../context/PresenceContext.mjs");
var _isControllingVariantsMjs = require("../../render/utils/is-controlling-variants.mjs");
var _resolveVariantsMjs = require("../../render/utils/resolve-variants.mjs");
var _useConstantMjs = require("../../utils/use-constant.mjs");
var _resolveMotionValueMjs = require("../../value/utils/resolve-motion-value.mjs");
"use client";
function makeState({ scrapeMotionValuesFromProps, createRenderState }, props, context, presenceContext) {
    const state = {
        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),
        renderState: createRenderState()
    };
    return state;
}
function makeLatestValues(props, context, presenceContext, scrapeMotionValues) {
    const values = {};
    const motionValues = scrapeMotionValues(props, {});
    for(const key in motionValues)values[key] = (0, _resolveMotionValueMjs.resolveMotionValue)(motionValues[key]);
    let { initial, animate } = props;
    const isControllingVariants$1 = (0, _isControllingVariantsMjs.isControllingVariants)(props);
    const isVariantNode$1 = (0, _isControllingVariantsMjs.isVariantNode)(props);
    if (context && isVariantNode$1 && !isControllingVariants$1 && props.inherit !== false) {
        if (initial === undefined) initial = context.initial;
        if (animate === undefined) animate = context.animate;
    }
    let isInitialAnimationBlocked = presenceContext ? presenceContext.initial === false : false;
    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;
    const variantToSet = isInitialAnimationBlocked ? animate : initial;
    if (variantToSet && typeof variantToSet !== "boolean" && !(0, _isAnimationControlsMjs.isAnimationControls)(variantToSet)) {
        const list = Array.isArray(variantToSet) ? variantToSet : [
            variantToSet
        ];
        for(let i = 0; i < list.length; i++){
            const resolved = (0, _resolveVariantsMjs.resolveVariantFromProps)(props, list[i]);
            if (resolved) {
                const { transitionEnd, transition, ...target } = resolved;
                for(const key in target){
                    let valueTarget = target[key];
                    if (Array.isArray(valueTarget)) {
                        /**
                         * Take final keyframe if the initial animation is blocked because
                         * we want to initialise at the end of that blocked animation.
                         */ const index = isInitialAnimationBlocked ? valueTarget.length - 1 : 0;
                        valueTarget = valueTarget[index];
                    }
                    if (valueTarget !== null) values[key] = valueTarget;
                }
                for(const key in transitionEnd)values[key] = transitionEnd[key];
            }
        }
    }
    return values;
}
const makeUseVisualState = (config)=>(props, isStatic)=>{
        const context = (0, _react.useContext)((0, _indexMjs.MotionContext));
        const presenceContext = (0, _react.useContext)((0, _presenceContextMjs.PresenceContext));
        const make = ()=>makeState(config, props, context, presenceContext);
        return isStatic ? make() : (0, _useConstantMjs.useConstant)(make);
    };

},{"react":"jMk1U","../../animation/utils/is-animation-controls.mjs":"5Gu2H","../../context/MotionContext/index.mjs":"fZkfj","../../context/PresenceContext.mjs":"hBm9T","../../render/utils/is-controlling-variants.mjs":"7r3S6","../../render/utils/resolve-variants.mjs":"3ji5H","../../utils/use-constant.mjs":"9PGo9","../../value/utils/resolve-motion-value.mjs":"2OJmr","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hBm9T":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "PresenceContext", ()=>PresenceContext);
var _react = require("react");
"use client";
/**
 * @public
 */ const PresenceContext = /* @__PURE__ */ (0, _react.createContext)(null);

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9PGo9":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useConstant", ()=>useConstant);
var _react = require("react");
"use client";
/**
 * Creates a constant value over the lifecycle of a component.
 *
 * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer
 * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`
 * you can ensure that initialisers don't execute twice or more.
 */ function useConstant(init) {
    const ref = (0, _react.useRef)(null);
    if (ref.current === null) ref.current = init();
    return ref.current;
}

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2OJmr":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "resolveMotionValue", ()=>resolveMotionValue);
var _motionDom = require("motion-dom");
/**
 * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself
 *
 * TODO: Remove and move to library
 */ function resolveMotionValue(value) {
    return (0, _motionDom.isMotionValue)(value) ? value.get() : value;
}

},{"motion-dom":"lRV3L","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2iTYE":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useSVGVisualState", ()=>useSVGVisualState);
var _useVisualStateMjs = require("../../motion/utils/use-visual-state.mjs");
var _createRenderStateMjs = require("./utils/create-render-state.mjs");
var _scrapeMotionValuesMjs = require("./utils/scrape-motion-values.mjs");
"use client";
const useSVGVisualState = /*@__PURE__*/ (0, _useVisualStateMjs.makeUseVisualState)({
    scrapeMotionValuesFromProps: (0, _scrapeMotionValuesMjs.scrapeMotionValuesFromProps),
    createRenderState: (0, _createRenderStateMjs.createSvgRenderState)
});

},{"../../motion/utils/use-visual-state.mjs":"hqKPa","./utils/create-render-state.mjs":"7IpTT","./utils/scrape-motion-values.mjs":"7dqh3","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"f6Q0u":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "loadFeatures", ()=>loadFeatures);
var _definitionsMjs = require("./definitions.mjs");
function loadFeatures(features) {
    for(const key in features)(0, _definitionsMjs.featureDefinitions)[key] = {
        ...(0, _definitionsMjs.featureDefinitions)[key],
        ...features[key]
    };
}

},{"./definitions.mjs":"QCfrA","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dthQI":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "motionComponentSymbol", ()=>motionComponentSymbol);
const motionComponentSymbol = Symbol.for("motionComponentSymbol");

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8cpJv":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useMotionRef", ()=>useMotionRef);
var _react = require("react");
var _isRefObjectMjs = require("../../utils/is-ref-object.mjs");
"use client";
/**
 * Creates a ref function that, when called, hydrates the provided
 * external ref and VisualElement.
 */ function useMotionRef(visualState, visualElement, externalRef) {
    return (0, _react.useCallback)((instance)=>{
        if (instance) visualState.onMount && visualState.onMount(instance);
        if (visualElement) {
            if (instance) visualElement.mount(instance);
            else visualElement.unmount();
        }
        if (externalRef) {
            if (typeof externalRef === "function") externalRef(instance);
            else if ((0, _isRefObjectMjs.isRefObject)(externalRef)) externalRef.current = instance;
        }
    }, /**
     * Include externalRef in dependencies to ensure the callback updates
     * when the ref changes, allowing proper ref forwarding.
     */ [
        visualElement
    ]);
}

},{"react":"jMk1U","../../utils/is-ref-object.mjs":"b6wCw","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"b6wCw":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isRefObject", ()=>isRefObject);
function isRefObject(ref) {
    return ref && typeof ref === "object" && Object.prototype.hasOwnProperty.call(ref, "current");
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4h3yE":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useVisualElement", ()=>useVisualElement);
var _react = require("react");
var _dataIdMjs = require("../../animation/optimized-appear/data-id.mjs");
var _lazyContextMjs = require("../../context/LazyContext.mjs");
var _motionConfigContextMjs = require("../../context/MotionConfigContext.mjs");
var _indexMjs = require("../../context/MotionContext/index.mjs");
var _presenceContextMjs = require("../../context/PresenceContext.mjs");
var _switchLayoutGroupContextMjs = require("../../context/SwitchLayoutGroupContext.mjs");
var _isRefObjectMjs = require("../../utils/is-ref-object.mjs");
var _useIsomorphicEffectMjs = require("../../utils/use-isomorphic-effect.mjs");
"use client";
function useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {
    const { visualElement: parent } = (0, _react.useContext)((0, _indexMjs.MotionContext));
    const lazyContext = (0, _react.useContext)((0, _lazyContextMjs.LazyContext));
    const presenceContext = (0, _react.useContext)((0, _presenceContextMjs.PresenceContext));
    const reducedMotionConfig = (0, _react.useContext)((0, _motionConfigContextMjs.MotionConfigContext)).reducedMotion;
    const visualElementRef = (0, _react.useRef)(null);
    /**
     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded
     */ createVisualElement = createVisualElement || lazyContext.renderer;
    if (!visualElementRef.current && createVisualElement) visualElementRef.current = createVisualElement(Component, {
        visualState,
        parent,
        props,
        presenceContext,
        blockInitialAnimation: presenceContext ? presenceContext.initial === false : false,
        reducedMotionConfig
    });
    const visualElement = visualElementRef.current;
    /**
     * Load Motion gesture and animation features. These are rendered as renderless
     * components so each feature can optionally make use of React lifecycle methods.
     */ const initialLayoutGroupConfig = (0, _react.useContext)((0, _switchLayoutGroupContextMjs.SwitchLayoutGroupContext));
    if (visualElement && !visualElement.projection && ProjectionNodeConstructor && (visualElement.type === "html" || visualElement.type === "svg")) createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);
    const isMounted = (0, _react.useRef)(false);
    (0, _react.useInsertionEffect)(()=>{
        /**
         * Check the component has already mounted before calling
         * `update` unnecessarily. This ensures we skip the initial update.
         */ if (visualElement && isMounted.current) visualElement.update(props, presenceContext);
    });
    /**
     * Cache this value as we want to know whether HandoffAppearAnimations
     * was present on initial render - it will be deleted after this.
     */ const optimisedAppearId = props[0, _dataIdMjs.optimizedAppearDataAttribute];
    const wantsHandoff = (0, _react.useRef)(Boolean(optimisedAppearId) && !window.MotionHandoffIsComplete?.(optimisedAppearId) && window.MotionHasOptimisedAnimation?.(optimisedAppearId));
    (0, _useIsomorphicEffectMjs.useIsomorphicLayoutEffect)(()=>{
        if (!visualElement) return;
        isMounted.current = true;
        window.MotionIsMounted = true;
        visualElement.updateFeatures();
        visualElement.scheduleRenderMicrotask();
        /**
         * Ideally this function would always run in a useEffect.
         *
         * However, if we have optimised appear animations to handoff from,
         * it needs to happen synchronously to ensure there's no flash of
         * incorrect styles in the event of a hydration error.
         *
         * So if we detect a situtation where optimised appear animations
         * are running, we use useLayoutEffect to trigger animations.
         */ if (wantsHandoff.current && visualElement.animationState) visualElement.animationState.animateChanges();
    });
    (0, _react.useEffect)(()=>{
        if (!visualElement) return;
        if (!wantsHandoff.current && visualElement.animationState) visualElement.animationState.animateChanges();
        if (wantsHandoff.current) {
            // This ensures all future calls to animateChanges() in this component will run in useEffect
            queueMicrotask(()=>{
                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);
            });
            wantsHandoff.current = false;
        }
        /**
         * Now we've finished triggering animations for this element we
         * can wipe the enteringChildren set for the next render.
         */ visualElement.enteringChildren = undefined;
    });
    return visualElement;
}
function createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {
    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade } = props;
    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props["data-framer-portal-id"] ? undefined : getClosestProjectingNode(visualElement.parent));
    visualElement.projection.setOptions({
        layoutId,
        layout,
        alwaysMeasureLayout: Boolean(drag) || dragConstraints && (0, _isRefObjectMjs.isRefObject)(dragConstraints),
        visualElement,
        /**
         * TODO: Update options in an effect. This could be tricky as it'll be too late
         * to update by the time layout animations run.
         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,
         * ensuring it gets called if there's no potential layout animations.
         *
         */ animationType: typeof layout === "string" ? layout : "both",
        initialPromotionConfig,
        crossfade: layoutCrossfade,
        layoutScroll,
        layoutRoot
    });
}
function getClosestProjectingNode(visualElement) {
    if (!visualElement) return undefined;
    return visualElement.options.allowProjection !== false ? visualElement.projection : getClosestProjectingNode(visualElement.parent);
}

},{"react":"jMk1U","../../animation/optimized-appear/data-id.mjs":"2JODw","../../context/LazyContext.mjs":"6ILxn","../../context/MotionConfigContext.mjs":"gwCIi","../../context/MotionContext/index.mjs":"fZkfj","../../context/PresenceContext.mjs":"hBm9T","../../context/SwitchLayoutGroupContext.mjs":"6w0cZ","../../utils/is-ref-object.mjs":"b6wCw","../../utils/use-isomorphic-effect.mjs":"gO0lI","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2JODw":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "optimizedAppearDataAttribute", ()=>optimizedAppearDataAttribute);
parcelHelpers.export(exports, "optimizedAppearDataId", ()=>optimizedAppearDataId);
var _camelToDashMjs = require("../../render/dom/utils/camel-to-dash.mjs");
const optimizedAppearDataId = "framerAppearId";
const optimizedAppearDataAttribute = "data-" + (0, _camelToDashMjs.camelToDash)(optimizedAppearDataId);

},{"../../render/dom/utils/camel-to-dash.mjs":"k3i8g","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6w0cZ":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "SwitchLayoutGroupContext", ()=>SwitchLayoutGroupContext);
var _react = require("react");
"use client";
/**
 * Internal, exported only for usage in Framer
 */ const SwitchLayoutGroupContext = (0, _react.createContext)({});

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gO0lI":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useIsomorphicLayoutEffect", ()=>useIsomorphicLayoutEffect);
var _react = require("react");
var _isBrowserMjs = require("./is-browser.mjs");
"use client";
const useIsomorphicLayoutEffect = (0, _isBrowserMjs.isBrowser) ? (0, _react.useLayoutEffect) : (0, _react.useEffect);

},{"react":"jMk1U","./is-browser.mjs":"1rgdh","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hE92I":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "featureBundle", ()=>featureBundle);
var _animationsMjs = require("../../../motion/features/animations.mjs");
var _dragMjs = require("../../../motion/features/drag.mjs");
var _gesturesMjs = require("../../../motion/features/gestures.mjs");
var _layoutMjs = require("../../../motion/features/layout.mjs");
const featureBundle = {
    ...(0, _animationsMjs.animations),
    ...(0, _gesturesMjs.gestureAnimations),
    ...(0, _dragMjs.drag),
    ...(0, _layoutMjs.layout)
};

},{"../../../motion/features/animations.mjs":"fZgiN","../../../motion/features/drag.mjs":"bZoO2","../../../motion/features/gestures.mjs":"i6mHa","../../../motion/features/layout.mjs":"57PFJ","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fZgiN":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "animations", ()=>animations);
var _indexMjs = require("./animation/index.mjs");
var _exitMjs = require("./animation/exit.mjs");
const animations = {
    animation: {
        Feature: (0, _indexMjs.AnimationFeature)
    },
    exit: {
        Feature: (0, _exitMjs.ExitAnimationFeature)
    }
};

},{"./animation/index.mjs":"i6eo2","./animation/exit.mjs":"ifl7l","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"i6eo2":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AnimationFeature", ()=>AnimationFeature);
var _isAnimationControlsMjs = require("../../../animation/utils/is-animation-controls.mjs");
var _animationStateMjs = require("../../../render/utils/animation-state.mjs");
var _featureMjs = require("../Feature.mjs");
class AnimationFeature extends (0, _featureMjs.Feature) {
    /**
     * We dynamically generate the AnimationState manager as it contains a reference
     * to the underlying animation library. We only want to load that if we load this,
     * so people can optionally code split it out using the `m` component.
     */ constructor(node){
        super(node);
        node.animationState || (node.animationState = (0, _animationStateMjs.createAnimationState)(node));
    }
    updateAnimationControlsSubscription() {
        const { animate } = this.node.getProps();
        if ((0, _isAnimationControlsMjs.isAnimationControls)(animate)) this.unmountControls = animate.subscribe(this.node);
    }
    /**
     * Subscribe any provided AnimationControls to the component's VisualElement
     */ mount() {
        this.updateAnimationControlsSubscription();
    }
    update() {
        const { animate } = this.node.getProps();
        const { animate: prevAnimate } = this.node.prevProps || {};
        if (animate !== prevAnimate) this.updateAnimationControlsSubscription();
    }
    unmount() {
        this.node.animationState.reset();
        this.unmountControls?.();
    }
}

},{"../../../animation/utils/is-animation-controls.mjs":"5Gu2H","../../../render/utils/animation-state.mjs":"5I1Cj","../Feature.mjs":"9D9gy","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5I1Cj":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "checkVariantsDidChange", ()=>checkVariantsDidChange);
parcelHelpers.export(exports, "createAnimationState", ()=>createAnimationState);
var _visualElementMjs = require("../../animation/interfaces/visual-element.mjs");
var _calcChildStaggerMjs = require("../../animation/utils/calc-child-stagger.mjs");
var _isAnimationControlsMjs = require("../../animation/utils/is-animation-controls.mjs");
var _isKeyframesTargetMjs = require("../../animation/utils/is-keyframes-target.mjs");
var _shallowCompareMjs = require("../../utils/shallow-compare.mjs");
var _getVariantContextMjs = require("./get-variant-context.mjs");
var _isVariantLabelMjs = require("./is-variant-label.mjs");
var _resolveDynamicVariantsMjs = require("./resolve-dynamic-variants.mjs");
var _variantPropsMjs = require("./variant-props.mjs");
const reversePriorityOrder = [
    ...(0, _variantPropsMjs.variantPriorityOrder)
].reverse();
const numAnimationTypes = (0, _variantPropsMjs.variantPriorityOrder).length;
function animateList(visualElement) {
    return (animations)=>Promise.all(animations.map(({ animation, options })=>(0, _visualElementMjs.animateVisualElement)(visualElement, animation, options)));
}
function createAnimationState(visualElement) {
    let animate = animateList(visualElement);
    let state = createState();
    let isInitialRender = true;
    /**
     * This function will be used to reduce the animation definitions for
     * each active animation type into an object of resolved values for it.
     */ const buildResolvedTypeValues = (type)=>(acc, definition)=>{
            const resolved = (0, _resolveDynamicVariantsMjs.resolveVariant)(visualElement, definition, type === "exit" ? visualElement.presenceContext?.custom : undefined);
            if (resolved) {
                const { transition, transitionEnd, ...target } = resolved;
                acc = {
                    ...acc,
                    ...target,
                    ...transitionEnd
                };
            }
            return acc;
        };
    /**
     * This just allows us to inject mocked animation functions
     * @internal
     */ function setAnimateFunction(makeAnimator) {
        animate = makeAnimator(visualElement);
    }
    /**
     * When we receive new props, we need to:
     * 1. Create a list of protected keys for each type. This is a directory of
     *    value keys that are currently being "handled" by types of a higher priority
     *    so that whenever an animation is played of a given type, these values are
     *    protected from being animated.
     * 2. Determine if an animation type needs animating.
     * 3. Determine if any values have been removed from a type and figure out
     *    what to animate those to.
     */ function animateChanges(changedActiveType) {
        const { props } = visualElement;
        const context = (0, _getVariantContextMjs.getVariantContext)(visualElement.parent) || {};
        /**
         * A list of animations that we'll build into as we iterate through the animation
         * types. This will get executed at the end of the function.
         */ const animations = [];
        /**
         * Keep track of which values have been removed. Then, as we hit lower priority
         * animation types, we can check if they contain removed values and animate to that.
         */ const removedKeys = new Set();
        /**
         * A dictionary of all encountered keys. This is an object to let us build into and
         * copy it without iteration. Each time we hit an animation type we set its protected
         * keys - the keys its not allowed to animate - to the latest version of this object.
         */ let encounteredKeys = {};
        /**
         * If a variant has been removed at a given index, and this component is controlling
         * variant animations, we want to ensure lower-priority variants are forced to animate.
         */ let removedVariantIndex = Infinity;
        /**
         * Iterate through all animation types in reverse priority order. For each, we want to
         * detect which values it's handling and whether or not they've changed (and therefore
         * need to be animated). If any values have been removed, we want to detect those in
         * lower priority props and flag for animation.
         */ for(let i = 0; i < numAnimationTypes; i++){
            const type = reversePriorityOrder[i];
            const typeState = state[type];
            const prop = props[type] !== undefined ? props[type] : context[type];
            const propIsVariant = (0, _isVariantLabelMjs.isVariantLabel)(prop);
            /**
             * If this type has *just* changed isActive status, set activeDelta
             * to that status. Otherwise set to null.
             */ const activeDelta = type === changedActiveType ? typeState.isActive : null;
            if (activeDelta === false) removedVariantIndex = i;
            /**
             * If this prop is an inherited variant, rather than been set directly on the
             * component itself, we want to make sure we allow the parent to trigger animations.
             *
             * TODO: Can probably change this to a !isControllingVariants check
             */ let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;
            if (isInherited && isInitialRender && visualElement.manuallyAnimateOnMount) isInherited = false;
            /**
             * Set all encountered keys so far as the protected keys for this type. This will
             * be any key that has been animated or otherwise handled by active, higher-priortiy types.
             */ typeState.protectedKeys = {
                ...encounteredKeys
            };
            // Check if we can skip analysing this prop early
            if (// If it isn't active and hasn't *just* been set as inactive
            !typeState.isActive && activeDelta === null || // If we didn't and don't have any defined prop for this animation type
            !prop && !typeState.prevProp || // Or if the prop doesn't define an animation
            (0, _isAnimationControlsMjs.isAnimationControls)(prop) || typeof prop === "boolean") continue;
            /**
             * As we go look through the values defined on this type, if we detect
             * a changed value or a value that was removed in a higher priority, we set
             * this to true and add this prop to the animation list.
             */ const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);
            let shouldAnimateType = variantDidChange || // If we're making this variant active, we want to always make it active
            type === changedActiveType && typeState.isActive && !isInherited && propIsVariant || // If we removed a higher-priority variant (i is in reverse order)
            i > removedVariantIndex && propIsVariant;
            let handledRemovedValues = false;
            /**
             * As animations can be set as variant lists, variants or target objects, we
             * coerce everything to an array if it isn't one already
             */ const definitionList = Array.isArray(prop) ? prop : [
                prop
            ];
            /**
             * Build an object of all the resolved values. We'll use this in the subsequent
             * animateChanges calls to determine whether a value has changed.
             */ let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});
            if (activeDelta === false) resolvedValues = {};
            /**
             * Now we need to loop through all the keys in the prev prop and this prop,
             * and decide:
             * 1. If the value has changed, and needs animating
             * 2. If it has been removed, and needs adding to the removedKeys set
             * 3. If it has been removed in a higher priority type and needs animating
             * 4. If it hasn't been removed in a higher priority but hasn't changed, and
             *    needs adding to the type's protectedKeys list.
             */ const { prevResolvedValues = {} } = typeState;
            const allKeys = {
                ...prevResolvedValues,
                ...resolvedValues
            };
            const markToAnimate = (key)=>{
                shouldAnimateType = true;
                if (removedKeys.has(key)) {
                    handledRemovedValues = true;
                    removedKeys.delete(key);
                }
                typeState.needsAnimating[key] = true;
                const motionValue = visualElement.getValue(key);
                if (motionValue) motionValue.liveStyle = false;
            };
            for(const key in allKeys){
                const next = resolvedValues[key];
                const prev = prevResolvedValues[key];
                // If we've already handled this we can just skip ahead
                if (encounteredKeys.hasOwnProperty(key)) continue;
                /**
                 * If the value has changed, we probably want to animate it.
                 */ let valueHasChanged = false;
                if ((0, _isKeyframesTargetMjs.isKeyframesTarget)(next) && (0, _isKeyframesTargetMjs.isKeyframesTarget)(prev)) valueHasChanged = !(0, _shallowCompareMjs.shallowCompare)(next, prev);
                else valueHasChanged = next !== prev;
                if (valueHasChanged) {
                    if (next !== undefined && next !== null) // If next is defined and doesn't equal prev, it needs animating
                    markToAnimate(key);
                    else // If it's undefined, it's been removed.
                    removedKeys.add(key);
                } else if (next !== undefined && removedKeys.has(key)) /**
                     * If next hasn't changed and it isn't undefined, we want to check if it's
                     * been removed by a higher priority
                     */ markToAnimate(key);
                else /**
                     * If it hasn't changed, we add it to the list of protected values
                     * to ensure it doesn't get animated.
                     */ typeState.protectedKeys[key] = true;
            }
            /**
             * Update the typeState so next time animateChanges is called we can compare the
             * latest prop and resolvedValues to these.
             */ typeState.prevProp = prop;
            typeState.prevResolvedValues = resolvedValues;
            if (typeState.isActive) encounteredKeys = {
                ...encounteredKeys,
                ...resolvedValues
            };
            if (isInitialRender && visualElement.blockInitialAnimation) shouldAnimateType = false;
            /**
             * If this is an inherited prop we want to skip this animation
             * unless the inherited variants haven't changed on this render.
             */ const willAnimateViaParent = isInherited && variantDidChange;
            const needsAnimating = !willAnimateViaParent || handledRemovedValues;
            if (shouldAnimateType && needsAnimating) animations.push(...definitionList.map((animation)=>{
                const options = {
                    type
                };
                /**
                     * If we're performing the initial animation, but we're not
                     * rendering at the same time as the variant-controlling parent,
                     * we want to use the parent's transition to calculate the stagger.
                     */ if (typeof animation === "string" && isInitialRender && !willAnimateViaParent && visualElement.manuallyAnimateOnMount && visualElement.parent) {
                    const { parent } = visualElement;
                    const parentVariant = (0, _resolveDynamicVariantsMjs.resolveVariant)(parent, animation);
                    if (parent.enteringChildren && parentVariant) {
                        const { delayChildren } = parentVariant.transition || {};
                        options.delay = (0, _calcChildStaggerMjs.calcChildStagger)(parent.enteringChildren, visualElement, delayChildren);
                    }
                }
                return {
                    animation: animation,
                    options
                };
            }));
        }
        /**
         * If there are some removed value that haven't been dealt with,
         * we need to create a new animation that falls back either to the value
         * defined in the style prop, or the last read value.
         */ if (removedKeys.size) {
            const fallbackAnimation = {};
            /**
             * If the initial prop contains a transition we can use that, otherwise
             * allow the animation function to use the visual element's default.
             */ if (typeof props.initial !== "boolean") {
                const initialTransition = (0, _resolveDynamicVariantsMjs.resolveVariant)(visualElement, Array.isArray(props.initial) ? props.initial[0] : props.initial);
                if (initialTransition && initialTransition.transition) fallbackAnimation.transition = initialTransition.transition;
            }
            removedKeys.forEach((key)=>{
                const fallbackTarget = visualElement.getBaseTarget(key);
                const motionValue = visualElement.getValue(key);
                if (motionValue) motionValue.liveStyle = true;
                // @ts-expect-error - @mattgperry to figure if we should do something here
                fallbackAnimation[key] = fallbackTarget ?? null;
            });
            animations.push({
                animation: fallbackAnimation
            });
        }
        let shouldAnimate = Boolean(animations.length);
        if (isInitialRender && (props.initial === false || props.initial === props.animate) && !visualElement.manuallyAnimateOnMount) shouldAnimate = false;
        isInitialRender = false;
        return shouldAnimate ? animate(animations) : Promise.resolve();
    }
    /**
     * Change whether a certain animation type is active.
     */ function setActive(type, isActive) {
        // If the active state hasn't changed, we can safely do nothing here
        if (state[type].isActive === isActive) return Promise.resolve();
        // Propagate active change to children
        visualElement.variantChildren?.forEach((child)=>child.animationState?.setActive(type, isActive));
        state[type].isActive = isActive;
        const animations = animateChanges(type);
        for(const key in state)state[key].protectedKeys = {};
        return animations;
    }
    return {
        animateChanges,
        setActive,
        setAnimateFunction,
        getState: ()=>state,
        reset: ()=>{
            state = createState();
            isInitialRender = true;
        }
    };
}
function checkVariantsDidChange(prev, next) {
    if (typeof next === "string") return next !== prev;
    else if (Array.isArray(next)) return !(0, _shallowCompareMjs.shallowCompare)(next, prev);
    return false;
}
function createTypeState(isActive = false) {
    return {
        isActive,
        protectedKeys: {},
        needsAnimating: {},
        prevResolvedValues: {}
    };
}
function createState() {
    return {
        animate: createTypeState(true),
        whileInView: createTypeState(),
        whileHover: createTypeState(),
        whileTap: createTypeState(),
        whileDrag: createTypeState(),
        whileFocus: createTypeState(),
        exit: createTypeState()
    };
}

},{"../../animation/interfaces/visual-element.mjs":"l8xd4","../../animation/utils/calc-child-stagger.mjs":"dKDGW","../../animation/utils/is-animation-controls.mjs":"5Gu2H","../../animation/utils/is-keyframes-target.mjs":"8KemO","../../utils/shallow-compare.mjs":"2iowY","./get-variant-context.mjs":"3TfhH","./is-variant-label.mjs":"6NjJT","./resolve-dynamic-variants.mjs":"8pzcO","./variant-props.mjs":"irqp5","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"l8xd4":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "animateVisualElement", ()=>animateVisualElement);
var _resolveDynamicVariantsMjs = require("../../render/utils/resolve-dynamic-variants.mjs");
var _visualElementTargetMjs = require("./visual-element-target.mjs");
var _visualElementVariantMjs = require("./visual-element-variant.mjs");
function animateVisualElement(visualElement, definition, options = {}) {
    visualElement.notify("AnimationStart", definition);
    let animation;
    if (Array.isArray(definition)) {
        const animations = definition.map((variant)=>(0, _visualElementVariantMjs.animateVariant)(visualElement, variant, options));
        animation = Promise.all(animations);
    } else if (typeof definition === "string") animation = (0, _visualElementVariantMjs.animateVariant)(visualElement, definition, options);
    else {
        const resolvedDefinition = typeof definition === "function" ? (0, _resolveDynamicVariantsMjs.resolveVariant)(visualElement, definition, options.custom) : definition;
        animation = Promise.all((0, _visualElementTargetMjs.animateTarget)(visualElement, resolvedDefinition, options));
    }
    return animation.then(()=>{
        visualElement.notify("AnimationComplete", definition);
    });
}

},{"../../render/utils/resolve-dynamic-variants.mjs":"8pzcO","./visual-element-target.mjs":"hgIh3","./visual-element-variant.mjs":"9KVIR","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8pzcO":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "resolveVariant", ()=>resolveVariant);
var _resolveVariantsMjs = require("./resolve-variants.mjs");
function resolveVariant(visualElement, definition, custom) {
    const props = visualElement.getProps();
    return (0, _resolveVariantsMjs.resolveVariantFromProps)(props, definition, custom !== undefined ? custom : props.custom, visualElement);
}

},{"./resolve-variants.mjs":"3ji5H","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hgIh3":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "animateTarget", ()=>animateTarget);
var _motionDom = require("motion-dom");
var _settersMjs = require("../../render/utils/setters.mjs");
var _addWillChangeMjs = require("../../value/use-will-change/add-will-change.mjs");
var _getAppearIdMjs = require("../optimized-appear/get-appear-id.mjs");
var _motionValueMjs = require("./motion-value.mjs");
/**
 * Decide whether we should block this animation. Previously, we achieved this
 * just by checking whether the key was listed in protectedKeys, but this
 * posed problems if an animation was triggered by afterChildren and protectedKeys
 * had been set to true in the meantime.
 */ function shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {
    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;
    needsAnimating[key] = false;
    return shouldBlock;
}
function animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {
    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;
    if (transitionOverride) transition = transitionOverride;
    const animations = [];
    const animationTypeState = type && visualElement.animationState && visualElement.animationState.getState()[type];
    for(const key in target){
        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);
        const valueTarget = target[key];
        if (valueTarget === undefined || animationTypeState && shouldBlockAnimation(animationTypeState, key)) continue;
        const valueTransition = {
            delay,
            ...(0, _motionDom.getValueTransition)(transition || {}, key)
        };
        /**
         * If the value is already at the defined target, skip the animation.
         */ const currentValue = value.get();
        if (currentValue !== undefined && !value.isAnimating && !Array.isArray(valueTarget) && valueTarget === currentValue && !valueTransition.velocity) continue;
        /**
         * If this is the first time a value is being animated, check
         * to see if we're handling off from an existing animation.
         */ let isHandoff = false;
        if (window.MotionHandoffAnimation) {
            const appearId = (0, _getAppearIdMjs.getOptimisedAppearId)(visualElement);
            if (appearId) {
                const startTime = window.MotionHandoffAnimation(appearId, key, (0, _motionDom.frame));
                if (startTime !== null) {
                    valueTransition.startTime = startTime;
                    isHandoff = true;
                }
            }
        }
        (0, _addWillChangeMjs.addValueToWillChange)(visualElement, key);
        value.start((0, _motionValueMjs.animateMotionValue)(key, value, valueTarget, visualElement.shouldReduceMotion && (0, _motionDom.positionalKeys).has(key) ? {
            type: false
        } : valueTransition, visualElement, isHandoff));
        const animation = value.animation;
        if (animation) animations.push(animation);
    }
    if (transitionEnd) Promise.all(animations).then(()=>{
        (0, _motionDom.frame).update(()=>{
            transitionEnd && (0, _settersMjs.setTarget)(visualElement, transitionEnd);
        });
    });
    return animations;
}

},{"motion-dom":"lRV3L","../../render/utils/setters.mjs":"k2Pav","../../value/use-will-change/add-will-change.mjs":"dJ7Vn","../optimized-appear/get-appear-id.mjs":"4jsue","./motion-value.mjs":"jt6r0","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"k2Pav":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "setTarget", ()=>setTarget);
var _motionDom = require("motion-dom");
var _isKeyframesTargetMjs = require("../../animation/utils/is-keyframes-target.mjs");
var _resolveDynamicVariantsMjs = require("./resolve-dynamic-variants.mjs");
/**
 * Set VisualElement's MotionValue, creating a new MotionValue for it if
 * it doesn't exist.
 */ function setMotionValue(visualElement, key, value) {
    if (visualElement.hasValue(key)) visualElement.getValue(key).set(value);
    else visualElement.addValue(key, (0, _motionDom.motionValue)(value));
}
function resolveFinalValueInKeyframes(v) {
    // TODO maybe throw if v.length - 1 is placeholder token?
    return (0, _isKeyframesTargetMjs.isKeyframesTarget)(v) ? v[v.length - 1] || 0 : v;
}
function setTarget(visualElement, definition) {
    const resolved = (0, _resolveDynamicVariantsMjs.resolveVariant)(visualElement, definition);
    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};
    target = {
        ...target,
        ...transitionEnd
    };
    for(const key in target){
        const value = resolveFinalValueInKeyframes(target[key]);
        setMotionValue(visualElement, key, value);
    }
}

},{"motion-dom":"lRV3L","../../animation/utils/is-keyframes-target.mjs":"8KemO","./resolve-dynamic-variants.mjs":"8pzcO","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8KemO":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isKeyframesTarget", ()=>isKeyframesTarget);
const isKeyframesTarget = (v)=>{
    return Array.isArray(v);
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dJ7Vn":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "addValueToWillChange", ()=>addValueToWillChange);
var _motionUtils = require("motion-utils");
var _isMjs = require("./is.mjs");
function addValueToWillChange(visualElement, key) {
    const willChange = visualElement.getValue("willChange");
    /**
     * It could be that a user has set willChange to a regular MotionValue,
     * in which case we can't add the value to it.
     */ if ((0, _isMjs.isWillChangeMotionValue)(willChange)) return willChange.add(key);
    else if (!willChange && (0, _motionUtils.MotionGlobalConfig).WillChange) {
        const newWillChange = new (0, _motionUtils.MotionGlobalConfig).WillChange("auto");
        visualElement.addValue("willChange", newWillChange);
        newWillChange.add(key);
    }
}

},{"motion-utils":"33eo7","./is.mjs":"aAKzE","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aAKzE":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isWillChangeMotionValue", ()=>isWillChangeMotionValue);
var _motionDom = require("motion-dom");
function isWillChangeMotionValue(value) {
    return Boolean((0, _motionDom.isMotionValue)(value) && value.add);
}

},{"motion-dom":"lRV3L","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4jsue":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getOptimisedAppearId", ()=>getOptimisedAppearId);
var _dataIdMjs = require("./data-id.mjs");
function getOptimisedAppearId(visualElement) {
    return visualElement.props[0, _dataIdMjs.optimizedAppearDataAttribute];
}

},{"./data-id.mjs":"2JODw","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jt6r0":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "animateMotionValue", ()=>animateMotionValue);
var _motionDom = require("motion-dom");
var _motionUtils = require("motion-utils");
var _getFinalKeyframeMjs = require("../animators/waapi/utils/get-final-keyframe.mjs");
var _defaultTransitionsMjs = require("../utils/default-transitions.mjs");
var _isTransitionDefinedMjs = require("../utils/is-transition-defined.mjs");
const animateMotionValue = (name, value, target, transition = {}, element, isHandoff)=>(onComplete)=>{
        const valueTransition = (0, _motionDom.getValueTransition)(transition, name) || {};
        /**
     * Most transition values are currently completely overwritten by value-specific
     * transitions. In the future it'd be nicer to blend these transitions. But for now
     * delay actually does inherit from the root transition if not value-specific.
     */ const delay = valueTransition.delay || transition.delay || 0;
        /**
     * Elapsed isn't a public transition option but can be passed through from
     * optimized appear effects in milliseconds.
     */ let { elapsed = 0 } = transition;
        elapsed = elapsed - (0, _motionUtils.secondsToMilliseconds)(delay);
        const options = {
            keyframes: Array.isArray(target) ? target : [
                null,
                target
            ],
            ease: "easeOut",
            velocity: value.getVelocity(),
            ...valueTransition,
            delay: -elapsed,
            onUpdate: (v)=>{
                value.set(v);
                valueTransition.onUpdate && valueTransition.onUpdate(v);
            },
            onComplete: ()=>{
                onComplete();
                valueTransition.onComplete && valueTransition.onComplete();
            },
            name,
            motionValue: value,
            element: isHandoff ? undefined : element
        };
        /**
     * If there's no transition defined for this value, we can generate
     * unique transition settings for this value.
     */ if (!(0, _isTransitionDefinedMjs.isTransitionDefined)(valueTransition)) Object.assign(options, (0, _defaultTransitionsMjs.getDefaultTransition)(name, options));
        /**
     * Both WAAPI and our internal animation functions use durations
     * as defined by milliseconds, while our external API defines them
     * as seconds.
     */ options.duration && (options.duration = (0, _motionUtils.secondsToMilliseconds)(options.duration));
        options.repeatDelay && (options.repeatDelay = (0, _motionUtils.secondsToMilliseconds)(options.repeatDelay));
        /**
     * Support deprecated way to set initial value. Prefer keyframe syntax.
     */ if (options.from !== undefined) options.keyframes[0] = options.from;
        let shouldSkip = false;
        if (options.type === false || options.duration === 0 && !options.repeatDelay) {
            (0, _motionDom.makeAnimationInstant)(options);
            if (options.delay === 0) shouldSkip = true;
        }
        if ((0, _motionUtils.MotionGlobalConfig).instantAnimations || (0, _motionUtils.MotionGlobalConfig).skipAnimations) {
            shouldSkip = true;
            (0, _motionDom.makeAnimationInstant)(options);
            options.delay = 0;
        }
        /**
     * If the transition type or easing has been explicitly set by the user
     * then we don't want to allow flattening the animation.
     */ options.allowFlatten = !valueTransition.type && !valueTransition.ease;
        /**
     * If we can or must skip creating the animation, and apply only
     * the final keyframe, do so. We also check once keyframes are resolved but
     * this early check prevents the need to create an animation at all.
     */ if (shouldSkip && !isHandoff && value.get() !== undefined) {
            const finalKeyframe = (0, _getFinalKeyframeMjs.getFinalKeyframe)(options.keyframes, valueTransition);
            if (finalKeyframe !== undefined) {
                (0, _motionDom.frame).update(()=>{
                    options.onUpdate(finalKeyframe);
                    options.onComplete();
                });
                return;
            }
        }
        return valueTransition.isSync ? new (0, _motionDom.JSAnimation)(options) : new (0, _motionDom.AsyncMotionValueAnimation)(options);
    };

},{"motion-dom":"lRV3L","motion-utils":"33eo7","../animators/waapi/utils/get-final-keyframe.mjs":"6Fqnb","../utils/default-transitions.mjs":"ijznw","../utils/is-transition-defined.mjs":"ji4kL","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6Fqnb":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getFinalKeyframe", ()=>getFinalKeyframe);
const isNotNull = (value)=>value !== null;
function getFinalKeyframe(keyframes, { repeat, repeatType = "loop" }, finalKeyframe) {
    const resolvedKeyframes = keyframes.filter(isNotNull);
    const index = repeat && repeatType !== "loop" && repeat % 2 === 1 ? 0 : resolvedKeyframes.length - 1;
    return !index || finalKeyframe === undefined ? resolvedKeyframes[index] : finalKeyframe;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ijznw":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getDefaultTransition", ()=>getDefaultTransition);
var _motionDom = require("motion-dom");
const underDampedSpring = {
    type: "spring",
    stiffness: 500,
    damping: 25,
    restSpeed: 10
};
const criticallyDampedSpring = (target)=>({
        type: "spring",
        stiffness: 550,
        damping: target === 0 ? 2 * Math.sqrt(550) : 30,
        restSpeed: 10
    });
const keyframesTransition = {
    type: "keyframes",
    duration: 0.8
};
/**
 * Default easing curve is a slightly shallower version of
 * the default browser easing curve.
 */ const ease = {
    type: "keyframes",
    ease: [
        0.25,
        0.1,
        0.35,
        1
    ],
    duration: 0.3
};
const getDefaultTransition = (valueKey, { keyframes })=>{
    if (keyframes.length > 2) return keyframesTransition;
    else if ((0, _motionDom.transformProps).has(valueKey)) return valueKey.startsWith("scale") ? criticallyDampedSpring(keyframes[1]) : underDampedSpring;
    return ease;
};

},{"motion-dom":"lRV3L","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ji4kL":[function(require,module,exports,__globalThis) {
/**
 * Decide whether a transition is defined on a given Transition.
 * This filters out orchestration options and returns true
 * if any options are left.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isTransitionDefined", ()=>isTransitionDefined);
function isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {
    return !!Object.keys(transition).length;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9KVIR":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "animateVariant", ()=>animateVariant);
var _resolveDynamicVariantsMjs = require("../../render/utils/resolve-dynamic-variants.mjs");
var _calcChildStaggerMjs = require("../utils/calc-child-stagger.mjs");
var _visualElementTargetMjs = require("./visual-element-target.mjs");
function animateVariant(visualElement, variant, options = {}) {
    const resolved = (0, _resolveDynamicVariantsMjs.resolveVariant)(visualElement, variant, options.type === "exit" ? visualElement.presenceContext?.custom : undefined);
    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};
    if (options.transitionOverride) transition = options.transitionOverride;
    /**
     * If we have a variant, create a callback that runs it as an animation.
     * Otherwise, we resolve a Promise immediately for a composable no-op.
     */ const getAnimation = resolved ? ()=>Promise.all((0, _visualElementTargetMjs.animateTarget)(visualElement, resolved, options)) : ()=>Promise.resolve();
    /**
     * If we have children, create a callback that runs all their animations.
     * Otherwise, we resolve a Promise immediately for a composable no-op.
     */ const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size ? (forwardDelay = 0)=>{
        const { delayChildren = 0, staggerChildren, staggerDirection } = transition;
        return animateChildren(visualElement, variant, forwardDelay, delayChildren, staggerChildren, staggerDirection, options);
    } : ()=>Promise.resolve();
    /**
     * If the transition explicitly defines a "when" option, we need to resolve either
     * this animation or all children animations before playing the other.
     */ const { when } = transition;
    if (when) {
        const [first, last] = when === "beforeChildren" ? [
            getAnimation,
            getChildAnimations
        ] : [
            getChildAnimations,
            getAnimation
        ];
        return first().then(()=>last());
    } else return Promise.all([
        getAnimation(),
        getChildAnimations(options.delay)
    ]);
}
function animateChildren(visualElement, variant, delay = 0, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {
    const animations = [];
    for (const child of visualElement.variantChildren){
        child.notify("AnimationStart", variant);
        animations.push(animateVariant(child, variant, {
            ...options,
            delay: delay + (typeof delayChildren === "function" ? 0 : delayChildren) + (0, _calcChildStaggerMjs.calcChildStagger)(visualElement.variantChildren, child, delayChildren, staggerChildren, staggerDirection)
        }).then(()=>child.notify("AnimationComplete", variant)));
    }
    return Promise.all(animations);
}

},{"../../render/utils/resolve-dynamic-variants.mjs":"8pzcO","../utils/calc-child-stagger.mjs":"dKDGW","./visual-element-target.mjs":"hgIh3","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dKDGW":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "calcChildStagger", ()=>calcChildStagger);
function calcChildStagger(children, child, delayChildren, staggerChildren = 0, staggerDirection = 1) {
    const index = Array.from(children).sort((a, b)=>a.sortNodePosition(b)).indexOf(child);
    const numChildren = children.size;
    const maxStaggerDuration = (numChildren - 1) * staggerChildren;
    const delayIsFunction = typeof delayChildren === "function";
    return delayIsFunction ? delayChildren(index, numChildren) : staggerDirection === 1 ? index * staggerChildren : maxStaggerDuration - index * staggerChildren;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2iowY":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "shallowCompare", ()=>shallowCompare);
function shallowCompare(next, prev) {
    if (!Array.isArray(prev)) return false;
    const prevLength = prev.length;
    if (prevLength !== next.length) return false;
    for(let i = 0; i < prevLength; i++){
        if (prev[i] !== next[i]) return false;
    }
    return true;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3TfhH":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getVariantContext", ()=>getVariantContext);
var _isVariantLabelMjs = require("./is-variant-label.mjs");
var _variantPropsMjs = require("./variant-props.mjs");
const numVariantProps = (0, _variantPropsMjs.variantProps).length;
function getVariantContext(visualElement) {
    if (!visualElement) return undefined;
    if (!visualElement.isControllingVariants) {
        const context = visualElement.parent ? getVariantContext(visualElement.parent) || {} : {};
        if (visualElement.props.initial !== undefined) context.initial = visualElement.props.initial;
        return context;
    }
    const context = {};
    for(let i = 0; i < numVariantProps; i++){
        const name = (0, _variantPropsMjs.variantProps)[i];
        const prop = visualElement.props[name];
        if ((0, _isVariantLabelMjs.isVariantLabel)(prop) || prop === false) context[name] = prop;
    }
    return context;
}

},{"./is-variant-label.mjs":"6NjJT","./variant-props.mjs":"irqp5","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9D9gy":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Feature", ()=>Feature);
class Feature {
    constructor(node){
        this.isMounted = false;
        this.node = node;
    }
    update() {}
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ifl7l":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ExitAnimationFeature", ()=>ExitAnimationFeature);
var _featureMjs = require("../Feature.mjs");
let id = 0;
class ExitAnimationFeature extends (0, _featureMjs.Feature) {
    constructor(){
        super(...arguments);
        this.id = id++;
    }
    update() {
        if (!this.node.presenceContext) return;
        const { isPresent, onExitComplete } = this.node.presenceContext;
        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};
        if (!this.node.animationState || isPresent === prevIsPresent) return;
        const exitAnimation = this.node.animationState.setActive("exit", !isPresent);
        if (onExitComplete && !isPresent) exitAnimation.then(()=>{
            onExitComplete(this.id);
        });
    }
    mount() {
        const { register, onExitComplete } = this.node.presenceContext || {};
        if (onExitComplete) onExitComplete(this.id);
        if (register) this.unmount = register(this.id);
    }
    unmount() {}
}

},{"../Feature.mjs":"9D9gy","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bZoO2":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "drag", ()=>drag);
var _indexMjs = require("../../gestures/drag/index.mjs");
var _indexMjs1 = require("../../gestures/pan/index.mjs");
var _measureLayoutMjs = require("./layout/MeasureLayout.mjs");
var _htmlprojectionNodeMjs = require("../../projection/node/HTMLProjectionNode.mjs");
const drag = {
    pan: {
        Feature: (0, _indexMjs1.PanGesture)
    },
    drag: {
        Feature: (0, _indexMjs.DragGesture),
        ProjectionNode: (0, _htmlprojectionNodeMjs.HTMLProjectionNode),
        MeasureLayout: (0, _measureLayoutMjs.MeasureLayout)
    }
};

},{"../../gestures/drag/index.mjs":"8UTos","../../gestures/pan/index.mjs":"1fzeW","./layout/MeasureLayout.mjs":"4XTZv","../../projection/node/HTMLProjectionNode.mjs":"lPTdQ","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8UTos":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "DragGesture", ()=>DragGesture);
var _featureMjs = require("../../motion/features/Feature.mjs");
var _motionUtils = require("motion-utils");
var _visualElementDragControlsMjs = require("./VisualElementDragControls.mjs");
class DragGesture extends (0, _featureMjs.Feature) {
    constructor(node){
        super(node);
        this.removeGroupControls = (0, _motionUtils.noop);
        this.removeListeners = (0, _motionUtils.noop);
        this.controls = new (0, _visualElementDragControlsMjs.VisualElementDragControls)(node);
    }
    mount() {
        // If we've been provided a DragControls for manual control over the drag gesture,
        // subscribe this component to it on mount.
        const { dragControls } = this.node.getProps();
        if (dragControls) this.removeGroupControls = dragControls.subscribe(this.controls);
        this.removeListeners = this.controls.addListeners() || (0, _motionUtils.noop);
    }
    unmount() {
        this.removeGroupControls();
        this.removeListeners();
    }
}

},{"../../motion/features/Feature.mjs":"9D9gy","motion-utils":"33eo7","./VisualElementDragControls.mjs":"1xVip","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1xVip":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VisualElementDragControls", ()=>VisualElementDragControls);
parcelHelpers.export(exports, "elementDragControls", ()=>elementDragControls);
var _motionDom = require("motion-dom");
var _motionUtils = require("motion-utils");
var _motionValueMjs = require("../../animation/interfaces/motion-value.mjs");
var _addDomEventMjs = require("../../events/add-dom-event.mjs");
var _addPointerEventMjs = require("../../events/add-pointer-event.mjs");
var _eventInfoMjs = require("../../events/event-info.mjs");
var _conversionMjs = require("../../projection/geometry/conversion.mjs");
var _deltaCalcMjs = require("../../projection/geometry/delta-calc.mjs");
var _modelsMjs = require("../../projection/geometry/models.mjs");
var _eachAxisMjs = require("../../projection/utils/each-axis.mjs");
var _measureMjs = require("../../projection/utils/measure.mjs");
var _getContextWindowMjs = require("../../utils/get-context-window.mjs");
var _isRefObjectMjs = require("../../utils/is-ref-object.mjs");
var _addWillChangeMjs = require("../../value/use-will-change/add-will-change.mjs");
var _panSessionMjs = require("../pan/PanSession.mjs");
var _constraintsMjs = require("./utils/constraints.mjs");
const elementDragControls = new WeakMap();
class VisualElementDragControls {
    constructor(visualElement){
        this.openDragLock = null;
        this.isDragging = false;
        this.currentDirection = null;
        this.originPoint = {
            x: 0,
            y: 0
        };
        /**
         * The permitted boundaries of travel, in pixels.
         */ this.constraints = false;
        this.hasMutatedConstraints = false;
        /**
         * The per-axis resolved elastic values.
         */ this.elastic = (0, _modelsMjs.createBox)();
        /**
         * The latest pointer event. Used as fallback when the `cancel` and `stop` functions are called without arguments.
         */ this.latestPointerEvent = null;
        /**
         * The latest pan info. Used as fallback when the `cancel` and `stop` functions are called without arguments.
         */ this.latestPanInfo = null;
        this.visualElement = visualElement;
    }
    start(originEvent, { snapToCursor = false, distanceThreshold } = {}) {
        /**
         * Don't start dragging if this component is exiting
         */ const { presenceContext } = this.visualElement;
        if (presenceContext && presenceContext.isPresent === false) return;
        const onSessionStart = (event)=>{
            const { dragSnapToOrigin } = this.getProps();
            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch
            // the component.
            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();
            if (snapToCursor) this.snapToCursor((0, _eventInfoMjs.extractEventInfo)(event).point);
        };
        const onStart = (event, info)=>{
            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession
            const { drag, dragPropagation, onDragStart } = this.getProps();
            if (drag && !dragPropagation) {
                if (this.openDragLock) this.openDragLock();
                this.openDragLock = (0, _motionDom.setDragLock)(drag);
                // If we don 't have the lock, don't start dragging
                if (!this.openDragLock) return;
            }
            this.latestPointerEvent = event;
            this.latestPanInfo = info;
            this.isDragging = true;
            this.currentDirection = null;
            this.resolveConstraints();
            if (this.visualElement.projection) {
                this.visualElement.projection.isAnimationBlocked = true;
                this.visualElement.projection.target = undefined;
            }
            /**
             * Record gesture origin
             */ (0, _eachAxisMjs.eachAxis)((axis)=>{
                let current = this.getAxisMotionValue(axis).get() || 0;
                /**
                 * If the MotionValue is a percentage value convert to px
                 */ if ((0, _motionDom.percent).test(current)) {
                    const { projection } = this.visualElement;
                    if (projection && projection.layout) {
                        const measuredAxis = projection.layout.layoutBox[axis];
                        if (measuredAxis) {
                            const length = (0, _deltaCalcMjs.calcLength)(measuredAxis);
                            current = length * (parseFloat(current) / 100);
                        }
                    }
                }
                this.originPoint[axis] = current;
            });
            // Fire onDragStart event
            if (onDragStart) (0, _motionDom.frame).postRender(()=>onDragStart(event, info));
            (0, _addWillChangeMjs.addValueToWillChange)(this.visualElement, "transform");
            const { animationState } = this.visualElement;
            animationState && animationState.setActive("whileDrag", true);
        };
        const onMove = (event, info)=>{
            this.latestPointerEvent = event;
            this.latestPanInfo = info;
            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag } = this.getProps();
            // If we didn't successfully receive the gesture lock, early return.
            if (!dragPropagation && !this.openDragLock) return;
            const { offset } = info;
            // Attempt to detect drag direction if directionLock is true
            if (dragDirectionLock && this.currentDirection === null) {
                this.currentDirection = getCurrentDirection(offset);
                // If we've successfully set a direction, notify listener
                if (this.currentDirection !== null) onDirectionLock && onDirectionLock(this.currentDirection);
                return;
            }
            // Update each point with the latest position
            this.updateAxis("x", info.point, offset);
            this.updateAxis("y", info.point, offset);
            /**
             * Ideally we would leave the renderer to fire naturally at the end of
             * this frame but if the element is about to change layout as the result
             * of a re-render we want to ensure the browser can read the latest
             * bounding box to ensure the pointer and element don't fall out of sync.
             */ this.visualElement.render();
            /**
             * This must fire after the render call as it might trigger a state
             * change which itself might trigger a layout update.
             */ onDrag && onDrag(event, info);
        };
        const onSessionEnd = (event, info)=>{
            this.latestPointerEvent = event;
            this.latestPanInfo = info;
            this.stop(event, info);
            this.latestPointerEvent = null;
            this.latestPanInfo = null;
        };
        const resumeAnimation = ()=>(0, _eachAxisMjs.eachAxis)((axis)=>this.getAnimationState(axis) === "paused" && this.getAxisMotionValue(axis).animation?.play());
        const { dragSnapToOrigin } = this.getProps();
        this.panSession = new (0, _panSessionMjs.PanSession)(originEvent, {
            onSessionStart,
            onStart,
            onMove,
            onSessionEnd,
            resumeAnimation
        }, {
            transformPagePoint: this.visualElement.getTransformPagePoint(),
            dragSnapToOrigin,
            distanceThreshold,
            contextWindow: (0, _getContextWindowMjs.getContextWindow)(this.visualElement)
        });
    }
    /**
     * @internal
     */ stop(event, panInfo) {
        const finalEvent = event || this.latestPointerEvent;
        const finalPanInfo = panInfo || this.latestPanInfo;
        const isDragging = this.isDragging;
        this.cancel();
        if (!isDragging || !finalPanInfo || !finalEvent) return;
        const { velocity } = finalPanInfo;
        this.startAnimation(velocity);
        const { onDragEnd } = this.getProps();
        if (onDragEnd) (0, _motionDom.frame).postRender(()=>onDragEnd(finalEvent, finalPanInfo));
    }
    /**
     * @internal
     */ cancel() {
        this.isDragging = false;
        const { projection, animationState } = this.visualElement;
        if (projection) projection.isAnimationBlocked = false;
        this.panSession && this.panSession.end();
        this.panSession = undefined;
        const { dragPropagation } = this.getProps();
        if (!dragPropagation && this.openDragLock) {
            this.openDragLock();
            this.openDragLock = null;
        }
        animationState && animationState.setActive("whileDrag", false);
    }
    updateAxis(axis, _point, offset) {
        const { drag } = this.getProps();
        // If we're not dragging this axis, do an early return.
        if (!offset || !shouldDrag(axis, drag, this.currentDirection)) return;
        const axisValue = this.getAxisMotionValue(axis);
        let next = this.originPoint[axis] + offset[axis];
        // Apply constraints
        if (this.constraints && this.constraints[axis]) next = (0, _constraintsMjs.applyConstraints)(next, this.constraints[axis], this.elastic[axis]);
        axisValue.set(next);
    }
    resolveConstraints() {
        const { dragConstraints, dragElastic } = this.getProps();
        const layout = this.visualElement.projection && !this.visualElement.projection.layout ? this.visualElement.projection.measure(false) : this.visualElement.projection?.layout;
        const prevConstraints = this.constraints;
        if (dragConstraints && (0, _isRefObjectMjs.isRefObject)(dragConstraints)) {
            if (!this.constraints) this.constraints = this.resolveRefConstraints();
        } else if (dragConstraints && layout) this.constraints = (0, _constraintsMjs.calcRelativeConstraints)(layout.layoutBox, dragConstraints);
        else this.constraints = false;
        this.elastic = (0, _constraintsMjs.resolveDragElastic)(dragElastic);
        /**
         * If we're outputting to external MotionValues, we want to rebase the measured constraints
         * from viewport-relative to component-relative.
         */ if (prevConstraints !== this.constraints && layout && this.constraints && !this.hasMutatedConstraints) (0, _eachAxisMjs.eachAxis)((axis)=>{
            if (this.constraints !== false && this.getAxisMotionValue(axis)) this.constraints[axis] = (0, _constraintsMjs.rebaseAxisConstraints)(layout.layoutBox[axis], this.constraints[axis]);
        });
    }
    resolveRefConstraints() {
        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();
        if (!constraints || !(0, _isRefObjectMjs.isRefObject)(constraints)) return false;
        const constraintsElement = constraints.current;
        (0, _motionUtils.invariant)(constraintsElement !== null, "If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.", "drag-constraints-ref");
        const { projection } = this.visualElement;
        // TODO
        if (!projection || !projection.layout) return false;
        const constraintsBox = (0, _measureMjs.measurePageBox)(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());
        let measuredConstraints = (0, _constraintsMjs.calcViewportConstraints)(projection.layout.layoutBox, constraintsBox);
        /**
         * If there's an onMeasureDragConstraints listener we call it and
         * if different constraints are returned, set constraints to that
         */ if (onMeasureDragConstraints) {
            const userConstraints = onMeasureDragConstraints((0, _conversionMjs.convertBoxToBoundingBox)(measuredConstraints));
            this.hasMutatedConstraints = !!userConstraints;
            if (userConstraints) measuredConstraints = (0, _conversionMjs.convertBoundingBoxToBox)(userConstraints);
        }
        return measuredConstraints;
    }
    startAnimation(velocity) {
        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd } = this.getProps();
        const constraints = this.constraints || {};
        const momentumAnimations = (0, _eachAxisMjs.eachAxis)((axis)=>{
            if (!shouldDrag(axis, drag, this.currentDirection)) return;
            let transition = constraints && constraints[axis] || {};
            if (dragSnapToOrigin) transition = {
                min: 0,
                max: 0
            };
            /**
             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame
             * of spring animations so we should look into adding a disable spring option to `inertia`.
             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`
             * using the value of `dragElastic`.
             */ const bounceStiffness = dragElastic ? 200 : 1000000;
            const bounceDamping = dragElastic ? 40 : 10000000;
            const inertia = {
                type: "inertia",
                velocity: dragMomentum ? velocity[axis] : 0,
                bounceStiffness,
                bounceDamping,
                timeConstant: 750,
                restDelta: 1,
                restSpeed: 10,
                ...dragTransition,
                ...transition
            };
            // If we're not animating on an externally-provided `MotionValue` we can use the
            // component's animation controls which will handle interactions with whileHover (etc),
            // otherwise we just have to animate the `MotionValue` itself.
            return this.startAxisValueAnimation(axis, inertia);
        });
        // Run all animations and then resolve the new drag constraints.
        return Promise.all(momentumAnimations).then(onDragTransitionEnd);
    }
    startAxisValueAnimation(axis, transition) {
        const axisValue = this.getAxisMotionValue(axis);
        (0, _addWillChangeMjs.addValueToWillChange)(this.visualElement, axis);
        return axisValue.start((0, _motionValueMjs.animateMotionValue)(axis, axisValue, 0, transition, this.visualElement, false));
    }
    stopAnimation() {
        (0, _eachAxisMjs.eachAxis)((axis)=>this.getAxisMotionValue(axis).stop());
    }
    pauseAnimation() {
        (0, _eachAxisMjs.eachAxis)((axis)=>this.getAxisMotionValue(axis).animation?.pause());
    }
    getAnimationState(axis) {
        return this.getAxisMotionValue(axis).animation?.state;
    }
    /**
     * Drag works differently depending on which props are provided.
     *
     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.
     * - Otherwise, we apply the delta to the x/y motion values.
     */ getAxisMotionValue(axis) {
        const dragKey = `_drag${axis.toUpperCase()}`;
        const props = this.visualElement.getProps();
        const externalMotionValue = props[dragKey];
        return externalMotionValue ? externalMotionValue : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);
    }
    snapToCursor(point) {
        (0, _eachAxisMjs.eachAxis)((axis)=>{
            const { drag } = this.getProps();
            // If we're not dragging this axis, do an early return.
            if (!shouldDrag(axis, drag, this.currentDirection)) return;
            const { projection } = this.visualElement;
            const axisValue = this.getAxisMotionValue(axis);
            if (projection && projection.layout) {
                const { min, max } = projection.layout.layoutBox[axis];
                axisValue.set(point[axis] - (0, _motionDom.mixNumber)(min, max, 0.5));
            }
        });
    }
    /**
     * When the viewport resizes we want to check if the measured constraints
     * have changed and, if so, reposition the element within those new constraints
     * relative to where it was before the resize.
     */ scalePositionWithinConstraints() {
        if (!this.visualElement.current) return;
        const { drag, dragConstraints } = this.getProps();
        const { projection } = this.visualElement;
        if (!(0, _isRefObjectMjs.isRefObject)(dragConstraints) || !projection || !this.constraints) return;
        /**
         * Stop current animations as there can be visual glitching if we try to do
         * this mid-animation
         */ this.stopAnimation();
        /**
         * Record the relative position of the dragged element relative to the
         * constraints box and save as a progress value.
         */ const boxProgress = {
            x: 0,
            y: 0
        };
        (0, _eachAxisMjs.eachAxis)((axis)=>{
            const axisValue = this.getAxisMotionValue(axis);
            if (axisValue && this.constraints !== false) {
                const latest = axisValue.get();
                boxProgress[axis] = (0, _constraintsMjs.calcOrigin)({
                    min: latest,
                    max: latest
                }, this.constraints[axis]);
            }
        });
        /**
         * Update the layout of this element and resolve the latest drag constraints
         */ const { transformTemplate } = this.visualElement.getProps();
        this.visualElement.current.style.transform = transformTemplate ? transformTemplate({}, "") : "none";
        projection.root && projection.root.updateScroll();
        projection.updateLayout();
        this.resolveConstraints();
        /**
         * For each axis, calculate the current progress of the layout axis
         * within the new constraints.
         */ (0, _eachAxisMjs.eachAxis)((axis)=>{
            if (!shouldDrag(axis, drag, null)) return;
            /**
             * Calculate a new transform based on the previous box progress
             */ const axisValue = this.getAxisMotionValue(axis);
            const { min, max } = this.constraints[axis];
            axisValue.set((0, _motionDom.mixNumber)(min, max, boxProgress[axis]));
        });
    }
    addListeners() {
        if (!this.visualElement.current) return;
        elementDragControls.set(this.visualElement, this);
        const element = this.visualElement.current;
        /**
         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.
         */ const stopPointerListener = (0, _addPointerEventMjs.addPointerEvent)(element, "pointerdown", (event)=>{
            const { drag, dragListener = true } = this.getProps();
            drag && dragListener && this.start(event);
        });
        const measureDragConstraints = ()=>{
            const { dragConstraints } = this.getProps();
            if ((0, _isRefObjectMjs.isRefObject)(dragConstraints) && dragConstraints.current) this.constraints = this.resolveRefConstraints();
        };
        const { projection } = this.visualElement;
        const stopMeasureLayoutListener = projection.addEventListener("measure", measureDragConstraints);
        if (projection && !projection.layout) {
            projection.root && projection.root.updateScroll();
            projection.updateLayout();
        }
        (0, _motionDom.frame).read(measureDragConstraints);
        /**
         * Attach a window resize listener to scale the draggable target within its defined
         * constraints as the window resizes.
         */ const stopResizeListener = (0, _addDomEventMjs.addDomEvent)(window, "resize", ()=>this.scalePositionWithinConstraints());
        /**
         * If the element's layout changes, calculate the delta and apply that to
         * the drag gesture's origin point.
         */ const stopLayoutUpdateListener = projection.addEventListener("didUpdate", ({ delta, hasLayoutChanged })=>{
            if (this.isDragging && hasLayoutChanged) {
                (0, _eachAxisMjs.eachAxis)((axis)=>{
                    const motionValue = this.getAxisMotionValue(axis);
                    if (!motionValue) return;
                    this.originPoint[axis] += delta[axis].translate;
                    motionValue.set(motionValue.get() + delta[axis].translate);
                });
                this.visualElement.render();
            }
        });
        return ()=>{
            stopResizeListener();
            stopPointerListener();
            stopMeasureLayoutListener();
            stopLayoutUpdateListener && stopLayoutUpdateListener();
        };
    }
    getProps() {
        const props = this.visualElement.getProps();
        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = (0, _constraintsMjs.defaultElastic), dragMomentum = true } = props;
        return {
            ...props,
            drag,
            dragDirectionLock,
            dragPropagation,
            dragConstraints,
            dragElastic,
            dragMomentum
        };
    }
}
function shouldDrag(direction, drag, currentDirection) {
    return (drag === true || drag === direction) && (currentDirection === null || currentDirection === direction);
}
/**
 * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower
 * than the provided threshold, return `null`.
 *
 * @param offset - The x/y offset from origin.
 * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.
 */ function getCurrentDirection(offset, lockThreshold = 10) {
    let direction = null;
    if (Math.abs(offset.y) > lockThreshold) direction = "y";
    else if (Math.abs(offset.x) > lockThreshold) direction = "x";
    return direction;
}

},{"motion-dom":"lRV3L","motion-utils":"33eo7","../../animation/interfaces/motion-value.mjs":"jt6r0","../../events/add-dom-event.mjs":"2Nf2y","../../events/add-pointer-event.mjs":"8PU0p","../../events/event-info.mjs":"44qRT","../../projection/geometry/conversion.mjs":"bMTZO","../../projection/geometry/delta-calc.mjs":"ehySy","../../projection/geometry/models.mjs":"4dIK0","../../projection/utils/each-axis.mjs":"d5V2Q","../../projection/utils/measure.mjs":"l97iJ","../../utils/get-context-window.mjs":"9Zaal","../../utils/is-ref-object.mjs":"b6wCw","../../value/use-will-change/add-will-change.mjs":"dJ7Vn","../pan/PanSession.mjs":"a68ds","./utils/constraints.mjs":"aBNCO","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2Nf2y":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "addDomEvent", ()=>addDomEvent);
function addDomEvent(target, eventName, handler, options = {
    passive: true
}) {
    target.addEventListener(eventName, handler, options);
    return ()=>target.removeEventListener(eventName, handler);
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8PU0p":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "addPointerEvent", ()=>addPointerEvent);
var _addDomEventMjs = require("./add-dom-event.mjs");
var _eventInfoMjs = require("./event-info.mjs");
function addPointerEvent(target, eventName, handler, options) {
    return (0, _addDomEventMjs.addDomEvent)(target, eventName, (0, _eventInfoMjs.addPointerInfo)(handler), options);
}

},{"./add-dom-event.mjs":"2Nf2y","./event-info.mjs":"44qRT","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"44qRT":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "addPointerInfo", ()=>addPointerInfo);
parcelHelpers.export(exports, "extractEventInfo", ()=>extractEventInfo);
var _motionDom = require("motion-dom");
function extractEventInfo(event) {
    return {
        point: {
            x: event.pageX,
            y: event.pageY
        }
    };
}
const addPointerInfo = (handler)=>{
    return (event)=>(0, _motionDom.isPrimaryPointer)(event) && handler(event, extractEventInfo(event));
};

},{"motion-dom":"lRV3L","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ehySy":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "calcAxisDelta", ()=>calcAxisDelta);
parcelHelpers.export(exports, "calcBoxDelta", ()=>calcBoxDelta);
parcelHelpers.export(exports, "calcLength", ()=>calcLength);
parcelHelpers.export(exports, "calcRelativeAxis", ()=>calcRelativeAxis);
parcelHelpers.export(exports, "calcRelativeAxisPosition", ()=>calcRelativeAxisPosition);
parcelHelpers.export(exports, "calcRelativeBox", ()=>calcRelativeBox);
parcelHelpers.export(exports, "calcRelativePosition", ()=>calcRelativePosition);
parcelHelpers.export(exports, "isNear", ()=>isNear);
var _motionDom = require("motion-dom");
const SCALE_PRECISION = 0.0001;
const SCALE_MIN = 1 - SCALE_PRECISION;
const SCALE_MAX = 1 + SCALE_PRECISION;
const TRANSLATE_PRECISION = 0.01;
const TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;
const TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;
function calcLength(axis) {
    return axis.max - axis.min;
}
function isNear(value, target, maxDistance) {
    return Math.abs(value - target) <= maxDistance;
}
function calcAxisDelta(delta, source, target, origin = 0.5) {
    delta.origin = origin;
    delta.originPoint = (0, _motionDom.mixNumber)(source.min, source.max, delta.origin);
    delta.scale = calcLength(target) / calcLength(source);
    delta.translate = (0, _motionDom.mixNumber)(target.min, target.max, delta.origin) - delta.originPoint;
    if (delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX || isNaN(delta.scale)) delta.scale = 1.0;
    if (delta.translate >= TRANSLATE_MIN && delta.translate <= TRANSLATE_MAX || isNaN(delta.translate)) delta.translate = 0.0;
}
function calcBoxDelta(delta, source, target, origin) {
    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);
    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);
}
function calcRelativeAxis(target, relative, parent) {
    target.min = parent.min + relative.min;
    target.max = target.min + calcLength(relative);
}
function calcRelativeBox(target, relative, parent) {
    calcRelativeAxis(target.x, relative.x, parent.x);
    calcRelativeAxis(target.y, relative.y, parent.y);
}
function calcRelativeAxisPosition(target, layout, parent) {
    target.min = layout.min - parent.min;
    target.max = target.min + calcLength(layout);
}
function calcRelativePosition(target, layout, parent) {
    calcRelativeAxisPosition(target.x, layout.x, parent.x);
    calcRelativeAxisPosition(target.y, layout.y, parent.y);
}

},{"motion-dom":"lRV3L","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"d5V2Q":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "eachAxis", ()=>eachAxis);
function eachAxis(callback) {
    return [
        callback("x"),
        callback("y")
    ];
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9Zaal":[function(require,module,exports,__globalThis) {
// Fixes https://github.com/motiondivision/motion/issues/2270
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getContextWindow", ()=>getContextWindow);
const getContextWindow = ({ current })=>{
    return current ? current.ownerDocument.defaultView : null;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"a68ds":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "PanSession", ()=>PanSession);
var _motionDom = require("motion-dom");
var _motionUtils = require("motion-utils");
var _addPointerEventMjs = require("../../events/add-pointer-event.mjs");
var _eventInfoMjs = require("../../events/event-info.mjs");
var _distanceMjs = require("../../utils/distance.mjs");
/**
 * @internal
 */ class PanSession {
    constructor(event, handlers, { transformPagePoint, contextWindow = window, dragSnapToOrigin = false, distanceThreshold = 3 } = {}){
        /**
         * @internal
         */ this.startEvent = null;
        /**
         * @internal
         */ this.lastMoveEvent = null;
        /**
         * @internal
         */ this.lastMoveEventInfo = null;
        /**
         * @internal
         */ this.handlers = {};
        /**
         * @internal
         */ this.contextWindow = window;
        this.updatePoint = ()=>{
            if (!(this.lastMoveEvent && this.lastMoveEventInfo)) return;
            const info = getPanInfo(this.lastMoveEventInfo, this.history);
            const isPanStarted = this.startEvent !== null;
            // Only start panning if the offset is larger than 3 pixels. If we make it
            // any larger than this we'll want to reset the pointer history
            // on the first update to avoid visual snapping to the cursor.
            const isDistancePastThreshold = (0, _distanceMjs.distance2D)(info.offset, {
                x: 0,
                y: 0
            }) >= this.distanceThreshold;
            if (!isPanStarted && !isDistancePastThreshold) return;
            const { point } = info;
            const { timestamp } = (0, _motionDom.frameData);
            this.history.push({
                ...point,
                timestamp
            });
            const { onStart, onMove } = this.handlers;
            if (!isPanStarted) {
                onStart && onStart(this.lastMoveEvent, info);
                this.startEvent = this.lastMoveEvent;
            }
            onMove && onMove(this.lastMoveEvent, info);
        };
        this.handlePointerMove = (event, info)=>{
            this.lastMoveEvent = event;
            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);
            // Throttle mouse move event to once per frame
            (0, _motionDom.frame).update(this.updatePoint, true);
        };
        this.handlePointerUp = (event, info)=>{
            this.end();
            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;
            if (this.dragSnapToOrigin) resumeAnimation && resumeAnimation();
            if (!(this.lastMoveEvent && this.lastMoveEventInfo)) return;
            const panInfo = getPanInfo(event.type === "pointercancel" ? this.lastMoveEventInfo : transformPoint(info, this.transformPagePoint), this.history);
            if (this.startEvent && onEnd) onEnd(event, panInfo);
            onSessionEnd && onSessionEnd(event, panInfo);
        };
        // If we have more than one touch, don't start detecting this gesture
        if (!(0, _motionDom.isPrimaryPointer)(event)) return;
        this.dragSnapToOrigin = dragSnapToOrigin;
        this.handlers = handlers;
        this.transformPagePoint = transformPagePoint;
        this.distanceThreshold = distanceThreshold;
        this.contextWindow = contextWindow || window;
        const info = (0, _eventInfoMjs.extractEventInfo)(event);
        const initialInfo = transformPoint(info, this.transformPagePoint);
        const { point } = initialInfo;
        const { timestamp } = (0, _motionDom.frameData);
        this.history = [
            {
                ...point,
                timestamp
            }
        ];
        const { onSessionStart } = handlers;
        onSessionStart && onSessionStart(event, getPanInfo(initialInfo, this.history));
        this.removeListeners = (0, _motionUtils.pipe)((0, _addPointerEventMjs.addPointerEvent)(this.contextWindow, "pointermove", this.handlePointerMove), (0, _addPointerEventMjs.addPointerEvent)(this.contextWindow, "pointerup", this.handlePointerUp), (0, _addPointerEventMjs.addPointerEvent)(this.contextWindow, "pointercancel", this.handlePointerUp));
    }
    updateHandlers(handlers) {
        this.handlers = handlers;
    }
    end() {
        this.removeListeners && this.removeListeners();
        (0, _motionDom.cancelFrame)(this.updatePoint);
    }
}
function transformPoint(info, transformPagePoint) {
    return transformPagePoint ? {
        point: transformPagePoint(info.point)
    } : info;
}
function subtractPoint(a, b) {
    return {
        x: a.x - b.x,
        y: a.y - b.y
    };
}
function getPanInfo({ point }, history) {
    return {
        point,
        delta: subtractPoint(point, lastDevicePoint(history)),
        offset: subtractPoint(point, startDevicePoint(history)),
        velocity: getVelocity(history, 0.1)
    };
}
function startDevicePoint(history) {
    return history[0];
}
function lastDevicePoint(history) {
    return history[history.length - 1];
}
function getVelocity(history, timeDelta) {
    if (history.length < 2) return {
        x: 0,
        y: 0
    };
    let i = history.length - 1;
    let timestampedPoint = null;
    const lastPoint = lastDevicePoint(history);
    while(i >= 0){
        timestampedPoint = history[i];
        if (lastPoint.timestamp - timestampedPoint.timestamp > (0, _motionUtils.secondsToMilliseconds)(timeDelta)) break;
        i--;
    }
    if (!timestampedPoint) return {
        x: 0,
        y: 0
    };
    const time = (0, _motionUtils.millisecondsToSeconds)(lastPoint.timestamp - timestampedPoint.timestamp);
    if (time === 0) return {
        x: 0,
        y: 0
    };
    const currentVelocity = {
        x: (lastPoint.x - timestampedPoint.x) / time,
        y: (lastPoint.y - timestampedPoint.y) / time
    };
    if (currentVelocity.x === Infinity) currentVelocity.x = 0;
    if (currentVelocity.y === Infinity) currentVelocity.y = 0;
    return currentVelocity;
}

},{"motion-dom":"lRV3L","motion-utils":"33eo7","../../events/add-pointer-event.mjs":"8PU0p","../../events/event-info.mjs":"44qRT","../../utils/distance.mjs":"dIUqh","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dIUqh":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "distance", ()=>distance);
parcelHelpers.export(exports, "distance2D", ()=>distance2D);
const distance = (a, b)=>Math.abs(a - b);
function distance2D(a, b) {
    // Multi-dimensional
    const xDelta = distance(a.x, b.x);
    const yDelta = distance(a.y, b.y);
    return Math.sqrt(xDelta ** 2 + yDelta ** 2);
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aBNCO":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "applyConstraints", ()=>applyConstraints);
parcelHelpers.export(exports, "calcOrigin", ()=>calcOrigin);
parcelHelpers.export(exports, "calcRelativeAxisConstraints", ()=>calcRelativeAxisConstraints);
parcelHelpers.export(exports, "calcRelativeConstraints", ()=>calcRelativeConstraints);
parcelHelpers.export(exports, "calcViewportAxisConstraints", ()=>calcViewportAxisConstraints);
parcelHelpers.export(exports, "calcViewportConstraints", ()=>calcViewportConstraints);
parcelHelpers.export(exports, "defaultElastic", ()=>defaultElastic);
parcelHelpers.export(exports, "rebaseAxisConstraints", ()=>rebaseAxisConstraints);
parcelHelpers.export(exports, "resolveAxisElastic", ()=>resolveAxisElastic);
parcelHelpers.export(exports, "resolveDragElastic", ()=>resolveDragElastic);
parcelHelpers.export(exports, "resolvePointElastic", ()=>resolvePointElastic);
var _motionDom = require("motion-dom");
var _motionUtils = require("motion-utils");
var _deltaCalcMjs = require("../../../projection/geometry/delta-calc.mjs");
/**
 * Apply constraints to a point. These constraints are both physical along an
 * axis, and an elastic factor that determines how much to constrain the point
 * by if it does lie outside the defined parameters.
 */ function applyConstraints(point, { min, max }, elastic) {
    if (min !== undefined && point < min) // If we have a min point defined, and this is outside of that, constrain
    point = elastic ? (0, _motionDom.mixNumber)(min, point, elastic.min) : Math.max(point, min);
    else if (max !== undefined && point > max) // If we have a max point defined, and this is outside of that, constrain
    point = elastic ? (0, _motionDom.mixNumber)(max, point, elastic.max) : Math.min(point, max);
    return point;
}
/**
 * Calculate constraints in terms of the viewport when defined relatively to the
 * measured axis. This is measured from the nearest edge, so a max constraint of 200
 * on an axis with a max value of 300 would return a constraint of 500 - axis length
 */ function calcRelativeAxisConstraints(axis, min, max) {
    return {
        min: min !== undefined ? axis.min + min : undefined,
        max: max !== undefined ? axis.max + max - (axis.max - axis.min) : undefined
    };
}
/**
 * Calculate constraints in terms of the viewport when
 * defined relatively to the measured bounding box.
 */ function calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {
    return {
        x: calcRelativeAxisConstraints(layoutBox.x, left, right),
        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom)
    };
}
/**
 * Calculate viewport constraints when defined as another viewport-relative axis
 */ function calcViewportAxisConstraints(layoutAxis, constraintsAxis) {
    let min = constraintsAxis.min - layoutAxis.min;
    let max = constraintsAxis.max - layoutAxis.max;
    // If the constraints axis is actually smaller than the layout axis then we can
    // flip the constraints
    if (constraintsAxis.max - constraintsAxis.min < layoutAxis.max - layoutAxis.min) [min, max] = [
        max,
        min
    ];
    return {
        min,
        max
    };
}
/**
 * Calculate viewport constraints when defined as another viewport-relative box
 */ function calcViewportConstraints(layoutBox, constraintsBox) {
    return {
        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),
        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y)
    };
}
/**
 * Calculate a transform origin relative to the source axis, between 0-1, that results
 * in an asthetically pleasing scale/transform needed to project from source to target.
 */ function calcOrigin(source, target) {
    let origin = 0.5;
    const sourceLength = (0, _deltaCalcMjs.calcLength)(source);
    const targetLength = (0, _deltaCalcMjs.calcLength)(target);
    if (targetLength > sourceLength) origin = (0, _motionUtils.progress)(target.min, target.max - sourceLength, source.min);
    else if (sourceLength > targetLength) origin = (0, _motionUtils.progress)(source.min, source.max - targetLength, target.min);
    return (0, _motionUtils.clamp)(0, 1, origin);
}
/**
 * Rebase the calculated viewport constraints relative to the layout.min point.
 */ function rebaseAxisConstraints(layout, constraints) {
    const relativeConstraints = {};
    if (constraints.min !== undefined) relativeConstraints.min = constraints.min - layout.min;
    if (constraints.max !== undefined) relativeConstraints.max = constraints.max - layout.min;
    return relativeConstraints;
}
const defaultElastic = 0.35;
/**
 * Accepts a dragElastic prop and returns resolved elastic values for each axis.
 */ function resolveDragElastic(dragElastic = defaultElastic) {
    if (dragElastic === false) dragElastic = 0;
    else if (dragElastic === true) dragElastic = defaultElastic;
    return {
        x: resolveAxisElastic(dragElastic, "left", "right"),
        y: resolveAxisElastic(dragElastic, "top", "bottom")
    };
}
function resolveAxisElastic(dragElastic, minLabel, maxLabel) {
    return {
        min: resolvePointElastic(dragElastic, minLabel),
        max: resolvePointElastic(dragElastic, maxLabel)
    };
}
function resolvePointElastic(dragElastic, label) {
    return typeof dragElastic === "number" ? dragElastic : dragElastic[label] || 0;
}

},{"motion-dom":"lRV3L","motion-utils":"33eo7","../../../projection/geometry/delta-calc.mjs":"ehySy","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1fzeW":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "PanGesture", ()=>PanGesture);
var _motionDom = require("motion-dom");
var _motionUtils = require("motion-utils");
var _addPointerEventMjs = require("../../events/add-pointer-event.mjs");
var _featureMjs = require("../../motion/features/Feature.mjs");
var _getContextWindowMjs = require("../../utils/get-context-window.mjs");
var _panSessionMjs = require("./PanSession.mjs");
const asyncHandler = (handler)=>(event, info)=>{
        if (handler) (0, _motionDom.frame).postRender(()=>handler(event, info));
    };
class PanGesture extends (0, _featureMjs.Feature) {
    constructor(){
        super(...arguments);
        this.removePointerDownListener = (0, _motionUtils.noop);
    }
    onPointerDown(pointerDownEvent) {
        this.session = new (0, _panSessionMjs.PanSession)(pointerDownEvent, this.createPanHandlers(), {
            transformPagePoint: this.node.getTransformPagePoint(),
            contextWindow: (0, _getContextWindowMjs.getContextWindow)(this.node)
        });
    }
    createPanHandlers() {
        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();
        return {
            onSessionStart: asyncHandler(onPanSessionStart),
            onStart: asyncHandler(onPanStart),
            onMove: onPan,
            onEnd: (event, info)=>{
                delete this.session;
                if (onPanEnd) (0, _motionDom.frame).postRender(()=>onPanEnd(event, info));
            }
        };
    }
    mount() {
        this.removePointerDownListener = (0, _addPointerEventMjs.addPointerEvent)(this.node.current, "pointerdown", (event)=>this.onPointerDown(event));
    }
    update() {
        this.session && this.session.updateHandlers(this.createPanHandlers());
    }
    unmount() {
        this.removePointerDownListener();
        this.session && this.session.end();
    }
}

},{"motion-dom":"lRV3L","motion-utils":"33eo7","../../events/add-pointer-event.mjs":"8PU0p","../../motion/features/Feature.mjs":"9D9gy","../../utils/get-context-window.mjs":"9Zaal","./PanSession.mjs":"a68ds","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4XTZv":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "MeasureLayout", ()=>MeasureLayout);
var _jsxRuntime = require("react/jsx-runtime");
var _motionDom = require("motion-dom");
var _react = require("react");
var _usePresenceMjs = require("../../../components/AnimatePresence/use-presence.mjs");
var _layoutGroupContextMjs = require("../../../context/LayoutGroupContext.mjs");
var _switchLayoutGroupContextMjs = require("../../../context/SwitchLayoutGroupContext.mjs");
var _stateMjs = require("../../../projection/node/state.mjs");
var _scaleBorderRadiusMjs = require("../../../projection/styles/scale-border-radius.mjs");
var _scaleBoxShadowMjs = require("../../../projection/styles/scale-box-shadow.mjs");
var _scaleCorrectionMjs = require("../../../projection/styles/scale-correction.mjs");
"use client";
/**
 * Track whether we've taken any snapshots yet. If not,
 * we can safely skip notification of didUpdate.
 *
 * Difficult to capture in a test but to prevent flickering
 * we must set this to true either on update or unmount.
 * Running `next-env/layout-id` in Safari will show this behaviour if broken.
 */ let hasTakenAnySnapshot = false;
class MeasureLayoutWithContext extends (0, _react.Component) {
    /**
     * This only mounts projection nodes for components that
     * need measuring, we might want to do it for all components
     * in order to incorporate transforms
     */ componentDidMount() {
        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;
        const { projection } = visualElement;
        (0, _scaleCorrectionMjs.addScaleCorrector)(defaultScaleCorrectors);
        if (projection) {
            if (layoutGroup.group) layoutGroup.group.add(projection);
            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) switchLayoutGroup.register(projection);
            if (hasTakenAnySnapshot) projection.root.didUpdate();
            projection.addEventListener("animationComplete", ()=>{
                this.safeToRemove();
            });
            projection.setOptions({
                ...projection.options,
                onExitComplete: ()=>this.safeToRemove()
            });
        }
        (0, _stateMjs.globalProjectionState).hasEverUpdated = true;
    }
    getSnapshotBeforeUpdate(prevProps) {
        const { layoutDependency, visualElement, drag, isPresent } = this.props;
        const { projection } = visualElement;
        if (!projection) return null;
        /**
         * TODO: We use this data in relegate to determine whether to
         * promote a previous element. There's no guarantee its presence data
         * will have updated by this point - if a bug like this arises it will
         * have to be that we markForRelegation and then find a new lead some other way,
         * perhaps in didUpdate
         */ projection.isPresent = isPresent;
        hasTakenAnySnapshot = true;
        if (drag || prevProps.layoutDependency !== layoutDependency || layoutDependency === undefined || prevProps.isPresent !== isPresent) projection.willUpdate();
        else this.safeToRemove();
        if (prevProps.isPresent !== isPresent) {
            if (isPresent) projection.promote();
            else if (!projection.relegate()) /**
                 * If there's another stack member taking over from this one,
                 * it's in charge of the exit animation and therefore should
                 * be in charge of the safe to remove. Otherwise we call it here.
                 */ (0, _motionDom.frame).postRender(()=>{
                const stack = projection.getStack();
                if (!stack || !stack.members.length) this.safeToRemove();
            });
        }
        return null;
    }
    componentDidUpdate() {
        const { projection } = this.props.visualElement;
        if (projection) {
            projection.root.didUpdate();
            (0, _motionDom.microtask).postRender(()=>{
                if (!projection.currentAnimation && projection.isLead()) this.safeToRemove();
            });
        }
    }
    componentWillUnmount() {
        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext } = this.props;
        const { projection } = visualElement;
        hasTakenAnySnapshot = true;
        if (projection) {
            projection.scheduleCheckAfterUnmount();
            if (layoutGroup && layoutGroup.group) layoutGroup.group.remove(projection);
            if (promoteContext && promoteContext.deregister) promoteContext.deregister(projection);
        }
    }
    safeToRemove() {
        const { safeToRemove } = this.props;
        safeToRemove && safeToRemove();
    }
    render() {
        return null;
    }
}
function MeasureLayout(props) {
    const [isPresent, safeToRemove] = (0, _usePresenceMjs.usePresence)();
    const layoutGroup = (0, _react.useContext)((0, _layoutGroupContextMjs.LayoutGroupContext));
    return (0, _jsxRuntime.jsx)(MeasureLayoutWithContext, {
        ...props,
        layoutGroup: layoutGroup,
        switchLayoutGroup: (0, _react.useContext)((0, _switchLayoutGroupContextMjs.SwitchLayoutGroupContext)),
        isPresent: isPresent,
        safeToRemove: safeToRemove
    });
}
const defaultScaleCorrectors = {
    borderRadius: {
        ...(0, _scaleBorderRadiusMjs.correctBorderRadius),
        applyTo: [
            "borderTopLeftRadius",
            "borderTopRightRadius",
            "borderBottomLeftRadius",
            "borderBottomRightRadius"
        ]
    },
    borderTopLeftRadius: (0, _scaleBorderRadiusMjs.correctBorderRadius),
    borderTopRightRadius: (0, _scaleBorderRadiusMjs.correctBorderRadius),
    borderBottomLeftRadius: (0, _scaleBorderRadiusMjs.correctBorderRadius),
    borderBottomRightRadius: (0, _scaleBorderRadiusMjs.correctBorderRadius),
    boxShadow: (0, _scaleBoxShadowMjs.correctBoxShadow)
};

},{"react/jsx-runtime":"05iiF","motion-dom":"lRV3L","react":"jMk1U","../../../components/AnimatePresence/use-presence.mjs":"lKBCt","../../../context/LayoutGroupContext.mjs":"aGGao","../../../context/SwitchLayoutGroupContext.mjs":"6w0cZ","../../../projection/node/state.mjs":"7xVuE","../../../projection/styles/scale-border-radius.mjs":"9Q04I","../../../projection/styles/scale-box-shadow.mjs":"3TVe2","../../../projection/styles/scale-correction.mjs":"7awp8","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lKBCt":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isPresent", ()=>isPresent);
parcelHelpers.export(exports, "useIsPresent", ()=>useIsPresent);
parcelHelpers.export(exports, "usePresence", ()=>usePresence);
var _react = require("react");
var _presenceContextMjs = require("../../context/PresenceContext.mjs");
"use client";
/**
 * When a component is the child of `AnimatePresence`, it can use `usePresence`
 * to access information about whether it's still present in the React tree.
 *
 * ```jsx
 * import { usePresence } from "framer-motion"
 *
 * export const Component = () => {
 *   const [isPresent, safeToRemove] = usePresence()
 *
 *   useEffect(() => {
 *     !isPresent && setTimeout(safeToRemove, 1000)
 *   }, [isPresent])
 *
 *   return <div />
 * }
 * ```
 *
 * If `isPresent` is `false`, it means that a component has been removed the tree, but
 * `AnimatePresence` won't really remove it until `safeToRemove` has been called.
 *
 * @public
 */ function usePresence(subscribe = true) {
    const context = (0, _react.useContext)((0, _presenceContextMjs.PresenceContext));
    if (context === null) return [
        true,
        null
    ];
    const { isPresent, onExitComplete, register } = context;
    // It's safe to call the following hooks conditionally (after an early return) because the context will always
    // either be null or non-null for the lifespan of the component.
    const id = (0, _react.useId)();
    (0, _react.useEffect)(()=>{
        if (subscribe) return register(id);
    }, [
        subscribe
    ]);
    const safeToRemove = (0, _react.useCallback)(()=>subscribe && onExitComplete && onExitComplete(id), [
        id,
        onExitComplete,
        subscribe
    ]);
    return !isPresent && onExitComplete ? [
        false,
        safeToRemove
    ] : [
        true
    ];
}
/**
 * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.
 * There is no `safeToRemove` function.
 *
 * ```jsx
 * import { useIsPresent } from "framer-motion"
 *
 * export const Component = () => {
 *   const isPresent = useIsPresent()
 *
 *   useEffect(() => {
 *     !isPresent && console.log("I've been removed!")
 *   }, [isPresent])
 *
 *   return <div />
 * }
 * ```
 *
 * @public
 */ function useIsPresent() {
    return isPresent((0, _react.useContext)((0, _presenceContextMjs.PresenceContext)));
}
function isPresent(context) {
    return context === null ? true : context.isPresent;
}

},{"react":"jMk1U","../../context/PresenceContext.mjs":"hBm9T","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7xVuE":[function(require,module,exports,__globalThis) {
/**
 * This should only ever be modified on the client otherwise it'll
 * persist through server requests. If we need instanced states we
 * could lazy-init via root.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "globalProjectionState", ()=>globalProjectionState);
const globalProjectionState = {
    /**
     * Global flag as to whether the tree has animated since the last time
     * we resized the window
     */ hasAnimatedSinceResize: true,
    /**
     * We set this to true once, on the first update. Any nodes added to the tree beyond that
     * update will be given a `data-projection-id` attribute.
     */ hasEverUpdated: false
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9Q04I":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "correctBorderRadius", ()=>correctBorderRadius);
parcelHelpers.export(exports, "pixelsToPercent", ()=>pixelsToPercent);
var _motionDom = require("motion-dom");
function pixelsToPercent(pixels, axis) {
    if (axis.max === axis.min) return 0;
    return pixels / (axis.max - axis.min) * 100;
}
/**
 * We always correct borderRadius as a percentage rather than pixels to reduce paints.
 * For example, if you are projecting a box that is 100px wide with a 10px borderRadius
 * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%
 * borderRadius in both states. If we animate between the two in pixels that will trigger
 * a paint each time. If we animate between the two in percentage we'll avoid a paint.
 */ const correctBorderRadius = {
    correct: (latest, node)=>{
        if (!node.target) return latest;
        /**
         * If latest is a string, if it's a percentage we can return immediately as it's
         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.
         */ if (typeof latest === "string") {
            if ((0, _motionDom.px).test(latest)) latest = parseFloat(latest);
            else return latest;
        }
        /**
         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that
         * pixel value as a percentage of each axis
         */ const x = pixelsToPercent(latest, node.target.x);
        const y = pixelsToPercent(latest, node.target.y);
        return `${x}% ${y}%`;
    }
};

},{"motion-dom":"lRV3L","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3TVe2":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "correctBoxShadow", ()=>correctBoxShadow);
var _motionDom = require("motion-dom");
const correctBoxShadow = {
    correct: (latest, { treeScale, projectionDelta })=>{
        const original = latest;
        const shadow = (0, _motionDom.complex).parse(latest);
        // TODO: Doesn't support multiple shadows
        if (shadow.length > 5) return original;
        const template = (0, _motionDom.complex).createTransformer(latest);
        const offset = typeof shadow[0] !== "number" ? 1 : 0;
        // Calculate the overall context scale
        const xScale = projectionDelta.x.scale * treeScale.x;
        const yScale = projectionDelta.y.scale * treeScale.y;
        shadow[0 + offset] /= xScale;
        shadow[1 + offset] /= yScale;
        /**
         * Ideally we'd correct x and y scales individually, but because blur and
         * spread apply to both we have to take a scale average and apply that instead.
         * We could potentially improve the outcome of this by incorporating the ratio between
         * the two scales.
         */ const averageScale = (0, _motionDom.mixNumber)(xScale, yScale, 0.5);
        // Blur
        if (typeof shadow[2 + offset] === "number") shadow[2 + offset] /= averageScale;
        // Spread
        if (typeof shadow[3 + offset] === "number") shadow[3 + offset] /= averageScale;
        return template(shadow);
    }
};

},{"motion-dom":"lRV3L","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lPTdQ":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "HTMLProjectionNode", ()=>HTMLProjectionNode);
parcelHelpers.export(exports, "rootProjectionNode", ()=>rootProjectionNode);
var _createProjectionNodeMjs = require("./create-projection-node.mjs");
var _documentProjectionNodeMjs = require("./DocumentProjectionNode.mjs");
const rootProjectionNode = {
    current: undefined
};
const HTMLProjectionNode = (0, _createProjectionNodeMjs.createProjectionNode)({
    measureScroll: (instance)=>({
            x: instance.scrollLeft,
            y: instance.scrollTop
        }),
    defaultParent: ()=>{
        if (!rootProjectionNode.current) {
            const documentNode = new (0, _documentProjectionNodeMjs.DocumentProjectionNode)({});
            documentNode.mount(window);
            documentNode.setOptions({
                layoutScroll: true
            });
            rootProjectionNode.current = documentNode;
        }
        return rootProjectionNode.current;
    },
    resetTransform: (instance, value)=>{
        instance.style.transform = value !== undefined ? value : "none";
    },
    checkIsScrollRoot: (instance)=>Boolean(window.getComputedStyle(instance).position === "fixed")
});

},{"./create-projection-node.mjs":"ejlSY","./DocumentProjectionNode.mjs":"2AmVY","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ejlSY":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "cleanDirtyNodes", ()=>cleanDirtyNodes);
parcelHelpers.export(exports, "createProjectionNode", ()=>createProjectionNode);
parcelHelpers.export(exports, "mixAxis", ()=>mixAxis);
parcelHelpers.export(exports, "mixAxisDelta", ()=>mixAxisDelta);
parcelHelpers.export(exports, "mixBox", ()=>mixBox);
parcelHelpers.export(exports, "propagateDirtyNodes", ()=>propagateDirtyNodes);
var _motionDom = require("motion-dom");
var _motionUtils = require("motion-utils");
var _singleValueMjs = require("../../animation/animate/single-value.mjs");
var _getAppearIdMjs = require("../../animation/optimized-appear/get-appear-id.mjs");
var _flatTreeMjs = require("../../render/utils/flat-tree.mjs");
var _delayMjs = require("../../utils/delay.mjs");
var _resolveMotionValueMjs = require("../../value/utils/resolve-motion-value.mjs");
var _mixValuesMjs = require("../animation/mix-values.mjs");
var _copyMjs = require("../geometry/copy.mjs");
var _deltaApplyMjs = require("../geometry/delta-apply.mjs");
var _deltaCalcMjs = require("../geometry/delta-calc.mjs");
var _deltaRemoveMjs = require("../geometry/delta-remove.mjs");
var _modelsMjs = require("../geometry/models.mjs");
var _utilsMjs = require("../geometry/utils.mjs");
var _stackMjs = require("../shared/stack.mjs");
var _scaleCorrectionMjs = require("../styles/scale-correction.mjs");
var _transformMjs = require("../styles/transform.mjs");
var _eachAxisMjs = require("../utils/each-axis.mjs");
var _hasTransformMjs = require("../utils/has-transform.mjs");
var _stateMjs = require("./state.mjs");
const metrics = {
    nodes: 0,
    calculatedTargetDeltas: 0,
    calculatedProjections: 0
};
const transformAxes = [
    "",
    "X",
    "Y",
    "Z"
];
/**
 * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1
 * which has a noticeable difference in spring animations
 */ const animationTarget = 1000;
let id = 0;
function resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {
    const { latestValues } = visualElement;
    // Record the distorting transform and then temporarily set it to 0
    if (latestValues[key]) {
        values[key] = latestValues[key];
        visualElement.setStaticValue(key, 0);
        if (sharedAnimationValues) sharedAnimationValues[key] = 0;
    }
}
function cancelTreeOptimisedTransformAnimations(projectionNode) {
    projectionNode.hasCheckedOptimisedAppear = true;
    if (projectionNode.root === projectionNode) return;
    const { visualElement } = projectionNode.options;
    if (!visualElement) return;
    const appearId = (0, _getAppearIdMjs.getOptimisedAppearId)(visualElement);
    if (window.MotionHasOptimisedAnimation(appearId, "transform")) {
        const { layout, layoutId } = projectionNode.options;
        window.MotionCancelOptimisedAnimation(appearId, "transform", (0, _motionDom.frame), !(layout || layoutId));
    }
    const { parent } = projectionNode;
    if (parent && !parent.hasCheckedOptimisedAppear) cancelTreeOptimisedTransformAnimations(parent);
}
function createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform }) {
    return class ProjectionNode {
        constructor(latestValues = {}, parent = defaultParent?.()){
            /**
             * A unique ID generated for every projection node.
             */ this.id = id++;
            /**
             * An id that represents a unique session instigated by startUpdate.
             */ this.animationId = 0;
            this.animationCommitId = 0;
            /**
             * A Set containing all this component's children. This is used to iterate
             * through the children.
             *
             * TODO: This could be faster to iterate as a flat array stored on the root node.
             */ this.children = new Set();
            /**
             * Options for the node. We use this to configure what kind of layout animations
             * we should perform (if any).
             */ this.options = {};
            /**
             * We use this to detect when its safe to shut down part of a projection tree.
             * We have to keep projecting children for scale correction and relative projection
             * until all their parents stop performing layout animations.
             */ this.isTreeAnimating = false;
            this.isAnimationBlocked = false;
            /**
             * Flag to true if we think this layout has been changed. We can't always know this,
             * currently we set it to true every time a component renders, or if it has a layoutDependency
             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup
             * and if one node is dirtied, they all are.
             */ this.isLayoutDirty = false;
            /**
             * Flag to true if we think the projection calculations for this node needs
             * recalculating as a result of an updated transform or layout animation.
             */ this.isProjectionDirty = false;
            /**
             * Flag to true if the layout *or* transform has changed. This then gets propagated
             * throughout the projection tree, forcing any element below to recalculate on the next frame.
             */ this.isSharedProjectionDirty = false;
            /**
             * Flag transform dirty. This gets propagated throughout the whole tree but is only
             * respected by shared nodes.
             */ this.isTransformDirty = false;
            /**
             * Block layout updates for instant layout transitions throughout the tree.
             */ this.updateManuallyBlocked = false;
            this.updateBlockedByResize = false;
            /**
             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`
             * call.
             */ this.isUpdating = false;
            /**
             * If this is an SVG element we currently disable projection transforms
             */ this.isSVG = false;
            /**
             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset
             * its projection styles.
             */ this.needsReset = false;
            /**
             * Flags whether this node should have its transform reset prior to measuring.
             */ this.shouldResetTransform = false;
            /**
             * Store whether this node has been checked for optimised appear animations. As
             * effects fire bottom-up, and we want to look up the tree for appear animations,
             * this makes sure we only check each path once, stopping at nodes that
             * have already been checked.
             */ this.hasCheckedOptimisedAppear = false;
            /**
             * An object representing the calculated contextual/accumulated/tree scale.
             * This will be used to scale calculcated projection transforms, as these are
             * calculated in screen-space but need to be scaled for elements to layoutly
             * make it to their calculated destinations.
             *
             * TODO: Lazy-init
             */ this.treeScale = {
                x: 1,
                y: 1
            };
            /**
             *
             */ this.eventHandlers = new Map();
            this.hasTreeAnimated = false;
            // Note: Currently only running on root node
            this.updateScheduled = false;
            this.scheduleUpdate = ()=>this.update();
            this.projectionUpdateScheduled = false;
            this.checkUpdateFailed = ()=>{
                if (this.isUpdating) {
                    this.isUpdating = false;
                    this.clearAllSnapshots();
                }
            };
            /**
             * This is a multi-step process as shared nodes might be of different depths. Nodes
             * are sorted by depth order, so we need to resolve the entire tree before moving to
             * the next step.
             */ this.updateProjection = ()=>{
                this.projectionUpdateScheduled = false;
                /**
                 * Reset debug counts. Manually resetting rather than creating a new
                 * object each frame.
                 */ if ((0, _motionDom.statsBuffer).value) metrics.nodes = metrics.calculatedTargetDeltas = metrics.calculatedProjections = 0;
                this.nodes.forEach(propagateDirtyNodes);
                this.nodes.forEach(resolveTargetDelta);
                this.nodes.forEach(calcProjection);
                this.nodes.forEach(cleanDirtyNodes);
                if ((0, _motionDom.statsBuffer).addProjectionMetrics) (0, _motionDom.statsBuffer).addProjectionMetrics(metrics);
            };
            /**
             * Frame calculations
             */ this.resolvedRelativeTargetAt = 0.0;
            this.hasProjected = false;
            this.isVisible = true;
            this.animationProgress = 0;
            /**
             * Shared layout
             */ // TODO Only running on root node
            this.sharedNodes = new Map();
            this.latestValues = latestValues;
            this.root = parent ? parent.root || parent : this;
            this.path = parent ? [
                ...parent.path,
                parent
            ] : [];
            this.parent = parent;
            this.depth = parent ? parent.depth + 1 : 0;
            for(let i = 0; i < this.path.length; i++)this.path[i].shouldResetTransform = true;
            if (this.root === this) this.nodes = new (0, _flatTreeMjs.FlatTree)();
        }
        addEventListener(name, handler) {
            if (!this.eventHandlers.has(name)) this.eventHandlers.set(name, new (0, _motionUtils.SubscriptionManager)());
            return this.eventHandlers.get(name).add(handler);
        }
        notifyListeners(name, ...args) {
            const subscriptionManager = this.eventHandlers.get(name);
            subscriptionManager && subscriptionManager.notify(...args);
        }
        hasListeners(name) {
            return this.eventHandlers.has(name);
        }
        /**
         * Lifecycles
         */ mount(instance) {
            if (this.instance) return;
            this.isSVG = (0, _motionDom.isSVGElement)(instance) && !(0, _motionDom.isSVGSVGElement)(instance);
            this.instance = instance;
            const { layoutId, layout, visualElement } = this.options;
            if (visualElement && !visualElement.current) visualElement.mount(instance);
            this.root.nodes.add(this);
            this.parent && this.parent.children.add(this);
            if (this.root.hasTreeAnimated && (layout || layoutId)) this.isLayoutDirty = true;
            if (attachResizeListener) {
                let cancelDelay;
                let innerWidth = 0;
                const resizeUnblockUpdate = ()=>this.root.updateBlockedByResize = false;
                // Set initial innerWidth in a frame.read callback to batch the read
                (0, _motionDom.frame).read(()=>{
                    innerWidth = window.innerWidth;
                });
                attachResizeListener(instance, ()=>{
                    const newInnerWidth = window.innerWidth;
                    if (newInnerWidth === innerWidth) return;
                    innerWidth = newInnerWidth;
                    this.root.updateBlockedByResize = true;
                    cancelDelay && cancelDelay();
                    cancelDelay = (0, _delayMjs.delay)(resizeUnblockUpdate, 250);
                    if ((0, _stateMjs.globalProjectionState).hasAnimatedSinceResize) {
                        (0, _stateMjs.globalProjectionState).hasAnimatedSinceResize = false;
                        this.nodes.forEach(finishAnimation);
                    }
                });
            }
            if (layoutId) this.root.registerSharedNode(layoutId, this);
            // Only register the handler if it requires layout animation
            if (this.options.animate !== false && visualElement && (layoutId || layout)) this.addEventListener("didUpdate", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout })=>{
                if (this.isTreeAnimationBlocked()) {
                    this.target = undefined;
                    this.relativeTarget = undefined;
                    return;
                }
                // TODO: Check here if an animation exists
                const layoutTransition = this.options.transition || visualElement.getDefaultTransition() || defaultLayoutTransition;
                const { onLayoutAnimationStart, onLayoutAnimationComplete } = visualElement.getProps();
                /**
                     * The target layout of the element might stay the same,
                     * but its position relative to its parent has changed.
                     */ const hasTargetChanged = !this.targetLayout || !(0, _utilsMjs.boxEqualsRounded)(this.targetLayout, newLayout);
                /*
                     * Note: Disabled to fix relative animations always triggering new
                     * layout animations. If this causes further issues, we can try
                     * a different approach to detecting relative target changes.
                     */ // || hasRelativeLayoutChanged
                /**
                     * If the layout hasn't seemed to have changed, it might be that the
                     * element is visually in the same place in the document but its position
                     * relative to its parent has indeed changed. So here we check for that.
                     */ const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;
                if (this.options.layoutRoot || this.resumeFrom || hasOnlyRelativeTargetChanged || hasLayoutChanged && (hasTargetChanged || !this.currentAnimation)) {
                    if (this.resumeFrom) {
                        this.resumingFrom = this.resumeFrom;
                        this.resumingFrom.resumingFrom = undefined;
                    }
                    const animationOptions = {
                        ...(0, _motionDom.getValueTransition)(layoutTransition, "layout"),
                        onPlay: onLayoutAnimationStart,
                        onComplete: onLayoutAnimationComplete
                    };
                    if (visualElement.shouldReduceMotion || this.options.layoutRoot) {
                        animationOptions.delay = 0;
                        animationOptions.type = false;
                    }
                    this.startAnimation(animationOptions);
                    /**
                         * Set animation origin after starting animation to avoid layout jump
                         * caused by stopping previous layout animation
                         */ this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);
                } else {
                    /**
                         * If the layout hasn't changed and we have an animation that hasn't started yet,
                         * finish it immediately. Otherwise it will be animating from a location
                         * that was probably never commited to screen and look like a jumpy box.
                         */ if (!hasLayoutChanged) finishAnimation(this);
                    if (this.isLead() && this.options.onExitComplete) this.options.onExitComplete();
                }
                this.targetLayout = newLayout;
            });
        }
        unmount() {
            this.options.layoutId && this.willUpdate();
            this.root.nodes.remove(this);
            const stack = this.getStack();
            stack && stack.remove(this);
            this.parent && this.parent.children.delete(this);
            this.instance = undefined;
            this.eventHandlers.clear();
            (0, _motionDom.cancelFrame)(this.updateProjection);
        }
        // only on the root
        blockUpdate() {
            this.updateManuallyBlocked = true;
        }
        unblockUpdate() {
            this.updateManuallyBlocked = false;
        }
        isUpdateBlocked() {
            return this.updateManuallyBlocked || this.updateBlockedByResize;
        }
        isTreeAnimationBlocked() {
            return this.isAnimationBlocked || this.parent && this.parent.isTreeAnimationBlocked() || false;
        }
        // Note: currently only running on root node
        startUpdate() {
            if (this.isUpdateBlocked()) return;
            this.isUpdating = true;
            this.nodes && this.nodes.forEach(resetSkewAndRotation);
            this.animationId++;
        }
        getTransformTemplate() {
            const { visualElement } = this.options;
            return visualElement && visualElement.getProps().transformTemplate;
        }
        willUpdate(shouldNotifyListeners = true) {
            this.root.hasTreeAnimated = true;
            if (this.root.isUpdateBlocked()) {
                this.options.onExitComplete && this.options.onExitComplete();
                return;
            }
            /**
             * If we're running optimised appear animations then these must be
             * cancelled before measuring the DOM. This is so we can measure
             * the true layout of the element rather than the WAAPI animation
             * which will be unaffected by the resetSkewAndRotate step.
             *
             * Note: This is a DOM write. Worst case scenario is this is sandwiched
             * between other snapshot reads which will cause unnecessary style recalculations.
             * This has to happen here though, as we don't yet know which nodes will need
             * snapshots in startUpdate(), but we only want to cancel optimised animations
             * if a layout animation measurement is actually going to be affected by them.
             */ if (window.MotionCancelOptimisedAnimation && !this.hasCheckedOptimisedAppear) cancelTreeOptimisedTransformAnimations(this);
            !this.root.isUpdating && this.root.startUpdate();
            if (this.isLayoutDirty) return;
            this.isLayoutDirty = true;
            for(let i = 0; i < this.path.length; i++){
                const node = this.path[i];
                node.shouldResetTransform = true;
                node.updateScroll("snapshot");
                if (node.options.layoutRoot) node.willUpdate(false);
            }
            const { layoutId, layout } = this.options;
            if (layoutId === undefined && !layout) return;
            const transformTemplate = this.getTransformTemplate();
            this.prevTransformTemplateValue = transformTemplate ? transformTemplate(this.latestValues, "") : undefined;
            this.updateSnapshot();
            shouldNotifyListeners && this.notifyListeners("willUpdate");
        }
        update() {
            this.updateScheduled = false;
            const updateWasBlocked = this.isUpdateBlocked();
            // When doing an instant transition, we skip the layout update,
            // but should still clean up the measurements so that the next
            // snapshot could be taken correctly.
            if (updateWasBlocked) {
                this.unblockUpdate();
                this.clearAllSnapshots();
                this.nodes.forEach(clearMeasurements);
                return;
            }
            /**
             * If this is a repeat of didUpdate then ignore the animation.
             */ if (this.animationId <= this.animationCommitId) {
                this.nodes.forEach(clearIsLayoutDirty);
                return;
            }
            this.animationCommitId = this.animationId;
            if (!this.isUpdating) this.nodes.forEach(clearIsLayoutDirty);
            else {
                this.isUpdating = false;
                /**
                 * Write
                 */ this.nodes.forEach(resetTransformStyle);
                /**
                 * Read ==================
                 */ // Update layout measurements of updated children
                this.nodes.forEach(updateLayout);
                /**
                 * Write
                 */ // Notify listeners that the layout is updated
                this.nodes.forEach(notifyLayoutUpdate);
            }
            this.clearAllSnapshots();
            /**
             * Manually flush any pending updates. Ideally
             * we could leave this to the following requestAnimationFrame but this seems
             * to leave a flash of incorrectly styled content.
             */ const now = (0, _motionDom.time).now();
            (0, _motionDom.frameData).delta = (0, _motionUtils.clamp)(0, 1000 / 60, now - (0, _motionDom.frameData).timestamp);
            (0, _motionDom.frameData).timestamp = now;
            (0, _motionDom.frameData).isProcessing = true;
            (0, _motionDom.frameSteps).update.process((0, _motionDom.frameData));
            (0, _motionDom.frameSteps).preRender.process((0, _motionDom.frameData));
            (0, _motionDom.frameSteps).render.process((0, _motionDom.frameData));
            (0, _motionDom.frameData).isProcessing = false;
        }
        didUpdate() {
            if (!this.updateScheduled) {
                this.updateScheduled = true;
                (0, _motionDom.microtask).read(this.scheduleUpdate);
            }
        }
        clearAllSnapshots() {
            this.nodes.forEach(clearSnapshot);
            this.sharedNodes.forEach(removeLeadSnapshots);
        }
        scheduleUpdateProjection() {
            if (!this.projectionUpdateScheduled) {
                this.projectionUpdateScheduled = true;
                (0, _motionDom.frame).preRender(this.updateProjection, false, true);
            }
        }
        scheduleCheckAfterUnmount() {
            /**
             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,
             * we manually call didUpdate to give a chance to the siblings to animate.
             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.
             */ (0, _motionDom.frame).postRender(()=>{
                if (this.isLayoutDirty) this.root.didUpdate();
                else this.root.checkUpdateFailed();
            });
        }
        /**
         * Update measurements
         */ updateSnapshot() {
            if (this.snapshot || !this.instance) return;
            this.snapshot = this.measure();
            if (this.snapshot && !(0, _deltaCalcMjs.calcLength)(this.snapshot.measuredBox.x) && !(0, _deltaCalcMjs.calcLength)(this.snapshot.measuredBox.y)) this.snapshot = undefined;
        }
        updateLayout() {
            if (!this.instance) return;
            this.updateScroll();
            if (!(this.options.alwaysMeasureLayout && this.isLead()) && !this.isLayoutDirty) return;
            /**
             * When a node is mounted, it simply resumes from the prevLead's
             * snapshot instead of taking a new one, but the ancestors scroll
             * might have updated while the prevLead is unmounted. We need to
             * update the scroll again to make sure the layout we measure is
             * up to date.
             */ if (this.resumeFrom && !this.resumeFrom.instance) for(let i = 0; i < this.path.length; i++){
                const node = this.path[i];
                node.updateScroll();
            }
            const prevLayout = this.layout;
            this.layout = this.measure(false);
            this.layoutCorrected = (0, _modelsMjs.createBox)();
            this.isLayoutDirty = false;
            this.projectionDelta = undefined;
            this.notifyListeners("measure", this.layout.layoutBox);
            const { visualElement } = this.options;
            visualElement && visualElement.notify("LayoutMeasure", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);
        }
        updateScroll(phase = "measure") {
            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);
            if (this.scroll && this.scroll.animationId === this.root.animationId && this.scroll.phase === phase) needsMeasurement = false;
            if (needsMeasurement && this.instance) {
                const isRoot = checkIsScrollRoot(this.instance);
                this.scroll = {
                    animationId: this.root.animationId,
                    phase,
                    isRoot,
                    offset: measureScroll(this.instance),
                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot
                };
            }
        }
        resetTransform() {
            if (!resetTransform) return;
            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform || this.options.alwaysMeasureLayout;
            const hasProjection = this.projectionDelta && !(0, _utilsMjs.isDeltaZero)(this.projectionDelta);
            const transformTemplate = this.getTransformTemplate();
            const transformTemplateValue = transformTemplate ? transformTemplate(this.latestValues, "") : undefined;
            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;
            if (isResetRequested && this.instance && (hasProjection || (0, _hasTransformMjs.hasTransform)(this.latestValues) || transformTemplateHasChanged)) {
                resetTransform(this.instance, transformTemplateValue);
                this.shouldResetTransform = false;
                this.scheduleRender();
            }
        }
        measure(removeTransform = true) {
            const pageBox = this.measurePageBox();
            let layoutBox = this.removeElementScroll(pageBox);
            /**
             * Measurements taken during the pre-render stage
             * still have transforms applied so we remove them
             * via calculation.
             */ if (removeTransform) layoutBox = this.removeTransform(layoutBox);
            roundBox(layoutBox);
            return {
                animationId: this.root.animationId,
                measuredBox: pageBox,
                layoutBox,
                latestValues: {},
                source: this.id
            };
        }
        measurePageBox() {
            const { visualElement } = this.options;
            if (!visualElement) return (0, _modelsMjs.createBox)();
            const box = visualElement.measureViewportBox();
            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);
            if (!wasInScrollRoot) {
                // Remove viewport scroll to give page-relative coordinates
                const { scroll } = this.root;
                if (scroll) {
                    (0, _deltaApplyMjs.translateAxis)(box.x, scroll.offset.x);
                    (0, _deltaApplyMjs.translateAxis)(box.y, scroll.offset.y);
                }
            }
            return box;
        }
        removeElementScroll(box) {
            const boxWithoutScroll = (0, _modelsMjs.createBox)();
            (0, _copyMjs.copyBoxInto)(boxWithoutScroll, box);
            if (this.scroll?.wasRoot) return boxWithoutScroll;
            /**
             * Performance TODO: Keep a cumulative scroll offset down the tree
             * rather than loop back up the path.
             */ for(let i = 0; i < this.path.length; i++){
                const node = this.path[i];
                const { scroll, options } = node;
                if (node !== this.root && scroll && options.layoutScroll) {
                    /**
                     * If this is a new scroll root, we want to remove all previous scrolls
                     * from the viewport box.
                     */ if (scroll.wasRoot) (0, _copyMjs.copyBoxInto)(boxWithoutScroll, box);
                    (0, _deltaApplyMjs.translateAxis)(boxWithoutScroll.x, scroll.offset.x);
                    (0, _deltaApplyMjs.translateAxis)(boxWithoutScroll.y, scroll.offset.y);
                }
            }
            return boxWithoutScroll;
        }
        applyTransform(box, transformOnly = false) {
            const withTransforms = (0, _modelsMjs.createBox)();
            (0, _copyMjs.copyBoxInto)(withTransforms, box);
            for(let i = 0; i < this.path.length; i++){
                const node = this.path[i];
                if (!transformOnly && node.options.layoutScroll && node.scroll && node !== node.root) (0, _deltaApplyMjs.transformBox)(withTransforms, {
                    x: -node.scroll.offset.x,
                    y: -node.scroll.offset.y
                });
                if (!(0, _hasTransformMjs.hasTransform)(node.latestValues)) continue;
                (0, _deltaApplyMjs.transformBox)(withTransforms, node.latestValues);
            }
            if ((0, _hasTransformMjs.hasTransform)(this.latestValues)) (0, _deltaApplyMjs.transformBox)(withTransforms, this.latestValues);
            return withTransforms;
        }
        removeTransform(box) {
            const boxWithoutTransform = (0, _modelsMjs.createBox)();
            (0, _copyMjs.copyBoxInto)(boxWithoutTransform, box);
            for(let i = 0; i < this.path.length; i++){
                const node = this.path[i];
                if (!node.instance) continue;
                if (!(0, _hasTransformMjs.hasTransform)(node.latestValues)) continue;
                (0, _hasTransformMjs.hasScale)(node.latestValues) && node.updateSnapshot();
                const sourceBox = (0, _modelsMjs.createBox)();
                const nodeBox = node.measurePageBox();
                (0, _copyMjs.copyBoxInto)(sourceBox, nodeBox);
                (0, _deltaRemoveMjs.removeBoxTransforms)(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);
            }
            if ((0, _hasTransformMjs.hasTransform)(this.latestValues)) (0, _deltaRemoveMjs.removeBoxTransforms)(boxWithoutTransform, this.latestValues);
            return boxWithoutTransform;
        }
        setTargetDelta(delta) {
            this.targetDelta = delta;
            this.root.scheduleUpdateProjection();
            this.isProjectionDirty = true;
        }
        setOptions(options) {
            this.options = {
                ...this.options,
                ...options,
                crossfade: options.crossfade !== undefined ? options.crossfade : true
            };
        }
        clearMeasurements() {
            this.scroll = undefined;
            this.layout = undefined;
            this.snapshot = undefined;
            this.prevTransformTemplateValue = undefined;
            this.targetDelta = undefined;
            this.target = undefined;
            this.isLayoutDirty = false;
        }
        forceRelativeParentToResolveTarget() {
            if (!this.relativeParent) return;
            /**
             * If the parent target isn't up-to-date, force it to update.
             * This is an unfortunate de-optimisation as it means any updating relative
             * projection will cause all the relative parents to recalculate back
             * up the tree.
             */ if (this.relativeParent.resolvedRelativeTargetAt !== (0, _motionDom.frameData).timestamp) this.relativeParent.resolveTargetDelta(true);
        }
        resolveTargetDelta(forceRecalculation = false) {
            /**
             * Once the dirty status of nodes has been spread through the tree, we also
             * need to check if we have a shared node of a different depth that has itself
             * been dirtied.
             */ const lead = this.getLead();
            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);
            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);
            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);
            const isShared = Boolean(this.resumingFrom) || this !== lead;
            /**
             * We don't use transform for this step of processing so we don't
             * need to check whether any nodes have changed transform.
             */ const canSkip = !(forceRecalculation || isShared && this.isSharedProjectionDirty || this.isProjectionDirty || this.parent?.isProjectionDirty || this.attemptToResolveRelativeTarget || this.root.updateBlockedByResize);
            if (canSkip) return;
            const { layout, layoutId } = this.options;
            /**
             * If we have no layout, we can't perform projection, so early return
             */ if (!this.layout || !(layout || layoutId)) return;
            this.resolvedRelativeTargetAt = (0, _motionDom.frameData).timestamp;
            /**
             * If we don't have a targetDelta but do have a layout, we can attempt to resolve
             * a relativeParent. This will allow a component to perform scale correction
             * even if no animation has started.
             */ if (!this.targetDelta && !this.relativeTarget) {
                const relativeParent = this.getClosestProjectingParent();
                if (relativeParent && relativeParent.layout && this.animationProgress !== 1) {
                    this.relativeParent = relativeParent;
                    this.forceRelativeParentToResolveTarget();
                    this.relativeTarget = (0, _modelsMjs.createBox)();
                    this.relativeTargetOrigin = (0, _modelsMjs.createBox)();
                    (0, _deltaCalcMjs.calcRelativePosition)(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);
                    (0, _copyMjs.copyBoxInto)(this.relativeTarget, this.relativeTargetOrigin);
                } else this.relativeParent = this.relativeTarget = undefined;
            }
            /**
             * If we have no relative target or no target delta our target isn't valid
             * for this frame.
             */ if (!this.relativeTarget && !this.targetDelta) return;
            /**
             * Lazy-init target data structure
             */ if (!this.target) {
                this.target = (0, _modelsMjs.createBox)();
                this.targetWithTransforms = (0, _modelsMjs.createBox)();
            }
            /**
             * If we've got a relative box for this component, resolve it into a target relative to the parent.
             */ if (this.relativeTarget && this.relativeTargetOrigin && this.relativeParent && this.relativeParent.target) {
                this.forceRelativeParentToResolveTarget();
                (0, _deltaCalcMjs.calcRelativeBox)(this.target, this.relativeTarget, this.relativeParent.target);
            /**
                 * If we've only got a targetDelta, resolve it into a target
                 */ } else if (this.targetDelta) {
                if (Boolean(this.resumingFrom)) // TODO: This is creating a new object every frame
                this.target = this.applyTransform(this.layout.layoutBox);
                else (0, _copyMjs.copyBoxInto)(this.target, this.layout.layoutBox);
                (0, _deltaApplyMjs.applyBoxDelta)(this.target, this.targetDelta);
            } else /**
                 * If no target, use own layout as target
                 */ (0, _copyMjs.copyBoxInto)(this.target, this.layout.layoutBox);
            /**
             * If we've been told to attempt to resolve a relative target, do so.
             */ if (this.attemptToResolveRelativeTarget) {
                this.attemptToResolveRelativeTarget = false;
                const relativeParent = this.getClosestProjectingParent();
                if (relativeParent && Boolean(relativeParent.resumingFrom) === Boolean(this.resumingFrom) && !relativeParent.options.layoutScroll && relativeParent.target && this.animationProgress !== 1) {
                    this.relativeParent = relativeParent;
                    this.forceRelativeParentToResolveTarget();
                    this.relativeTarget = (0, _modelsMjs.createBox)();
                    this.relativeTargetOrigin = (0, _modelsMjs.createBox)();
                    (0, _deltaCalcMjs.calcRelativePosition)(this.relativeTargetOrigin, this.target, relativeParent.target);
                    (0, _copyMjs.copyBoxInto)(this.relativeTarget, this.relativeTargetOrigin);
                } else this.relativeParent = this.relativeTarget = undefined;
            }
            /**
             * Increase debug counter for resolved target deltas
             */ if ((0, _motionDom.statsBuffer).value) metrics.calculatedTargetDeltas++;
        }
        getClosestProjectingParent() {
            if (!this.parent || (0, _hasTransformMjs.hasScale)(this.parent.latestValues) || (0, _hasTransformMjs.has2DTranslate)(this.parent.latestValues)) return undefined;
            if (this.parent.isProjecting()) return this.parent;
            else return this.parent.getClosestProjectingParent();
        }
        isProjecting() {
            return Boolean((this.relativeTarget || this.targetDelta || this.options.layoutRoot) && this.layout);
        }
        calcProjection() {
            const lead = this.getLead();
            const isShared = Boolean(this.resumingFrom) || this !== lead;
            let canSkip = true;
            /**
             * If this is a normal layout animation and neither this node nor its nearest projecting
             * is dirty then we can't skip.
             */ if (this.isProjectionDirty || this.parent?.isProjectionDirty) canSkip = false;
            /**
             * If this is a shared layout animation and this node's shared projection is dirty then
             * we can't skip.
             */ if (isShared && (this.isSharedProjectionDirty || this.isTransformDirty)) canSkip = false;
            /**
             * If we have resolved the target this frame we must recalculate the
             * projection to ensure it visually represents the internal calculations.
             */ if (this.resolvedRelativeTargetAt === (0, _motionDom.frameData).timestamp) canSkip = false;
            if (canSkip) return;
            const { layout, layoutId } = this.options;
            /**
             * If this section of the tree isn't animating we can
             * delete our target sources for the following frame.
             */ this.isTreeAnimating = Boolean(this.parent && this.parent.isTreeAnimating || this.currentAnimation || this.pendingAnimation);
            if (!this.isTreeAnimating) this.targetDelta = this.relativeTarget = undefined;
            if (!this.layout || !(layout || layoutId)) return;
            /**
             * Reset the corrected box with the latest values from box, as we're then going
             * to perform mutative operations on it.
             */ (0, _copyMjs.copyBoxInto)(this.layoutCorrected, this.layout.layoutBox);
            /**
             * Record previous tree scales before updating.
             */ const prevTreeScaleX = this.treeScale.x;
            const prevTreeScaleY = this.treeScale.y;
            /**
             * Apply all the parent deltas to this box to produce the corrected box. This
             * is the layout box, as it will appear on screen as a result of the transforms of its parents.
             */ (0, _deltaApplyMjs.applyTreeDeltas)(this.layoutCorrected, this.treeScale, this.path, isShared);
            /**
             * If this layer needs to perform scale correction but doesn't have a target,
             * use the layout as the target.
             */ if (lead.layout && !lead.target && (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {
                lead.target = lead.layout.layoutBox;
                lead.targetWithTransforms = (0, _modelsMjs.createBox)();
            }
            const { target } = lead;
            if (!target) {
                /**
                 * If we don't have a target to project into, but we were previously
                 * projecting, we want to remove the stored transform and schedule
                 * a render to ensure the elements reflect the removed transform.
                 */ if (this.prevProjectionDelta) {
                    this.createProjectionDeltas();
                    this.scheduleRender();
                }
                return;
            }
            if (!this.projectionDelta || !this.prevProjectionDelta) this.createProjectionDeltas();
            else {
                (0, _copyMjs.copyAxisDeltaInto)(this.prevProjectionDelta.x, this.projectionDelta.x);
                (0, _copyMjs.copyAxisDeltaInto)(this.prevProjectionDelta.y, this.projectionDelta.y);
            }
            /**
             * Update the delta between the corrected box and the target box before user-set transforms were applied.
             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate
             * for our layout reprojection, but still allow them to be scaled correctly by the user.
             * It might be that to simplify this we may want to accept that user-set scale is also corrected
             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting
             * to allow people to choose whether these styles are corrected based on just the
             * layout reprojection or the final bounding box.
             */ (0, _deltaCalcMjs.calcBoxDelta)(this.projectionDelta, this.layoutCorrected, target, this.latestValues);
            if (this.treeScale.x !== prevTreeScaleX || this.treeScale.y !== prevTreeScaleY || !(0, _utilsMjs.axisDeltaEquals)(this.projectionDelta.x, this.prevProjectionDelta.x) || !(0, _utilsMjs.axisDeltaEquals)(this.projectionDelta.y, this.prevProjectionDelta.y)) {
                this.hasProjected = true;
                this.scheduleRender();
                this.notifyListeners("projectionUpdate", target);
            }
            /**
             * Increase debug counter for recalculated projections
             */ if ((0, _motionDom.statsBuffer).value) metrics.calculatedProjections++;
        }
        hide() {
            this.isVisible = false;
        // TODO: Schedule render
        }
        show() {
            this.isVisible = true;
        // TODO: Schedule render
        }
        scheduleRender(notifyAll = true) {
            this.options.visualElement?.scheduleRender();
            if (notifyAll) {
                const stack = this.getStack();
                stack && stack.scheduleRender();
            }
            if (this.resumingFrom && !this.resumingFrom.instance) this.resumingFrom = undefined;
        }
        createProjectionDeltas() {
            this.prevProjectionDelta = (0, _modelsMjs.createDelta)();
            this.projectionDelta = (0, _modelsMjs.createDelta)();
            this.projectionDeltaWithTransform = (0, _modelsMjs.createDelta)();
        }
        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {
            const snapshot = this.snapshot;
            const snapshotLatestValues = snapshot ? snapshot.latestValues : {};
            const mixedValues = {
                ...this.latestValues
            };
            const targetDelta = (0, _modelsMjs.createDelta)();
            if (!this.relativeParent || !this.relativeParent.options.layoutRoot) this.relativeTarget = this.relativeTargetOrigin = undefined;
            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;
            const relativeLayout = (0, _modelsMjs.createBox)();
            const snapshotSource = snapshot ? snapshot.source : undefined;
            const layoutSource = this.layout ? this.layout.source : undefined;
            const isSharedLayoutAnimation = snapshotSource !== layoutSource;
            const stack = this.getStack();
            const isOnlyMember = !stack || stack.members.length <= 1;
            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation && !isOnlyMember && this.options.crossfade === true && !this.path.some(hasOpacityCrossfade));
            this.animationProgress = 0;
            let prevRelativeTarget;
            this.mixTargetDelta = (latest)=>{
                const progress = latest / 1000;
                mixAxisDelta(targetDelta.x, delta.x, progress);
                mixAxisDelta(targetDelta.y, delta.y, progress);
                this.setTargetDelta(targetDelta);
                if (this.relativeTarget && this.relativeTargetOrigin && this.layout && this.relativeParent && this.relativeParent.layout) {
                    (0, _deltaCalcMjs.calcRelativePosition)(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);
                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);
                    /**
                     * If this is an unchanged relative target we can consider the
                     * projection not dirty.
                     */ if (prevRelativeTarget && (0, _utilsMjs.boxEquals)(this.relativeTarget, prevRelativeTarget)) this.isProjectionDirty = false;
                    if (!prevRelativeTarget) prevRelativeTarget = (0, _modelsMjs.createBox)();
                    (0, _copyMjs.copyBoxInto)(prevRelativeTarget, this.relativeTarget);
                }
                if (isSharedLayoutAnimation) {
                    this.animationValues = mixedValues;
                    (0, _mixValuesMjs.mixValues)(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);
                }
                this.root.scheduleUpdateProjection();
                this.scheduleRender();
                this.animationProgress = progress;
            };
            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);
        }
        startAnimation(options) {
            this.notifyListeners("animationStart");
            this.currentAnimation?.stop();
            this.resumingFrom?.currentAnimation?.stop();
            if (this.pendingAnimation) {
                (0, _motionDom.cancelFrame)(this.pendingAnimation);
                this.pendingAnimation = undefined;
            }
            /**
             * Start the animation in the next frame to have a frame with progress 0,
             * where the target is the same as when the animation started, so we can
             * calculate the relative positions correctly for instant transitions.
             */ this.pendingAnimation = (0, _motionDom.frame).update(()=>{
                (0, _stateMjs.globalProjectionState).hasAnimatedSinceResize = true;
                (0, _motionDom.activeAnimations).layout++;
                this.motionValue || (this.motionValue = (0, _motionDom.motionValue)(0));
                this.currentAnimation = (0, _singleValueMjs.animateSingleValue)(this.motionValue, [
                    0,
                    1000
                ], {
                    ...options,
                    velocity: 0,
                    isSync: true,
                    onUpdate: (latest)=>{
                        this.mixTargetDelta(latest);
                        options.onUpdate && options.onUpdate(latest);
                    },
                    onStop: ()=>{
                        (0, _motionDom.activeAnimations).layout--;
                    },
                    onComplete: ()=>{
                        (0, _motionDom.activeAnimations).layout--;
                        options.onComplete && options.onComplete();
                        this.completeAnimation();
                    }
                });
                if (this.resumingFrom) this.resumingFrom.currentAnimation = this.currentAnimation;
                this.pendingAnimation = undefined;
            });
        }
        completeAnimation() {
            if (this.resumingFrom) {
                this.resumingFrom.currentAnimation = undefined;
                this.resumingFrom.preserveOpacity = undefined;
            }
            const stack = this.getStack();
            stack && stack.exitAnimationComplete();
            this.resumingFrom = this.currentAnimation = this.animationValues = undefined;
            this.notifyListeners("animationComplete");
        }
        finishAnimation() {
            if (this.currentAnimation) {
                this.mixTargetDelta && this.mixTargetDelta(animationTarget);
                this.currentAnimation.stop();
            }
            this.completeAnimation();
        }
        applyTransformsToTarget() {
            const lead = this.getLead();
            let { targetWithTransforms, target, layout, latestValues } = lead;
            if (!targetWithTransforms || !target || !layout) return;
            /**
             * If we're only animating position, and this element isn't the lead element,
             * then instead of projecting into the lead box we instead want to calculate
             * a new target that aligns the two boxes but maintains the layout shape.
             */ if (this !== lead && this.layout && layout && shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {
                target = this.target || (0, _modelsMjs.createBox)();
                const xLength = (0, _deltaCalcMjs.calcLength)(this.layout.layoutBox.x);
                target.x.min = lead.target.x.min;
                target.x.max = target.x.min + xLength;
                const yLength = (0, _deltaCalcMjs.calcLength)(this.layout.layoutBox.y);
                target.y.min = lead.target.y.min;
                target.y.max = target.y.min + yLength;
            }
            (0, _copyMjs.copyBoxInto)(targetWithTransforms, target);
            /**
             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.
             * This is the final box that we will then project into by calculating a transform delta and
             * applying it to the corrected box.
             */ (0, _deltaApplyMjs.transformBox)(targetWithTransforms, latestValues);
            /**
             * Update the delta between the corrected box and the final target box, after
             * user-set transforms are applied to it. This will be used by the renderer to
             * create a transform style that will reproject the element from its layout layout
             * into the desired bounding box.
             */ (0, _deltaCalcMjs.calcBoxDelta)(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);
        }
        registerSharedNode(layoutId, node) {
            if (!this.sharedNodes.has(layoutId)) this.sharedNodes.set(layoutId, new (0, _stackMjs.NodeStack)());
            const stack = this.sharedNodes.get(layoutId);
            stack.add(node);
            const config = node.options.initialPromotionConfig;
            node.promote({
                transition: config ? config.transition : undefined,
                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity ? config.shouldPreserveFollowOpacity(node) : undefined
            });
        }
        isLead() {
            const stack = this.getStack();
            return stack ? stack.lead === this : true;
        }
        getLead() {
            const { layoutId } = this.options;
            return layoutId ? this.getStack()?.lead || this : this;
        }
        getPrevLead() {
            const { layoutId } = this.options;
            return layoutId ? this.getStack()?.prevLead : undefined;
        }
        getStack() {
            const { layoutId } = this.options;
            if (layoutId) return this.root.sharedNodes.get(layoutId);
        }
        promote({ needsReset, transition, preserveFollowOpacity } = {}) {
            const stack = this.getStack();
            if (stack) stack.promote(this, preserveFollowOpacity);
            if (needsReset) {
                this.projectionDelta = undefined;
                this.needsReset = true;
            }
            if (transition) this.setOptions({
                transition
            });
        }
        relegate() {
            const stack = this.getStack();
            if (stack) return stack.relegate(this);
            else return false;
        }
        resetSkewAndRotation() {
            const { visualElement } = this.options;
            if (!visualElement) return;
            // If there's no detected skew or rotation values, we can early return without a forced render.
            let hasDistortingTransform = false;
            /**
             * An unrolled check for rotation values. Most elements don't have any rotation and
             * skipping the nested loop and new object creation is 50% faster.
             */ const { latestValues } = visualElement;
            if (latestValues.z || latestValues.rotate || latestValues.rotateX || latestValues.rotateY || latestValues.rotateZ || latestValues.skewX || latestValues.skewY) hasDistortingTransform = true;
            // If there's no distorting values, we don't need to do any more.
            if (!hasDistortingTransform) return;
            const resetValues = {};
            if (latestValues.z) resetDistortingTransform("z", visualElement, resetValues, this.animationValues);
            // Check the skew and rotate value of all axes and reset to 0
            for(let i = 0; i < transformAxes.length; i++){
                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);
                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);
            }
            // Force a render of this element to apply the transform with all skews and rotations
            // set to 0.
            visualElement.render();
            // Put back all the values we reset
            for(const key in resetValues){
                visualElement.setStaticValue(key, resetValues[key]);
                if (this.animationValues) this.animationValues[key] = resetValues[key];
            }
            // Schedule a render for the next frame. This ensures we won't visually
            // see the element with the reset rotate value applied.
            visualElement.scheduleRender();
        }
        applyProjectionStyles(targetStyle, styleProp) {
            if (!this.instance || this.isSVG) return;
            if (!this.isVisible) {
                targetStyle.visibility = "hidden";
                return;
            }
            const transformTemplate = this.getTransformTemplate();
            if (this.needsReset) {
                this.needsReset = false;
                targetStyle.visibility = "";
                targetStyle.opacity = "";
                targetStyle.pointerEvents = (0, _resolveMotionValueMjs.resolveMotionValue)(styleProp?.pointerEvents) || "";
                targetStyle.transform = transformTemplate ? transformTemplate(this.latestValues, "") : "none";
                return;
            }
            const lead = this.getLead();
            if (!this.projectionDelta || !this.layout || !lead.target) {
                if (this.options.layoutId) {
                    targetStyle.opacity = this.latestValues.opacity !== undefined ? this.latestValues.opacity : 1;
                    targetStyle.pointerEvents = (0, _resolveMotionValueMjs.resolveMotionValue)(styleProp?.pointerEvents) || "";
                }
                if (this.hasProjected && !(0, _hasTransformMjs.hasTransform)(this.latestValues)) {
                    targetStyle.transform = transformTemplate ? transformTemplate({}, "") : "none";
                    this.hasProjected = false;
                }
                return;
            }
            targetStyle.visibility = "";
            const valuesToRender = lead.animationValues || lead.latestValues;
            this.applyTransformsToTarget();
            let transform = (0, _transformMjs.buildProjectionTransform)(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);
            if (transformTemplate) transform = transformTemplate(valuesToRender, transform);
            targetStyle.transform = transform;
            const { x, y } = this.projectionDelta;
            targetStyle.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;
            if (lead.animationValues) /**
                 * If the lead component is animating, assign this either the entering/leaving
                 * opacity
                 */ targetStyle.opacity = lead === this ? valuesToRender.opacity ?? this.latestValues.opacity ?? 1 : this.preserveOpacity ? this.latestValues.opacity : valuesToRender.opacityExit;
            else /**
                 * Or we're not animating at all, set the lead component to its layout
                 * opacity and other components to hidden.
                 */ targetStyle.opacity = lead === this ? valuesToRender.opacity !== undefined ? valuesToRender.opacity : "" : valuesToRender.opacityExit !== undefined ? valuesToRender.opacityExit : 0;
            /**
             * Apply scale correction
             */ for(const key in 0, _scaleCorrectionMjs.scaleCorrectors){
                if (valuesToRender[key] === undefined) continue;
                const { correct, applyTo, isCSSVariable } = (0, _scaleCorrectionMjs.scaleCorrectors)[key];
                /**
                 * Only apply scale correction to the value if we have an
                 * active projection transform. Otherwise these values become
                 * vulnerable to distortion if the element changes size without
                 * a corresponding layout animation.
                 */ const corrected = transform === "none" ? valuesToRender[key] : correct(valuesToRender[key], lead);
                if (applyTo) {
                    const num = applyTo.length;
                    for(let i = 0; i < num; i++)targetStyle[applyTo[i]] = corrected;
                } else // If this is a CSS variable, set it directly on the instance.
                // Replacing this function from creating styles to setting them
                // would be a good place to remove per frame object creation
                if (isCSSVariable) this.options.visualElement.renderState.vars[key] = corrected;
                else targetStyle[key] = corrected;
            }
            /**
             * Disable pointer events on follow components. This is to ensure
             * that if a follow component covers a lead component it doesn't block
             * pointer events on the lead.
             */ if (this.options.layoutId) targetStyle.pointerEvents = lead === this ? (0, _resolveMotionValueMjs.resolveMotionValue)(styleProp?.pointerEvents) || "" : "none";
        }
        clearSnapshot() {
            this.resumeFrom = this.snapshot = undefined;
        }
        // Only run on root
        resetTree() {
            this.root.nodes.forEach((node)=>node.currentAnimation?.stop());
            this.root.nodes.forEach(clearMeasurements);
            this.root.sharedNodes.clear();
        }
    };
}
function updateLayout(node) {
    node.updateLayout();
}
function notifyLayoutUpdate(node) {
    const snapshot = node.resumeFrom?.snapshot || node.snapshot;
    if (node.isLead() && node.layout && snapshot && node.hasListeners("didUpdate")) {
        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;
        const { animationType } = node.options;
        const isShared = snapshot.source !== node.layout.source;
        // TODO Maybe we want to also resize the layout snapshot so we don't trigger
        // animations for instance if layout="size" and an element has only changed position
        if (animationType === "size") (0, _eachAxisMjs.eachAxis)((axis)=>{
            const axisSnapshot = isShared ? snapshot.measuredBox[axis] : snapshot.layoutBox[axis];
            const length = (0, _deltaCalcMjs.calcLength)(axisSnapshot);
            axisSnapshot.min = layout[axis].min;
            axisSnapshot.max = axisSnapshot.min + length;
        });
        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) (0, _eachAxisMjs.eachAxis)((axis)=>{
            const axisSnapshot = isShared ? snapshot.measuredBox[axis] : snapshot.layoutBox[axis];
            const length = (0, _deltaCalcMjs.calcLength)(layout[axis]);
            axisSnapshot.max = axisSnapshot.min + length;
            /**
                 * Ensure relative target gets resized and rerendererd
                 */ if (node.relativeTarget && !node.currentAnimation) {
                node.isProjectionDirty = true;
                node.relativeTarget[axis].max = node.relativeTarget[axis].min + length;
            }
        });
        const layoutDelta = (0, _modelsMjs.createDelta)();
        (0, _deltaCalcMjs.calcBoxDelta)(layoutDelta, layout, snapshot.layoutBox);
        const visualDelta = (0, _modelsMjs.createDelta)();
        if (isShared) (0, _deltaCalcMjs.calcBoxDelta)(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);
        else (0, _deltaCalcMjs.calcBoxDelta)(visualDelta, layout, snapshot.layoutBox);
        const hasLayoutChanged = !(0, _utilsMjs.isDeltaZero)(layoutDelta);
        let hasRelativeLayoutChanged = false;
        if (!node.resumeFrom) {
            const relativeParent = node.getClosestProjectingParent();
            /**
             * If the relativeParent is itself resuming from a different element then
             * the relative snapshot is not relavent
             */ if (relativeParent && !relativeParent.resumeFrom) {
                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;
                if (parentSnapshot && parentLayout) {
                    const relativeSnapshot = (0, _modelsMjs.createBox)();
                    (0, _deltaCalcMjs.calcRelativePosition)(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);
                    const relativeLayout = (0, _modelsMjs.createBox)();
                    (0, _deltaCalcMjs.calcRelativePosition)(relativeLayout, layout, parentLayout.layoutBox);
                    if (!(0, _utilsMjs.boxEqualsRounded)(relativeSnapshot, relativeLayout)) hasRelativeLayoutChanged = true;
                    if (relativeParent.options.layoutRoot) {
                        node.relativeTarget = relativeLayout;
                        node.relativeTargetOrigin = relativeSnapshot;
                        node.relativeParent = relativeParent;
                    }
                }
            }
        }
        node.notifyListeners("didUpdate", {
            layout,
            snapshot,
            delta: visualDelta,
            layoutDelta,
            hasLayoutChanged,
            hasRelativeLayoutChanged
        });
    } else if (node.isLead()) {
        const { onExitComplete } = node.options;
        onExitComplete && onExitComplete();
    }
    /**
     * Clearing transition
     * TODO: Investigate why this transition is being passed in as {type: false } from Framer
     * and why we need it at all
     */ node.options.transition = undefined;
}
function propagateDirtyNodes(node) {
    /**
     * Increase debug counter for nodes encountered this frame
     */ if ((0, _motionDom.statsBuffer).value) metrics.nodes++;
    if (!node.parent) return;
    /**
     * If this node isn't projecting, propagate isProjectionDirty. It will have
     * no performance impact but it will allow the next child that *is* projecting
     * but *isn't* dirty to just check its parent to see if *any* ancestor needs
     * correcting.
     */ if (!node.isProjecting()) node.isProjectionDirty = node.parent.isProjectionDirty;
    /**
     * Propagate isSharedProjectionDirty and isTransformDirty
     * throughout the whole tree. A future revision can take another look at
     * this but for safety we still recalcualte shared nodes.
     */ node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty || node.parent.isProjectionDirty || node.parent.isSharedProjectionDirty));
    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);
}
function cleanDirtyNodes(node) {
    node.isProjectionDirty = node.isSharedProjectionDirty = node.isTransformDirty = false;
}
function clearSnapshot(node) {
    node.clearSnapshot();
}
function clearMeasurements(node) {
    node.clearMeasurements();
}
function clearIsLayoutDirty(node) {
    node.isLayoutDirty = false;
}
function resetTransformStyle(node) {
    const { visualElement } = node.options;
    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) visualElement.notify("BeforeLayoutMeasure");
    node.resetTransform();
}
function finishAnimation(node) {
    node.finishAnimation();
    node.targetDelta = node.relativeTarget = node.target = undefined;
    node.isProjectionDirty = true;
}
function resolveTargetDelta(node) {
    node.resolveTargetDelta();
}
function calcProjection(node) {
    node.calcProjection();
}
function resetSkewAndRotation(node) {
    node.resetSkewAndRotation();
}
function removeLeadSnapshots(stack) {
    stack.removeLeadSnapshot();
}
function mixAxisDelta(output, delta, p) {
    output.translate = (0, _motionDom.mixNumber)(delta.translate, 0, p);
    output.scale = (0, _motionDom.mixNumber)(delta.scale, 1, p);
    output.origin = delta.origin;
    output.originPoint = delta.originPoint;
}
function mixAxis(output, from, to, p) {
    output.min = (0, _motionDom.mixNumber)(from.min, to.min, p);
    output.max = (0, _motionDom.mixNumber)(from.max, to.max, p);
}
function mixBox(output, from, to, p) {
    mixAxis(output.x, from.x, to.x, p);
    mixAxis(output.y, from.y, to.y, p);
}
function hasOpacityCrossfade(node) {
    return node.animationValues && node.animationValues.opacityExit !== undefined;
}
const defaultLayoutTransition = {
    duration: 0.45,
    ease: [
        0.4,
        0,
        0.1,
        1
    ]
};
const userAgentContains = (string)=>typeof navigator !== "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().includes(string);
/**
 * Measured bounding boxes must be rounded in Safari and
 * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements
 * can appear to jump.
 */ const roundPoint = userAgentContains("applewebkit/") && !userAgentContains("chrome/") ? Math.round : (0, _motionUtils.noop);
function roundAxis(axis) {
    // Round to the nearest .5 pixels to support subpixel layouts
    axis.min = roundPoint(axis.min);
    axis.max = roundPoint(axis.max);
}
function roundBox(box) {
    roundAxis(box.x);
    roundAxis(box.y);
}
function shouldAnimatePositionOnly(animationType, snapshot, layout) {
    return animationType === "position" || animationType === "preserve-aspect" && !(0, _deltaCalcMjs.isNear)((0, _utilsMjs.aspectRatio)(snapshot), (0, _utilsMjs.aspectRatio)(layout), 0.2);
}
function checkNodeWasScrollRoot(node) {
    return node !== node.root && node.scroll?.wasRoot;
}

},{"motion-dom":"lRV3L","motion-utils":"33eo7","../../animation/animate/single-value.mjs":"aYfvY","../../animation/optimized-appear/get-appear-id.mjs":"4jsue","../../render/utils/flat-tree.mjs":"Ka8Gd","../../utils/delay.mjs":"j9zh1","../../value/utils/resolve-motion-value.mjs":"2OJmr","../animation/mix-values.mjs":"8406o","../geometry/copy.mjs":"eKR1N","../geometry/delta-apply.mjs":"2oNMY","../geometry/delta-calc.mjs":"ehySy","../geometry/delta-remove.mjs":"8vEIF","../geometry/models.mjs":"4dIK0","../geometry/utils.mjs":"cd5vd","../shared/stack.mjs":"4S88p","../styles/scale-correction.mjs":"7awp8","../styles/transform.mjs":"asO8I","../utils/each-axis.mjs":"d5V2Q","../utils/has-transform.mjs":"gMVQ7","./state.mjs":"7xVuE","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aYfvY":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "animateSingleValue", ()=>animateSingleValue);
var _motionDom = require("motion-dom");
var _motionValueMjs = require("../interfaces/motion-value.mjs");
function animateSingleValue(value, keyframes, options) {
    const motionValue$1 = (0, _motionDom.isMotionValue)(value) ? value : (0, _motionDom.motionValue)(value);
    motionValue$1.start((0, _motionValueMjs.animateMotionValue)("", motionValue$1, keyframes, options));
    return motionValue$1.animation;
}

},{"motion-dom":"lRV3L","../interfaces/motion-value.mjs":"jt6r0","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"Ka8Gd":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "FlatTree", ()=>FlatTree);
var _motionUtils = require("motion-utils");
var _compareByDepthMjs = require("./compare-by-depth.mjs");
class FlatTree {
    constructor(){
        this.children = [];
        this.isDirty = false;
    }
    add(child) {
        (0, _motionUtils.addUniqueItem)(this.children, child);
        this.isDirty = true;
    }
    remove(child) {
        (0, _motionUtils.removeItem)(this.children, child);
        this.isDirty = true;
    }
    forEach(callback) {
        this.isDirty && this.children.sort((0, _compareByDepthMjs.compareByDepth));
        this.isDirty = false;
        this.children.forEach(callback);
    }
}

},{"motion-utils":"33eo7","./compare-by-depth.mjs":"4QVF7","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4QVF7":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "compareByDepth", ()=>compareByDepth);
const compareByDepth = (a, b)=>a.depth - b.depth;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"j9zh1":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "delay", ()=>delay);
parcelHelpers.export(exports, "delayInSeconds", ()=>delayInSeconds);
var _motionDom = require("motion-dom");
var _motionUtils = require("motion-utils");
/**
 * Timeout defined in ms
 */ function delay(callback, timeout) {
    const start = (0, _motionDom.time).now();
    const checkElapsed = ({ timestamp })=>{
        const elapsed = timestamp - start;
        if (elapsed >= timeout) {
            (0, _motionDom.cancelFrame)(checkElapsed);
            callback(elapsed - timeout);
        }
    };
    (0, _motionDom.frame).setup(checkElapsed, true);
    return ()=>(0, _motionDom.cancelFrame)(checkElapsed);
}
function delayInSeconds(callback, timeout) {
    return delay(callback, (0, _motionUtils.secondsToMilliseconds)(timeout));
}

},{"motion-dom":"lRV3L","motion-utils":"33eo7","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8406o":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "mixValues", ()=>mixValues);
var _motionDom = require("motion-dom");
var _motionUtils = require("motion-utils");
const borders = [
    "TopLeft",
    "TopRight",
    "BottomLeft",
    "BottomRight"
];
const numBorders = borders.length;
const asNumber = (value)=>typeof value === "string" ? parseFloat(value) : value;
const isPx = (value)=>typeof value === "number" || (0, _motionDom.px).test(value);
function mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {
    if (shouldCrossfadeOpacity) {
        target.opacity = (0, _motionDom.mixNumber)(0, lead.opacity ?? 1, easeCrossfadeIn(progress));
        target.opacityExit = (0, _motionDom.mixNumber)(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));
    } else if (isOnlyMember) target.opacity = (0, _motionDom.mixNumber)(follow.opacity ?? 1, lead.opacity ?? 1, progress);
    /**
     * Mix border radius
     */ for(let i = 0; i < numBorders; i++){
        const borderLabel = `border${borders[i]}Radius`;
        let followRadius = getRadius(follow, borderLabel);
        let leadRadius = getRadius(lead, borderLabel);
        if (followRadius === undefined && leadRadius === undefined) continue;
        followRadius || (followRadius = 0);
        leadRadius || (leadRadius = 0);
        const canMix = followRadius === 0 || leadRadius === 0 || isPx(followRadius) === isPx(leadRadius);
        if (canMix) {
            target[borderLabel] = Math.max((0, _motionDom.mixNumber)(asNumber(followRadius), asNumber(leadRadius), progress), 0);
            if ((0, _motionDom.percent).test(leadRadius) || (0, _motionDom.percent).test(followRadius)) target[borderLabel] += "%";
        } else target[borderLabel] = leadRadius;
    }
    /**
     * Mix rotation
     */ if (follow.rotate || lead.rotate) target.rotate = (0, _motionDom.mixNumber)(follow.rotate || 0, lead.rotate || 0, progress);
}
function getRadius(values, radiusName) {
    return values[radiusName] !== undefined ? values[radiusName] : values.borderRadius;
}
// /**
//  * We only want to mix the background color if there's a follow element
//  * that we're not crossfading opacity between. For instance with switch
//  * AnimateSharedLayout animations, this helps the illusion of a continuous
//  * element being animated but also cuts down on the number of paints triggered
//  * for elements where opacity is doing that work for us.
//  */
// if (
//     !hasFollowElement &&
//     latestLeadValues.backgroundColor &&
//     latestFollowValues.backgroundColor
// ) {
//     /**
//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.
//      * We could probably create a mixer that runs at the start of the animation but
//      * the idea behind the crossfader is that it runs dynamically between two potentially
//      * changing targets (ie opacity or borderRadius may be animating independently via variants)
//      */
//     leadState.backgroundColor = followState.backgroundColor = mixColor(
//         latestFollowValues.backgroundColor as string,
//         latestLeadValues.backgroundColor as string
//     )(p)
// }
const easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, (0, _motionUtils.circOut));
const easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, (0, _motionUtils.noop));
function compress(min, max, easing) {
    return (p)=>{
        // Could replace ifs with clamp
        if (p < min) return 0;
        if (p > max) return 1;
        return easing((0, _motionUtils.progress)(min, max, p));
    };
}

},{"motion-dom":"lRV3L","motion-utils":"33eo7","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"eKR1N":[function(require,module,exports,__globalThis) {
/**
 * Reset an axis to the provided origin box.
 *
 * This is a mutative operation.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "copyAxisDeltaInto", ()=>copyAxisDeltaInto);
parcelHelpers.export(exports, "copyAxisInto", ()=>copyAxisInto);
parcelHelpers.export(exports, "copyBoxInto", ()=>copyBoxInto);
function copyAxisInto(axis, originAxis) {
    axis.min = originAxis.min;
    axis.max = originAxis.max;
}
/**
 * Reset a box to the provided origin box.
 *
 * This is a mutative operation.
 */ function copyBoxInto(box, originBox) {
    copyAxisInto(box.x, originBox.x);
    copyAxisInto(box.y, originBox.y);
}
/**
 * Reset a delta to the provided origin box.
 *
 * This is a mutative operation.
 */ function copyAxisDeltaInto(delta, originDelta) {
    delta.translate = originDelta.translate;
    delta.scale = originDelta.scale;
    delta.originPoint = originDelta.originPoint;
    delta.origin = originDelta.origin;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8vEIF":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "removeAxisDelta", ()=>removeAxisDelta);
parcelHelpers.export(exports, "removeAxisTransforms", ()=>removeAxisTransforms);
parcelHelpers.export(exports, "removeBoxTransforms", ()=>removeBoxTransforms);
parcelHelpers.export(exports, "removePointDelta", ()=>removePointDelta);
var _motionDom = require("motion-dom");
var _deltaApplyMjs = require("./delta-apply.mjs");
/**
 * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse
 */ function removePointDelta(point, translate, scale, originPoint, boxScale) {
    point -= translate;
    point = (0, _deltaApplyMjs.scalePoint)(point, 1 / scale, originPoint);
    if (boxScale !== undefined) point = (0, _deltaApplyMjs.scalePoint)(point, 1 / boxScale, originPoint);
    return point;
}
/**
 * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse
 */ function removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {
    if ((0, _motionDom.percent).test(translate)) {
        translate = parseFloat(translate);
        const relativeProgress = (0, _motionDom.mixNumber)(sourceAxis.min, sourceAxis.max, translate / 100);
        translate = relativeProgress - sourceAxis.min;
    }
    if (typeof translate !== "number") return;
    let originPoint = (0, _motionDom.mixNumber)(originAxis.min, originAxis.max, origin);
    if (axis === originAxis) originPoint -= translate;
    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);
    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);
}
/**
 * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse
 * and acts as a bridge between motion values and removeAxisDelta
 */ function removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {
    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);
}
/**
 * The names of the motion values we want to apply as translation, scale and origin.
 */ const xKeys = [
    "x",
    "scaleX",
    "originX"
];
const yKeys = [
    "y",
    "scaleY",
    "originY"
];
/**
 * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse
 * and acts as a bridge between motion values and removeAxisDelta
 */ function removeBoxTransforms(box, transforms, originBox, sourceBox) {
    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);
    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);
}

},{"motion-dom":"lRV3L","./delta-apply.mjs":"2oNMY","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cd5vd":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "aspectRatio", ()=>aspectRatio);
parcelHelpers.export(exports, "axisDeltaEquals", ()=>axisDeltaEquals);
parcelHelpers.export(exports, "axisEquals", ()=>axisEquals);
parcelHelpers.export(exports, "axisEqualsRounded", ()=>axisEqualsRounded);
parcelHelpers.export(exports, "boxEquals", ()=>boxEquals);
parcelHelpers.export(exports, "boxEqualsRounded", ()=>boxEqualsRounded);
parcelHelpers.export(exports, "isDeltaZero", ()=>isDeltaZero);
var _deltaCalcMjs = require("./delta-calc.mjs");
function isAxisDeltaZero(delta) {
    return delta.translate === 0 && delta.scale === 1;
}
function isDeltaZero(delta) {
    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);
}
function axisEquals(a, b) {
    return a.min === b.min && a.max === b.max;
}
function boxEquals(a, b) {
    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);
}
function axisEqualsRounded(a, b) {
    return Math.round(a.min) === Math.round(b.min) && Math.round(a.max) === Math.round(b.max);
}
function boxEqualsRounded(a, b) {
    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);
}
function aspectRatio(box) {
    return (0, _deltaCalcMjs.calcLength)(box.x) / (0, _deltaCalcMjs.calcLength)(box.y);
}
function axisDeltaEquals(a, b) {
    return a.translate === b.translate && a.scale === b.scale && a.originPoint === b.originPoint;
}

},{"./delta-calc.mjs":"ehySy","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4S88p":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "NodeStack", ()=>NodeStack);
var _motionUtils = require("motion-utils");
class NodeStack {
    constructor(){
        this.members = [];
    }
    add(node) {
        (0, _motionUtils.addUniqueItem)(this.members, node);
        node.scheduleRender();
    }
    remove(node) {
        (0, _motionUtils.removeItem)(this.members, node);
        if (node === this.prevLead) this.prevLead = undefined;
        if (node === this.lead) {
            const prevLead = this.members[this.members.length - 1];
            if (prevLead) this.promote(prevLead);
        }
    }
    relegate(node) {
        const indexOfNode = this.members.findIndex((member)=>node === member);
        if (indexOfNode === 0) return false;
        /**
         * Find the next projection node that is present
         */ let prevLead;
        for(let i = indexOfNode; i >= 0; i--){
            const member = this.members[i];
            if (member.isPresent !== false) {
                prevLead = member;
                break;
            }
        }
        if (prevLead) {
            this.promote(prevLead);
            return true;
        } else return false;
    }
    promote(node, preserveFollowOpacity) {
        const prevLead = this.lead;
        if (node === prevLead) return;
        this.prevLead = prevLead;
        this.lead = node;
        node.show();
        if (prevLead) {
            prevLead.instance && prevLead.scheduleRender();
            node.scheduleRender();
            node.resumeFrom = prevLead;
            if (preserveFollowOpacity) node.resumeFrom.preserveOpacity = true;
            if (prevLead.snapshot) {
                node.snapshot = prevLead.snapshot;
                node.snapshot.latestValues = prevLead.animationValues || prevLead.latestValues;
            }
            if (node.root && node.root.isUpdating) node.isLayoutDirty = true;
            const { crossfade } = node.options;
            if (crossfade === false) prevLead.hide();
        /**
             * TODO:
             *   - Test border radius when previous node was deleted
             *   - boxShadow mixing
             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)
             *   - Shared between element A in transformed container and element B (transform stays the same or changes)
             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)
             * ---
             *   - Crossfade opacity of root nodes
             *   - layoutId changes after animation
             *   - layoutId changes mid animation
             */ }
    }
    exitAnimationComplete() {
        this.members.forEach((node)=>{
            const { options, resumingFrom } = node;
            options.onExitComplete && options.onExitComplete();
            if (resumingFrom) resumingFrom.options.onExitComplete && resumingFrom.options.onExitComplete();
        });
    }
    scheduleRender() {
        this.members.forEach((node)=>{
            node.instance && node.scheduleRender(false);
        });
    }
    /**
     * Clear any leads that have been removed this render to prevent them from being
     * used in future animations and to prevent memory leaks
     */ removeLeadSnapshot() {
        if (this.lead && this.lead.snapshot) this.lead.snapshot = undefined;
    }
}

},{"motion-utils":"33eo7","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"asO8I":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "buildProjectionTransform", ()=>buildProjectionTransform);
function buildProjectionTransform(delta, treeScale, latestTransform) {
    let transform = "";
    /**
     * The translations we use to calculate are always relative to the viewport coordinate space.
     * But when we apply scales, we also scale the coordinate space of an element and its children.
     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need
     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.
     */ const xTranslate = delta.x.translate / treeScale.x;
    const yTranslate = delta.y.translate / treeScale.y;
    const zTranslate = latestTransform?.z || 0;
    if (xTranslate || yTranslate || zTranslate) transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;
    /**
     * Apply scale correction for the tree transform.
     * This will apply scale to the screen-orientated axes.
     */ if (treeScale.x !== 1 || treeScale.y !== 1) transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;
    if (latestTransform) {
        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;
        if (transformPerspective) transform = `perspective(${transformPerspective}px) ${transform}`;
        if (rotate) transform += `rotate(${rotate}deg) `;
        if (rotateX) transform += `rotateX(${rotateX}deg) `;
        if (rotateY) transform += `rotateY(${rotateY}deg) `;
        if (skewX) transform += `skewX(${skewX}deg) `;
        if (skewY) transform += `skewY(${skewY}deg) `;
    }
    /**
     * Apply scale to match the size of the element to the size we want it.
     * This will apply scale to the element-orientated axes.
     */ const elementScaleX = delta.x.scale * treeScale.x;
    const elementScaleY = delta.y.scale * treeScale.y;
    if (elementScaleX !== 1 || elementScaleY !== 1) transform += `scale(${elementScaleX}, ${elementScaleY})`;
    return transform || "none";
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2AmVY":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "DocumentProjectionNode", ()=>DocumentProjectionNode);
var _addDomEventMjs = require("../../events/add-dom-event.mjs");
var _createProjectionNodeMjs = require("./create-projection-node.mjs");
const DocumentProjectionNode = (0, _createProjectionNodeMjs.createProjectionNode)({
    attachResizeListener: (ref, notify)=>(0, _addDomEventMjs.addDomEvent)(ref, "resize", notify),
    measureScroll: ()=>({
            x: document.documentElement.scrollLeft || document.body.scrollLeft,
            y: document.documentElement.scrollTop || document.body.scrollTop
        }),
    checkIsScrollRoot: ()=>true
});

},{"../../events/add-dom-event.mjs":"2Nf2y","./create-projection-node.mjs":"ejlSY","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"i6mHa":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "gestureAnimations", ()=>gestureAnimations);
var _hoverMjs = require("../../gestures/hover.mjs");
var _focusMjs = require("../../gestures/focus.mjs");
var _pressMjs = require("../../gestures/press.mjs");
var _indexMjs = require("./viewport/index.mjs");
const gestureAnimations = {
    inView: {
        Feature: (0, _indexMjs.InViewFeature)
    },
    tap: {
        Feature: (0, _pressMjs.PressGesture)
    },
    focus: {
        Feature: (0, _focusMjs.FocusGesture)
    },
    hover: {
        Feature: (0, _hoverMjs.HoverGesture)
    }
};

},{"../../gestures/hover.mjs":"2gGC3","../../gestures/focus.mjs":"8Ay7c","../../gestures/press.mjs":"fAj3U","./viewport/index.mjs":"5Y0mk","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2gGC3":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "HoverGesture", ()=>HoverGesture);
var _motionDom = require("motion-dom");
var _eventInfoMjs = require("../events/event-info.mjs");
var _featureMjs = require("../motion/features/Feature.mjs");
function handleHoverEvent(node, event, lifecycle) {
    const { props } = node;
    if (node.animationState && props.whileHover) node.animationState.setActive("whileHover", lifecycle === "Start");
    const eventName = "onHover" + lifecycle;
    const callback = props[eventName];
    if (callback) (0, _motionDom.frame).postRender(()=>callback(event, (0, _eventInfoMjs.extractEventInfo)(event)));
}
class HoverGesture extends (0, _featureMjs.Feature) {
    mount() {
        const { current } = this.node;
        if (!current) return;
        this.unmount = (0, _motionDom.hover)(current, (_element, startEvent)=>{
            handleHoverEvent(this.node, startEvent, "Start");
            return (endEvent)=>handleHoverEvent(this.node, endEvent, "End");
        });
    }
    unmount() {}
}

},{"motion-dom":"lRV3L","../events/event-info.mjs":"44qRT","../motion/features/Feature.mjs":"9D9gy","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8Ay7c":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "FocusGesture", ()=>FocusGesture);
var _motionUtils = require("motion-utils");
var _addDomEventMjs = require("../events/add-dom-event.mjs");
var _featureMjs = require("../motion/features/Feature.mjs");
class FocusGesture extends (0, _featureMjs.Feature) {
    constructor(){
        super(...arguments);
        this.isActive = false;
    }
    onFocus() {
        let isFocusVisible = false;
        /**
         * If this element doesn't match focus-visible then don't
         * apply whileHover. But, if matches throws that focus-visible
         * is not a valid selector then in that browser outline styles will be applied
         * to the element by default and we want to match that behaviour with whileFocus.
         */ try {
            isFocusVisible = this.node.current.matches(":focus-visible");
        } catch (e) {
            isFocusVisible = true;
        }
        if (!isFocusVisible || !this.node.animationState) return;
        this.node.animationState.setActive("whileFocus", true);
        this.isActive = true;
    }
    onBlur() {
        if (!this.isActive || !this.node.animationState) return;
        this.node.animationState.setActive("whileFocus", false);
        this.isActive = false;
    }
    mount() {
        this.unmount = (0, _motionUtils.pipe)((0, _addDomEventMjs.addDomEvent)(this.node.current, "focus", ()=>this.onFocus()), (0, _addDomEventMjs.addDomEvent)(this.node.current, "blur", ()=>this.onBlur()));
    }
    unmount() {}
}

},{"motion-utils":"33eo7","../events/add-dom-event.mjs":"2Nf2y","../motion/features/Feature.mjs":"9D9gy","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fAj3U":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "PressGesture", ()=>PressGesture);
var _motionDom = require("motion-dom");
var _eventInfoMjs = require("../events/event-info.mjs");
var _featureMjs = require("../motion/features/Feature.mjs");
function handlePressEvent(node, event, lifecycle) {
    const { props } = node;
    if (node.current instanceof HTMLButtonElement && node.current.disabled) return;
    if (node.animationState && props.whileTap) node.animationState.setActive("whileTap", lifecycle === "Start");
    const eventName = "onTap" + (lifecycle === "End" ? "" : lifecycle);
    const callback = props[eventName];
    if (callback) (0, _motionDom.frame).postRender(()=>callback(event, (0, _eventInfoMjs.extractEventInfo)(event)));
}
class PressGesture extends (0, _featureMjs.Feature) {
    mount() {
        const { current } = this.node;
        if (!current) return;
        this.unmount = (0, _motionDom.press)(current, (_element, startEvent)=>{
            handlePressEvent(this.node, startEvent, "Start");
            return (endEvent, { success })=>handlePressEvent(this.node, endEvent, success ? "End" : "Cancel");
        }, {
            useGlobalTarget: this.node.props.globalTapTarget
        });
    }
    unmount() {}
}

},{"motion-dom":"lRV3L","../events/event-info.mjs":"44qRT","../motion/features/Feature.mjs":"9D9gy","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5Y0mk":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "InViewFeature", ()=>InViewFeature);
var _featureMjs = require("../Feature.mjs");
var _observersMjs = require("./observers.mjs");
const thresholdNames = {
    some: 0,
    all: 1
};
class InViewFeature extends (0, _featureMjs.Feature) {
    constructor(){
        super(...arguments);
        this.hasEnteredView = false;
        this.isInView = false;
    }
    startObserver() {
        this.unmount();
        const { viewport = {} } = this.node.getProps();
        const { root, margin: rootMargin, amount = "some", once } = viewport;
        const options = {
            root: root ? root.current : undefined,
            rootMargin,
            threshold: typeof amount === "number" ? amount : thresholdNames[amount]
        };
        const onIntersectionUpdate = (entry)=>{
            const { isIntersecting } = entry;
            /**
             * If there's been no change in the viewport state, early return.
             */ if (this.isInView === isIntersecting) return;
            this.isInView = isIntersecting;
            /**
             * Handle hasEnteredView. If this is only meant to run once, and
             * element isn't visible, early return. Otherwise set hasEnteredView to true.
             */ if (once && !isIntersecting && this.hasEnteredView) return;
            else if (isIntersecting) this.hasEnteredView = true;
            if (this.node.animationState) this.node.animationState.setActive("whileInView", isIntersecting);
            /**
             * Use the latest committed props rather than the ones in scope
             * when this observer is created
             */ const { onViewportEnter, onViewportLeave } = this.node.getProps();
            const callback = isIntersecting ? onViewportEnter : onViewportLeave;
            callback && callback(entry);
        };
        return (0, _observersMjs.observeIntersection)(this.node.current, options, onIntersectionUpdate);
    }
    mount() {
        this.startObserver();
    }
    update() {
        if (typeof IntersectionObserver === "undefined") return;
        const { props, prevProps } = this.node;
        const hasOptionsChanged = [
            "amount",
            "margin",
            "root"
        ].some(hasViewportOptionChanged(props, prevProps));
        if (hasOptionsChanged) this.startObserver();
    }
    unmount() {}
}
function hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {
    return (name)=>viewport[name] !== prevViewport[name];
}

},{"../Feature.mjs":"9D9gy","./observers.mjs":"cPqB2","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cPqB2":[function(require,module,exports,__globalThis) {
/**
 * Map an IntersectionHandler callback to an element. We only ever make one handler for one
 * element, so even though these handlers might all be triggered by different
 * observers, we can keep them in the same map.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "observeIntersection", ()=>observeIntersection);
const observerCallbacks = new WeakMap();
/**
 * Multiple observers can be created for multiple element/document roots. Each with
 * different settings. So here we store dictionaries of observers to each root,
 * using serialised settings (threshold/margin) as lookup keys.
 */ const observers = new WeakMap();
const fireObserverCallback = (entry)=>{
    const callback = observerCallbacks.get(entry.target);
    callback && callback(entry);
};
const fireAllObserverCallbacks = (entries)=>{
    entries.forEach(fireObserverCallback);
};
function initIntersectionObserver({ root, ...options }) {
    const lookupRoot = root || document;
    /**
     * If we don't have an observer lookup map for this root, create one.
     */ if (!observers.has(lookupRoot)) observers.set(lookupRoot, {});
    const rootObservers = observers.get(lookupRoot);
    const key = JSON.stringify(options);
    /**
     * If we don't have an observer for this combination of root and settings,
     * create one.
     */ if (!rootObservers[key]) rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, {
        root,
        ...options
    });
    return rootObservers[key];
}
function observeIntersection(element, options, callback) {
    const rootInteresectionObserver = initIntersectionObserver(options);
    observerCallbacks.set(element, callback);
    rootInteresectionObserver.observe(element);
    return ()=>{
        observerCallbacks.delete(element);
        rootInteresectionObserver.unobserve(element);
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"57PFJ":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "layout", ()=>layout);
var _htmlprojectionNodeMjs = require("../../projection/node/HTMLProjectionNode.mjs");
var _measureLayoutMjs = require("./layout/MeasureLayout.mjs");
const layout = {
    layout: {
        ProjectionNode: (0, _htmlprojectionNodeMjs.HTMLProjectionNode),
        MeasureLayout: (0, _measureLayoutMjs.MeasureLayout)
    }
};

},{"../../projection/node/HTMLProjectionNode.mjs":"lPTdQ","./layout/MeasureLayout.mjs":"4XTZv","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"e2VPy":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$ddd6 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$ddd6.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$ddd6.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>PhotoUploadSection);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _sonner = require("sonner");
var _s = $RefreshSig$();
function PhotoUploadSection({ api_key }) {
    _s();
    const [files, setFiles] = (0, _react.useState)([]);
    const [loading, setLoading] = (0, _react.useState)(false);
    const fileInputRef = (0, _react.useRef)(null);
    const handleFileChange = (e)=>{
        if (e.target.files) setFiles(Array.from(e.target.files));
    };
    const fileToBase64 = (file)=>{
        return new Promise((resolve, reject)=>{
            const reader = new FileReader();
            reader.readAsDataURL(file);
            reader.onload = ()=>resolve(reader.result);
            reader.onerror = (error)=>reject(error);
        });
    };
    const handleUpload = async ()=>{
        if (files.length === 0) return;
        setLoading(true);
        (0, _sonner.toast)("\u041C\u043E\u043B\u044F, \u0438\u0437\u0447\u0430\u043A\u0430\u0439\u0442\u0435 \u2014 \u043A\u0430\u0447\u0432\u0430\u043D\u0435\u0442\u043E \u043C\u043E\u0436\u0435 \u0434\u0430 \u043E\u0442\u043D\u0435\u043C\u0435 \u0432\u0440\u0435\u043C\u0435...", {
            icon: "\u23F3"
        });
        try {
            const fileData = await Promise.all(files.map(async (file)=>{
                const base64 = await fileToBase64(file);
                return {
                    name: file.name,
                    type: file.type,
                    content: base64.split(",")[1]
                };
            }));
            const response = await fetch(`https://script.google.com/macros/s/AKfycbzDV5VONqU821MslSilc_y9zcE1o3vuiyuyg73L4rk9gFQN7FBQX37NVeLKmrRs5H4TiQ/exec?key=${api_key}`, {
                redirect: "follow",
                method: "POST",
                body: JSON.stringify({
                    files: fileData
                })
            });
            const data = await response.json();
            if (data.success) {
                (0, _sonner.toast).success("\u0411\u043B\u0430\u0433\u043E\u0434\u0430\u0440\u0438\u043C \u0437\u0430 \u0432\u0430\u0448\u0435\u0442\u043E \u043F\u043E\u0442\u0432\u044A\u0440\u0436\u0434\u0435\u043D\u0438\u0435! \u0421\u043D\u0438\u043C\u043A\u0438\u0442\u0435 \u0441\u0430 \u043A\u0430\u0447\u0435\u043D\u0438 \u0443\u0441\u043F\u0435\u0448\u043D\u043E.");
                setFiles([]);
                if (fileInputRef.current) fileInputRef.current.value = ""; // clears input
            } else (0, _sonner.toast).error("\u0412\u044A\u0437\u043D\u0438\u043A\u043D\u0430 \u0433\u0440\u0435\u0448\u043A\u0430 \u043F\u0440\u0438 \u043A\u0430\u0447\u0432\u0430\u043D\u0435\u0442\u043E. \u041C\u043E\u043B\u044F, \u043E\u043F\u0438\u0442\u0430\u0439\u0442\u0435 \u043E\u0442\u043D\u043E\u0432\u043E.");
        } catch (err) {
            console.error("Error uploading photos:", err);
            (0, _sonner.toast).error("\u0413\u0440\u0435\u0448\u043A\u0430 \u043F\u0440\u0438 \u043A\u0430\u0447\u0432\u0430\u043D\u0435\u0442\u043E. \u041C\u043E\u043B\u044F, \u043E\u043F\u0438\u0442\u0430\u0439\u0442\u0435 \u043E\u0442\u043D\u043E\u0432\u043E.");
        } finally{
            setLoading(false);
        }
    };
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("section", {
        id: "photos",
        className: "w-full py-12 px-6 bg-sand",
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
            className: "max-w-3xl mx-auto text-center space-y-4",
            children: [
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("h2", {
                    className: "text-3xl md:text-4xl mb-4 text-olivewood",
                    children: "\u0421\u043F\u043E\u0434\u0435\u043B\u0435\u0442\u0435 \u0432\u0430\u0448\u0438\u0442\u0435 \u0441\u043D\u0438\u043C\u043A\u0438"
                }, void 0, false, {
                    fileName: "src/components/PhotoUpload.tsx",
                    lineNumber: 78,
                    columnNumber: 9
                }, this),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                    className: "text-lg text-bark max-w-xl mx-auto",
                    children: "\u0410\u043A\u043E \u0441\u0442\u0435 \u0437\u0430\u0441\u043D\u0435\u043B\u0438 \u043A\u0440\u0430\u0441\u0438\u0432\u0438 \u043C\u043E\u043C\u0435\u043D\u0442\u0438 \u043E\u0442 \u0441\u0432\u0430\u0442\u0431\u0430\u0442\u0430, \u043C\u043E\u0436\u0435 \u0434\u0430 \u0433\u0438 \u043A\u0430\u0447\u0438\u0442\u0435 \u0442\u0443\u043A."
                }, void 0, false, {
                    fileName: "src/components/PhotoUpload.tsx",
                    lineNumber: 81,
                    columnNumber: 9
                }, this),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    className: "mt-6 bg-wedding-white/90 backdrop-blur-sm border border-sand/50 rounded-2xl shadow-md p-6 mx-auto space-y-3",
                    children: [
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                            ref: fileInputRef,
                            type: "file",
                            multiple: true,
                            accept: "image/*",
                            onChange: handleFileChange,
                            className: "border border-sand rounded-md p-2 w-full"
                        }, void 0, false, {
                            fileName: "src/components/PhotoUpload.tsx",
                            lineNumber: 86,
                            columnNumber: 11
                        }, this),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("button", {
                            onClick: handleUpload,
                            disabled: loading || files.length === 0,
                            className: "w-full bg-olivewood hover:bg-sage text-parchment h-10 rounded-md",
                            children: loading ? "\u041A\u0430\u0447\u0432\u0430\u043D\u0435..." : "\u041A\u0430\u0447\u0438 \u0441\u043D\u0438\u043C\u043A\u0438\u0442\u0435"
                        }, void 0, false, {
                            fileName: "src/components/PhotoUpload.tsx",
                            lineNumber: 95,
                            columnNumber: 11
                        }, this),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                            className: "text-sm text-sage",
                            children: [
                                "\u041C\u043E\u0436\u0435 \u0434\u0430 \u0432\u0438\u0434\u0438\u0442\u0435 \u0441\u043D\u0438\u043C\u043A\u0438\u0442\u0435",
                                " ",
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("a", {
                                    href: "https://drive.google.com/drive/folders/1ms48ZYTvu_Hcgx3CLct44U222Qbrhx_p?usp=sharing",
                                    target: "_blank",
                                    className: "underline",
                                    children: "\u0442\u0443\u043A"
                                }, void 0, false, {
                                    fileName: "src/components/PhotoUpload.tsx",
                                    lineNumber: 105,
                                    columnNumber: 13
                                }, this),
                                "."
                            ]
                        }, void 0, true, {
                            fileName: "src/components/PhotoUpload.tsx",
                            lineNumber: 103,
                            columnNumber: 11
                        }, this)
                    ]
                }, void 0, true, {
                    fileName: "src/components/PhotoUpload.tsx",
                    lineNumber: 85,
                    columnNumber: 9
                }, this)
            ]
        }, void 0, true, {
            fileName: "src/components/PhotoUpload.tsx",
            lineNumber: 77,
            columnNumber: 7
        }, this)
    }, void 0, false, {
        fileName: "src/components/PhotoUpload.tsx",
        lineNumber: 76,
        columnNumber: 5
    }, this);
}
_s(PhotoUploadSection, "X40zcISJHKTqkLRNk9HquLsC1oE=");
_c = PhotoUploadSection;
var _c;
$RefreshReg$(_c, "PhotoUploadSection");

  $parcel$ReactRefreshHelpers$ddd6.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","sonner":"kK7Kb","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}]},["7KwkS","4dmnR"], "4dmnR", "parcelRequiree135", {}, null, null, "http://localhost:1234")

//# sourceMappingURL=pokanite.github.io.6efbc4f8.js.map
